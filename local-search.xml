<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>线性代数-10-向量概念与运算</title>
    <link href="/2025/08/03/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-10-%E5%90%91%E9%87%8F%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%BF%90%E7%AE%97/"/>
    <url>/2025/08/03/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-10-%E5%90%91%E9%87%8F%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%BF%90%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="一向量概念">一、向量概念</h1><h1 id="二向量的运算">二、向量的运算</h1><h2 id="点积">点积</h2><p><span class="math display">\[\begin{aligned}&amp; 对于两个向量\mathbf{a}=[a_1,a_2,…,a_n]和  \mathbf{b}=[b_1,b_2,…,b_n]，点积为：\\&amp;\mathbf{a}·\mathbf{b}=\sum_{i=1}^n(a_ib_i)=a_1b_1+a_2b_2+...+a_nb_n\end{aligned}\]</span></p><p><strong>特点</strong>：</p><ul><li>结果是一个<strong>标量</strong>（单个数值）。</li><li>用于衡量向量的相似度（如余弦相似度的计算中）。</li><li>在神经网络中广泛用于全连接层的计算。</li></ul><p><strong>python示例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>a = np.array([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])<br>b = np.array([<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>])<br>dot_product = np.dot(a, b)  <span class="hljs-comment"># 输出：32 (1 * 4 + 2 * 5 + 3 * 6)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>向量</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-06-支持向量机</title>
    <link href="/2025/08/03/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-06-%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
    <url>/2025/08/03/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-06-%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="第6章-支持向量机">第6章 支持向量机</h1><h2 id="间隔与支持向量">6.1 间隔与支持向量</h2><h2 id="对偶问题">6.2 对偶问题</h2>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-05-神经网络</title>
    <link href="/2025/07/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-05-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    <url>/2025/07/30/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-05-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="第5章-神经网络">第5章 神经网络</h1><h2 id="神经元模型">5.1 神经元模型</h2><p>各相关学科对“神经网络”的定义各不相同。以下是1988年T. Kohonen在NeuralNetworks创刊时对神经网络给出的定义。</p><p>神经网络定义：神经网络是由具有适应性的简单单元组成的广泛并行互连的网络，它的组织能够模拟生物神经系统对真实世界物体所作出的交互反应。</p><p>神经网络中最基本的元素或成分叫做神经元模型，即上述定义中的所述的简单单元。在生物神经网络中，每个神经元与其他神经元相连，当它“兴奋”时，就会向相连的其他神经元发送化学物质，从而改变这些神经元内的电位；如果某神经元的电位超过了一个“阀值”，那么它就会被激活，即“兴奋”起来，从而向其他相连神经元发送化学物质。</p><p>上述神经信号在神经元之间传递的过程可以被抽象如下简单模型：</p><figure><img src="https://s2.loli.net/2025/07/30/Ruk7Flda8jNvHb3.png"alt="image-20250730232452596" /><figcaption aria-hidden="true">image-20250730232452596</figcaption></figure><p>它于1943年由 McCulloch andPitts提出，所以被称为M-P神经元模型，一直被没用至今。在上述这个模型中，神经元接收到n个其他神经元传递过来的输入信息，这些输入信号通过带权重的连接进行传递，神经元接收到的总输入值与神经元的阀值进行比较，然后通过“激活函数”处理以产生神经元的输出。理想的激活函数如果输出1，则表示神经元接收到的总输入值超过了神经元的阀值；如果输出0，则表示没有超过阀值。</p><p>理想的函数是如下图5.2(a)所示。因为其不连续、不光滑等不太友好的性质，我们会使用Sigmoid函数（其实就是我们前面章节看到的对数几率函数，它是Sigmoid函数的典型代表）替换阶跃函数sgn作为激活函数，Sigmoid函数有多个，典型的Sigmoid函数如下图5.2(b)所示。</p><figure><img src="https://s2.loli.net/2025/07/30/uG3PgBLqFO4KN5c.png"alt="image-20250730234928652" /><figcaption aria-hidden="true">image-20250730234928652</figcaption></figure><p>它将可能在较大范围内变化的输入值挤压到了（0,1）输出值范围内，所以有时也称为“挤压函数”。</p><h2 id="感知机与多层网络">5.2 感知机与多层网络</h2><p>感知机由两层神经元组成。大致示意图如下图：</p><p><img src="https://s2.loli.net/2025/08/01/OpkilmMdGZno6I4.png" alt="image-20250801005811964" style="zoom: 33%;" /></p><p>输入层接收输入信号后传递给输出层，输出层是M-P神经元，也被称为阀值逻辑单元。</p><hr /><p>感知机能够容易地实现逻辑与、或与非运算。令y=f(Σ<sub>i</sub>(ω<sub>i</sub>x<sub>i</sub> - θ))，其中函数是阶跃函数。</p><ul><li>令ω<sub>1</sub>=ω<sub>2</sub>=1，θ=2时，可以实现“x<sub>1</sub>与x<sub>2</sub>”</li><li>令ω<sub>1</sub>=ω<sub>2</sub>=1，θ=0.5时，可以实现“x<sub>1</sub>或x<sub>2</sub>”</li><li>令ω<sub>1</sub>=-0.6，ω<sub>2</sub>=0，θ=-0.5时，可以实现“非x<sub>1</sub>”；类似地也可实现"非x<sub>2</sub>"</li></ul><p>对于两层神经元系统结构，给定训练数据集，权重ω<sub>i</sub>(i=1,2,...,n)以输出层神经元的阀值θ可以通过学习得到。如果将阀值θ看成一个固定输入为-1的哑结点的连接权重ω<sub>n+1</sub>，这样权重与阀值的学习就可以统一为权重的学习。此时其他n个输入层及其对应权重、加上此哑结点的输入即-1及其权重“θ”即为阶跃函数的总体参数值，阶跃函数计算此总体参数对应的函数值即可，结果即为输出层神经元的结果。</p><hr /><p>感知机的学习规则如下：对训练样本(<strong>x</strong>,y)，若当前感知机的输出为ŷ，则感知机权重将可以如下这样调整： <spanclass="math display">\[\begin{aligned}&amp; ω_i←ω_i+Δω_i,\quad\quad\quad\quad\quad\quad\quad\quad\quad\,\,\,\,\,\,\,\,(5.1) \\&amp; Δω_i=η(y-\overset{\wedge}{y})x_i，\quad\quad\quad\quad\quad\quad\quad\quad\quad(5.2) \\&amp;其中η∈(0,1)，称为学习率。可知，如果感知机预测正确，则有y-\overset{\wedge}{y}=0，\\&amp; 此时Δω_i=0,则ω_i不再发生变化，否则会逐渐对ω_i进行权重调整\end{aligned}\]</span></p><hr /><p>感知机只有一层功能神经元，即只有输出层神经元进行激活函数处理，所以其学习非常有限。</p><p>上述与、或与非问题都是线性可分的问题，可以证明，若两类模式是线性可分的，则存在一个线性超平面能将它们分开。</p><p>若要解决非线性可分问题，需要考虑使用多层神经功能神经元。常见的神经网络是形如下图所示的层级结构：每层神经元与下一层神经元全互连，神经元之间不存在同层连接，也不存在跨层连接。这样的神经元结构通常被称为“多层前馈神经网络”。</p><p><img src="https://s2.loli.net/2025/08/01/tz9MJBeaTPAoUEj.png" alt="image-20250801013916971" style="zoom:33%;" /></p><h2 id="误差逆传播算法">5.3 误差逆传播算法</h2><p>误差逆传播（errorBackPropagation，简称BP）算法是迄今为止最成功的神经网络学习算法。此算法不仅适应于多层前馈神经网络，还可用于其他类似的神经网络如递归神经网络。</p><p>关于反向传播算法，自己暂时跟下面的步骤将公式大体上证明完成，但并未理解其中的意义！（记得自己以前单独证明过一次函数模拟二维直角坐标系中的点，是通过最小二乘法来计算误差的，在不断调整一次函数的k、b参数过程中，每轮调整两个参数后一次函数都是向误差的反方向进行偏移）</p><figure><img src="https://s2.loli.net/2025/08/01/7aHf1W8Ps6dANQy.png"alt="image-20250801014603419" /><figcaption aria-hidden="true">image-20250801014603419</figcaption></figure><figure><img src="https://s2.loli.net/2025/08/01/bKiGyWdUqHVPsJo.png"alt="image-20250801014630674" /><figcaption aria-hidden="true">image-20250801014630674</figcaption></figure><figure><img src="https://s2.loli.net/2025/08/01/gpCULviOQIHrsyE.png"alt="image-20250801014647271" /><figcaption aria-hidden="true">image-20250801014647271</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-04-决策树</title>
    <link href="/2025/07/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-04-%E5%86%B3%E7%AD%96%E6%A0%91/"/>
    <url>/2025/07/28/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-04-%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<h1 id="第4章-决策树">第4章 决策树</h1><h2 id="基本流程">4.1 基本流程</h2><p>决策树是一种常见的机器学习方法。决策树又叫判定树，是基于树结构来进行决策的，是一种跟人类做决策很类似的、自然的处理机制。比如，我们如果要判别“某个瓜是好瓜吗？”这个问题时，我们通常会进行一系列的判断或子决策：它是什么<strong>颜色</strong>的？如果是青绿色的，我们再看它的<strong>根蒂</strong>是什么形态的？如果是蜷缩的，那我们看它敲起来是什么<strong>声音</strong>？如果是浊响的，那么我们可能能因此做出决策：“这是一个好瓜”。</p><figure><img src="https://s2.loli.net/2025/07/28/cPW3QVfDYoaymhz.png"alt="image-20250728225926896" /><figcaption aria-hidden="true">image-20250728225926896</figcaption></figure><p>决策树学习的目的是为了产生一棵泛化能力强即处理未见示例能力强的决策树，其基本流程遵循简单且直观的“分而治之”的策略。决策树学习基本算法如下：</p><figure><img src="https://s2.loli.net/2025/07/28/vmMFngS3kpPBWou.png"alt="image-20250728230327359" /><figcaption aria-hidden="true">image-20250728230327359</figcaption></figure><h2 id="划分选择">4.2 划分选择</h2><p>在决策树的算法过程中，有一个步骤需要选择最优划分属性（就是上图中的第8行）。总体来说，随着划分子结点的层数越大，我们总是希望决策树的分支结点所包含的样本尽可能属于同一个类别，即结点的纯度越来越高。</p><p>一般地，有如下4种方法来辅助我们选择最优划分属性：信息增益、增益率、基尼指数。</p><h3 id="信息增益">信息增益</h3><p>著名的ID3决策树学习算法就是以信息增益为准则来选择划分属性的。</p><p>它的思想大致就是：从父结点到子结点，选择使得熵的减少量最大即信息增益最大的属性a来执行从父结点到子结点的决策。</p><p>公式细节待续。。。</p><h3 id="增益率">增益率</h3><p>著名的C4.5决策树学习算法就是以信息增益为准则来选择划分属性的。</p><p>它是在信息增益准则的基础发展而来或规避其不足而提出的，因为信息增益准则对可取值数目较多的属性有所偏好。但是增益率准则对可取值数目较少的属性又有所偏好，因为在实际场景中，C4.5并没有直接使用增益率最大的候选划分属性，而是使用了一个启发式思路：先从候选划分属性中找出信息增益高于平均水平的属性，再从中选择增益率最高的。</p><p>公式细节待续。。。</p><h3 id="基尼指数">基尼指数</h3><p>著名的CART决策树学习算法就是以信息增益为准则来选择划分属性的。</p><p>公式细节待续。。。</p><h2 id="剪枝处理">4.3 剪枝处理</h2><p>剪枝是决策树学习算法对付“过拟合”的主要手段。</p><p>决策树剪枝的基本策略有预剪枝与后剪枝。<strong>预剪枝</strong>是指在决策树生成过程中，结每个结点在划分前进行估计，若当前结点的划分不能带来决策树泛化性能提升，则停止划分并将当前结点标记为叶结点。<strong>后剪枝</strong>则是先从训练集生成一棵完整的决策树，然后自底向上地对非叶子结点进行考察，若将该结点对应的子树替换为叶结点能带来决策树泛化性能提升，则将该子树替换为叶结点。</p><p>判断决策树逍化性能是否提升的方法，可以采用2.2节点中介绍的性能评估方法，如“留出法”，就是将数据集划分为训练集与验证集，在验证集上计算验证集精度看是否有所提升。</p><h2 id="连续与缺失值">4.4 连续与缺失值</h2><h3 id="连续值处理">连续值处理</h3><p>使用连续属性离散化技术，比如最简单的策略是采用二分法将连续属性进行处理。（C4.5决策树算法中就是使用此机制）</p><h3 id="缺失值处理">缺失值处理</h3><h2 id="多变量决策树">4.5 多变量决策树</h2>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性代数-09-二次型</title>
    <link href="/2025/07/22/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-09-%E4%BA%8C%E6%AC%A1%E5%9E%8B/"/>
    <url>/2025/07/22/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-09-%E4%BA%8C%E6%AC%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1id="一二次型的定义及其矩阵表达式">一、二次型的定义及其矩阵表达式</h1><p><span class="math display">\[\text{二项式定理：}\\(a+b)^n=\sum_{i = 0}^{n} C_n^ia^ib^{n-i}=\sum_{i = 0}^{n}C_n^ia^{n-i}b^i\]</span></p>n元变量x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>的二次齐次多项式（其中<strong>二次</strong>的意思是：每一项中所有变量的指数之和为2；<strong>齐次</strong>的意思是：指多项式中所有项的次数相同，对于二次齐次多项式，所有项的次数必须均为2）：$$<span class="math display">\[\begin{aligned}f(x_1,x_2,...,x_n)=a_{11}x_1^2+2a_{12}x_1x_2+...+2a_{1n}x_1x_n\\+a_{22}x_2^2\,\,\,\,\,\,\,\,\, +...+2a_{2n}x_2x_n\\+...\quad\quad\quad\quad\quad \\+a_{nn}x_{nn}^2\\\\\text{以上表达式称为n元二次型，简称二次型。}\end{aligned}\]</span><p>$$一般情况下（中国大陆考研、常规科研），我们只研究系数a<sub>ij</sub>∈R的情况，称此二次型f为实二次型。</p><p>因为x<sub>i</sub>x<sub>j</sub>=x<sub>j</sub>x<sub>i</sub>，此时若令a<sub>ij</sub>=a<sub>ji</sub>（很容易让我们想到对称矩阵），则有2a<sub>ij</sub>x<sub>i</sub>x<sub>j</sub>=a<sub>ij</sub>x<sub>i</sub>x<sub>j</sub>+a<sub>ji</sub>x<sub>j</sub>x<sub>i</sub>，这样上述二次型表达式可表述如下：<span class="math display">\[\begin{aligned}f(x_1,x_2,...,x_n)=a_{11}x_1^2+2a_{12}x_1x_2+...+2a_{1n}x_1x_n\\+a_{21}x_2x_1+a_{22}x_2^2+...+2a_{2n}x_2x_n\\+...\quad\quad\quad\quad\quad \\+a_{n1}x_nx_1+a_{n2}x_nx_2+...+a_{nn}x_{nn}^2 \quad①\\      =\sum_{i=1}^{n}\sum_{j=1}^{n}a_{ij}x_iX_j\quad②\\\text{其中①式称为完全展开式，②称为和式。}\end{aligned}\\\]</span></p><p><span class="math display">\[\begin{aligned}&amp; \text{若令}\\&amp; A=\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\\vdots &amp; \ddots &amp;        &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} \\\end{vmatrix},x=\begin{vmatrix}&amp; x_1 \\&amp; x_2 \\&amp; \vdots \\&amp; x_n \\\end{vmatrix}\\&amp; \text{则二次型即①或②可表述如下：}\\&amp; f(x)=\mathbf{x}^T\mathbf{A}\mathbf{x} \quad③\\&amp;\text{其中③式称为二次型}f(x_1,x_2,...,x_n)\text{的矩阵表达式，实对阵矩阵}\mathbf{A}称为二次型f(\mathbf{x})\text{的矩阵}\\&amp;\text{它是一个唯一的对称矩阵。如果不限制为实对称矩阵，则这样的矩阵可能有多个}\end{aligned}\]</span></p>$$<span class="math display">\[\begin{aligned}&amp; \text{举例：写出三元二次齐次多项式即如下三元二次型}\\&amp;f(x_1,x_2,x_3)=2x_1^2+2x_2^2+2x_3^2-2x_1x_2-2x_2x_3+2x_1x_3的二次型矩阵A\\\\&amp;方法1：A的对角线元素a_{ii}是平方项x_{ii}^2的系统，a_{ij}是混合项x_ix_j的系数的一半\\&amp; 故：A=\begin{vmatrix}2 &amp; -1 &amp; 1 \\-1 &amp; 2 &amp; -1 \\1 &amp; -1 &amp; 2 \\\end{vmatrix}\\\\&amp;方法2：利用矩阵乘法按照x^TAx的形式将二次型f表达出来，即可得到矩阵A。\\&amp; 显然，方法2更加繁琐，方法1 更加简便\end{aligned}\]</span><p>$$</p><h1id="二合同变换二次型的合同酷标准形与规范形">二、合同变换，二次型的合同酷标准形与规范形</h1><h2 id="线性变换的定义">线性变换的定义</h2>$$<span class="math display">\[\begin{aligned}\text{对于n元二次型}f(x_1,x_2,...,x_n)，若令\\\begin{cases}x_1=c_{11}y_1+c_{12}y_2+...+c_{1n}y_n \\x_2=c_{21}y_1+c_{22}y_2+...+c_{2n}y_n \\\ldots \\x_n=c_{n1}y_1+c_{n2}y_2+...+c_{nn}y_n  \\\end{cases} \\\\\text{记} \\ \mathbf{x}=\left[\begin{matrix}x_1 \\x_2 \\\vdots \\x_n \\\end{matrix}\right],\mathbf{C}=\left[\begin{matrix}c_{11} &amp; c_{12} &amp; \cdots &amp; c_{1n} \\c_{21} &amp; c_{22} &amp; \cdots &amp; c_{2n} \\\vdots &amp; \ddots &amp;        &amp; \vdots \\c_{n1} &amp; c_{n2} &amp; \cdots &amp; c_{nn} \\\end{matrix}\right],\mathbf{y}=\left[\begin{matrix}y_1 \\y_2 \\\vdots \\y_n \\\end{matrix}\right]\end{aligned}\]</span><p>$$</p><p><span class="math display">\[\begin{aligned}\text{则上述大括号整体表述的表达式可写为：}\mathbf{x}=\mathbf{C}\mathbf{y}\end{aligned}\]</span></p><p>上式称为从y<sub>1</sub>,y<sub>2</sub>,...,y<sub>n</sub>到x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>的线性变换。若线性变换的系数矩阵<strong><em>C</em></strong>可逆，即|<strong><em>C</em></strong>|≠0，则称为可逆线性变换。</p><p>若有二次型f(<strong><em>x</em></strong>)=<strong><em>x</em></strong><sup>T</sup><strong><em>Ax</em></strong>，又<strong><em>x</em></strong>=<strong><em>Cy</em></strong>，则有：<span class="math display">\[\begin{aligned}&amp;f(\mathbf{x})=\mathbf{x}^TA\mathbf{x}=\mathbf{(Cy)}^TA\mathbf{(Cy)}=\mathbf{y}^T(\mathbf{C}^T\mathbf{A}\mathbf{C})\mathbf{y}\\&amp; \text{记}\mathbf{B}=\mathbf{C}^T\mathbf{A}\mathbf{C}，则有：\\&amp; f(\mathbf{x})=\mathbf{y}^T\mathbf{B}\mathbf{y} = g(\mathbf{y})，\text{二次型从矩阵x的函数变成矩阵y的函数。}\\&amp;此时，二次型f(\mathbf{x})=\mathbf{x}^TA\mathbf{x}通过线性变换\mathbf{x}=\mathbf{C}\mathbf{y}得到一个新二次型g(\mathbf{y})=\mathbf{y}^TB\mathbf{y}\end{aligned}\]</span></p><h2 id="矩阵合同的定义与性质">矩阵合同的定义与性质</h2><p>可以看到二次型f(<strong><em>x</em></strong>)与g(<strong><em>x</em></strong>)的矩阵A与B有如下关系：<span class="math display">\[\begin{aligned}\mathbf{B}=\mathbf{C}^T\mathbf{A}\mathbf{C}\end{aligned}\]</span> 矩阵合同的定义：设A、B为n阶实对称矩阵，若存在可逆矩阵C使得：<span class="math display">\[\begin{aligned}&amp; \mathbf{C}^T\mathbf{A}\mathbf{C}=\mathbf{B}\end{aligned}\]</span>则称矩阵A与矩阵B合同，记作（其实教科书中合同符号是横置s下面加一个横线，但这个符号在markdown公式中书写不出来，暂用如下符号表示）：<span class="math display">\[\begin{aligned}&amp; \mathbf{A}\cong\mathbf{B} \\&amp; \text{或者，我看到还有些书中或网上文章中用如下符号表示：}\\&amp; A \sim_c B\end{aligned}\]</span>此时，称f(<strong><em>x</em></strong>)与g(<strong><em>x</em></strong>)为合同二次型。</p><hr /><p>可知，在二次型中，矩阵A与矩阵B的合同，就是指同一个二次型在可逆线性变换下的两个不同状态的联系。<span class="math display">\[\begin{aligned}&amp; \text{合同有如下3个性质：} \\&amp; (1)\mathbf{A}\cong\mathbf{A} ，称为反身性\\&amp; (2)若\mathbf{A}\cong\mathbf{B}，则\mathbf{B}\cong\mathbf{A}，称为对称性\\&amp;(3)若\mathbf{A}\cong\mathbf{B}，且\mathbf{B}\cong\mathbf{C}，则\mathbf{A}\cong\mathbf{C}，称为传递性\\\end{aligned}\]</span></p><p><span class="math display">\[\begin{aligned}&amp; 注：关于可逆矩阵的两个性质：\\&amp;(1)对于任意可逆矩阵\mathbf{C}，有(\mathbf{C}^{-1})^\mathrm{T}=(\mathbf{C}^\mathrm{T})^{-1}\\\\&amp;(2)可逆线性变换不会改变二次型的轶。即对于矩阵\mathbf{A}，若\mathbf{Q}可逆，则有r(\mathbf{Q}\mathbf{A})=r(\mathbf{A}\mathbf{Q})=r(\mathbf{A})\\&amp; 证明如下：\\&amp;设\mathbf{A}是m×n矩阵，\mathbf{P}与\mathbf{Q}分别是m阶可逆方阵、n阶可逆方阵。\\&amp;故有r(\mathbf{A})=r(\mathbf{P}^{-1}\mathbf{P}\mathbf{A})≤r(\mathbf{P}\mathbf{A})≤r(\mathbf{A})，即有r(\mathbf{A})≤r(\mathbf{P}\mathbf{A})≤r(\mathbf{A})\\&amp; 故：r(\mathbf{P}\mathbf{A})=r(\mathbf{A})\\&amp; 同理，有r(\mathbf{A})≤r(\mathbf{A}\mathbf{Q})≤r(\mathbf{A})\\&amp; 故：r(\mathbf{A}\mathbf{Q})=r(\mathbf{A})\\\end{aligned}\]</span></p><h2 id="二次型的标准形与规范形">二次型的标准形与规范形</h2><h1 id="三惯性定理">三、惯性定理</h1><h1 id="四正定二次型及其判别">四、正定二次型及其判别</h1>]]></content>
    
    
    <categories>
      
      <category>线性代数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>线性代数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性代数-04-伴随矩阵、初等矩阵与矩阵方程</title>
    <link href="/2025/07/21/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-04-%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5%E3%80%81%E5%88%9D%E7%AD%89%E7%9F%A9%E9%98%B5%E4%B8%8E%E7%9F%A9%E9%98%B5%E6%96%B9%E7%A8%8B/"/>
    <url>/2025/07/21/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-04-%E4%BC%B4%E9%9A%8F%E7%9F%A9%E9%98%B5%E3%80%81%E5%88%9D%E7%AD%89%E7%9F%A9%E9%98%B5%E4%B8%8E%E7%9F%A9%E9%98%B5%E6%96%B9%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1id="三等价矩阵和矩阵的等价标准形">三、等价矩阵和矩阵的等价标准形</h1><h1 id="四矩阵的轶">四、矩阵的轶</h1><p>定义：设<em>A</em>是m×n矩阵，<em>A</em>中的最大的不为零的子行列式的阶数称为矩阵<em>A</em>的轶，记为r(<em>A</em>)。或这样定义：若存在k阶子式不为零，而任意k+1阶子式全为零（如果有的话），则k为矩阵A的轶，记作r(<em>A</em>)=k。</p><p>显然如果一个n阶方阵的轶为n，则可知：<strong><em>r(A<sub>n×n</sub>)=n</em></strong> &lt;=&gt;<strong>|<em>A</em>|≠0</strong> &lt;=&gt;<strong><em>A</em>可逆</strong></p>]]></content>
    
    
    <categories>
      
      <category>线性代数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>线性代数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性代数-01-行列式的基本概念与计算</title>
    <link href="/2025/07/21/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-01-%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%AE%A1%E7%AE%97/"/>
    <url>/2025/07/21/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-01-%E8%A1%8C%E5%88%97%E5%BC%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E8%AE%A1%E7%AE%97/</url>
    
    <content type="html"><![CDATA[<h1 id="一行列式的本质定义定义一">一、行列式的本质定义(定义一)</h1><p>...</p><h1 id="二行列式的性质">二、行列式的性质</h1><p>...</p><h1 id="三行列式的逆序数定义定义二">三、行列式的逆序数定义(定义二)</h1><h2 id="排列与逆序">排列与逆序</h2><p>排列：由n个数 <em>1, 2, ..., n</em>组成的一个有序数组称为一个n级排列，如23145是一个5级排列，34521也是一5级排列。显然，由这样的n个数组成的n级排列一共有n!个。</p><p>逆序：在一个n级排列i<sub>1</sub>, i<sub>2</sub>, ...,i<sub>n</sub>中，若i<sub>s</sub>&gt;i<sub>t</sub>，且i<sub>s</sub>排在i<sub>t</sub>的前面，则称这两个数构成一个逆序。</p><p>逆序数：一个排列中，逆序的总数称为该排列的逆序数，记作τ(i<sub>1</sub>,i<sub>2</sub>, ..., i<sub>n</sub>)，如τ(23145)=，τ(34521)=。由从小到大排的排列称为自然排序，如12345，显然自然排序的逆序数为0。</p><ul><li>求逆序数方法<ul><li>当我们计算一个排列的逆序数时，最好从最后一个数开始往前计算：如计算τ(23145)时，</li><li>先看最后一个数5，数列中在5前面且比5大的数有0个；</li><li>再看倒数第2个数4，数列中在4前面且比4大的数有0个；</li><li>再看倒数第3个数1，数列中在1前面且比1大的数有2个；</li><li>再看倒数第4个数3，数列中在3前面且比3大的数有0个；</li><li>再看倒数第5个数2，数列中在3前面且比2大的数有0个；</li><li>所以，综上所述，τ(23145)=0+0+2+0+0=2</li></ul></li></ul><p>奇排列与偶排列：排列的逆序数为奇数时，该排列称为奇排列；排列的逆序数为偶数时，该排列称为偶排列；</p><h2 id="n阶行列式的定义">n阶行列式的定义</h2><p>n(n≥2)阶行列式，总是由n*n个元素组成： <span class="math display">\[\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\\vdots &amp; \ddots &amp;        &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} \\\end{vmatrix}=\sum_{j_1j_2...j_n}^{}(-1)^{τ(j_1j_2...j_n)}a_{1j_1}a_{2j_2}...a_{nj_n}\]</span></p><p><span class="math display">\[\begin{aligned}\text{行列式举例：}\\\begin{vmatrix}a_{11} &amp; a_{12}\\a_{21} &amp; a_{22}\\\end{vmatrix}&amp;=(-1)^{τ(12)}a_{11}a_{12}+(-1)^{τ(21)}a_{21}a_{22}\\&amp;=a_{11}a_{12}-a_{21}a_{22}\\\end{aligned}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>线性代数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>线性代数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-03线性模型</title>
    <link href="/2025/07/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-03%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/"/>
    <url>/2025/07/19/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-03%E7%BA%BF%E6%80%A7%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="第3章-线性模型">第3章 线性模型</h1><p>参考：《机械学习第1版第47次印刷-周志华著》、https://www.datawhale.cn/learn/content/2/65</p><p>西瓜书代码实战：https://github.com/datawhalechina/machine-learning-toy-code/blob/main/%E8%A5%BF%E7%93%9C%E4%B9%A6%E4%BB%A3%E7%A0%81%E5%AE%9E%E6%88%98.md</p><p>自己记录与总结常见矩阵：https://jiangsanyin.github.io/2025/07/17/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%B8%B8%E8%A7%81%E7%9F%A9%E9%98%B5/</p><p>自己记录与总结二次型：https://jiangsanyin.github.io/2025/07/22/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-09-%E4%BA%8C%E6%AC%A1%E5%9E%8B/</p><h2 id="基本形式">3.1 基本形式</h2><p>以下内容如无特别说明，向量都是列向量。即<strong>w</strong>=(<em>w</em><sub>1</sub>;<em>w</em><sub>2</sub>;...;<em>w</em><sub><em>d</em></sub>)和<strong>x</strong>=(<em>x</em><sub>1</sub>;<em>x</em><sub>2</sub>;...;<em>x</em><sub><em>d</em></sub>)均为<em>d</em>行1列的列向量。</p><h2 id="线性回归">3.2 线性回归</h2><p>给定数据集D={(x<sub>1</sub>,y<sub>1</sub>),(x<sub>2</sub>,y<sub>2</sub>), ... ,(x<sub>m</sub>,y<sub>m</sub>)}，其中xi=(x<sub>i1</sub>, x<sub>i2</sub>,..., x<sub>id</sub>)，y<sub>i</sub>∈R。</p><p>线性回归（linearregression）就是要觉得一个线性模型以尽可能准确地预测实值输出标记。</p><p>线性回归经常用到的一类算法就是最小二乘法，但最小二乘法不仅限于线性回归。</p><p>如果要将线性回归模型的的预测值逼近真实值y的衍生物，比如㏑<sup>y</sup>，此时即有㏑<sup>y</sup> =<strong>w</strong><sup>T</sup><strong>x</strong>+b，此模型称为对数线性回归。</p><p>更一般地情况，对于连续可微函数g(·)，令y=g<sup>-1</sup>(<strong>w</strong><sup>T</sup><strong>x</strong>+b)，此时得到的模型称为广义线性模型，其中函数g(·)称为联系函数。可以知道，对数线性回归模型就是广义线性模型在g(·)=㏑(·)时特例。</p><p>（3.7）式与（3.8）式的求解过程如下：</p><figure><img src="https://s2.loli.net/2025/07/23/vV1D7Mymj6kq9gC.png"alt="image-20250723170217784" /><figcaption aria-hidden="true">image-20250723170217784</figcaption></figure><h2 id="对数几率回归">3.3 对数几率回归</h2><p>对数几率函数： <span class="math display">\[y=\frac{1}{1+e^{-z}}\]</span> 对数几率模型： <span class="math display">\[y=\frac{1}{1+e^{-(\mathbf{w}^T\mathbf{x}+b)}}\\\]</span> 对数几率： <span class="math display">\[y=\ln{\frac{y}{1-y}}\]</span></p><hr /><p>对率回归最大化“对数似然”，表达式变化的相关推导（其中相关说明在图片之前进行了说明）：<span class="math display">\[\begin{aligned}\mathbf{β}=(\mathbf{w};b) \\\mathbf{\hat{x}}=(\mathbf{x};1) \\\text{这样，就可以将}\mathbf{w}^T\mathbf{x}+b\text{改写成}\mathbf{β^T}\mathbf{\hat{x}} \\\end{aligned}\]</span> <img src="https://s2.loli.net/2025/07/20/ZYTKx9RDXygBEuc.png"alt="image-20250720004825761" /></p><h2 id="线性差别分析">3.4 线性差别分析</h2><h3 id="均值向量">均值向量</h3><p><strong>定义</strong>：均值向量（MeanVector）提供了数据集中每个特征的平均值。对于 <spanclass="math display">\[\begin{flalign*}μ=[μ_1,μ_2,...,μ_m] \\其中μ_j=\frac{1}{n}\sum_{i = 1} ^m(x_{ij}) \\μ_j是第j个特征的均值。 \\x_{ij}是第i个观测的第j个特征值。\\n是观测值的数量。\end{flalign*}\]</span> ​ 举例如下： <span class="math display">\[\begin{flalign*}考虑身高和体重的数据集，包含4个观测值：\\身高: [160,165,170,175]\\体重: [55,60,65,70]\\平均身高: μ_{\text{身高}} = \frac{160 + 165 + 170 + 175}{4} = 167.5 \\平均体重: μ_{\text{体重}} = \frac{55 + 60 + 65 + 70}{4} = 62.5 \\因此，均值向量为: μ = [167.5, 62.5]\end{flalign*}\]</span></p><h3 id="协方差矩阵">协方差矩阵：</h3><p><strong>定义</strong>：协方差矩阵（CovarianceMatrix）描述了数据集中特征间的相互变化趋势。它不仅展示了单个特征的变异性（通过方差），还显示了特征之间的协方差。</p><p>对于<em>m</em>个特征，协方差矩阵是一个<em>m×m</em>矩阵，其中元素定义为:<span class="math display">\[\begin{flalign*}∑_{jk}=\frac{1}{n-1}\sum_{i = 1} ^n(x_{ij}-μ_j)(x_{ik}-μ_k) \\其中：Σ_{jk}是特征j和特征k之间的协方差。\\μ_j和μ_k分别是特征j和k的均值。\\n是观测值的数量。\\\end{flalign*}\]</span> ​ 举例：使用上述身高和体重数据计算协方差矩阵。 <spanclass="math display">\[\begin{flalign*}\text{首先，我们已知:}\\μ_{\text{身高}} = 167.5\\μ_{\text{体重}} = 62.5\\\\\text{计算方差和协方差:}\\\text{方差(身高): 使用公式计算得} \Sigma_{11} \\\text{方差(体重): 使用公式计算得} \Sigma_{22} \\\text{协方差(身高, 体重): 使用公式计算得} \Sigma_{12}、\Sigma_{21} \\\\\text{数据集：}\text{X=}\left[\begin{matrix}   160 &amp; 55 \\   165 &amp; 60 \\   170 &amp; 65 \\   175 &amp; 70  \end{matrix}\right] \\\\\end{flalign*}\]</span></p><p><span class="math display">\[\begin{flalign*}&amp;(1)当j=1、k=1时,\Sigma_{11}=\frac{1}{4-1}[(160-167.5)^2+(165-167.5)^2+(170-167.5)^2+(175-167.5)^2]=\frac{125}{3}=41.67\\&amp;(2)当j=1、k=2时,\Sigma_{12}=\frac{1}{4-1}[(160-167.5)(160-62.5)+(165-167.5)(165-62.5)+(170-167.5)(170-62.5)+(175-167.5)(175-62.5)]=\frac{125}{3}=41.67\\&amp;(3)当j=2、k=1时,\Sigma_{21}=\frac{1}{4-1}[(55-62.5)(55-167.5)+(60-62.5)(60167.5)+(65-62.5)(65-167.5)+(70-62.5)(70-167.5)]=\frac{125}{3}=41.67\\&amp;(4)当j=2、k=2时,\Sigma_{22}=\frac{1}{4-1}[(55-62.5)^2+(60-62.5)^2+(65-62.5)^2+(70-62.5)^2]=\frac{125}{3}=41.67\\\end{flalign*}\]</span></p><p><span class="math display">\[\begin{flalign*}经过上述计算，得到协方差矩阵如下：\\C=\left[\begin{matrix}   41.67 &amp; 41.67 \\   41.67 &amp; 41.67  \end{matrix}\right]\\\end{flalign*}\]</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#也可以使用python代码实现均值向量与协方差矩阵的计算，如下：</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 数据</span><br>heights = np.array([<span class="hljs-number">160</span>, <span class="hljs-number">165</span>, <span class="hljs-number">170</span>, <span class="hljs-number">175</span>])<br>weights = np.array([<span class="hljs-number">55</span>, <span class="hljs-number">60</span>, <span class="hljs-number">65</span>, <span class="hljs-number">70</span>])<br><br><span class="hljs-comment"># 计算均值</span><br>mean_height = np.mean(heights)<br>mean_weight = np.mean(weights)<br><br><span class="hljs-comment"># 计算方差和协方差</span><br>variance_height = np.var(heights, ddof=<span class="hljs-number">1</span>)<br>variance_weight = np.var(weights, ddof=<span class="hljs-number">1</span>)<br>covariance_height_weight = np.cov(heights, weights)[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>]<br><br><span class="hljs-comment"># 构造协方差矩阵</span><br>covariance_matrix = np.array([[variance_height, covariance_height_weight],<br>                              [covariance_height_weight, variance_weight]])<br><br><span class="hljs-comment">#打印到均值向量</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;均值向量: (<span class="hljs-subst">&#123;mean_height&#125;</span>, <span class="hljs-subst">&#123;mean_weight&#125;</span>)\n&quot;</span>)<br><span class="hljs-comment">#打印协方差矩阵</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;协方差矩阵: <span class="hljs-subst">&#123;covariance_matrix&#125;</span>\n&quot;</span>)<br><br><br><span class="hljs-comment">###输出如下（可见使用python中相关科学计算库，可以极大地简化我们的计算工作）：</span><br>均值向量: (<span class="hljs-number">167.5</span>, <span class="hljs-number">62.5</span>)<br>协方差矩阵: [[<span class="hljs-number">41.66666667</span> <span class="hljs-number">41.66666667</span>]<br> [<span class="hljs-number">41.66666667</span> <span class="hljs-number">41.66666667</span>]]<br></code></pre></td></tr></table></figure><h3 id="线性判别分析过程">线性判别分析过程</h3><hr /><p><img src="https://s2.loli.net/2025/07/26/ouejK2kJdy3SCN5.png"alt="image-20250726000614787" /> <span class="math display">\[\begin{aligned}&amp; 给定数据集D=\{(x_i, y_i)\}_{i=1}^m, 其中y_i∈\{0,1\} \\&amp;令X_i、μ_i、Σ_i分别表示第i∈\{0,1\}类示例的集合、均值向量、协方差矩阵。\\&amp;若将数据投影到直线ω上，则两类样本的中心在直线上的投影分别为ω^Tμ_0和ω^Tμ_1；\\&amp;若将所有样本点都投影到直线上，则两类样本的协方差分别为ω^TΣ_0ω和ω^TΣ_1ω。\\&amp;且由于直线是一维空间，所以ω^Tμ_0、ω^Tμ_1、ω^TΣ_0ω和ω^TΣ_1ω均为实数。\end{aligned}\]</span> <img src="https://s2.loli.net/2025/07/26/H9KouiRF26eqh1v.png"alt="image-20250726000639637" /></p><figure><img src="https://s2.loli.net/2025/07/26/OVmYvZRTkisNtAz.png"alt="image-20250726000658411" /><figcaption aria-hidden="true">image-20250726000658411</figcaption></figure><h3 id="问题">问题</h3><p>（1）<strong>如何证明矩阵S<sub>ω</sub>一定可逆？或可构造何条件使其可逆？</strong></p><p>（自己暂不知道证明！）</p><p>（2）暂时不理解类内散度矩阵、类间散度矩阵的意义</p><h2 id="多分类学习">3.5 多分类学习</h2><p>一般情况下，我们可以利用二分类学习器来解决多分类问题。</p><p>一般地，如果有N个分类：C<sub>1</sub>,C<sub>2</sub>, ...,C<sub>N</sub>，多分类学习的基础思路是拆解法，即将多分类任务拆成若干个二分类任务进行求解。即训练时，对问题进行拆分，然后为拆分的每个二分类任务训练得到一个分类器；在测试时，这前面得到的多个分类器的预测结果进行综合与集成，获取最终的多分类结果。此处的关键在于如何对多分类任务进行拆分、如何对多个分类器的结果进行集成。</p><p>常用的拆分策略有三种：一对一（One vs. One，简称OvO）、一对其余（Onevs. Rest，简称OvR）、多对多（Many vs. Many，简称MvM）</p><h2 id="类别不平衡问题">3.6 类别不平衡问题</h2><p>在类别不平衡时，常规的训练与测试方法已经失效或无意义，此时常采用《机械学习第1版第47次印刷-周志华著》2.3节中的查准率、查全率和F1来度量学习器的性能。</p>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>线性代数-常见矩阵</title>
    <link href="/2025/07/17/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%B8%B8%E8%A7%81%E7%9F%A9%E9%98%B5/"/>
    <url>/2025/07/17/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0-%E5%B8%B8%E8%A7%81%E7%9F%A9%E9%98%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="线性代数参考文档">线性代数参考文档</h1><p>https://zh.d2l.ai/chapter_preliminaries/linear-algebra.html#id5</p><p>https://machine-learning-from-scratch.readthedocs.io/zh-cn/latest/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0.html</p><h1 id="单元矩阵">单元矩阵</h1><p>单位矩阵（Identity matrix），也称为恒等矩阵（Identitymatrix）或标准矩阵（unitmatrix），是一种特殊的方阵，其主对角线上的元素全为1，其余元素全为0。单位矩阵通常用字母"I" 或 "E"表示，其大小由行数（或列数）决定。单位矩阵在矩阵运算中具有类似于数字中的1 的作用。</p><p>3阶单位矩阵示例如下： <span class="math display">\[\left[\begin{matrix}   1 &amp; 0 &amp; 0 \\   0 &amp; 1 &amp; 0 \\   0 &amp; 0 &amp; 1  \end{matrix}\right]\]</span></p><h1 id="满轶矩阵">满轶矩阵</h1><p>若矩阵秩等于行数，称为行满秩；若矩阵秩等于列数，称为列满秩。</p><p>既是行满秩又是列满秩则为n阶矩阵即n阶方阵（可用反证法证明，列满轶时与行满轶时矩阵的轶是同一个数值）。</p><p>行满秩矩阵就是行向量线性无关，列满秩矩阵就是列向量线性无关；所以如果是方阵,行满秩矩阵与列满秩矩阵是等价的。</p><hr /><p>矩阵的轶定义：设<em>A</em>是m×n矩阵，<em>A</em>中的最大的不为零的子行列式的阶数称为矩阵<em>A</em>的轶，记为r(<em>A</em>)。或这样定义：若存在k阶子式不为零，而任意k+1阶子式全为零（如果有的话），则k为矩阵A的轶，记作r(<em>A</em>)=k。</p><p>显然如果一个n阶方阵的轶为n，则可知：<strong><em>r(A<sub>n×n</sub>)=n</em></strong> &lt;=&gt;<strong>|<em>A</em>|≠0</strong> &lt;=&gt;<strong><em>A</em>可逆</strong> <span class="math display">\[\text{简单举例：如下对3×3对角矩阵A的轶为3} \\A=\left[\begin{matrix}   1 &amp; 0 &amp; 0 \\   0 &amp; 4 &amp; 0 \\   0 &amp; 0 &amp; 6  \end{matrix}\right]\]</span></p><h1 id="对称矩阵">对称矩阵</h1><p>在<ahref="https://zh.wikipedia.org/wiki/線性代數">线性代数</a>中，<strong>对称矩阵</strong>（英语：symmetricmatrix）指<ahref="https://zh.wikipedia.org/wiki/轉置矩陣">转置矩阵</a>和自身相等<ahref="https://zh.wikipedia.org/wiki/方形矩陣">方形矩阵</a>。 <spanclass="math display">\[A^T=A\]</span> 对称矩阵中的右上至左下方向元素以<ahref="https://zh.wikipedia.org/wiki/主對角線">主对角线</a>（左上至右下）为轴进行对称。若将其写作<imgsrc="https://wikimedia.org/api/rest_v1/media/math/render/svg/296ad42d9541f8285979ce822ccb661da56111ca"alt="{A=(a_{ij})}" />，则对所有的<em>i</em>和<em>j</em>，<imgsrc="https://wikimedia.org/api/rest_v1/media/math/render/svg/345ee164a8ed5ddbfaf43a3dabb821bcbed54324"alt="{a_{ij}=a_{ji} !}" /></p><p>对称矩阵示例： <span class="math display">\[\left[\begin{matrix}   1 &amp; 2 &amp; 3 \\   2 &amp; 4 &amp; -5 \\   3 &amp; -5 &amp; 6  \end{matrix}\right]\]</span></p><h1 id="正交矩阵">正交矩阵</h1><p>在<ahref="https://zh.wikipedia.org/wiki/矩阵论">矩阵论</a>中，<strong>正交矩阵</strong>（英语：orthogonalmatrix），又称<strong>直交矩阵</strong>，是一个<ahref="https://zh.wikipedia.org/wiki/方块矩阵">方块矩阵</a>Q<imgsrc="https://wikimedia.org/api/rest_v1/media/math/render/svg/8752c7023b4b3286800fe3238271bbca681219ed"alt="{Q}" />，其元素为<ahref="https://zh.wikipedia.org/wiki/实数">实数</a>，而且行向量与列向量皆为<ahref="https://zh.wikipedia.org/wiki/正交">正交</a>的<ahref="https://zh.wikipedia.org/wiki/单位向量">单位向量</a> （即所有行向量两两正交，且每个行向量的模长为1；所有列向量两两正交，且每个列向量的模长为1），使得该矩阵的<ahref="https://zh.wikipedia.org/wiki/转置矩阵">转置矩阵</a>为其<ahref="https://zh.wikipedia.org/wiki/逆矩阵">逆矩阵</a>： <spanclass="math display">\[Q^T=Q^{-1}\quad \text{&lt;=&gt;} \quad Q^TQ=Q^{-1}Q=E\\\]</span> 其中，<imgsrc="https://wikimedia.org/api/rest_v1/media/math/render/svg/535ea7fc4134a31cbe2251d9d3511374bc41be9f"alt="{I}" />为<ahref="https://zh.wikipedia.org/wiki/單位矩陣">单位矩阵</a>。正交矩阵的<ahref="https://zh.wikipedia.org/wiki/行列式">行列式</a>值必定为+1或−1，因为：</p><p><imgsrc="https://wikimedia.org/api/rest_v1/media/math/render/svg/41f274be35b34c2014242e553c49bc8f1373faef"alt="{=det(I)=det(Q{T}Q)=det(Q{T})det(Q)=(det(Q))^{2}det(Q)=}" /> <spanclass="math display">\[1=det(E)=det(Q^TQ)=det(Q^T)det(Q)=det(Q)det(Q)=[det(Q)]^2 \quad =&gt;\quad def(Q)=±1\]</span></p><h1 id="正定矩阵">正定矩阵</h1><p>参考：张宇线性代数9讲第9章二次型、https://basics.sjtu.edu.cn/~yangqizhe/pdf/la2024s/slides/LALec13-handout-zh.pdf</p><h2 id="定义">定义</h2><ul><li><p>广义定义</p><ul><li>设M是n阶方阵，如果对任何非零向量z，都有 z'Mz &gt; 0，其中z'表示z的转置，就称M正定矩阵。例如：B为n阶矩阵，E为单位矩阵，a为正实数。aE+B在a充分大时，aE+B为正定矩阵。（B必须为对称阵）</li></ul></li><li><p><strong>狭义定义</strong></p><ul><li>定义描述1（来自张宇线性代数9讲第9章二次型）：n元二次型f(x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>)=<strong><em>x</em></strong><sup>T</sup><strong><em>Ax</em></strong>，对于任意的<strong><em>x</em></strong>=[x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>]<sup>T</sup>≠<strong><em>0</em></strong>，均有<strong><em>x</em></strong><sup>T</sup><strong><em>Ax</em></strong>&gt; 0，则称f为正定二次型，称二次型的对应矩阵A为正定矩阵。</li><li>定义描述2：一个n阶的实对称矩阵M是正定的当且仅当对于所有的非零实系数向量z，都有z'Mz&gt;0。其中z'表示z的转置。</li></ul><p>一个对称矩阵 S 被称为是正定矩阵，如果其所有的特征值 λ 都满足 λ &gt;0。</p></li></ul><h2 id="二次型正定的充要条件">二次型正定的充要条件</h2><p>n元二次型f(x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>)=<strong><em>x</em></strong><sup>T</sup><strong><em>Ax</em></strong>正定，&lt;=&gt;对任意的<strong><em>x</em></strong>=[x<sub>1</sub>,x<sub>2</sub>,...,x<sub>n</sub>]<sup>T</sup>≠<strong><em>0</em></strong>，均有<strong><em>x</em></strong><sup>T</sup><strong><em>Ax</em></strong>&gt; 0 （定义）</p><p>&lt;=&gt;f的正惯性指定p=n</p><p>&lt;=&gt;存在可逆矩阵<strong><em>D</em></strong>，使用<strong><em>A</em></strong>=<strong><em>D<sup>T</sup>D</em></strong></p><p>&lt;=&gt;A与E合同</p><p>&lt;=&gt;A的特征值λ<sub>i</sub> &gt; 0（i=1,2,...,n）</p><p>&lt;=&gt;A的全部顺序主子式均大于0</p><h2 id="二次型正定的必要条件">二次型正定的必要条件</h2><p>（1）a<sub>ii</sub> &gt;0 （i=1,2,...,n）（可由<strong><em>x</em></strong>取特定的值来证明，如e<sub>1</sub>,e<sub>2</sub>,...,e<sub>n</sub>）</p><p>（2）|<strong><em>A</em></strong>|&gt;0 (<em>|A|=|</em><strong><em>D<sup>T</sup>D</em></strong>|=|<strong><em>D<sup>T</sup></em></strong>||<strong><em>D</em></strong>|=[|<strong><em>D</em></strong>|]<sup>2</sup>&gt; 0恒成功，因为矩阵<strong><em>D</em></strong>是可逆的)</p><h1 id="矩阵变换">矩阵变换</h1><p>在<ahref="https://baike.baidu.com/item/线性代数/800?fromModule=lemma_inlink">线性代数</a>中，<ahref="https://baike.baidu.com/item/矩阵/18069?fromModule=lemma_inlink">矩阵</a>的初等行变换是指以下三种变换类型：</p><ol type="1"><li><p>交换矩阵的两行（对调i,j，两行记为r<sub>i</sub>，r<sub>j</sub>）；</p></li><li><p>以一个非零数k乘矩阵的某一行所有元素（第i行乘以k记为r<sub>i</sub>× k）；</p></li><li><p>把矩阵的某一行所有元素乘以一个数k后加到另一行对应的元素(第j行乘以k加到第i行记为r<sub>i</sub>+ k × r<sub>j</sub>)。 <span class="math display">\[A=\left[\begin{matrix}   1 &amp; 2 &amp; 3 \\   0 &amp; 4 &amp; 5 \\   0 &amp; 0 &amp; 6 \\  \end{matrix} \\\right]，经过矩阵初等变换后，矩阵A可以转换成右侧形式，B=\left[  \begin{matrix}   1 &amp; 2 &amp; 3 \\   0 &amp; 4 &amp; 5 \\   0 &amp; 0 &amp; 6 \\  \end{matrix} \\\right]\]</span></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>线性代数</category>
      
    </categories>
    
    
    <tags>
      
      <tag>线性代数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-02模型评估</title>
    <link href="/2025/07/16/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-02%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/"/>
    <url>/2025/07/16/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-02%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/</url>
    
    <content type="html"><![CDATA[<p>先占个位置，后续继续补充学习记录。现在是2025年7月16日23:54:13，脑子有点不听使唤了，明天继续。</p><h1 id="第2章-模型评估与选择">第2章 模型评估与选择</h1><p>本章介绍模型评估与选择，讲述如何评估模型的优劣和选择最适合自己业务场景的模型。</p><p>参考讲解视频： <ahref="https://space.bilibili.com/431850986/lists/3884942">合集·西瓜书代码实战</a></p><p>正太分布的前世今生：https://cosx.org/2013/01/story-of-normal-distribution-1/</p><h2 id="经验误差与过拟合">2.1 经验误差与过拟合</h2><p>几个重要概念的定义如下。</p><p><strong>错误率</strong>：E=am<em>E</em>=*m**a<em>，其中m</em>m<em>为样本个数，a</em>a*为分类错误样本个数。</p><p><strong>精度</strong>：精度=1-错误率。</p><p><strong>误差</strong>：学习器的实际预测输出与样本的真实输出之间的差异。</p><p><strong>经验误差</strong>：学习器在训练集上的误差，又称为"训练误差"。</p><p><strong>泛化误差</strong>：学习器在新样本上的误差。</p><hr /><p>错误率和精度很容易理解，而且很明显是针对分类问题的。误差的概念更适用于回归问题，但是，根据"西瓜书"第12章的式(12.1)和式(12.2)的定义可以看出，在分类问题中也会使用误差的概念，此时的"差异"指的是学习器的实际预测输出的类别与样本真实的类别是否一致，若一致则"差异"为0，若不一致则"差异"为1，训练误差是在训练集上差异的平均值，而泛化误差则是在新样本（训练集中未出现过的样本）上差异的平均值。</p><p><strong>过拟合</strong>是由于模型的学习能力相对于数据来说过于强大，反过来说，<strong>欠拟合</strong>是因为模型的学习能力相对于数据来说过于低下。暂且抛开"没有免费的午餐"定理不谈，例如对于"西瓜书"第1章图1.4中的训练样本（黑点）来说，用类似于抛物线的曲线A去拟合则较为合理，而比较崎岖的曲线B相对于训练样本来说学习能力过于强大，但若仅用一条直线去训练则相对于训练样本来说直线的学习能力过于低下。</p><h2 id="评估方法">2.2 评估方法</h2><h2 id="性能度量">2.3 性能度量</h2><h2 id="比较检验">2.4 比较检验</h2><h2 id="偏差与方差">2.5 偏差与方差</h2>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机器学习入门-01相关概念与绪论</title>
    <link href="/2025/07/16/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-01%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%BB%AA%E8%AE%BA/"/>
    <url>/2025/07/16/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8-01%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%BB%AA%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<p>此次机器学习入门系列的学习以经典教材周志华老师的《机器学习》（俗称西瓜书）、谢文睿等著的《机器学习公式详解第2版本》（俗称南瓜书）为主要学习资料，在此写下自己的学习记录或疑惑，方便后续查阅与复习。</p><p>前提要求是至少对本科必修的3门数学课《高等数学》、《线性代数》和《概率论与数理统计》。</p><p>参考讲解视频：<ahref="https://www.bilibili.com/video/BV1Mh411e7VU?vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2&amp;p=2&amp;spm_id_from=333.788.videopod.episodes">《机器学习公式详解》（南瓜书）与西瓜书公式推导</a></p><h1 id="第1章-绪论">第1章 绪论</h1><h2 id="引言">1.1 引言</h2><p>"算法"是指从数据中学得"模型"的具体方法，常见的算法有线性回归、对数几率回归、决策树等。算法产生的结果就是模型，模型一般是具体的函数或可抽象地看作为函数，比如比如一元线性回归算法产出的模型即为形如<code>f(x)=wx+b</code>的一元一次函数。</p><h2 id="基本术语">1.2 基本术语</h2><p>以下列举出机器学习中常用的术语，并进行稍加解释。</p><ul><li><strong>样本</strong>：也称为"示例"，是关于一个事件或对象的描述。因为要想让计算机能对现实生活中的事物进行机器学习，必须先将其抽象为计算机能理解的形式，计算机最擅长做的就是进行数学运算，因此考虑如何将其抽象为某种数学形式。显然，线性代数中的向量就很适合，因为任何事物都可以由若干"特征"（或称为"属性"）唯一刻画出来，而向量的各个维度即可用来描述各个特征。例如，如果用色泽、根蒂和敲声这3个特征来刻画西瓜，那么一个"色泽青绿，根蒂蜷缩，敲声清脆"的西瓜用向量来表示即为x=(青绿;蜷缩;清脆)<strong>x</strong>=(青绿;蜷缩;清脆)<strong>（向量中的元素用分号";"分隔时表示此向量为列向量，用逗号","分隔时表示为行向量）</strong>，其中青绿、蜷缩和清脆分别对应为相应特征的取值，也称为"属性值"。显然，用中文书写向量的方式不够"数学"，因此需要将属性值进一步数值化，具体例子参见"西瓜书"第3章3.2。此外，仅靠以上3个特征来刻画西瓜显然不够全面细致，因此还需要扩展更多维度的特征，一般称此类与特征处理相关的工作为"特征工程"。</li></ul><p><img src="https://s2.loli.net/2025/07/16/UMF1ScoKWNJfhpv.png" alt="image-20250716114149762" style="zoom:67%;" /></p><p>​ 截图来源：https://lochiwei.gitbook.io/math/linear/matrix/row-col</p><ul><li><p><strong>样本空间</strong>：也称为"输入空间"或"属性空间"。由于样本采用的是标明各个特征取值的"特征向量"来进行表示，根据线性代数的知识可知，有向量便会有向量所在的空间，因此称表示样本的特征向量所在的空间为样本空间，通常用花式大写的XX表示。</p></li><li><p><strong>数据集</strong>：数据集通常用集合来表示，令集合D={x1,x2,...,xm}<em>D</em>={<strong>x</strong>1,<strong>x</strong>2,...,<strong>x</strong><em>m</em>}表示包含m<em>m</em>个样本的数据集，一般同一份数据集中的每个样本都含有相同个数的特征，假设此数据集中的每个样本都含有d<em>d</em>个特征，则第i<em>i</em>个样本的数学表示为d<em>d</em>维向量：xi=(xi1;xi2;...;xid)<strong>x</strong><em>i</em>=(<em>x<strong>i<em>1;</em>x</strong>i</em>2;...;<em>x<strong>i</strong>d</em>)，其中xij*x**ij<em>表示样本xi<strong>x</strong></em>i<em>在第j</em>j*个属性上的取值。</p></li><li><p><strong>模型</strong>：机器学习的一般流程如下：首先收集若干样本（假设此时有100个），然后将其分为训练样本（80个）和测试样本（20个），其中80个训练样本构成的集合称为"训练集"，20个测试样本构成的集合称为"测试集"，接着选用某个机器学习算法，让其在训练集上进行"学习"（或称为"训练"），然后产出得到"模型"（或称为"学习器"），最后用测试集来测试模型的效果。执行以上流程时，表示我们已经默认样本的背后是存在某种潜在的规律，我们称这种潜在的规律为"真相"或者"真实"，例如样本是一堆好西瓜和坏西瓜时，我们默认的便是好西瓜和坏西瓜背后必然存在某种规律能将其区分开。当我们应用某个机器学习算法来学习时，产出得到的模型便是该算法所找到的它自己认为的规律，由于该规律通常并不一定就是所谓的真相，所以也将其称为"假设"。通常机器学习算法都有可配置的参数，同一个机器学习算法，使用不同的参数配置或者不同的训练集，训练得到的模型通常都不同。</p></li><li><p><strong>标记</strong>：上文提到机器学习的本质就是在学习样本在某个方面的表现是否存在潜在的规律，我们称该方面的信息为"标记"。例如在学习西瓜的好坏时，"好瓜"和"坏瓜"便是样本的标记。一般第i<em>i</em>个样本的标记的数学表示为yi*y**i<em>，标记所在的空间称为"标记空间"或"输出空间"，数学表示为花式大写的YY。标记通常也看作为样本的一部分，因此，一个完整的样本通常表示为(x,y)(<strong>x</strong>,</em>y*)。</p><p>根据标记的取值类型不同，可将机器学习任务分为以下两类：</p><ul><li>当标记取值为离散型时，称此类任务为"分类"，例如学习西瓜是好瓜还是坏瓜、学习猫的图片是白猫还是黑猫等。当分类的类别只有两个时，称此类任务为"二分类"，通常称其中一个为"正类"，另一个为"反类"或"负类"；当分类的类别超过两个时，称此类任务为"多分类"。由于标记也属于样本的一部分，通常也需要参与运算，因此也需要将其数值化，例如对于二分类任务，通常将正类记为11，反类记为00，即Y={0,1}Y={0,1}。这只是一般默认的做法，具体标记该如何数值化可根据具体机器学习算法进行相应地调整，例如第6章的支持向量机算法则采用的是Y={−1,+1}Y={−1,+1}；</li><li>当标记取值为连续型时，称此类任务为"回归"，例如学习预测西瓜的成熟度、学习预测未来的房价等。由于是连续型，因此标记的所有可能取值无法直接罗列，通常只有取值范围，回归任务的标记取值范围通常是整个实数域RR，即Y=RY=R。</li></ul><p>无论是分类还是回归，机器学习算法最终学得的模型都可以抽象地看作为以样本x为自变量，标记y*y为因变量的函数y=f(x)，即一个从输入空间X到输出空间Y的映射。例如在学习西瓜的好坏时，机器学习算法学得的模型可看作为一个函数f(x)，给定任意一个西瓜样本x<sub>i</sub>=(青绿;蜷缩;清脆)，将其输入进函数即可计算得到一个输出y<sub>i</sub>=f(xi)，此时得到的y<sub>i</sub>便是模型给出的预测结果，当y<sub>i</sub>取值为1时表明模型认为西瓜xi是好瓜，当y<sub>i</sub>取值为0时表明模型认为西瓜x<sub>i</sub>是坏瓜。</p><p>根据是否有用到标记信息，可将机器学习任务分为以下两类：</p><ul><li><p>在模型训练阶段有用到标记信息时，称此类任务为"监督学习"，例如第3章的线性模型；</p></li><li><p>在模型训练阶段没用到标记信息时，称此类任务为"无监督学习"，例如第9章的聚类。</p></li></ul></li><li><p><strong>泛化</strong>：由于机器学习的目标是根据已知来对未知做出尽可能准确的判断，因此对未知事物判断的准确与否才是衡量一个模型好坏的关键，我们称此为"泛化"能力。例如学习西瓜好坏时，假设训练集中共有3个样本：<em>{(x<sub>1</sub>=(青绿;蜷缩),y<sub>1</sub>=好瓜)，(x<sub>2</sub>=(乌黑;蜷缩),y<sub>2</sub>=好瓜)，(x<sub>3</sub>=(浅白;蜷缩),y<sub>3</sub>=好瓜)}</em>，同时假设判断西瓜好坏的真相是"只要根蒂蜷缩就是好瓜"，如果应用算法A<em>A</em>在此训练集上训练得到模型f<sub>a</sub>(x)，模型ε<sub>a</sub>学到的规律是"色泽等于青绿、乌黑或者浅白时，同时根蒂蜷缩即为好瓜，否则便是坏瓜"，再应用算法ε<sub>b</sub>在此训练集上训练得到模型f<sub>b</sub>(x)，模型f<sub>b</sub>(x)学到的规律是"只要根蒂蜷缩就是好瓜"，因此对于一个未见过的西瓜样本<em>x=(金黄;蜷缩)</em>来说，模型f<sub>a</sub>(x)给出的预测结果为"坏瓜"，模型f<sub>b</sub>(x)给出的预测结果为"好瓜"，此时我们称模型f<sub>b</sub>(x)的泛化能力优于模型f<sub>a</sub>(x)。</p><p>通过以上举例可知，尽管模型f<sub>a</sub>(x)和模型f<sub>b</sub>(x)对训练集学得一样好，即两个模型对训练集中每个样本的判断都对，但是其所学到的规律是不同的。导致此现象最直接的原因是算法的不同，但是算法通常是有限的，可穷举的，尤其是在特定任务场景下可使用的算法更是有限，因此，数据便是导致此现象的另一重要原因，这也就是机器学习领域常说的"数据决定模型的上限，而算法则是让模型无限逼近上限",下面详细解释此话的含义。</p><p>先解释"数据决定模型效果的上限"，其中数据是指从数据量和特征工程两个角度考虑。从数据量的角度来说，通常数据量越大模型效果越好，因为数据量大即表示累计的经验多，因此模型学习到的经验也多，自然表现效果越好。例如以上举例中如果训练集中含有相同颜色但根蒂不蜷缩的坏瓜，模型a<em>a</em>学到真相的概率则也会增大；从特征工程的角度来说，通常对特征数值化越合理，特征收集越全越细致，模型效果通常越好，因为此时模型更易学得样本之间潜在的规律。例如学习区分亚洲人和非洲人时，此时样本即为人，在进行特征工程时，如果收集到每个样本的肤色特征，则其他特征例如年龄、身高和体重等便可省略，因为只需靠肤色这一个特征就足以区分亚洲人和非洲人。</p><p>而"算法则是让模型无限逼近上限"是指当数据相关的工作已准备充分时，接下来便可用各种可适用的算法从数据中学习其潜在的规律进而得到模型，不同的算法学习得到的模型效果自然有高低之分，效果越好则越逼近上限，即逼近真相。</p></li><li><p><strong>分布</strong>：此处的"分布"指的是概率论中的概率分布，通常假设样本空间服从一个未知"分布"D，而我们收集到的每个样本都是独立地从该分布中采样得到，即"独立同分布"。通常收集到的样本越多，越能从样本中反推出D的信息，即越接近真相。此假设属于机器学习中的经典假设，在后续学习机器学习算法过程中会经常用到。</p></li><li><p><strong>假设（看书时理解感觉有点困惑，这是自己总结与摘抄的一个概念）</strong>：就是某算法实施在某训练数据集上的结果，这个“结果”因为只是某算法的结果，不一定是真相，所以称为假设，即假设就是模型。（南瓜书中相关描述：当我们应用某个机器学习算法来学习时，产出得到的模型便是该算法所找到的它自己认为的规律，由于该规律通常并不一定就是所谓的真相，所以也将其称为"假设"。）</p></li></ul><h2 id="假设空间">1.3 假设空间</h2><p>本节的重点是理解"假设空间"和"版本空间"，下面以"房价预测"举例说明。假设现已收集到某地区近几年的房价和学校数量数据，希望利用收集到的数据训练出能通过学校数量预测房价的模型，具体收集到的数据如表1-1所示。</p><!-- 表1-1 房价预测 --><table><thead><tr><th>年份</th><th>学校数量</th><th>房价</th></tr></thead><tbody><tr><td>2020</td><td>1 所</td><td>1 万/m²</td></tr><tr><td>2021</td><td>2 所</td><td>4 万/m²</td></tr></tbody></table><p>基于对以上数据的观察以及日常生活经验，不难得出"房价与学校数量成正比"的假设，若将学校数量设为x，房价设为y，则该假设等价表示学校数量和房价呈y=wx+b的一元一次函数关系，此时房价预测问题的假设空间即为"一元一次函数"。确定假设空间以后便可以采用机器学习算法从假设空间中学得模型，即从一元一次函数空间中学得能满足表1-1中数值关系的某个一元一次函数。学完第3章的线性回归可知当前问题属于一元线性回归问题，根据一元线性回归算法可学得模型为y=3x−2。</p><p>除此之外，也可以将问题复杂化，假设学校数量和房价呈y=wx<sup>2</sup>+b一元二次函数关系，此时问题变为了线性回归中的多项式回归问题，按照多项式回归算法可学得模型为y=x<sup>2</sup>。因此，以表1-1中数据作为训练集可以有多个假设空间，且在不同的假设空间中都有可能学得能够拟合训练集的模型，我们将所有能够拟合训练集的模型构成的集合称为"版本空间"。</p><h2 id="归纳偏好">1.4 归纳偏好</h2><p>在上一节"房价预测"的例子中，当选用一元线性回归算法时，学得的模型是一元一次函数，当选用多项式回归算法时，学得的模型是一元二次函数，所以不同的机器学习算法有不同的偏好，我们称为"归纳偏好"。对于当前房价预测这个例子来说，这两个算法学得的模型哪个更好呢？著名的"奥卡姆剃刀"原则认为"若有多个假设与观察一致，则选最简单的那个"，但是何为"简单"便见仁见智了，如果认为函数的幂次越低越简单，则此时一元线性回归算法更好，如果认为幂次越高越简单，则此时多项式回归算法更好，因此该方法其实并不"简单"，所以并不常用，而最常用的方法则是基于模型在测试集上的表现来评判模型之间的优劣。测试集是指由训练集之外的样本构成的集合，例如在当前房价预测问题中，通常会额外留有部分未参与模型训练的数据来对模型进行测试。假设此时额外留有1条数据：(年份:2022年;学校数量:3所;房价:7万/m<sup>2</sup>)用于测试，模型y=3x−2的预测结果为3∗3−2=7，预测正确，模型y=x2的预测结果为3<sup>2</sup>=9，预测错误，因此，在当前房价预测问题上，我们认为一元线性回归算法优于多项式回归算法。</p><p>机器学习算法之间没有绝对的优劣之分，只有是否适合当前待解决的问题之分，例如上述测试集中的数据如果改为(年份:2022年;学校数量:3所;房价:9万/m<sup>2</sup>)，则结论便逆转为多项式回归算法优于一元线性回归算法。</p><h3 id="式1.1和式1.2的解释">1.4.1 式(1.1)和式(1.2)的解释</h3><figure><img src="https://s2.loli.net/2025/07/16/VJ2jKYtziSHFlfd.png"alt="image-20250716231337681" /><figcaption aria-hidden="true">image-20250716231337681</figcaption></figure><p>截图来自：https://www.datawhale.cn/learn/content/2/63</p>]]></content>
    
    
    <categories>
      
      <category>机器学习入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西瓜书与南瓜书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ARM64服务器volcano执行CPU与NPU任务</title>
    <link href="/2025/07/14/ARM64%E6%9C%8D%E5%8A%A1%E5%99%A8volcano%E6%89%A7%E8%A1%8CCPU%E4%B8%8ENPU%E4%BB%BB%E5%8A%A1/"/>
    <url>/2025/07/14/ARM64%E6%9C%8D%E5%8A%A1%E5%99%A8volcano%E6%89%A7%E8%A1%8CCPU%E4%B8%8ENPU%E4%BB%BB%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>k8s在线部署-kubeadm部署arm64单机版k8s1.23.17</title>
    <link href="/2025/07/05/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-kubeadm%E9%83%A8%E7%BD%B2arm64%E5%8D%95%E6%9C%BA%E7%89%88k8s1.23.17/"/>
    <url>/2025/07/05/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-kubeadm%E9%83%A8%E7%BD%B2arm64%E5%8D%95%E6%9C%BA%E7%89%88k8s1.23.17/</url>
    
    <content type="html"><![CDATA[<h1 id="部署环境准备">1 部署环境准备</h1><h2 id="节点规划">1.1 节点规划</h2><table><thead><tr><th>主机名</th><th>用途</th><th>IP</th><th>root用户密码</th><th>规格</th><th>系统盘</th><th>OS</th><th>备注</th></tr></thead><tbody><tr><td>controller01</td><td>master + worker</td><td>113.57.37.106</td><td>XXX</td><td>192c1T</td><td>1124G</td><td>Ubuntu 22.04.4 LTS-aarch64</td><td>Kunpeng-920服务器，联网</td></tr></tbody></table><h2 id="服务器基础准备">1.2 服务器基础准备</h2><h3 id="修改各节点主机名">1.2.1 修改各节点主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">controller01</span><br></code></pre></td></tr></table></figure><h3 id="配置主机名与ip映射所有节点">1.2.2配置主机名与ip映射（所有节点）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# cat /etc/hosts<br>...<br>113.57.37.106 controller01<br></code></pre></td></tr></table></figure><h3 id="配置从master01到所有节点的ssh免密登录">1.2.3配置从master01到所有节点的ssh免密登录</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">root<span class="hljs-variable">@controller01</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># ssh-keygen -P &quot;&quot; -t rsa</span><br>root<span class="hljs-variable">@controller01</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># ssh-copy-id root<span class="hljs-doctag">@controller</span>01</span><br></code></pre></td></tr></table></figure><h3 id="关闭防火墙等设置与安装一些常用的工具组件">1.2.4关闭防火墙等设置与安装一些常用的工具组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">关闭防火墙</span><br>systemctl status ufw<br>systemctl stop ufw<br>systemctl disable ufw<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置时区为亚洲上海</span><br>timedatectl set-timezone Asia/Shanghai<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装常用工具组件</span><br>apt-get update &amp;&amp; apt install -y tmux wget<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装k8s相关服务依赖组件</span><br>apt install -y socat conntrack ebtables ipset chrony<br>systemctl enable chrony.service &amp;&amp; systemctl restart chrony.service &amp;&amp; systemctl status chrony<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看时间同步情况</span><br>chronyc sources<br></code></pre></td></tr></table></figure><h3 id="swap分区禁用及内核参数调整">1.2.5Swap分区禁用及内核参数调整</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">临时禁用swap分区</span><br>swapoff -a<br><span class="hljs-meta prompt_">#</span><span class="language-bash">注释swap配置行，永久禁用swap分区</span><br>sed -i &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">调整内核参数</span><br>echo &#x27;vm.swappiness=0&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>sysctl -p /etc/sysctl.d/k8s.conf<br></code></pre></td></tr></table></figure><h3 id="转发ipv4并让iptables看到桥接流量">1.2.6转发IPv4并让iptables看到桥接流量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">设置OS启动时的加载模块</span><br>echo &#x27;overlay&#x27; &gt;&gt; /etc/modules-load.d/k8s.conf;echo &#x27;br_netfilter&#x27; &gt;&gt; /etc/modules-load.d/k8s.conf<br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载overlay与br_netfilter模块</span><br>modprobe overlay &amp;&amp; modprobe br_netfilter<br>lsmod | grep overlay<br>lsmod | grep br_netfilter<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置内核参数(重启依然生效)</span><br>echo &#x27;net.bridge.bridge-nf-call-iptables  = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>echo &#x27;net.bridge.bridge-nf-call-ip6tables = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>echo &#x27;net.ipv4.ip_forward                 = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br><span class="hljs-meta prompt_">#</span><span class="language-bash">bridge-nf</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bridge-nf 使得 netfilter 可以对 Linux 网桥上的 IPv4/ARP/IPv6 包过滤。比如，设置net.bridge.bridge-nf-call-iptables＝1后，二层的网桥在转发包时也会被 <span class="hljs-comment">#iptables的 FORWARD 规则所过滤。常用的选项包括：</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-arptables：是否在 arptables 的 FORWARD 中过滤网桥的 ARP 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-ip6tables：是否在 ip6tables 链中过滤 IPv6 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-iptables：是否在 iptables 链中过滤 IPv4 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-filter-vlan-tagged：是否在 iptables/arptables 中过滤打了 vlan 标签的包。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">防火墙是保护服务器和基础设施安全的重要工具。在 Linux 生态系统中，iptables 是使 用很广泛的防火墙工具之一，它基于内核的包过滤框架（packet filtering <span class="hljs-comment">#framework） netfilter。</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Linux 上最常用的防火墙工具是 iptables。iptables 与协议栈内有包过滤功能的 hook 交 互来完成工作。这些内核 hook 构成了 netfilter 框架。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">每个进入网络系统的包（接收或发送）在经过协议栈时都会触发这些 hook，程序 可以通过注册 hook 函数的方式在一些关键路径上处理网络流量。iptables 相关的内核模 <span class="hljs-comment">#块在这些 hook 点注册了处理函数，因此可以通过配置 iptables 规则来使得网络流量符合 防火墙规则。</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">不需要重启使内核参数生效，然后查看当前生效的相关内核参数</span><br>sysctl --system<br>sysctl net.bridge.bridge-nf-call-iptables <br>sysctl net.bridge.bridge-nf-call-ip6tables <br>sysctl net.ipv4.ip_forward<br></code></pre></td></tr></table></figure><h2 id="docker环境准备">1.3 Docker环境准备</h2><p>安装docker engine，安装步骤如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">更新安装源索引</span><br>apt-get update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖包，用于通过HTTPS来获取仓库</span><br>apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加 Docker 的官方 GPG 密钥</span><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置稳定版仓库(添加到/etc/apt/sources.list中)</span><br>add-apt-repository &quot;deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果提示“Could not handshake”就尝试多执行几次</span><br><br>gpg --keyserver keyserver.ubuntu.com --recv 7EA0A9C3F273FCD8<br>gpg --export --armor 7EA0A9C3F273FCD8 |apt-key add -<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询可安装docker-ce版本</span><br>apt-get update<br>apt-cache policy docker-ce<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装指定版本</span><br>apt-get install docker-ce=5:20.10.24~3-0~ubuntu-jammy<br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证安装是否成功</span><br>docker --version<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改docker守护进程配置文件，更新 cgroupdriver 为systemd</span><br>tee /etc/docker/daemon.json &lt;&lt;EOF<br>&#123;<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://hub.rat.dev&quot;,<br>    &quot;https://registry.aliyuncs.com&quot;,<br>    &quot;https://registry.docker-cn.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.nju.edu.cn&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ],<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]<br>&#125;<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重载配置文件，重启docker服务</span><br>systemctl daemon-reload<br>systemctl restart docker<br>systemctl status docker<br></code></pre></td></tr></table></figure><h1 id="集群部署">2 集群部署</h1><h2 id="组件安装源准备">2.1 组件安装源准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装组件</span><br>apt-get update<br>apt install -y apt-transport-https ca-certificates curl<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加GPG 密钥</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | <span class="hljs-built_in">sudo</span> apt-key add -</span><br>curl -s https://mirrors.huaweicloud.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加kubernetes相关组件安装源</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">不管是阿里云（https://mirrors.aliyun.com/kubernetes/apt）还是华为云（https://mirrors.huaweicloud.com/kubernetes/apt/），都没有kubernetes-jammy。仍可使用kubernetes-xenial</span><br>cat &lt;&lt;EOF &gt; /etc/apt/sources.list.d/kubernetes.list<br>deb https://mirrors.huaweicloud.com/kubernetes/apt/ kubernetes-xenial main<br>EOF<br><br><br>apt-get update<br></code></pre></td></tr></table></figure><h2 id="集群基础组件安装">2.2 集群基础组件安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装kubelet kubeadm kubectl</span><br>apt-get update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">列出所有可用的 kubelet 版本</span><br>apt-cache madison kubelet<br><br>apt install -y kubelet=1.23.17-00 kubeadm=1.23.17-00 kubectl=1.23.17-00 kubernetes-cni<br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时kubelet服务处于loaded|activating状态，无需理会</span><br>systemctl enable kubelet<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置组件不自动更新</span><br>apt-mark hold kubelet kubeadm kubectl<br><br></code></pre></td></tr></table></figure><h2 id="集群镜像准备">2.3 集群镜像准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载镜像并上传到harbor</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果没有harbor服务器或不知道它是什么，就直接使用 registry.aliyuncs.com/google_containers/xxx</span><br>k8s_ver=&quot;1.23.17&quot;<br>kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;<br>images=$(kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;)<br>for i in $&#123;images&#125;; <br>    do echo $i; <br>    docker pull registry.aliyuncs.com/google_containers/$i; <br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有harbor服务器</span><br>k8s_ver=&quot;1.23.17&quot;<br>harbor_url=&quot;175.6.40.93:8196&quot;<br>kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;<br>images=$(kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;)<br>for i in $&#123;images&#125;; <br>    do echo $i; <br>    docker pull registry.aliyuncs.com/google_containers/$i; <br>    docker tag registry.aliyuncs.com/google_containers/$i $&#123;harbor_url&#125;/google_containers/$i; <br>    docker push $&#123;harbor_url&#125;/google_containers/$i; <br>    docker rmi registry.aliyuncs.com/google_containers/$i; <br>done<br></code></pre></td></tr></table></figure><h2 id="集群初始化">2.4 集群初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果没有harbor服务器或不知道它是什么</span><br>kubeadm init \<br> --image-repository=registry.aliyuncs.com/google_containers \<br> --kubernetes-version=1.23.17 \<br> --pod-network-cidr=&quot;10.250.0.0/16&quot; \<br> --apiserver-advertise-address=113.57.37.106 \<br> --service-cidr=&quot;10.96.0.0/12&quot; \<br> --ignore-preflight-errors strings=Swap<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有harbor服务器</span><br>kubeadm init \<br> --image-repository=175.6.40.93:8196/google_containers \<br> --kubernetes-version=1.23.17 \<br> --pod-network-cidr=&quot;10.250.0.0/16&quot; \<br> --apiserver-advertise-address=172.20.0.21 \<br> --service-cidr=&quot;10.96.0.0/12&quot; \<br> --ignore-preflight-errors strings=Swap<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">--image-repository harbor服务器长域名+仓库名</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--kubernetes-version 上面的<span class="hljs-variable">$&#123;k8s_ver&#125;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--pod-network-cidr k8s集群的pod网段，可自定义</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--apiserver-advertise-address master节点的管理ip</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--service-cidr k8s集群的svc网段，可自定义</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--ignore-preflight-errors strings=Swap 值只能是一个列表的子集，详情查看kubeadm init --<span class="hljs-built_in">help</span></span><br></code></pre></td></tr></table></figure><h2 id="工作节点添加删除master节点污点">2.5工作节点添加（删除master节点污点）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置kube config文件</span><br>mkdir -p $HOME/.kube<br>cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>chown $(id -u):$(id -g) $HOME/.kube/config<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">因为我们现在是搭建单节点k8s集群，所以master节点既是控制节点也是工作节点</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">但K8S中默认master节点是不能调度任何pod的，因为此处是单节点k8s集群，所以需要将控制节点污点去除</span><br>kubectl taint nodes --all node-role.kubernetes.io/master-<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">搭建好单节点k8s集群后，在此基础上添加工作节点，参考“3 添加节点”章节</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使能kubectl 命令补全</span><br>cat &gt;&gt; /root/.bashrc &lt;&lt;EOF<br>source &lt;(kubectl completion bash)<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载此文件</span><br>source /root/.bashrc <br></code></pre></td></tr></table></figure><h2 id="集群网络配置">2.6 集群网络配置</h2><p>此处使用的k8s集群网络解决方案是calico，以下是安装网络插件(calico)的步骤。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">Flannel、Calico、kubeovn、华为的Canal、Weave Net 等，大家有兴趣可以自己去研究下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">容器镜像同步网站：https://docker.aityp.com/</span><br><br>mkdir -p /data/kubernetes/network/flannel &amp;&amp; cd /data/kubernetes/network/flannel<br>wget --no-check-certificate https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改下载下来的kube-flannel.yml 文件，有两点</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">（1）将其中两个镜像修改为国内镜像</span><br>docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1-linuxarm64<br>docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/flannel-io/flannel:v0.27.0-linuxarm64<br><span class="hljs-meta prompt_">#</span><span class="language-bash">（2）将net-conf.json---&gt;Network的值修改为跟kubeadm init xxx命令中“--pod-network-cidr”参数值一样</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">即修改为10.250.0.0/16</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改后如下</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Namespace</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">pod-security.kubernetes.io/enforce:</span> <span class="hljs-string">privileged</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">rules:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/status</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">patch</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-cfg</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">cni-conf.json:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">      &quot;name&quot;: &quot;cbr0&quot;,</span><br><span class="hljs-string">      &quot;cniVersion&quot;: &quot;0.3.1&quot;,</span><br><span class="hljs-string">      &quot;plugins&quot;: [</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;flannel&quot;,</span><br><span class="hljs-string">          &quot;delegate&quot;: &#123;</span><br><span class="hljs-string">            &quot;hairpinMode&quot;: true,</span><br><span class="hljs-string">            &quot;isDefaultGateway&quot;: true</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;portmap&quot;,</span><br><span class="hljs-string">          &quot;capabilities&quot;: &#123;</span><br><span class="hljs-string">            &quot;portMappings&quot;: true</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      ]</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span>  <span class="hljs-attr">net-conf.json:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">      &quot;Network&quot;: &quot;10.250.0.0/16&quot;,</span><br><span class="hljs-string">      &quot;EnableNFTables&quot;: false,</span><br><span class="hljs-string">      &quot;Backend&quot;: &#123;</span><br><span class="hljs-string">        &quot;Type&quot;: &quot;vxlan&quot;</span><br><span class="hljs-string">      &#125;</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-ds</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-flannel</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">flannel</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">tier:</span> <span class="hljs-string">node</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">flannel</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">affinity:</span><br>        <span class="hljs-attr">nodeAffinity:</span><br>          <span class="hljs-attr">requiredDuringSchedulingIgnoredDuringExecution:</span><br>            <span class="hljs-attr">nodeSelectorTerms:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">matchExpressions:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">kubernetes.io/os</span><br>                <span class="hljs-attr">operator:</span> <span class="hljs-string">In</span><br>                <span class="hljs-attr">values:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">linux</span><br>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">priorityClassName:</span> <span class="hljs-string">system-node-critical</span><br>      <span class="hljs-attr">tolerations:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>        <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">flannel</span><br>      <span class="hljs-attr">initContainers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install-cni-plugin</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/flannel-io/flannel-cni-plugin:v1.7.1-flannel1-linuxarm64</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cp</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">-f</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/flannel</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/cni/bin/flannel</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-plugin</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/opt/cni/bin</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install-cni</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/flannel-io/flannel:v0.27.0-linuxarm64</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">cp</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">-f</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/kube-flannel/cni-conf.json</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/etc/cni/net.d/10-flannel.conflist</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/cni/net.d</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/kube-flannel/</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/flannel-io/flannel:v0.27.0-linuxarm64</span><br>        <span class="hljs-attr">command:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">/opt/bin/flanneld</span><br>        <span class="hljs-attr">args:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">--ip-masq</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">--kube-subnet-mgr</span><br>        <span class="hljs-attr">resources:</span><br>          <span class="hljs-attr">requests:</span><br>            <span class="hljs-attr">cpu:</span> <span class="hljs-string">&quot;100m&quot;</span><br>            <span class="hljs-attr">memory:</span> <span class="hljs-string">&quot;50Mi&quot;</span><br>        <span class="hljs-attr">securityContext:</span><br>          <span class="hljs-attr">privileged:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">capabilities:</span><br>            <span class="hljs-attr">add:</span> [<span class="hljs-string">&quot;NET_ADMIN&quot;</span>, <span class="hljs-string">&quot;NET_RAW&quot;</span>]<br>        <span class="hljs-attr">env:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">POD_NAME</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.name</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">POD_NAMESPACE</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">metadata.namespace</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">EVENT_QUEUE_DEPTH</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;5000&quot;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CONT_WHEN_CACHE_NOT_READY</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;false&quot;</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">run</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/run/flannel</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/kube-flannel/</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/run/xtables.lock</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">run</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/run/flannel</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-plugin</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/opt/cni/bin</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/etc/cni/net.d</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">flannel-cfg</span><br>        <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">kube-flannel-cfg</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>        <span class="hljs-attr">hostPath:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">/run/xtables.lock</span><br>          <span class="hljs-attr">type:</span> <span class="hljs-string">FileOrCreate</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行上述 yaml文件</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@controller01:/data/kubernetes/network/flannel# kubectl create -f kube-flannel.yml</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s集群中所有pod在状态(默认每3秒刷新一次，退出时请使用组合键”ctrl+c“)</span><br>watch kubectl get pods -A -o wide<br></code></pre></td></tr></table></figure><h2 id="集群客户端认证文件准备">2.7 集群客户端认证文件准备</h2><p>其实，对于单节点k8s集群，此操作在前面已经执行过了，可以跳过。对于多节点K8s集群，则需要将此文件复制到所有节点的<code>$HOME/.kube</code>下，一般是直接使用root用户操作，其<code>HOME</code>目录就是<code>/root</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置kube config文件</span><br>mkdir -p $HOME/.kube<br>cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>chown $(id -u):$(id -g) $HOME/.kube/config<br></code></pre></td></tr></table></figure><h2 id="验证集群状态与可用性">2.8 验证集群状态与可用性</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# arch <br>aarch64<br>root@controller01:~# uname -a<br>Linux controller01 5.15.0-94-generic #104-Ubuntu SMP Tue Jan 9 15:26:57 UTC 2024 aarch64 aarch64 aarch64 GNU/Linux<br><br>root@controller01:~# kubectl get nodes -o wide<br>NAME           STATUS   ROLES                  AGE   VERSION    INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME<br>controller01   Ready    control-plane,master   17m   v1.23.17   113.57.37.106   &lt;none&gt;        Ubuntu 22.04.4 LTS   5.15.0-94-generic   docker://20.10.24<br><br>root@controller01:~# kubectl get cs<br>Warning: v1 ComponentStatus is deprecated in v1.19+<br>NAME                 STATUS    MESSAGE                         ERROR<br>controller-manager   Healthy   ok                              <br>scheduler            Healthy   ok                              <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;   <br><br>root@controller01:~# kubectl get pods -A <br>NAMESPACE      NAME                                   READY   STATUS    RESTARTS   AGE<br>kube-flannel   kube-flannel-ds-shsdv                  1/1     Running   0          3m9s<br>kube-system    coredns-6d8c4cb4d-fmjkw                1/1     Running   0          16m<br>kube-system    coredns-6d8c4cb4d-nzn5v                1/1     Running   0          16m<br>kube-system    etcd-controller01                      1/1     Running   0          17m<br>kube-system    kube-apiserver-controller01            1/1     Running   0          17m<br>kube-system    kube-controller-manager-controller01   1/1     Running   0          17m<br>kube-system    kube-proxy-7cccn                       1/1     Running   0          17m<br>kube-system    kube-scheduler-controller01            1/1     Running   0          17m<br></code></pre></td></tr></table></figure><p>对于单节点K8S1.23.17集群的搭建，至此就结束了。后续内容是添加工作节点与卸载集群的操作。</p><h1 id="添加节点">3 添加节点</h1><p>此处说的添加节点单纯是指添加工作节点。</p><p>新添加到k8s集群的节点也需要先完成1.2~2.2章节的操作，然后执行如下操作。</p><p>当我们使用kubeadm初始化一个集群后，会生成一个token，用这个token来添加新的节点进入此k8s集群，但此token默认只有24H有效期。</p><p>如果token还没有过期：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看是否存在有效的 token 值</span><br>root@controller01:~# kubeadm token list<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取token</span><br>root@controller01:~# kubeadm token list <br>TOKEN                     TTL         EXPIRES                USAGES                   DESCRIPTION                                                EXTRA GROUPS<br>4bwou4.h82yx951wezuo08a   23h         2025-02-10T04:14:45Z   authentication,signing   &lt;none&gt;                                                     system:bootstrappers:kubeadm:default-node-token<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取CA证书 sha256 编码 <span class="hljs-built_in">hash</span> 值</span><br>root@controller01:~# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &#x27;s/^.* //&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用上面输出的token与<span class="hljs-built_in">hash</span> 值，添加新节点（在新节点上执行）</span><br>root@ksp-registry:~# kubeadm join 113.57.37.106:6443 --token 4bwou4.h82yx951wezuo08a  --discovery-token-ca-cert-hash  sha256:78f2d6dbcc9b8aab7b1edfcbd276fc0c70858dd60f1c6e15666020f6c91ca362 <br></code></pre></td></tr></table></figure><p>如果token已过期之后（没过期也可以立刻重新生成），可以使用如下命令重新生成相关token与添加节点的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubeadm token create --print-join-command<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令执行后，会输出一行命令，将这行命令在新节点上执行</span><br>root@ksp-registry:~# kubeadm join 113.57.37.106:6443 --token alvy7y.kvvw4xomybxj67o6 --discovery-token-ca-cert-hash sha256:78f2d6dbcc9b8aab7b1edfcbd276fc0c70858dd60f1c6e15666020f6c91ca362 <br></code></pre></td></tr></table></figure><hr /><p>为新节点打标签：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl label node ksp-registry node-role.kubernetes.io/worker=&quot;&quot;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/cni/bin# kubectl get nodes<br>NAME           STATUS   ROLES                         AGE   VERSION<br>controller01   Ready    control-plane,master,worker   25d   v1.23.17<br>ksp-registry   Ready    worker                        23m   v1.23.17<br></code></pre></td></tr></table></figure><h1 id="卸载集群">4 卸载集群</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>systemctl stop kubelet<br>systemctl stop etcd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>kubeadm reset <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>dpkg -l | grep kube | awk &#x27;&#123;print $2&#125;&#x27; | xargs dpkg --purge <br>dpkg -l | grep kube<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>rm -rf $HOME/.kube<br>rm -rf ~/.kube/<br>rm -rf /etc/kubernetes/<br>rm -rf /etc/systemd/system/kubelet.service.d<br>rm -rf /etc/systemd/system/kubelet.service<br>rm -rf /usr/bin/kube*<br>rm -rf /etc/cni<br>rm -rf /opt/cni<br>rm -rf /var/lib/etcd/*<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubeadm k8s1.23.17</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从tensorflow1.8.0升级到2.14.0并支持使用NVIDIA GPU做mnist分布式训练</title>
    <link href="/2025/06/29/%E4%BB%8Etensorflow1.8.0%E5%8D%87%E7%BA%A7%E5%88%B02.14.0%E5%B9%B6%E6%94%AF%E6%8C%81%E4%BD%BF%E7%94%A8NVIDIA%20GPU%E5%81%9Amnist%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%AD%E7%BB%83/"/>
    <url>/2025/06/29/%E4%BB%8Etensorflow1.8.0%E5%8D%87%E7%BA%A7%E5%88%B02.14.0%E5%B9%B6%E6%94%AF%E6%8C%81%E4%BD%BF%E7%94%A8NVIDIA%20GPU%E5%81%9Amnist%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%AD%E7%BB%83/</url>
    
    <content type="html"><![CDATA[<h1id="一tensorflow与cuda对应关系表">一、tensorflow与cuda对应关系表</h1><p>https://tensorflow.google.cn/install/source?hl=en#tested_build_configurations</p><p>参考：https://blog.csdn.net/FL1768317420/article/details/134840200 、https://www.weiyeji.com/2025/wsl-tensorflow-gpu/</p><table><thead><tr><th>TensorFlow Version</th><th>Python Version</th><th>Compiler</th><th>Build Tools</th><th>cuDNN</th><th>CUDA</th></tr></thead><tbody><tr><td>2.15.0</td><td>3.9-3.11</td><td>Clang 16.0.0</td><td>Bazel 6.1.0</td><td>8.8</td><td>12.2</td></tr><tr><td>2.14.0</td><td>3.9-3.11</td><td>Clang 16.0.0</td><td>Bazel 6.1.0</td><td>8.7</td><td>11.8</td></tr><tr><td>2.13.0</td><td>3.8-3.11</td><td>Clang 16.0.0</td><td>Bazel 5.3.0</td><td>8.6</td><td>11.8</td></tr><tr><td>2.12.0</td><td>3.8-3.11</td><td>GCC 9.3.1</td><td>Bazel 5.3.0</td><td>8.6</td><td>11.8</td></tr><tr><td>2.11.0</td><td>3.7-3.10</td><td>GCC 9.3.1</td><td>Bazel 5.3.0</td><td>8.1</td><td>11.2</td></tr><tr><td>2.10.0</td><td>3.7-3.10</td><td>GCC 9.3.1</td><td>Bazel 5.1.1</td><td>8.1</td><td>11.2</td></tr><tr><td>2.9.0</td><td>3.7-3.10</td><td>GCC 9.3.1</td><td>Bazel 5.0.0</td><td>8.1</td><td>11.2</td></tr><tr><td>2.8.0</td><td>3.7-3.10</td><td>GCC 7.3.1</td><td>Bazel 4.2.1</td><td>8.1</td><td>11.2</td></tr><tr><td>2.7.0</td><td>3.7-3.9</td><td>GCC 7.3.1</td><td>Bazel 3.7.2</td><td>8.1</td><td>11.2</td></tr><tr><td>2.6.0</td><td>3.6-3.9</td><td>GCC 7.3.1</td><td>Bazel 3.7.2</td><td>8.1</td><td>11.2</td></tr><tr><td>2.5.0</td><td>3.6-3.9</td><td>GCC 7.3.1</td><td>Bazel 3.7.2</td><td>8.1</td><td>11.2</td></tr><tr><td>2.4.0</td><td>3.6-3.8</td><td>GCC 7.3.1</td><td>Bazel 3.1.0</td><td>8.0</td><td>11.0</td></tr><tr><td>2.3.0</td><td>3.5-3.8</td><td>GCC 7.3.1</td><td>Bazel 3.1.0</td><td>7.6</td><td>10.1</td></tr></tbody></table><h1 id="二在原镜像容器中做修改">二、在原镜像容器中做修改</h1><p>以<code>175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v3</code>镜像为基础，做如下操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建容器test01</span><br>docker run --name=test01 \<br>        --gpus all<br>        --runtime=nvidia \<br>        -it \<br>        175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v3 \<br>        --entry-point=/bin/bash<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进入容器内</span><br>root@59cbbed5325b:~# root@controller01:~# nvidia-smi <br>Mon Jun 30 06:22:35 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A40                     Off |   00000000:41:00.0 Off |                    0 |<br>|  0%   39C    P8             14W /  300W |       3MiB /  46068MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|  No running processes found                                                             |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><p>以下都是在容器test01内操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装pip3</span><br>root@59cbbed5325b:/# apt-get update<br>root@59cbbed5325b:/# apt install python3-pip<br>root@59cbbed5325b:/# pip3 install pip --upgrade<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">卸载旧版本TensorFlow（如果有）</span><br>root@59cbbed5325b:/# pip uninstall tensorflow tensorflow-gpu<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装cuda11.8</span><br>root@59cbbed5325b:/# bash cuda_11.8.0_520.61.05_linux.run<br><br>root@59cbbed5325b:/# vi /root/.bashrc   #添加如下内容<br>export CUDA_HOME=/usr/local/cuda<br>export PATH=/usr/local/cuda-11.8/bin:$PATH<br>export LD_LIBRARY_PATH=/usr/local/cuda-11.8/lib64<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载/root/.bashrc</span><br>root@59cbbed5325b:/# source /root/.bashrc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证cuda版本</span><br>root@59cbbed5325b:/# nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2022 NVIDIA Corporation<br>Built on Wed_Sep_21_10:33:58_PDT_2022<br>Cuda compilation tools, release 11.8, V11.8.89<br>Build cuda_11.8.r11.8/compiler.31833905_0<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用anaconda安装虚拟python3.9环境</span><br>bash Anaconda3-2024.06-1-Linux-x86_64.sh<br>conda create -n py3.9 python==3.9.19<br>conda activate py3.9<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装TensorFlow 2.14.0（支持CUDA 11.8）</span><br>(py3.9) root@59cbbed5325b:/# pip install tensorflow==2.14.0<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装libcudnn</span><br>(py3.9) root@59cbbed5325b:/# pip install nvidia-cudnn-cu11<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装cudnn</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压下载的文件（下载地址：https://developer.nvidia.com/cudnn-archive）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">具体是 cuDNN 8.x - 1.x (December 2023 - August 2014)</span><br>(py3.9) root@59cbbed5325b:/opt# tar -xJf cudnn-linux-x86_64-8.7.0.84_cuda11-archive.tar.xz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">复制文件到 CUDA 安装目录</span><br>(py3.9) root@59cbbed5325b:/opt# mv cudnn-linux-x86_64-8.7.0.84_cuda11-archive/ cudnn-linux-x86<br>(py3.9) root@59cbbed5325b:/opt/install-cudnn# ll cudnn-linux-x86<br>total 48<br>drwxr-xr-x 4 25503 2174  4096 Nov 21  2022 ./<br>drwxr-xr-x 3 root  root  4096 Jun 30 03:25 ../<br>-rw-r--r-- 1 25503 2174 28994 Nov 21  2022 LICENSE<br>drwxr-xr-x 2 25503 2174  4096 Nov 21  2022 include/<br>drwxr-xr-x 2 25503 2174  4096 Nov 21  2022 lib/<br><br>(py3.9) root@59cbbed5325b:/opt/install-cudnn# cp cudnn-linux-x86/include/cudnn*.h /usr/local/cuda/include<br>(py3.9) root@59cbbed5325b:/opt/install-cudnn# cp -P cudnn-linux-x86/lib/libcudnn* /usr/local/cuda/lib64<br>(py3.9) root@59cbbed5325b:/opt/install-cudnn# chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">检查 cuDNN 版本</span><br>(py3.9) root@59cbbed5325b:/opt/install-cudnn# cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">define CUDNN_MAJOR 8</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">define CUDNN_MINOR 7</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">define CUDNN_PATCHLEVEL 0</span><br>--<br><span class="hljs-meta prompt_">#</span><span class="language-bash">define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">验证CUDA和cuDNN兼容性</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#对于CUDA 12.4，TensorFlow会自动使用合适的cuDNN版本。检查兼容性：</span></span><br>(py3.9) root@59cbbed5325b:/# python -c &quot;<br>import tensorflow as tf<br>print(&#x27;TensorFlow version:&#x27;, tf.__version__)<br>print(&#x27;GPU is available?:&#x27;, tf.config.list_physical_devices(&#x27;GPU&#x27;))<br>print(&#x27;CUDA is supported?:&#x27;, tf.test.is_built_with_cuda())<br>&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##输出内容如下：</span></span><br>2025-06-30 03:33:34.678335: E tensorflow/compiler/xla/stream_executor/cuda/cuda_dnn.cc:9342] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered<br>2025-06-30 03:33:34.678411: E tensorflow/compiler/xla/stream_executor/cuda/cuda_fft.cc:609] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered<br>2025-06-30 03:33:34.678443: E tensorflow/compiler/xla/stream_executor/cuda/cuda_blas.cc:1518] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered<br>2025-06-30 03:33:34.687982: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.<br>To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.<br>2025-06-30 03:33:36.040071: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT<br>TensorFlow version: 2.14.0<br>GPU is available?: [PhysicalDevice(name=&#x27;/physical_device:GPU:0&#x27;, device_type=&#x27;GPU&#x27;)]<br>CUDA is supported?: True<br></code></pre></td></tr></table></figure><h1 id="三单个容器内验证与测试">三、单个容器内验证与测试</h1><p>最终的文件：gpu_dist_mnist-v6.py， 进行tensorflow分布式训练在容器test01中，启动PS服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py3.9) root@59cbbed5325b:/opt/tensorflow2.14.0# export TF_CONFIG=&#x27;&#123;&quot;cluster&quot;: &#123;&quot;ps&quot;: [&quot;localhost:2222&quot;], &quot;worker&quot;: [&quot;localhost:2223&quot;]&#125;, &quot;task&quot;: &#123;&quot;type&quot;: &quot;ps&quot;, &quot;index&quot;: 0&#125;&#125;&#x27; <br>(py3.9) root@59cbbed5325b:/opt/tensorflow2.14.0# python gpu_dist_mnist-v6.py<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行结果的最后几行：</span><br>==================================================<br>GPU和CUDA配置检查:<br>==================================================<br>TensorFlow版本: 2.14.0<br>TensorFlow是否支持GPU: True<br>CUDA是否可用: True<br>可用GPU设备数量: 1<br>GPU 0: PhysicalDevice(name=&#x27;/physical_device:GPU:0&#x27;, device_type=&#x27;GPU&#x27;)<br>  - 详细信息: &#123;&#x27;compute_capability&#x27;: (8, 6), &#x27;device_name&#x27;: &#x27;NVIDIA A40&#x27;&#125;<br>GPU内存增长模式已启用<br>2025-06-30 07:03:14.830558: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1886] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 43598 MB memory:  -&gt; device: 0, name: NVIDIA A40, pci bus id: 0000:41:00.0, compute capability: 8.6<br><br>所有可用设备:<br>  - /job:localhost/replica:0/task:0/device:CPU:0: CPU<br>  - /job:localhost/replica:0/task:0/device:GPU:0: GPU<br>==================================================<br>tf_config: &#123;&#x27;cluster&#x27;: &#123;&#x27;ps&#x27;: [&#x27;localhost:2222&#x27;], &#x27;worker&#x27;: [&#x27;localhost:2223&#x27;]&#125;, &#x27;task&#x27;: &#123;&#x27;type&#x27;: &#x27;ps&#x27;, &#x27;index&#x27;: 0&#125;&#125;<br>job name = ps<br>task index = 0<br>2025-06-30 07:03:15.331182: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1886] Created device /job:ps/replica:0/task:0/device:GPU:0 with 43598 MB memory:  -&gt; device: 0, name: NVIDIA A40, pci bus id: 0000:41:00.0, compute capability: 8.6<br>2025-06-30 07:03:15.346094: I tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc:457] Started server with target: grpc://localhost:2222<br></code></pre></td></tr></table></figure><p>同时在容器test01中的另一个窗口中启动Worker：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py3.9) root@59cbbed5325b:/opt/tensorflow2.14.0# export TF_CONFIG=&#x27;&#123;&quot;cluster&quot;: &#123;&quot;ps&quot;: [&quot;localhost:2222&quot;], &quot;worker&quot;: [&quot;localhost:2223&quot;]&#125;, &quot;task&quot;: &#123;&quot;type&quot;: &quot;worker&quot;, &quot;index&quot;: 0&#125;&#125;&#x27; <br>(py3.9) root@59cbbed5325b:/opt/tensorflow2.14.0# python gpu_dist_mnist-v6.py --num_gpus=1 --train_steps=5000  <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行结果的最后几行：</span><br>1751267105.262005: Worker 0: training step 4995 done (global step: 4994)<br>1751267105.266335: Worker 0: training step 4996 done (global step: 4995)<br>1751267105.270457: Worker 0: training step 4997 done (global step: 4996)<br>1751267105.274166: Worker 0: training step 4998 done (global step: 4997)<br>1751267105.278662: Worker 0: training step 4999 done (global step: 4998)<br>1751267105.283150: Worker 0: training step 5000 done (global step: 4999)<br>1751267105.287258: Worker 0: training step 5001 done (global step: 5000)<br>Training ends @ 1751267105.287361<br>Training elapsed time: 28.788610 s<br></code></pre></td></tr></table></figure><p>在运行过程中，可以在宿主机或容器test01中查看nvidiaGPU的使用情况，如下是在宿主机上查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到有两个进程在使用NVIDIA GPU</span><br>(base) root@controller01:/# nvidia-smi <br>Mon Jun 30 15:04:51 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A40                     Off |   00000000:41:00.0 Off |                    0 |<br>|  0%   72C    P0             94W /  300W |     547MiB /  46068MiB |      4%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|    0   N/A  N/A     59697      C   python                                        260MiB |<br>|    0   N/A  N/A     63680      C   python                                        274MiB |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><h1 id="四将容器保存成镜像">四、将容器保存成镜像</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将容器test01保存成镜像175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4</span><br>root@controller01:~# docker commit -m &quot;1)using python 3.9.19 in conda rather than py3.6.9  2)NVIDIA Driver Version: 550.54.15 3)cuda11.8 rather than 12.4  4)cudnn-linux-x86_64-8.7.0.84_cuda11   5)using tensorflow2.14.0 rather than tensorflow1.18.0&quot; test01 175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令中-m参数的值写错了，其实是从tensorflow1.8.0升级到tensorflow2.14.0</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到v4镜像比v3镜像大了很多，主要是增加的文件在/usr目录与/root/anaconda3目录下。前者是CUDA、cuDNN相关文件，后者主要是由于安装虚拟python3.9环境、tensorflow2.14.0增加的文件</span><br>root@controller01:~# docker images | grep &quot;175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example&quot;<br>175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example     v4      3c83959b2e82   3 minutes ago   23.4GB<br>175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example     v3      59b8c787e86a   12 months ago   1.53GB<br><span class="hljs-meta prompt_">#</span><span class="language-bash">推送到自己的harbor仓库（需要用harbor仓库户名与密码）</span><br>root@controller01:~# docker push 175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">保存到本地</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.12/tensorflow2.14.0# docker save 175.6.40.93:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4 -o ubuntu18-dist-mnist-tf-example-v4.tar<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看文件</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.12/tensorflow2.14.0# ls -alh<br>total 23G<br>drwxr-xr-x 2 root root 4.0K Jun 30 15:51 .<br>drwxr-xr-x 5 root root 4.0K Jun 30 14:29 ..<br>-rw-r--r-- 1 root root 2.2K Jun 30 10:43 gpu_diagnostic_script.sh<br>-rw-r--r-- 1 root root  19K Jun 29 22:34 gpu_dist_mnist-v5.py<br>-rw-r--r-- 1 root root  20K Jun 30 15:00 gpu_dist_mnist-v6-ok.py<br>-rw-r--r-- 1 root root  20K Jun 30 15:29 gpu_dist_mnist-v6.py<br>-rw-r--r-- 1 root root  134 Jun 30 14:33 README.txt<br>-rw------- 1 root root  23G Jun 30 15:51 ubuntu18-dist-mnist-tf-example-v4.tar<br></code></pre></td></tr></table></figure><h1id="五使用volcano1.10.0进行任务调度">五、使用volcano1.10.0进行任务调度</h1><h2 id="只使用cpu">5.1 只使用CPU</h2><p>tf-dist-mnist-example-cpu-v2-2000times-4presentation.yaml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#以tensorflow为例，创建一个具有1个ps和2个worker的工作负载</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">batch.volcano.sh/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Job</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow-dist-mnist-cpu</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">minAvailable:</span> <span class="hljs-number">2</span>   <span class="hljs-comment"># 该job的3个pod必须都可用</span><br>  <span class="hljs-attr">schedulerName:</span> <span class="hljs-string">volcano</span>    <span class="hljs-comment"># 指定volcano为调度器</span><br>  <span class="hljs-attr">plugins:</span><br>    <span class="hljs-attr">env:</span> []<br>    <span class="hljs-attr">svc:</span> []<br>  <span class="hljs-attr">policies:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">event:</span> <span class="hljs-string">PodEvicted</span> <span class="hljs-comment"># 当pod被驱逐时，重启该job</span><br>      <span class="hljs-attr">action:</span> <span class="hljs-string">RestartJob</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span>   <span class="hljs-comment"># 指定1个ps pod</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">ps</span><br>      <span class="hljs-attr">template:</span> <span class="hljs-comment"># ps pod的具体定义</span><br>        <span class="hljs-attr">spec:</span><br>          <span class="hljs-attr">containers:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">command:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">sh</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">-c</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">|</span><br><span class="hljs-string">                  PS_HOST=`cat /etc/volcano/ps.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  WORKER_HOST=`cat /etc/volcano/worker.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export TF_CONFIG=&#123;\&quot;cluster\&quot;:&#123;\&quot;ps\&quot;:[$&#123;PS_HOST&#125;],\&quot;worker\&quot;:[$&#123;WORKER_HOST&#125;]&#125;,\&quot;task\&quot;:&#123;\&quot;type\&quot;:\&quot;ps\&quot;,\&quot;index\&quot;:$&#123;VK_TASK_INDEX&#125;&#125;,\&quot;environment\&quot;:\&quot;cloud\&quot;&#125;;</span><br><span class="hljs-string">                  PYTHONUNBUFFERED=1 python /var/tf_dist_mnist/dist_mnist.py --num_gpus=0</span><br><span class="hljs-string"></span>              <span class="hljs-attr">image:</span> <span class="hljs-number">175.6</span><span class="hljs-number">.40</span><span class="hljs-number">.93</span><span class="hljs-string">:8196/volcanosh/volcanosh/dist-mnist-tf-example:0.0.5</span><br>              <span class="hljs-comment">#image: 175.6.40.93:8196/volcanosh/volcanosh/dist-mnist-tf-example:0.0.1</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow</span><br>              <span class="hljs-attr">ports:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">2222</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">tfjob-port</span><br>              <span class="hljs-attr">resources:</span> &#123;&#125;<br>          <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Never</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span>   <span class="hljs-comment"># 指定2个worker pod</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">worker</span><br>      <span class="hljs-attr">policies:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">event:</span> <span class="hljs-string">TaskCompleted</span>  <span class="hljs-comment"># 2个worker完成任务时认为该job完成任务</span><br>          <span class="hljs-attr">action:</span> <span class="hljs-string">CompleteJob</span><br>      <span class="hljs-attr">template:</span> <span class="hljs-comment"># worker pod的具体定义</span><br>        <span class="hljs-attr">spec:</span><br>          <span class="hljs-attr">containers:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">command:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">sh</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">-c</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">|</span><br><span class="hljs-string">                  PS_HOST=`cat /etc/volcano/ps.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  WORKER_HOST=`cat /etc/volcano/worker.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export TF_CONFIG=&#123;\&quot;cluster\&quot;:&#123;\&quot;ps\&quot;:[$&#123;PS_HOST&#125;],\&quot;worker\&quot;:[$&#123;WORKER_HOST&#125;]&#125;,\&quot;task\&quot;:&#123;\&quot;type\&quot;:\&quot;worker\&quot;,\&quot;index\&quot;:$&#123;VK_TASK_INDEX&#125;&#125;,\&quot;environment\&quot;:\&quot;cloud\&quot;&#125;;</span><br><span class="hljs-string">                  python /var/tf_dist_mnist/dist_mnist.py --num_gpus=0 --train_steps=2000 --batch_size=10000</span><br><span class="hljs-string"></span>              <span class="hljs-attr">image:</span> <span class="hljs-number">175.6</span><span class="hljs-number">.40</span><span class="hljs-number">.93</span><span class="hljs-string">:8196/volcanosh/volcanosh/dist-mnist-tf-example:0.0.5</span><br>              <span class="hljs-comment">#image: 175.6.40.93:8196/volcanosh/volcanosh/dist-mnist-tf-example:0.0.1</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow</span><br>              <span class="hljs-attr">ports:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">2222</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">tfjob-port</span><br>              <span class="hljs-attr">resources:</span> &#123;&#125;<br>          <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Never</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行任务：</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.10.0/example# kubectl create -f tf-dist-mnist-example-cpu-v2-2000times-4presentation.yaml                             <br>job.batch.volcano.sh/tensorflow-dist-mnist-cpu created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.10.0/example# kubectl get pods -o wide<br>NAME                                 READY   STATUS    RESTARTS   AGE   IP            NODE           NOMINATED NODE   READINESS GATES<br>tensorflow-dist-mnist-cpu-ps-0       1/1     Running   0          8s    10.250.0.17   controller01   &lt;none&gt;           &lt;none&gt;<br>tensorflow-dist-mnist-cpu-worker-0   1/1     Running   0          8s    10.250.1.27   ksp-registry   &lt;none&gt;           &lt;none&gt;<br></code></pre></td></tr></table></figure><h2 id="使用nvidia-gpu">5.2 使用NVIDIA GPU</h2><p>以下文件中使用到的镜像很大，有23G。</p><p>tf-dist-mnist-example-vgpu-v2-2000times-4presentation.yaml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#以tensorflow为例，创建一个具有1个ps和2个worker的工作负载</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">batch.volcano.sh/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Job</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow-dist-mnist-vgpu-v2</span><br>  <span class="hljs-comment">#  annotations:</span><br>  <span class="hljs-comment">#    volcano.sh/vgpu-mode: &quot;hami-core&quot;</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">minAvailable:</span> <span class="hljs-number">2</span>   <span class="hljs-comment"># 该job的3个pod必须都执行或结束</span><br>  <span class="hljs-attr">schedulerName:</span> <span class="hljs-string">volcano</span>    <span class="hljs-comment"># 指定volcano为调度器</span><br>  <span class="hljs-attr">plugins:</span><br>    <span class="hljs-attr">env:</span> []<br>    <span class="hljs-attr">svc:</span> []<br>  <span class="hljs-attr">policies:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">event:</span> <span class="hljs-string">PodEvicted</span> <span class="hljs-comment"># 当pod被驱逐时，重启该job</span><br>      <span class="hljs-attr">action:</span> <span class="hljs-string">RestartJob</span><br>  <span class="hljs-attr">tasks:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span>   <span class="hljs-comment"># 指定1个ps pod</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">ps</span><br>      <span class="hljs-attr">template:</span> <span class="hljs-comment"># ps pod的具体定义</span><br>        <span class="hljs-attr">spec:</span><br>          <span class="hljs-attr">containers:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">command:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">bash</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">-c</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">|</span><br><span class="hljs-string">                  source /root/.bashrc &amp;&amp; __conda_setup=&quot;$(&#x27;/root/anaconda3/bin/conda&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27; 2&gt; /dev/null)&quot; &amp;&amp; eval &quot;$__conda_setup&quot; &amp;&amp;conda activate py3.9;</span><br><span class="hljs-string">                  export PS_HOST=`cat /etc/volcano/ps.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export WORKER_HOST=`cat /etc/volcano/worker.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export TF_CONFIG=&quot;&#123;\&quot;cluster\&quot;:&#123;\&quot;ps\&quot;:[$&#123;PS_HOST&#125;],\&quot;worker\&quot;:[$&#123;WORKER_HOST&#125;]&#125;,\&quot;task\&quot;:&#123;\&quot;type\&quot;:\&quot;ps\&quot;,\&quot;index\&quot;:$&#123;VK_TASK_INDEX&#125;&#125;,\&quot;environment\&quot;:\&quot;cloud\&quot;&#125;&quot;;</span><br><span class="hljs-string">                  echo $PS_HOST;</span><br><span class="hljs-string">                  echo $WORKER_HOST;</span><br><span class="hljs-string">                  echo $TF_CONFIG;</span><br><span class="hljs-string">                  python /opt/tensorflow2.14.0/gpu_dist_mnist-v6.py</span><br><span class="hljs-string"></span>              <span class="hljs-attr">image:</span> <span class="hljs-number">175.6</span><span class="hljs-number">.40</span><span class="hljs-number">.93</span><span class="hljs-string">:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4</span><br>              <span class="hljs-comment">#imagePullPolicy: Always</span><br>              <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow</span><br>              <span class="hljs-attr">ports:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">2222</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">tfjob-port</span><br>              <span class="hljs-attr">resources:</span><br>                <span class="hljs-attr">limits:</span><br>                  <span class="hljs-attr">volcano.sh/gpu-number:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># requesting 1 GPUs</span><br>                  <span class="hljs-attr">volcano.sh/gpu-memory:</span> <span class="hljs-number">3072</span> <span class="hljs-comment"># requesting 3072MB GPU memory</span><br>          <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Never</span><br>          <span class="hljs-attr">tolerations:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;node.kubernetes.io/disk-pressure&quot;</span><br>              <span class="hljs-attr">operator:</span> <span class="hljs-string">&quot;Exists&quot;</span>  <span class="hljs-comment"># 容忍所有 disk-pressure 污点（无需指定 value）</span><br>              <span class="hljs-attr">effect:</span> <span class="hljs-string">&quot;NoSchedule&quot;</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span>  <span class="hljs-comment"># 指定1个worker pod</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">worker</span><br>      <span class="hljs-attr">policies:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">event:</span> <span class="hljs-string">TaskCompleted</span>  <span class="hljs-comment"># 2个worker完成任务时认为该job完成任务</span><br>          <span class="hljs-attr">action:</span> <span class="hljs-string">CompleteJob</span><br>      <span class="hljs-attr">template:</span> <span class="hljs-comment"># worker pod的具体定义</span><br>        <span class="hljs-attr">spec:</span><br>          <span class="hljs-attr">containers:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">command:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">bash</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">-c</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">|</span><br><span class="hljs-string">                  source /root/.bashrc &amp;&amp; __conda_setup=&quot;$(&#x27;/root/anaconda3/bin/conda&#x27; &#x27;shell.bash&#x27; &#x27;hook&#x27; 2&gt; /dev/null)&quot; &amp;&amp; eval &quot;$__conda_setup&quot; &amp;&amp; conda activate py3.9;</span><br><span class="hljs-string">                  export PS_HOST=`cat /etc/volcano/ps.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export WORKER_HOST=`cat /etc/volcano/worker.host | sed &#x27;s/$/&amp;:2222/g&#x27; | sed &#x27;s/^/&quot;/;s/$/&quot;/&#x27; | tr &quot;\n&quot; &quot;,&quot;`;</span><br><span class="hljs-string">                  export TF_CONFIG=&quot;&#123;\&quot;cluster\&quot;:&#123;\&quot;ps\&quot;:[$&#123;PS_HOST&#125;],\&quot;worker\&quot;:[$&#123;WORKER_HOST&#125;]&#125;,\&quot;task\&quot;:&#123;\&quot;type\&quot;:\&quot;worker\&quot;,\&quot;index\&quot;:$&#123;VK_TASK_INDEX&#125;&#125;,\&quot;environment\&quot;:\&quot;cloud\&quot;&#125;&quot;;</span><br><span class="hljs-string">                  echo $PS_HOST;</span><br><span class="hljs-string">                  echo $WORKER_HOST;</span><br><span class="hljs-string">                  echo $TF_CONFIG;</span><br><span class="hljs-string">                  python /opt/tensorflow2.14.0/gpu_dist_mnist-v6.py --train_steps=2000 --batch_size=10000</span><br><span class="hljs-string"></span>              <span class="hljs-attr">image:</span> <span class="hljs-number">175.6</span><span class="hljs-number">.40</span><span class="hljs-number">.93</span><span class="hljs-string">:8196/volcanosh/ubuntu18-dist-mnist-tf-example:v4</span><br>              <span class="hljs-comment">#imagePullPolicy: Always</span><br>              <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">tensorflow</span><br>              <span class="hljs-attr">ports:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">2222</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">tfjob-port</span><br>              <span class="hljs-attr">resources:</span><br>                <span class="hljs-attr">limits:</span><br>                  <span class="hljs-attr">volcano.sh/gpu-number:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># requesting 1 GPUs</span><br>                  <span class="hljs-attr">volcano.sh/gpu-memory:</span> <span class="hljs-number">3072</span> <span class="hljs-comment"># requesting 3072MB GPU memory</span><br>          <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Never</span><br>          <span class="hljs-attr">tolerations:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;node.kubernetes.io/disk-pressure&quot;</span><br>              <span class="hljs-attr">operator:</span> <span class="hljs-string">&quot;Exists&quot;</span>  <span class="hljs-comment"># 容忍所有 disk-pressure 污点（无需指定 value）</span><br>              <span class="hljs-attr">effect:</span> <span class="hljs-string">&quot;NoSchedule&quot;</span><br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行任务：</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.10.0/example# kubectl create -f tf-dist-mnist-example-vgpu-v2-2000times-4presentation.yaml                             <br>job.batch.volcano.sh/tensorflow-dist-mnist-vgpu-v2 created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.10.0/example# kubectl get pods -o wide<br>NAME                                     READY   STATUS        RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES<br>tensorflow-dist-mnist-cpu-ps-0           1/1     Terminating   0          3m56s   10.250.0.17   controller01   &lt;none&gt;           &lt;none&gt;<br>tensorflow-dist-mnist-cpu-worker-0       0/1     Completed     0          3m56s   10.250.1.27   ksp-registry   &lt;none&gt;           &lt;none&gt;<br>tensorflow-dist-mnist-vgpu-v2-ps-0       1/1     Running       0          23s     10.250.0.18   controller01   &lt;none&gt;           &lt;none&gt;<br>tensorflow-dist-mnist-vgpu-v2-worker-0   1/1     Running       0          23s     10.250.1.28   ksp-registry   &lt;none&gt;           &lt;none&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在pod运行的k8s节点上，都可以看到一个使用NVIDIA GPU的进程</span><br>root@controller01:/opt/172.20.0.21_backup/installPkgs/install-volcano/volcano-1.10.0/example# nvidia-smi <br>Tue Jul  1 15:28:15 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A40                     Off |   00000000:41:00.0 Off |                    0 |<br>|  0%   72C    P0             94W /  300W |     268MiB /  46068MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|    0   N/A  N/A     30877      C   python                                        260MiB |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>GPU等加速卡共享方案的分类汇总与比较</title>
    <link href="/2025/06/28/GPU%E7%AD%89%E5%8A%A0%E9%80%9F%E5%8D%A1%E5%85%B1%E4%BA%AB%E6%96%B9%E6%A1%88%E7%9A%84%E5%88%86%E7%B1%BB%E6%B1%87%E6%80%BB%E4%B8%8E%E6%AF%94%E8%BE%83/"/>
    <url>/2025/06/28/GPU%E7%AD%89%E5%8A%A0%E9%80%9F%E5%8D%A1%E5%85%B1%E4%BA%AB%E6%96%B9%E6%A1%88%E7%9A%84%E5%88%86%E7%B1%BB%E6%B1%87%E6%80%BB%E4%B8%8E%E6%AF%94%E8%BE%83/</url>
    
    <content type="html"><![CDATA[<h1id="gpu等加速卡共享方案的分类汇总与比较">〇、GPU等加速卡共享方案的分类汇总与比较</h1><h2 id="gpu共享方案分类汇总">0.1 GPU共享方案分类汇总</h2><table><thead><tr><th><strong>方案类型</strong></th><th><strong>代表方案</strong></th><th><strong>优势</strong></th><th><strong>劣势</strong></th></tr></thead><tbody><tr><td>1)框架限制</td><td>Antman等</td><td>1.针对特定场景，能提供较高的性能及用户灵活性。 2.实现相对简单</td><td>1.无法提供算力精准限制的的能力。2.框架更新频繁，可能需要不断适配，具体取决于实现方式。3.需要用户接入统一的的计算平台，多租户场景困难</td></tr><tr><td>2)CUDA劫持</td><td>HAMi、rCUDA、vCUDA(gpu-manager)、GaiaGPU、OrionvGPU、趋动科技OrionX、Bitfusion（被VMware收购，现在已经不再对外销售）</td><td>1.API开源，是非NVIDIA官方技术人员能够较容易实现的共享技术</td><td>1.CUDA库升级活跃，而当CUDA库有breakchanged升级时，劫持方案也需要不断适配，损耗损耗人力。2.难以涵盖所有场景（一般场景可以），隔离不一定严格准确。3.安全性低，用户可以绕过限制。 4.无法提供严格的算力限制能力</td></tr><tr><td>4)内核劫持</td><td>cGPU、qGPU等</td><td>1.安全性高 2.共享损耗小 3.NVIDIA Driver的更新更少，适配需要很小</td><td>1.对OS有一定依赖 2.更新换代较困难 3.研发困难，对开发要求高</td></tr><tr><td>3)CUDA聚合</td><td>Nvidia MPS</td><td>性能最好。在多任务共享场景下，如果如果任务需要的的资源被满足，任务的完成时间基本没有没有影响</td><td>1.错误互相影响，如果一个任务退出(被使用者停止或任务本身出错)，如果该任务正在kernel，那么与该任务共享IPC和UVM的任务也会一同出错退出。故无法在生产与开发训练场景下大规模规模使用。2.没有显存隔离，可以粗略限制计算资源。 3.无法定制开发</td></tr><tr><td>5)Mdev框架</td><td>Nvidia GRID</td><td>来自NVIDIA官方，可靠性与安全性高</td><td>1.不支持容器，虚拟机上使用上不够灵活。2.无法动态调整资源比例(调整规格时需要重启物理服务器)。3.有一定的共享损耗。 4.无法定制化开发</td></tr></tbody></table><h2 id="gpu共享方案比较">0.2 GPU共享方案比较</h2><p>以下11个被调研过的GPU共享方案中，只有第2个方案HAMi是开源免费、项目当前活跃、支持多种加速卡、各个基本功能已经实现。其他方案，存在各类问题比如不开源、开源项目但最近几年已经不再更新、商业公司商业收费项目、支持的加速卡不够完善等。</p><p><strong>基于上述原因，建议以HAMi这个开源项目为基础，进一步开发与封装公司GPU共享与虚拟化的解决方案。</strong></p><table><thead><tr><th>序号</th><th>共享方案</th><th>来源</th><th>明显优势</th><th>严格缺陷</th></tr></thead><tbody><tr><td>1</td><td>Antman</td><td>阿里云论文</td><td>开源；ACK下执行TF与PyTorch任务，能够提供高性能及用户灵活性</td><td>只在阿里云ACK集群中验证；生态不完善，项目5年年未更新</td></tr><tr><td>2</td><td>HAMi</td><td>第四范式、DaoCloud</td><td>有现成的开源已实现的解决方案可用，基本功能已经实现；支持主流加速卡，如HAMi支持NVIDIAGPU、寒武纪MLU、海光DCU、天数智芯GPU；此项目当前比较活跃。</td><td>但CUDA库升级活跃，当CUDA库有breakchange式升级时，劫持方案需要同步修改适配；是容器层面的虚拟化方案，不支持虚拟机层面的虚拟化；目前无法支持物理加速卡的所有特性，如HAMi项目目前仅支持计算任务、不支持视频编解码处理，暂时仅支持MIG的"none"和"mixed"模式、不支持single模式等</td></tr><tr><td>3</td><td>rCUDA</td><td>西班牙巴伦西亚理工大学开发</td><td>可以做GPU资源池化</td><td>闭源的软件，提供的是二进制文件，可以申请下载试用，但不得用于商业用途，其最新版本是2020年7月份发行的rCUDA(v20.07)，支持的CUDA版本是9.0，最近几年没有更新、官网当前也不可访问。</td></tr><tr><td>4</td><td>vCUDA(gpu-manager)</td><td>腾讯开源</td><td>有现成的开源项目gpu-manager可用；</td><td>开源项目gpu-manager已经3年没有再更新，目前也没维护，相关提问也无正式人员回复；只支持NVIDIA系统GPU卡，且只支持Kepler框架及更新构架的GPU卡；只支持CUDA11.5.1及之前的版本</td></tr><tr><td>5</td><td>GaiaGPU</td><td>腾讯开源</td><td>有现成的开源项目可用（两次尝试搭建GaiaGPU使用环境，均失败）</td><td>涉及的几个开源子项目最近3年内都未再更新；无法在短时间内限制算力效率公平；不确定是否支持GPU厂家之外厂家的加速卡</td></tr><tr><td>6</td><td>Orion vGPU</td><td>趋动科技开源</td><td>有现成的开源项目https://github.com/virtaitech/orion</td><td>github仓库代码已经将近5年未更新与维护；不确定是否支持NVIDIA厂家之外的加速卡；生态不完善，网上几乎找不到相关文章</td></tr><tr><td>7</td><td>趋动科技OrionX</td><td>趋动科技研发</td><td>上市商业公司支持；GPU资源池化；做到将GPU应用与GPU/CPU资源分离部署，适配虚拟机与容器云平台两种主流场景</td><td>收费且售价昂贵</td></tr><tr><td>8</td><td>cGPU</td><td>阿里云研发</td><td>不仅适配标准的Docker和Containerd工作方式，而且还无锋兼容Kubemnetes工作方式，物理GPU的资源任意划分;支持热升级、支持多卡划分功能</td><td>不开源、收费，且cGPU目前只能在阿里云ACK集群中使用。</td></tr><tr><td>9</td><td>qGPU</td><td>腾讯云研发</td><td>支持显存和算力的严格隔离；支持业界唯一在离线混部能力，GPU利用率压榨到极致</td><td>腾讯付费产品，只能在腾讯容器云中使用。</td></tr><tr><td>10</td><td>Nvidia MPS</td><td>Nvidia官方研发</td><td>可以做算力隔离与限制计算资源；性能是所有GPU共享方案早最好的。</td><td>不开源；只能在NVIDIA GPU上使用；存在错误传播缺陷</td></tr><tr><td>11</td><td>Nvidia GRID</td><td>Nvidia官方研发</td><td>NVIDIA官方研发，可靠性高。支持的NVIDIAGPU型号多而全；已有特性能够满足科研、生产、模型训练与推理绝大部分场景。</td><td>收费；只支持NVIDIA GPU</td></tr></tbody></table><h1 id="框架限制">1. 框架限制</h1><h2 id="antman">1.1 Antman</h2><ul><li><p>论文：</p><ul><li>https://www.usenix.org/conference/osdi20/presentation/xiao</li></ul></li><li><p>论文相关源码github地址：</p><ul><li>https://github.com/alibaba/GPU-scheduler-for-deep-learning</li></ul></li><li><p>相关文章：</p><ul><li><p>https://diandiangu.github.io/2020/12/02/AntMan-0/</p></li><li><p>https://zhuanlan.zhihu.com/p/451238714</p></li></ul></li></ul><h3 id="概述">概述</h3><p>Antman是来自阿里PAI的框架层GPU共享方案，未虚拟。Antman没有限制具体资源量，而是针对特定场景（论文中实验只是试验了TF与PyTorch资源密集型任务）的方案。它针对高低优先级任务训练场景，保障高优先级任务获得计算资源、兼顾低优先级获得计算资源，AntMan动态伸缩机制扩展GPU内存上限、提升了多个训练任务执行时的速度。属于时间复用。</p><p>AntMan的核心是一个云原生的Kubernetes调度器，它与KubeDL协作，负责协调TFJobs的执行。此外，项目采用了KubernetesScheduler Plugins，以优化对深度学习GPU pod的调度，同时依赖NVIDIAk8s-device-plugin来报告GPU资源给Kubernetes集群。</p><p>项目及技术应用场景：AntMan特别适用于大型企业和研究机构，这些机构可能拥有大规模GPU集群，且需要快速响应训练任务的需求变化。</p><h3 id="优缺点">优缺点</h3><ul><li><strong>优点：</strong><ul><li><p>针对特定场景（经过论文实验验证过的是对于资源密集型的任务，AntMan能够保证优先级高的作业得到足够的资源。</p></li><li><p>对于突发的、短暂的工作负载，它可以有效利用空闲资源进行机会性调度，提高硬件利用率。</p></li><li><p>在模型迭代和超参数调优过程中，动态的资源分配可以大大缩短实验周期。</p></li><li><p>ACK下执行TF与PyTorch任务，能够提供高性能及用户灵活性。</p></li></ul></li><li><strong>缺点：</strong><ul><li><p>只在阿里云ACK集群中验证（基于kubernetes1.18），虽然作者公布了论文中使用到的源码，但自2020年公布后的4年来，github项目并不活跃，社区参与度与活跃度极低</p></li><li><p>对用户影响大，需要用户统一的计算平台（阿里云ACK），多租户场景困难</p></li><li><p>AntMan实现与TF与PyTorch开源计算框架等minibatch任务耦合度较高，而这两个框架更新频繁，此时要求二次开发人员不断适配，增加了二次开发成本与难度</p></li></ul></li></ul><h1 id="cuda劫持">2. CUDA劫持</h1><p>目前已实现CUDA劫持的解决方案有：HAMi、rCUDA、vCUDA、GaiaGPU、OrionvGPU等</p><h2 id="hami">2.1 HAMi</h2><p>异构AI计算虚拟化中间件开源项目 <strong>HAMi</strong> 最初由<strong>第四范式（4Paradigm）</strong> 与 <strong>DaoCloud 道客</strong>联合开源。</p><p>官方网站：https://project-hami.io/zh/docs/</p><p>项目源码在github上的地址：https://github.com/Project-HAMi/HAMi</p><figure><img src="https://s2.loli.net/2025/06/16/ObcYChVGdqirUXQ.png"alt="image-20250616225641329" /><figcaption aria-hidden="true">image-20250616225641329</figcaption></figure><h3 id="概述-1">概述</h3><p>CUDA劫持，是目前业界较普遍采用的第三方研发方案，属于时间复用。是通过劫持CUDA-Runtime(libcudart.so)和CUDA-Driver(libcuda.so)之间的api调用来运行的。代表性实现有腾讯开源的GPUManager、第四范式与道客公司开源的k8s-vgpu-scheduler(现已变更为HAMi )。</p><p>腾讯开源的GPUManager还没有用过，从网上文章来看，实现了一些基本功能，但此项目最近3年没有再更新，不够活跃。</p><p>第四范式与道客公司开源的HAMi，已经安装并试用过。其在实现了GPU虚拟化基础上。还包含了如下特性：允许通过指定显存来申请算力设备、算力资源的硬隔离、允许通过指定算力使用比例来申请算力设备、对已有程序零改动、能够按GPU型号或uuid指定物理GPU白名单与黑名单、能够在k8s节点与物理GPU两个维度上指定调度策略、还能支持几个国产加速卡的虚拟化。该项目比较活跃，第四范式及一些兴趣爱好者最近几年一直在参与迭代更新，大概每两个月更新一个版本。</p><h3 id="优缺点-1">优缺点</h3><p>以下是自己总结的一些优缺点，可能不够完善。更详细的内容可以参考其官网（我当前总结时官网还不够完善，没什么内容）。</p><ul><li><strong>优点：</strong><ul><li><p>有现成的开源已实现的解决方案可用</p></li><li><p>对用户程序无侵入，用户无感</p></li><li><p>以上两种实现方案支持碎片和整卡调度，提高GPU资源利用率</p></li><li><p>以上两种实现方案支持同一张卡上容器间GPU和显存的使用隔离</p></li><li><p>支持主流加速卡。如HAMi支持NVIDIAGPU、寒武纪MLU、海光DCU、天数智芯GPU，且此项目当前比较活跃。</p></li></ul></li><li><strong>缺点：</strong><ul><li><p>驱动和加速库的兼容性依赖于厂商。因为CUDA库是公开的，所以这种技术较容易实现，但CUDA库升级活跃，当CUDA库有breakchange式升级时，劫持方案需要同步修改适配。</p></li><li><p>是容器层面的虚拟化方案，不支持虚拟机层面的虚拟化。</p></li><li><p>网上有评价说“安全性不够，用户可以绕过限制”，但一旦将vGPU分配到容器中，在内网环境中自己使用，安全性问题一般不需过多关注。</p></li><li><p>难以涵盖所有场景，目前无法支持物理加速卡的所有特性，如HAMi项目目前仅支持计算任务、不支持视频编解码处理，暂时仅支持MIG的"none"和"mixed"模式、不支持single模式等等。</p></li></ul></li></ul><h2 id="rcuda">2.2 rCUDA</h2><h3 id="概述-2">概述</h3><p>是西班牙Universitat Politecnica deValencia（西班牙巴伦西亚理工大学）并行架构组的一个开发项目，提供了一套远程GPU虚拟化解决方案，支持以透明的方式并发远程使用支持CUDA的设备。不仅可以部署在集群中，允许单个非MPI应用程序使用集群中的所有GPU，从而提高GPU利用率并降低总体成本，而且还可以在虚拟机中运行应用程序访问安装在远程物理机中的GPU。这是一个闭源的软件，提供的是二进制文件，可以申请下载试用，但不得用于商业用途，其最新版本是2020年7月份发行的rCUDA(v20.07)，支持的CUDA版本是9.0，最近几年没有更新、官网当前也不可访问。</p><p>​rCUDA将创建一个高性能计算集群，集群中有些服务器上安装有GPU，当那些本地没有GPU资源的服务器上尝试执行需要GPU资源的应用程序时，通过将数据与代码在本地服务器内存与远程GPU显存中传输，执行内核的远程调用，所以rCUDA是一个client-server构架式系统。一方面，将针对高级CUDA运行api的包装器封装成库，在客户端进行使用；另一方面，在服务端启用网络监听服务以在特定的tcp端口监听与响应应用请求。位于集群中不同节点的多个GPU应用程序可以并发执行、充分利用安装在集群中的多个服务器上多个GPU。通过这种时分复用GPU的方式，它能够为每个远程GPU应用执行请求创建不同的服务器进程，分别执行并返回结果。</p><p>很明显，rCUDA和趋动科技的OrionX属于同一类。是跨进程、跨节点的思路，是真正做虚拟化，可以对GPU设备进行模拟，可以把一个物理GPU模拟成多个虚拟GPU，把多个跨物理节点的物理GPU进行聚合。在虚拟GPU的过程中可以对通讯、任务、多任务的行为进行优化。共享仅仅是其中一个容易想到的case。</p><h3 id="优缺点-2">优缺点</h3><ul><li><strong>优点：</strong><ul><li><p>是跨进程、跨节点的思路，是真正做虚拟化，可以对GPU设备进行模拟，可以把一个物理GPU模拟成多个虚拟GPU，把多个跨物理节点的物理GPU进行聚合。</p></li><li><p>可以做GPU资源池化</p></li></ul></li><li><strong>缺点：</strong><ul><li><p>是一个闭源的软件。看网上的文章描述“提供的是二进制文件，可以申请下载试用，但不得用于商业用途。（因为其官网“<ahref="http://www.rcuda.net">www.rcuda.net</a>”当前无法访问，故无法确认）”</p></li><li><p>2020年后，没有再更新。</p></li><li><p>西班牙巴伦西亚理工大学的官网https://www.upv.es/也没有找到这个项目的信息，网上的信息也很少，使用度不够，生态不够好</p></li><li><p>其支持的最新CUDA版本是9.0</p></li></ul></li></ul><h3 id="其他信息">其他信息</h3><ul><li><p>维基百科介绍：https://en.wikipedia.org/wiki/RCUDA，网页的最后有几篇关于或利用rCUDA的论文</p></li><li><p>维基百科上查询到此项目官网是“<ahref="http://www.rcuda.net">www.rcuda.net</a>”，但此网站已经被篡改成在线赌博网站，现真正可用网站不知是什么</p></li><li><p>网上找到介绍到rCUDA的几篇文章</p><ul><li>https://blog.csdn.net/weixin_42082868/article/details/129932719、</li><li>https://juniorprincewang.github.io/2017/11/01/rCUDA/</li><li>https://www.ai-sprint-project.eu/node/223</li></ul></li></ul><h2 id="vcudagpu-manager">2.3 vCUDA(gpu-manager)</h2><p>https://github.com/tkestack/vcuda-controller</p><p>https://github.com/tkestack/gpu-manager</p><h3 id="概述-3">概述</h3><p>GPUManager是腾讯自研的容器层GPU虚拟化方案，通过替换 CUDA 库实现 API层面的转发，然后通过修改显存分配，任务提交等 API 函数来达到多个容器共享GPU 的目的。除兼容Nvidia官方插件的GPU资源管理功能外，还增加碎片资源调度、GPU调度拓扑优化、GPU资源Quota等功能，在容器层面实现了GPU资源的化整为零，而在原理上仅使用了wraplibrary和linux动态库链接技术，就实现了GPU 算力和显存的上限隔离。</p><p>在工程设计上，GPUManager方案包括三个部分，cuda封装库vcuda、k8s deviceplugin 插件gpu-manager-daemonset和k8s调度插件gpu-quota-admission。</p><p>vcuda库是一个对nvidia-ml和libcuda库的封装库，通过劫持容器内用户程序的cuda调用限制当前容器内进程对GPU和显存的使用</p><p>gpu-manager-daemonset是标准的k8s deviceplugin，实现了GPU拓扑感知、设备和驱动映射等功能。GPUManager支持共享和独占两种模式，当负载里tencent.com/vcuda-corerequest值在0~100情况下，采用共享模式调度，优先将碎片资源集中到一张卡上，当负载里的tencent.com/vcuda-corerequest为100的倍数时，采用独占模式调度，gpu-manager-daemonset会根据GPU拓扑结构生成GPU卡的拓扑树，选择最优的结构（距离最短的叶子节点）进行调度分配。需要注意的是GPUManager仅支持0~100和100的整数倍的GPU需求调度，无法支持150，220类的非100整数倍的GPU需求调度。每张GPU 卡一共有100个单位的资源，仅支持0 -1的小数卡，以及1的倍数的整数卡设置。显存资源是以256MiB为最小的一个单位的分配显存。</p><p>gpu-quota-admission是一个k8s Schedulerextender，实现了Scheduler的predicates接口，kube-scheduler在调度tencent.com/vcuda-core资源请求的Pod时，predicates阶段会调用gpu-quota-admission的predicates接口对节点进行过滤和绑定，同时gpu-quota-admission提供了GPU资源池调度功能，解决不同类型的GPU在namespace下的配额问题。</p><p>GPUManager整体方案如下：</p><figure><img src="https://s2.loli.net/2025/06/28/eCRwGgBJjUZtdrW.png"alt="image-20250628094406128" /><figcaption aria-hidden="true">image-20250628094406128</figcaption></figure><h3 id="优缺点-3">优缺点</h3><ul><li><strong>优点：</strong><ul><li>项目开源</li><li>实现了GPU拓扑感知、设备和驱动映射等功能。</li><li>支持共享和独占两种模式</li></ul></li><li><strong>缺点：</strong><ul><li><p>开源项目gpu-manager已经3年没有再更新，目前也没维护，相关提问也无正式人员回复</p></li><li><p>只支持NVIDIA系统GPU卡，且只支持Kepler框架及更新构架的GPU卡</p></li><li><p>只支持CUDA11.5.1及之前的版本</p></li><li><p>需要对静态链接的程序重新编译，同时在 CUDA库升级的时候也需要进行修改来适配新版本</p></li></ul></li></ul><h2 id="gaiagpu">2.4 GaiaGPU</h2><h3 id="概述-4">概述</h3><p>​ GaiaGPU起源于一篇北京大学与腾讯公司联合研究发表的论文“GaiaGPU:Sharing GPUs in ContainerClouds”，它提供了一整套GPU共享解决方案，是完全开源的CUDA劫持类型GPU共享方案。</p><p>通过劫持CUDA的显存申请和释放请求，为每个容器管理它的显存使用量，进而实现了显存隔离。在算力隔离方面，使用者可以指定容器的GPU利用率。GaiaGPU中的vGPUManager会监控利用率，并在超出限制利用率时做一些处理。此处可以支持硬隔离和软隔离。两者的不同点是，如果有资源空闲，软隔离允许任务超过设置，而硬隔离不允许。由于使用的是监控调节的方案，因此无法在短时间内限制算力，只能保证长时间范围内的效率公平，所以不适合推理等任务时间极短的场景。</p><p>GaiaGPU的构架图如下。</p><p><img src="https://s2.loli.net/2025/06/28/ImYFMGow132Ezev.png" alt="image-20250628094936799" style="zoom:67%;" /></p><p>​ 自己两次尝试搭建GaiaGPU使用环境，均失败。</p><h3 id="优缺点-4">优缺点</h3><ul><li><strong>优点：</strong><ul><li><p>开源项目。看网上相关文章介绍，是由腾讯tkestack下几个几个开源项目vcuda-controller、gpu-admission、gpu-manager合并而成的。</p></li><li><p>支持算力与显存隔离。</p></li><li><p>能保证长时间范围内的算力调度公平性，但短时间内的不能。</p></li></ul></li><li><strong>缺点：</strong><ul><li><p>涉及的几个开源项目最近3年内都未再更新。</p></li><li><p>由于使用的是监控调节的方案，因此无法在短时间内限制算力，只能保证长时间的效率公平，所以不适合推理等任务时间极短的场景。</p></li><li><p>不确定是否支持GPU厂家之外厂家的加速卡。</p></li></ul></li></ul><h2 id="orion-vgpu">2.5 Orion vGPU</h2><p>Github仓库地址：https://github.com/virtaitech/orion</p><h3 id="概述-5">概述</h3><p>Orion vGPU软件由VirtAI Tech趋动科技开发，是一个为云或者数据中心内的AI应用、CUDA应用提供GPU资源池化、GPU虚拟化能力的系统软件。通过高效的通讯机制连接应用与GPU资源池，使得AI应用、CUDA应用可以不受GPU物理位置的限制，部署在云或者数据中心内任何一个物理机、Container或者VM内。</p><p>网上对此开源项目的使用与二次开发相关介绍很少，几乎没有。猜测商用动机都是考虑趋动科技的商用版本解决方案OrionX去了。</p><h3 id="优缺点-5">优缺点</h3><ul><li><p><strong>优点：</strong></p><ul><li><p>开源项目</p></li><li><p>兼容已有的AI应用和CUDA应用，无需修改已有应用程序。</p></li><li><p>细粒度的GPU虚拟化支持。</p></li><li><p>应用可使用远程物理节点上GPU，应用部署无需受GPU服务器位置、资源数量的约束。</p></li><li><p>vGPU资源动态分配动态释放。无需重启Container/VM/物理机。</p></li><li><p>通过对GPU资源池的管理和优化，提高整个云和数据中心GPU的利用率和吞吐率。</p></li><li><p>通过统一管理GPU，降低GPU的管理复杂度和成本。</p></li><li><p>支持 TF 2.0, PyTorch 1.3, NVCaffe 深度学习框架。</p></li><li><p>从官网的介绍来看，可以支持Container/VM/物理机 多个场景。</p></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>github仓库代码最后一次更新是在2019年底，已经将近5年未更新</p></li><li><p>github的提问，无官方人员回复</p></li><li><p>不确定是否支持NVIDIA厂家之外的加速卡</p></li><li><p>未试用过，对显存、计算资源的切分粒度与隔离度暂不确定</p></li></ul></li></ul><h2 id="趋动科技orionx">2.6 趋动科技OrionX</h2><h3 id="概述-6">概述</h3><p>是GPU overIP/IB技术的实践者和领导者，实现了AI算力资源池化。通过增加软件层，将GPU资源虚拟化并通过网络进行管理，视角是网络联通的整个GPU资源池，突破了以往单节点单卡或多卡视角的局限，实现了资源的动态分配和优化利用。用户可以根据实际需求，灵活地调整GPU资源比如增加或减少物理GPU卡、灵活解决模型训练与高性能任务执行中的GPU/CPU配比与多机多卡问题等，提供了GPU资源管理调度策略，做到了跨节点调用GPU资源，确保资源始终得到高效利用、将GPU应用与物理GPU解耦合。GPU全局资源池性能监控，降低了成本和运维复杂度。</p><figure><img src="https://s2.loli.net/2025/06/28/TN59np4yOqLAYMR.png"alt="image-20250628143342359" /><figcaption aria-hidden="true">image-20250628143342359</figcaption></figure><h3 id="优缺点-6">优缺点</h3><ul><li><p><strong>优点：</strong></p><p>​突破了以往GPU共享方案在单节点上共享GPU资源的局限，通过IP/IB网络存储技术真正将GPU资源池化，实现了按需扩容与几乎无损耗式使用GPU资源，做到将GPU应用与GPU/CPU资源分离部署，适配虚拟机与容器云平台两种主流场景，能够为用户提供企业级稳定便捷服务。具体优点如下。</p><ul><li><p>资源池化：OrionX帮助客户构建数据中心级AI算力资源池，使用户应用无需修改就能透明地共享和使用数据中心内任何服务器之上的AI算力。</p></li><li><p>动态资源分配：OrionX支持将GPU切片为任意大小的vGPU，允许多AI负载并行运行，提高物理GPU利用率。</p></li><li><p>高性能：OrionX本地vGPU性能损耗几乎为零，远程vGPU性能损耗小于2%，确保了计算任务的高效执行。</p></li><li><p>弹性扩展：支持从单台到整个数据中心GPU服务器纳管，通过RDMA（IB/RoCE）或TCP/IP网络连接各个节点，实现资源池弹性扩展。</p></li><li><p>灵活调度：支持AI负载与GPU资源分离部署，CPU与GPU资源解耦合，有助于最大化数据中心基础设施价值。</p></li><li><p>全局管理：提供GPU资源管理调度策略，GPU全局资源池性能监控，为运维人员提供直观的资源利用率等信息。</p></li><li><p>对AI开发者友好：一键解决AI开发者面临的训练模型中GPU/CPU配比和多机多卡模型拆分问题，节省大量宝贵时间。</p></li><li><p>不仅支持虚拟机场景，还支持与容器云平台的集成，进一步简化了AI应用的部署和管理，降低了运维复杂度。</p></li><li><p>支持多款厂家的加速卡，包括NVIDIA、寒武纪、华为昇腾、海光</p></li><li><p>其他优特点可以参考其官网https://virtaitech.com/product/index查看或试用确认</p></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>需要购买趋动科技的解决方案，且价格昂贵。</p></li><li><p>无法进行定制开发。</p></li></ul></li></ul><h1 id="内核劫持">3. 内核劫持</h1><h2 id="cgpu">3.1 cGPU</h2><p>阿里云官网cGPU文档：https://www.alibabacloud.com/help/zh/egs/what-is-cgpu</p><h3 id="概述-7">概述</h3><p>内核劫持，因为NvidiaDriver的更新更小，所以适配需求很小，但是研发比较困难（由于Nvidia的闭源性，在内核态做显存资源和算力资源的隔离，可以在一定程度上防止用户篡改，技术难度较高）。GPU共享方案目前来看还是各大厂商的核心技术能力，更是有趋动科技这样专门做GPU集群管理的公司。内核劫持的技术方案没有哪家厂商开源其代码，据相关大企业发布的产品来看，目前阿里云、百度云与腾讯云公有云上已经实现部署。</p><p>比如阿里云的cGPU就是内核劫持实现方案。cGPU实现了一个内核模块cgpu_km，可以将一个物理GPU虚拟成多个虚拟GPU设备。容器使用定制的容器运行时挂载虚拟GPU设备。当用户的程序请求下发到内核模块cgpu_km时，模块通过修改请求及回复来限制GPU显存资源。同时cgpu_km通过限制每个容器可下发到kernel的时间片来实现算力资源隔离与简单的算力调度。阿里云异构计算cGPU 在做到算力调度与显存隔离的同时，也做到了无需替换 CUDA静态库或动态库；无需重新编译 CUDA 应用；CUDA，cuDNN等版本随时升级无需适配等特性。目前只能在阿里云上使用。</p><p>这个实现方案的核心在于cgpu_km这个内核模块，但并未开源。cGPU架构图如下。</p><p><img src="https://s2.loli.net/2025/06/28/HLzWCveQ5qm7tg9.png" alt="image-20250628143749376" style="zoom: 33%;" /></p><h3 id="优缺点-7">优缺点</h3><ul><li><p><strong>优点：</strong></p><ul><li><p>兼容性好：不仅适配标准的Docker和Containerd工作方式，而且还无缝兼容Kubernetes工作方式。</p></li><li><p>操作简单：无需重新编译AI应用，运行时无需替换CUDA库。</p></li><li><p>资源灵活划分：物理GPU的资源任意划分。例如GPU显存动态划分，支持M级划分、GPU利用率动态划分，算力支持最小2%粒度的划分。</p></li><li><p>GPU实例规格无限制：适用于GPU裸金属实例，虚拟化实例，vGPU实例等各种GPU实例。</p></li><li><p>应用场景丰富：支持在离线混部业务、支持CUDAAI和渲染应用场景。</p></li><li><p>功能强大：具备高优先级的抢占功能和较高的可运维能力，支持热升级、支持多卡划分功能。</p></li><li><p>cGPU技术特性</p><ul><li><p>支持容器调度GPU：将GPU资源做更细颗粒度的切分，提高资源利用率，提效降本</p></li><li><p>完整隔离：同时支持GPU的显存与算力隔离，避免不同进程之间的应用相互争抢资源、相互影响</p></li><li><p>更加简单：AI应用无需重新编译，无需构建新的容器镜像进行cuda库替换，对客户环境无侵入</p></li></ul></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>不开源且cGPU目前只能在阿里云ACK集群中使用。</p></li><li><p>若根据这些大企业提供的产品思路来研发时，对于小型企业不可行，技术实现难度大，成本太高。</p></li></ul></li></ul><h2 id="qgpu">3.2 qGPU</h2><p>参考文章：https://www.tencentcloud.com/zh/document/product/457/42973</p><h3 id="概述-8">概述</h3><p>腾讯云 Tencent Kubernetes Engine qGPU 服务（以下简称 TKEqGPU）是腾讯云针对 原生节点 推出的 GPU 容器虚拟化产品，支持多个容器共享GPU卡并支持容器间算力和显存精细隔离，同时提供业界唯一的在离线混部能力，在精细切分GPU 资源的基础上，在最大程度保证业务稳定的前提下，提高 GPU使用率，帮助客户大幅度节约 GPU 资源成本。qGPU 依托 TKE 对外开源的Elastic GPU 框架，可实现对 GPU 算力与显存的细粒度调度，并支持多容器共享GPU 与多容器跨 GPU 资源分配。同时依赖底层强大的 qGPU 隔离技术，可做到GPU 显存和算力的强隔离，在通过共享使用 GPU的同时，尽量保证业务性能与资源不受干扰。</p><p>qGPU 即QoSGPU，它是目前业界唯一真正实现了故障隔离、显存隔离、算力隔离、且不入侵生态的容器GPU 共享的技术。qGPU 并不是开源的。</p><p>qGPU的方案框架图如下。</p><p><img src="https://s2.loli.net/2025/06/28/QkgNybWBawSOlE2.png" alt="image-20250628144128934" style="zoom: 67%;" /></p><h3 id="优缺点-8">优缺点</h3><ul><li><p><strong>优点：</strong></p><ul><li><p>大厂开发与运营的核心产品，付费产品有保障保障，支持GPU虚拟化使用者关注的基本功能，并提供了一些亮点功能。具体如下。</p></li><li><p>灵活性：精细配置 GPU 算力占比和显存大小。</p></li><li><p>强隔离：支持显存和算力的严格隔离。</p></li><li><p>在离线：支持业界唯一在离线混部能力，GPU利用率压榨到极致。</p></li><li><p>覆盖度：支持主流架构 Volta（如 V100 等）、Turing（如 T4等）、Ampere（如 A100、A10 等）。</p></li><li><p>云原生：支持标准 Kubernetes 和 NVIDIA Docker。</p></li><li><p>兼容性：业务不重编、CUDA 库不替换、业务无感。</p></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>腾讯付费产品，并不开源</p></li><li><p>这类大厂产品，一般无法进行定制开发。</p></li><li><p>不确定是否支持除NVIDIA外的加速卡。</p></li></ul></li></ul><h1 id="cuda聚合">4. CUDA聚合</h1><h2 id="nvidia-mps">4.1 Nvidia MPS</h2><h3 id="概述-9">概述</h3><p>​MPS是Nvidia官方最早提供的一种GPU任务共享方案，属于空间复用。它通过将多个进程的CUDA上下文合并到一个CUDA上下文中，所有任务共同使用显存，省去上下文切换的开销的同时也在合并后的上下文中实现了算力隔离。但多个进程的CUDA上下文合并成一个后会带来故障传播这一致命缺陷，导致其无法在生产环境中被使用。</p><h3 id="优缺点-9">优缺点</h3><ul><li><p><strong>优点：</strong></p><ul><li><p>性能是所有GPU共享方案早最好的。当多个任务使用的资源可被同时满足时，每个任务的任务完成时间基本没有影响。</p></li><li><p>可以做算力隔离与限制计算资源。</p></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>不开源，所以无法在NVIDIA现有成果上进行定制与二次开发。</p></li><li><p>只能在NVIDIA GPU上使用，无法在Intel GPU与国产GPU卡上使用</p></li><li><p>不能做显存隔离</p></li><li><p>存在错误传播缺陷：一个任务退出时，如果此任务正在执行kernel，那么与该任务共离IPC与UVM的任务也会一同出错退出。因此无法在生产环境中使用。</p></li></ul></li></ul><h1 id="mdev框架">5. Mdev框架</h1><h2 id="nvidia-grid">5.1 Nvidia GRID</h2><h3 id="概述-10">概述</h3><p>​来自NVIDIA官方，属于时间复用的GPU共享产品，使用此产品需要再单独购买license。是虚拟机场景而非容器场景下的解决方案，它通过vfio-mdev为每个虚拟机提供一个vf与mdev，为它们提供了一个隔离性非常高的的硬件环境，能够做显存资源隔离（将一个物理GPU虚拟成多个vGPU，每个vGPU分配一个同样大小的显存。能够虚拟的最大vGPU个数跟license类型有关），算力按照一定策略进行隔离与分配（每个vGPU分到的算力资源跟配置的调度策略与vGPU上执行的任务有关。调度策略配置在安装有物理GPU的物理服务器上，变更调度策略需要重启物理服务器才能生效）。其共享模块在Nvidiadriver及之下。</p><p>​ 这个解决方案是被市场广泛接受的、由NVIDIA官方推出的GPU共享方案。</p><h3 id="优缺点-10">优缺点</h3><ul><li><p><strong>优点：</strong></p><ul><li><p>由NVIDIA官方研发，可靠性高。支持的NVIDIAGPU型号多而全，且还在不断迭代更新。</p></li><li><p>已有特性能够满足科研、生产、模型训练与推理绝大部分场景。</p></li><li><p>安全性高。</p></li></ul></li><li><p><strong>缺点：</strong></p><ul><li><p>因为是NVIDIA的产品，只支持NVIDIA GPU。</p></li><li><p>在购买物理NVIDIA GPU之外，还需要另外购买使用NVIDIAvGPU的license且费用不便宜。</p></li><li><p>不支持直接虚拟到容器中，每个虚拟机中只能有一个vGPU。</p></li><li><p>无法动态调整vGPU规格。调整就意味着需要重新购买license。</p></li><li><p>有一定比例的性能损耗。</p></li><li><p>只能使用NVIDIAvGPU解决方案现有功能，无法继续进行定制化开发。</p></li></ul></li></ul><hr /><h1 id="参考文章">6. 参考文章</h1><ul><li><p>Nvidia GPU池化-远程GPU：https://blog.csdn.net/weixin_42082868/article/details/129932719</p></li><li><p>gpu-manager安装及测试介绍性文章：</p><ul><li>https://blog.csdn.net/weixin_46519031/article/details/132212258</li><li>https://cloud.tencent.com/developer/article/1685122</li></ul></li><li><p>HAMi项目地址：https://github.com/Project-HAMi/HAMi/tree/master</p></li><li><p>GPUManager项目地址：https://github.com/tkestack/gpu-manager/tree/master</p></li><li><p>rCUDA维基百科介绍：https://en.wikipedia.org/wiki/RCUDA，网页的最后有几篇关于或利用rCUDA的论文</p></li><li><p>网上找到介绍到rCUDA的几篇文章：</p><ul><li><p>https://blog.csdn.net/weixin_42082868/article/details/129932719、</p></li><li><p>https://juniorprincewang.github.io/2017/11/01/rCUDA/</p></li><li><p>https://www.ai-sprint-project.eu/node/223</p></li></ul></li><li><p>腾讯vCUDA（gpu-manager）部署：</p><ul><li>https://blog.csdn.net/o0haidee0o/article/details/119407372（基本操作完成，但describe节点时未看到tencent.com/...相关资源）</li><li>https://www.cnblogs.com/deny/p/16305744.html#top（还没尝试使用）</li><li>https://www.jf3q.com/article/detail/8437</li></ul></li><li><p>k8s集群GPU调研报告：https://www.flftuu.com/2020/11/14/k8s集群GPU调研报告/</p></li><li><p>GaiaGPU: Sharing GPUs in Container Clouds：https://ieeexplore.ieee.org/abstract/document/8672318</p></li><li><p>GaiaGPU: 在容器云中共享GPU：https://wangjunjian.com/kubernetes/2022/01/28/gaiagpu-sharing-gpus-in-container-clouds.html</p></li><li><p>趋动科技官网：https://virtaitech.com/product/index</p></li><li><p>阿里云cGPU容器技术详解：https://aliyunfuwuqi.com/gpu/3481/</p></li><li><p>阿里云官网cgpu介绍文档：https://www.alibabacloud.com/help/zh/egs/what-is-cgpu</p></li><li><p>找到一个名为cgpu的github项目仓库https://github.com/lvmxh/cgpu（但在“DellR740 XD物理服务器“ + “Ubuntu20.04LTS-amd64操作系统“上无法安装使用）</p></li><li><p>qGPU 概述：https://www.tencentcloud.com/zh/document/product/457/42973</p></li><li><p>盘点来自工业界的GPU共享方案：</p><ul><li>https://zhuanlan.zhihu.com/p/398369404</li><li>https://my.oschina.net/u/4273516/blog/10120396</li><li>https://blog.wangqi.love/articles/docker/gpu%E5%85%B1%E4%BA%AB%E8%B0%83%E7%A0%94%E6%95%B4%E7%90%86.html</li></ul></li><li><p>GPU虚拟化，算力隔离，和qGPU：https://zhuanlan.zhihu.com/p/377073683</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>算力虚拟化中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算力虚拟化中间件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>coze学习04-工作流</title>
    <link href="/2025/06/25/coze%E5%AD%A6%E4%B9%A004-%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <url>/2025/06/25/coze%E5%AD%A6%E4%B9%A004-%E5%B7%A5%E4%BD%9C%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h1 id="一coze工作流介绍">一、coze工作流介绍</h1><p>Coze 工作流是字节跳动推出的 AI 开发平台 <strong>Coze（扣子）</strong>中的核心功能之一，它通过 <strong>可视化、模块化</strong>的方式，帮助用户构建复杂的多步骤任务流程，实现自动化处理与智能化协作。</p><p>Coze 工作流是一系列可执行指令的集合，通过连接<strong>大模型、插件、工具等节点</strong>，形成自动化流水线，完成特定任务（如数据采集、分析、生成报告等）。类似于工厂流水线，每个节点代表一个“工位”，数据按顺序流动并加工。</p><h1 id="二工作流的使用">二、工作流的使用</h1><h2 id="工作流的创建">2.1 工作流的创建</h2><p>coze中的工作流使用跟阿里云百炼平台很像，这里创建一个智能旅游助手。只有3个节点：</p><figure><img src="https://s2.loli.net/2025/06/25/aY2DMbclIXtO76d.png"alt="image-20250625220907419" /><figcaption aria-hidden="true">image-20250625220907419</figcaption></figure><p>系统提示词如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#角色: 你是一个智能旅游助手，能够为用户推荐旅游景点与安排行程</span><br><span class="hljs-section">#技能：</span><br><span class="hljs-bullet">-</span> 擅长3-7天的旅游规划<br><span class="hljs-section">#要求：</span><br><span class="hljs-bullet">-</span> 能够根据用户提供信息如城市名称、日期、偏好信息等，查询与推荐指定时间范围内指定的旅游景点<br><span class="hljs-bullet">-</span> 对查找到的多个旅游景点进行合理的行程安排<br><span class="hljs-bullet">-</span> 安排行程时需要考虑天气因素<br><span class="hljs-bullet">-</span> 能够为用户安排性价比高的酒店、餐厅或当地特色美食<br><span class="hljs-section">#约束：</span><br><span class="hljs-bullet">-</span> 查找旅游景点时不要考虑网红打卡点<br><span class="hljs-bullet">-</span> 尽量避开需要长时间排队的景点，如果景点确实值得一去，请尽量安排排队时间短的游玩时间<br></code></pre></td></tr></table></figure><p>用户提示词如下：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">我在</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">date_start</span>&#125;&#125;</span><span class="language-xml">到达</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">city</span>&#125;&#125;</span><span class="language-xml">的机场，我们一共有3个人，两大一小，还携带较多的行李，所以需要为我先安排性价比高的酒店。而且我们决定在长沙及周边50公里范围游玩5天，请为我们在查询实时天气的情况下推荐旅游景点并安排行程。</span><br></code></pre></td></tr></table></figure><p>最终的运行效果如下：</p><p><img src="https://s2.loli.net/2025/06/25/IbZwUx61DPECjBv.png" alt="image-20250625220818809" style="zoom:67%;" /></p><p>当试运行工作流成功后，就可以将其发布，然后后续可以智能体调用此工作流。</p><h2 id="其他操作">其他操作</h2><p>如删除工作流、添加节点、编辑节点等，玩过百炼平台的话还是很容易上手的。不再累述</p><h1 id="三聊天机器人案例上">三、聊天机器人案例（上）</h1><figure><img src="https://s2.loli.net/2025/06/25/Mpyj8fEGtQFKC9D.png"alt="image-20250625231506326" /><figcaption aria-hidden="true">image-20250625231506326</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/25/Rp1ocvQqIr4Uk6d.png"alt="image-20250625231519913" /><figcaption aria-hidden="true">image-20250625231519913</figcaption></figure><p>比较内容多，还没有学习完成，暂时到“循环节点”处，明天继续</p>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>coze学习03-资源库</title>
    <link href="/2025/06/22/coze%E5%AD%A6%E4%B9%A003-%E8%B5%84%E6%BA%90%E5%BA%93/"/>
    <url>/2025/06/22/coze%E5%AD%A6%E4%B9%A003-%E8%B5%84%E6%BA%90%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="一插件">一、插件</h1><p>coze中的插件是一个工具集，一个插件内可以包含一个或多个工具（API）。</p><p><img src="https://s2.loli.net/2025/06/22/DHn1SyM2BqP4rgs.png" alt="image-20250622222635024" style="zoom:67%;" /></p><p><img src="https://s2.loli.net/2025/06/22/eZB1Qk4pvJ3PEFq.png" alt="image-20250622221641036" style="zoom:67%;" /></p><p>然后进入此插件内，再点击“在IDE中创建工具”，再“创建工具”：</p><figure><img src="https://s2.loli.net/2025/06/22/e1Ss3IncrMLPl2t.png"alt="image-20250622222810864" /><figcaption aria-hidden="true">image-20250622222810864</figcaption></figure><p>代码输入框内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs node.js">import &#123; Args &#125; from &#x27;@/runtime&#x27;;<br>import axios from &#x27;axios&#x27;;<br><br>interface Input &#123;<br>  qq: string;     // 必填：搜索关键词<br>  keykey: string;   // 必填：API密钥<br>&#125;<br><br>interface SearchResult &#123;<br>  title: string;<br>  link: string;<br>  snippet: string;<br>&#125;<br><br>interface Output &#123;<br>  success: boolean;<br>  error?: string;<br>  results: SearchResult[];<br>  related?: string[];<br>&#125;<br><br>export async function handler(&#123; input, logger &#125;: Args&lt;Input&gt;): Promise&lt;Output&gt; &#123;<br>  // 基本参数验证<br>  if (!input.qq || !input.keykey) &#123;<br>    const errorMsg = &#x27;Missing required parameters: both &quot;q&quot; and &quot;key&quot; are required&#x27;;<br>    logger.error(errorMsg);<br>    return &#123;<br>      success: false,<br>      error: errorMsg,<br>      results: []<br>    &#125;;<br>  &#125;<br><br>  try &#123;<br>    const &#123; data &#125; = await axios(&#123;<br>      method: &#x27;post&#x27;,<br>      url: &#x27;https://google.serper.dev/search&#x27;,<br>      headers: &#123; <br>        &#x27;X-API-KEY&#x27;: input.keykey, // 使用动态API密钥<br>        &#x27;Content-Type&#x27;: &#x27;application/json&#x27;<br>      &#125;,<br>      data: JSON.stringify(&#123;<br>        q: input.qq,<br>        gl: &#x27;us&#x27;,       // 默认国家：美国<br>        hl: &#x27;en&#x27;,       // 默认语言：英语<br>        num: 10,        // 默认结果数：10<br>        page: 1,        // 默认页码：1<br>        location: &#x27;&#x27;,   // 默认地点：空<br>        tbs: &#x27;&#x27;         // 默认日期范围：空<br>      &#125;),<br>      timeout: 10000<br>    &#125;);<br><br>    logger.info(`Successfully fetched $&#123;data.organic?.length || 0&#125; results for &quot;$&#123;input.qq&#125;&quot;`);<br>    <br>    // 结果格式化<br>    const results: SearchResult[] = data.organic?.map((item: any) =&gt; (&#123;<br>      title: item.title,<br>      link: item.link,<br>      snippet: item.snippet<br>    &#125;)) || [];<br><br>    return &#123; <br>      success: true,<br>      results,<br>      related: data.related?.map((r: any) =&gt; r.query) || []<br>    &#125;;<br><br>  &#125; catch (error: any) &#123;<br>    // 精简错误信息提取<br>    const errorMsg = error.response?.data?.message || error.message || &#x27;Unknown search error&#x27;;<br>    logger.error(`Search failed for &quot;$&#123;input.qq&#125;&quot;: $&#123;errorMsg&#125;`);<br>    <br>    return &#123;<br>      success: false,<br>      error: errorMsg,<br>      results: []<br>    &#125;;<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>可以看到，代码中使用到了依赖包axios，所以需要另外安装。在左下角的安装依赖包中，搜索“axios”进行安装。</p><p>在"元数据"tab页中，此时只需要填写“输入参数”即可，输出参数暂时无须理会，后续会自动填充好：</p><figure><img src="https://s2.loli.net/2025/06/22/WkigDtcflpu6AeB.png"alt="image-20250622223106946" /><figcaption aria-hidden="true">image-20250622223106946</figcaption></figure><p>然后在右上角的“测试代码”—&gt;“输入”中输入如下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;qq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;北京市&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;keykey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;489883104d20921412XXXX&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>其中keykey字段填写的是从serpr中申请分配到的apikey。（<code>serper官网</code>：https://serper.dev/，大陆可用，新用户免费调用2500次。使用此第三方api来调用谷歌搜索）</p><p>填写好后，点击“输入”框下面的”运行“按钮，正常的话，可以在控制台中看到如下内容：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">Test </span>run &quot;google&quot; started<br>Executing...<br>Successfully fetched 8 results for &quot;北京市&quot;<br>Execute success, cost: 3350ms, function_cost: 3047ms<br></code></pre></td></tr></table></figure><p>此时点击右上角的“发布”按钮，可以将此插件工具发布了，后续可以在智能体使用了。</p><figure><img src="https://s2.loli.net/2025/06/22/jaUmrv4GzxOdT7n.png"alt="image-20250622223736413" /><figcaption aria-hidden="true">image-20250622223736413</figcaption></figure><h1 id="二知识库">二、知识库</h1><p>知识库中内容是相对静态的知识，可以在不同智能体中间进行共享的。由知识库开发者创建与维护，终端用户在智能体中使用知识库中不能对知识库进行修改。</p><figure><img src="https://s2.loli.net/2025/06/22/pnOZEajVPSYNyRo.png"alt="image-20250622223915438" /><figcaption aria-hidden="true">image-20250622223915438</figcaption></figure><p>以下创建扣子知识库，其类型是图片知识库中，就是说其中只保存图片类型知识。</p><p>向其中上传图片（以下测试图片的下载链接：<code>https://zxdwhda-share.feishu.cn/wiki/M7towKWKhiLMxWkTCincqhDAnjc#share-UuaEdXFVQoDkXJxUl5wct12mnog</code>）时，选择自动标注，让大模型对图片中的内容进行描述与标注：</p><figure><img src="https://s2.loli.net/2025/06/22/2VDnOeWhbqlMCNp.png"alt="image-20250622224501641" /><figcaption aria-hidden="true">image-20250622224501641</figcaption></figure><p>等到知识库中所有图片都被标注成功后，就可以使用此知识库了。</p><h1 id="三使用自定义插件与知识库">三、使用自定义插件与知识库</h1><p>以下在智能体“夸夸机器人”中使用自定义插件与知识库，首先修改配置。</p><figure><img src="https://s2.loli.net/2025/06/22/1VIhGelyafZgF8W.png"alt="image-20250622225453898" /><figcaption aria-hidden="true">image-20250622225453898</figcaption></figure><p>修改下提示词（主要是添加第5点技能）：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 角色：夸夸机器人<br>&#123;#InputSlot placeholder=<span class="hljs-string">&quot;角色概述和主要职责的一句话描述&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;你是一个能够不断鼓励用户的积极向上的机器人&#123;#/InputSlot#&#125;<br><br>## 目标：<br>&#123;#InputSlot placeholder=<span class="hljs-string">&quot;角色的工作目标，如果有多目标可以分点列出，但建议更聚焦1-2个目标&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;你总是能够发现用户提问中的积极身上的点，给予积极反馈&#123;#/InputSlot#&#125;<br><br>## 技能：<br><span class="hljs-number">1.</span>  &#123;#InputSlot placeholder=<span class="hljs-string">&quot;为了实现目标，角色需要具备的技能1&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;如果用户提到了自己的某些特征，你可以从中发掘出用户的特长或优点，或这些特征有什么益处&#123;#/InputSlot#&#125;<br><span class="hljs-number">2.</span> &#123;#InputSlot placeholder=<span class="hljs-string">&quot;为了实现目标，角色需要具备的技能2&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;如果用户提到了自己的特长或优势，你会鼓励用户可以继续进步的方向或方法，同时提醒用户要注意的点比如不要骄傲粗心等&#123;#/InputSlot#&#125;<br><span class="hljs-number">3.</span> &#123;#InputSlot placeholder=<span class="hljs-string">&quot;为了实现目标，角色需要具备的技能3&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;如果用户表现出颓废或低落的心态，你会安慰用户或从中发现用户的闪光点，给出一些激励的话&#123;#/InputSlot#&#125;<br><span class="hljs-number">4.</span> &#123;#InputSlot placeholder=<span class="hljs-string">&quot;为了实现目标，角色需要具备的技能4&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;如果你没有明显察觉到用户的心理特征是积极还是消极的，你可以使用问一些相关的问题循循善诱，以增加对用户的了解、更加地做出判断，然后给出回复&#123;#/InputSlot#&#125;<br><span class="hljs-number">5.</span> &#123;#InputSlot placeholder=<span class="hljs-string">&quot;为了实现目标，角色需要具备的技能4&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;你可以从知=知识库中查找相关内容，分享给用户，以让用户获得好的阅读或视觉体验&#123;#/InputSlot#&#125;<br><br>## 限制：<br>- &#123;#InputSlot placeholder=<span class="hljs-string">&quot;描述角色在互动过程中需要遵循的限制条件1&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;你绝对不能输出负面消极的措辞&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=<span class="hljs-string">&quot;描述角色在互动过程中需要遵循的限制条件2&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;一般情况下，回复的内容要精简（<span class="hljs-number">50</span>字以内）。如果某些情况下，回复内容较多，也不能超过<span class="hljs-number">300</span>字&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=<span class="hljs-string">&quot;描述角色在互动过程中需要遵循的限制条件3&quot;</span> mode=<span class="hljs-string">&quot;input&quot;</span>#&#125;不能辱骂用户&#123;#/InputSlot#&#125;<br></code></pre></td></tr></table></figure><h2 id="文字相关内容问答">3.1 文字相关内容问答：</h2><figure><img src="https://s2.loli.net/2025/06/22/2wIfdl9zyFgT1Lu.png"alt="image-20250622225642539" /><figcaption aria-hidden="true">image-20250622225642539</figcaption></figure><p>此时长期记忆中，只有如下内容：</p><figure><img src="https://s2.loli.net/2025/06/22/ckumJNOtbgzUHnw.png"alt="image-20250622225700612" /><figcaption aria-hidden="true">image-20250622225700612</figcaption></figure><h2 id="图文相关内容问答">3.2 图文相关内容问答：</h2><figure><img src="https://s2.loli.net/2025/06/22/UhbZdny8HLcv2AJ.png"alt="image-20250622225741213" /><figcaption aria-hidden="true">image-20250622225741213</figcaption></figure><p>召回的内容很准确（以下是知识库中上传的图片及其标注内容）：</p><figure><img src="https://s2.loli.net/2025/06/22/zAwdBlqRJY7SW94.png"alt="image-20250622225824554" /><figcaption aria-hidden="true">image-20250622225824554</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dify1.4.1学习03-基本使用</title>
    <link href="/2025/06/18/dify1.4.1%E5%AD%A6%E4%B9%A003-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/06/18/dify1.4.1%E5%AD%A6%E4%B9%A003-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一知识库">一、知识库</h1><h2 id="创建知识库">1.1 创建知识库</h2><figure><img src="https://s2.loli.net/2025/06/18/GKaWubLOp8cfn2P.png"alt="image-20250618104842072" /><figcaption aria-hidden="true">image-20250618104842072</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/18/NOr781C6gkXTjcD.png"alt="image-20250618105458412" /><figcaption aria-hidden="true">image-20250618105458412</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/18/6mbX3L8D2teTphS.png"alt="image-20250618143815580" /><figcaption aria-hidden="true">image-20250618143815580</figcaption></figure><p>上述过程中直接导入已有文本，没有提供自定义知识库名称与描述的地方。但完成上述操作后，可以在知识库列表页面编辑这两个信息。</p><h2 id="召回测试">1.2 召回测试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">DeepSeek可以用来做什么<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/06/18/xahAuOgGz843RNp.png"alt="image-20250618150147600" /><figcaption aria-hidden="true">image-20250618150147600</figcaption></figure><h1 id="二工作室">二、工作室</h1><h2 id="创建应用">2.1 创建应用</h2><p>创建空白应用：</p><figure><img src="https://s2.loli.net/2025/06/18/8HJXUWey5xlSnhD.png"alt="image-20250618150506668" /><figcaption aria-hidden="true">image-20250618150506668</figcaption></figure><p>选择聊天助手：</p><figure><img src="https://s2.loli.net/2025/06/18/knNJKei4uIZWLoT.png"alt="image-20250618150444720" /><figcaption aria-hidden="true">image-20250618150444720</figcaption></figure><p>对聊天助手应用进行编排设置（主要有提示词、知识库、大模型）：</p><figure><img src="https://s2.loli.net/2025/06/18/JH2Kfq6VTsPwxol.png"alt="image-20250618151325992" /><figcaption aria-hidden="true">image-20250618151325992</figcaption></figure><p>直接使用与发布：</p><figure><img src="https://s2.loli.net/2025/06/18/PyHd1Eqv72bt6QV.png"alt="image-20250618151854794" /><figcaption aria-hidden="true">image-20250618151854794</figcaption></figure><h2 id="访问api">2.2 访问API</h2><p>创建API密钥：</p><figure><img src="https://s2.loli.net/2025/06/18/uiHY5Ky2lpIFg1M.png"alt="image-20250618152035912" /><figcaption aria-hidden="true">image-20250618152035912</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/18/OPDthc6zvrbx32I.png"alt="image-20250618152149442" /><figcaption aria-hidden="true">image-20250618152149442</figcaption></figure><p>发送对话消息：</p><figure><img src="https://s2.loli.net/2025/06/18/h9XrlqNs7pbYz3n.png"alt="image-20250618152329026" /><figcaption aria-hidden="true">image-20250618152329026</figcaption></figure><p>将上述复制出来的"curl..."命令中的"{api_key}"替换成前面生成的api密钥即"app-nhX12gcgZ2u2vPa9pQSBXCll"，</p><p>最好修改一下问题的内容，如”请证明勾股定理“</p><p>最终得到如下命令：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs rust">curl -X POST <span class="hljs-symbol">&#x27;http</span>:<span class="hljs-comment">//10.11.15.190/v1/chat-messages&#x27; \</span><br>--header <span class="hljs-symbol">&#x27;Authorization</span>: Bearer app-nhX12gcgZ2u2vPa9pQSBXCll<span class="hljs-string">&#x27; \</span><br><span class="hljs-string">--header &#x27;</span>Content-Type: application/json<span class="hljs-string">&#x27; \</span><br><span class="hljs-string">--data-raw &#x27;</span>&#123;<br>    <span class="hljs-string">&quot;inputs&quot;</span>: &#123;&#125;,<br>    <span class="hljs-string">&quot;query&quot;</span>: <span class="hljs-string">&quot;请证明勾股定理&quot;</span>,<br>    <span class="hljs-string">&quot;response_mode&quot;</span>: <span class="hljs-string">&quot;streaming&quot;</span>,<br>    <span class="hljs-string">&quot;conversation_id&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;abc-123&quot;</span>,<br>    <span class="hljs-string">&quot;files&quot;</span>: [<br>      &#123;<br>        <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;image&quot;</span>,<br>        <span class="hljs-string">&quot;transfer_method&quot;</span>: <span class="hljs-string">&quot;remote_url&quot;</span>,<br>        <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;https://cloud.dify.ai/logo/logo-site.png&quot;</span><br>      &#125;<br>    ]<br>&#125;<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="三探索">三、探索</h1><p>在探索页面，dify已经内置了一些应用，我们直接拿来使用。</p><figure><img src="https://s2.loli.net/2025/06/18/H3Riv1tnYV6u7AK.png"alt="image-20250618154155592" /><figcaption aria-hidden="true">image-20250618154155592</figcaption></figure><p>配置与使用：</p><figure><img src="https://s2.loli.net/2025/06/18/i1DLZMWC3AGnQmV.png"alt="image-20250618154532150" /><figcaption aria-hidden="true">image-20250618154532150</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>coze学习02-体验智能体</title>
    <link href="/2025/06/17/coze%E5%AD%A6%E4%B9%A002-%E4%BD%93%E9%AA%8C%E6%99%BA%E8%83%BD%E4%BD%93/"/>
    <url>/2025/06/17/coze%E5%AD%A6%E4%B9%A002-%E4%BD%93%E9%AA%8C%E6%99%BA%E8%83%BD%E4%BD%93/</url>
    
    <content type="html"><![CDATA[<h1 id="一智能体介绍">一、智能体介绍</h1><p>智能体（Agent）在人工智能领域中，是指一个能够自主操作、作出决策的实体。</p><p>智能体(Agent)，在人工智能领域又称为AIAgent或人工智能体，是指能够通过传感器感知环境、通过计算模型处理信息，并通过执行器反馈动作的自治系统。任何独立的能够思考并可以同环境交互的实体都可以抽象为智能体。智能体的技术内核包含三大要素：<strong>感知模块、决策模块和执行模块</strong>，这使其区别于传统的人工智能系统。</p><hr /><ul><li>Agent = LLM + 记忆 / 工具使用 / 任务规划能力。<ul><li>LLM：大语言模型，负责语言理解与生成，是基础。</li><li>记忆：指 Agent 的长期/短期记忆系统，能够记住上下文或历史信息。</li><li>工具使用：Agent 可以调用工具或 API（如搜索、计算器、数据库）。</li><li>任务规划能力：Agent 具备任务分解、控制执行流程等自主决策能力。</li></ul></li></ul><p>LLM 单独用时：只回答问题，没有状态或行为能力。</p><p>Agent 使用LLM：能够记住对话上下文，调用插件搜索资料，还能规划任务步骤。</p><h1 id="二夸夸机器人">二、夸夸机器人</h1><h2 id="不同类型智能体模型">不同类型智能体模型</h2><h3 id="普通llm">普通LLM</h3><p>通过“标准创建”方式创建一个智能体，智能体采用单Agent（自主规划模式），其他配置如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">角色：夸夸机器人</span><br>&#123;#InputSlot placeholder=&quot;角色概述和主要职责的一句话描述&quot; mode=&quot;input&quot;#&#125;你是一个能够不断鼓励用户的积极向上的机器人&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 目标：</span></span><br>&#123;#InputSlot placeholder=&quot;角色的工作目标，如果有多目标可以分点列出，但建议更聚焦1-2个目标&quot; mode=&quot;input&quot;#&#125;你总是能够发现用户提问中的积极身上的点，给予积极反馈&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 技能：</span></span><br>1.  &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能1&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的某些特征，你可以从中发掘出用户的特长或优点，或这些特征有什么益处&#123;#/InputSlot#&#125;<br>2. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能2&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的特长或优势，你会鼓励用户可以继续进步的方向或方法，同时提醒用户要注意的点比如不要骄傲粗心等&#123;#/InputSlot#&#125;<br>3. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能3&quot; mode=&quot;input&quot;#&#125;如果用户表现出颓废或低落的心态，你会安慰用户或从中发现用户的闪光点，给出一些激励的话&#123;#/InputSlot#&#125;<br>4. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能4&quot; mode=&quot;input&quot;#&#125;如果你没有明显察觉到用户的心理特征是积极还是消极的，你可以使用问一些相关的问题循循善诱，以增加对用户的了解、更加地做出判断，然后给出回复&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 限制：</span></span><br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件1&quot; mode=&quot;input&quot;#&#125;你绝对不能输出负面消极的措辞&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件2&quot; mode=&quot;input&quot;#&#125;一般情况下，回复的内容要精简（50字以内）。如果某些情况下，回复内容较多，也不能超过300字&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件3&quot; mode=&quot;input&quot;#&#125;不能辱骂用户&#123;#/InputSlot#&#125;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/06/18/8exJ7Kqsbv4wWyD.png"alt="image-20250618221822934" /><figcaption aria-hidden="true">image-20250618221822934</figcaption></figure><p>相同的提示词情况下：</p><figure><img src="https://s2.loli.net/2025/06/19/zBVv4dtN9aPnpZT.png"alt="image-20250619213233527" /><figcaption aria-hidden="true">image-20250619213233527</figcaption></figure><h3 id="角色扮演llm">角色扮演LLM</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">角色：夸夸机器人</span><br>&#123;#InputSlot placeholder=&quot;角色概述和主要职责的一句话描述&quot; mode=&quot;input&quot;#&#125;你是一个能够不断鼓励用户的积极向上的机器人&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 目标：</span></span><br>&#123;#InputSlot placeholder=&quot;角色的工作目标，如果有多目标可以分点列出，但建议更聚焦1-2个目标&quot; mode=&quot;input&quot;#&#125;你总是能够发现用户提问中的积极身上的点，给予积极反馈&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 技能：</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 技能 1：以积极向上态度回答非专业问题</span></span><br>1.  &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能1&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的某些特征，你可以从中发掘出用户的特长或优点，或这些特征有什么益处&#123;#/InputSlot#&#125;<br>2. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能2&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的特长或优势，你会鼓励用户可以继续进步的方向或方法，同时提醒用户要注意的点比如不要骄傲粗心等&#123;#/InputSlot#&#125;<br>3. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能3&quot; mode=&quot;input&quot;#&#125;如果用户表现出颓废或低落的心态，你会安慰用户或从中发现用户的闪光点，给出一些激励的话&#123;#/InputSlot#&#125;<br>4. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能4&quot; mode=&quot;input&quot;#&#125;如果你没有明显察觉到用户的心理特征是积极还是消极的，你可以使用问一些相关的问题循循善诱，以增加对用户的了解、更加地做出判断，然后给出回复&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 技能 2：精准回答专业问题</span></span><br>1.  &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能1&quot; mode=&quot;input&quot;#&#125;遇到无法回答的问题时，使用bingWebSearch搜索获取准确答案&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 限制：</span></span><br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件1&quot; mode=&quot;input&quot;#&#125;你绝对不能输出负面消极的措辞&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件2&quot; mode=&quot;input&quot;#&#125;一般情况下，回复的内容要精简（50字以内）。如果某些情况下，回复内容较多，也不能超过300字&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件3&quot; mode=&quot;input&quot;#&#125;不能辱骂用户&#123;#/InputSlot#&#125;<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">你可以搜索看看最近的新闻，我有点不开心<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/06/19/CrKdPsmYFG5LSu9.png"alt="image-20250619213030401" /><figcaption aria-hidden="true">image-20250619213030401</figcaption></figure><h3 id="工具调用llm">工具调用LLM</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">角色：夸夸机器人</span><br>&#123;#InputSlot placeholder=&quot;角色概述和主要职责的一句话描述&quot; mode=&quot;input&quot;#&#125;你是一个能够不断鼓励用户的积极向上的机器人&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 目标：</span></span><br>&#123;#InputSlot placeholder=&quot;角色的工作目标，如果有多目标可以分点列出，但建议更聚焦1-2个目标&quot; mode=&quot;input&quot;#&#125;你总是能够发现用户提问中的积极身上的点，给予积极反馈&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 技能：</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 技能 1：以积极向上态度回答非专业问题</span></span><br>1.  &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能1&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的某些特征，你可以从中发掘出用户的特长或优点，或这些特征有什么益处&#123;#/InputSlot#&#125;<br>2. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能2&quot; mode=&quot;input&quot;#&#125;如果用户提到了自己的特长或优势，你会鼓励用户可以继续进步的方向或方法，同时提醒用户要注意的点比如不要骄傲粗心等&#123;#/InputSlot#&#125;<br>3. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能3&quot; mode=&quot;input&quot;#&#125;如果用户表现出颓废或低落的心态，你会安慰用户或从中发现用户的闪光点，给出一些激励的话&#123;#/InputSlot#&#125;<br>4. &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能4&quot; mode=&quot;input&quot;#&#125;如果你没有明显察觉到用户的心理特征是积极还是消极的，你可以使用问一些相关的问题循循善诱，以增加对用户的了解、更加地做出判断，然后给出回复&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 技能 2：精准回答专业问题</span></span><br>1.  &#123;#InputSlot placeholder=&quot;为了实现目标，角色需要具备的技能1&quot; mode=&quot;input&quot;#&#125;遇到无法回答的问题时，使用bingWebSearch搜索获取准确答案&#123;#/InputSlot#&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 限制：</span></span><br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件1&quot; mode=&quot;input&quot;#&#125;你绝对不能输出负面消极的措辞&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件2&quot; mode=&quot;input&quot;#&#125;回复内容的字数不能超过300字&#123;#/InputSlot#&#125;<br>- &#123;#InputSlot placeholder=&quot;描述角色在互动过程中需要遵循的限制条件3&quot; mode=&quot;input&quot;#&#125;不能辱骂用户&#123;#/InputSlot#&#125;<br></code></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">你可以搜索看看最近的新闻，我有点不开心<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/06/19/RtQMqNkO1aEnfiU.png"alt="image-20250619212724269" /><figcaption aria-hidden="true">image-20250619212724269</figcaption></figure><h2 id="卡片">卡片</h2><p>coze官方对卡片的介绍： <ahref="https://www.coze.cn/open/docs/guides/message_card">扣子-卡片</a></p><p>如果不添加卡片时，调用工具后，如上图，只会显示“已调用头条搜索”。添加卡片后将会以卡片的形式显示搜索到的相关内容，以下是添加并配置卡片的方法：</p><figure><img src="https://s2.loli.net/2025/06/19/yFTMv534BSbLmDY.png"alt="image-20250619214607848" /><figcaption aria-hidden="true">image-20250619214607848</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/19/6rd75SCfyxpVHbk.png"alt="image-20250619214544470" /><figcaption aria-hidden="true">image-20250619214544470</figcaption></figure><p>添加卡片后，使用时查看效果：</p><figure><img src="https://s2.loli.net/2025/06/19/DulHbo43eXaPw69.png"alt="image-20250619214738450" /><figcaption aria-hidden="true">image-20250619214738450</figcaption></figure><p>点击单个卡片左侧的“image”部分，还可以跳转到头条新闻对应的url</p><h2 id="触发器">触发器</h2><figure><img src="https://s2.loli.net/2025/06/19/VCAdPNQWBx8HwZy.png"alt="image-20250619215607876" /><figcaption aria-hidden="true">image-20250619215607876</figcaption></figure><h2 id="智能体知识库">智能体知识库</h2><p>添加知识库：</p><figure><img src="https://s2.loli.net/2025/06/19/Pq2ImNJ14lahjOB.png"alt="image-20250619220145879" /><figcaption aria-hidden="true">image-20250619220145879</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/19/VJdxQ9pGsuRWKIi.png"alt="image-20250619220313832" /><figcaption aria-hidden="true">image-20250619220313832</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/19/5Muvhgn46zOclEw.png"alt="image-20250619220334005" /><figcaption aria-hidden="true">image-20250619220334005</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/19/WH24umagoYfSDZG.png"alt="image-20250619220426309" /><figcaption aria-hidden="true">image-20250619220426309</figcaption></figure><p>测试效果：</p><figure><img src="https://s2.loli.net/2025/06/19/hHz9Cr1VOTqvWml.png"alt="image-20250619220549438" /><figcaption aria-hidden="true">image-20250619220549438</figcaption></figure><h2 id="长期记忆">长期记忆</h2><p>开启长期记忆并支持在Prompt中调用，智能体的用户可以在对话中召回长期记忆。</p><figure><img src="https://s2.loli.net/2025/06/19/lReJ7vsXBxVt9G4.png"alt="image-20250619222727081" /><figcaption aria-hidden="true">image-20250619222727081</figcaption></figure><p>删除前面创建的文本知识库，然后让智能体记住一些内容。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">![image-<span class="hljs-number">20250619223426147</span>](C:<span class="hljs-regexp">/Users/</span>jiangsanyin<span class="hljs-regexp">/AppData/</span>Roaming<span class="hljs-regexp">/Typora/</span>typora-user-images/image-<span class="hljs-number">20250619223426147</span>.png)下面是我的信息，你一定要记住：<br><br>姓名：林夕雨（Lin Xiyu）<br>小名：小雨（家人/密友使用）<br>性别：女<br>出生日期：<span class="hljs-number">1995</span>年<span class="hljs-number">8</span>月<span class="hljs-number">17</span>日<br>出生地：中国杭州市<br>现居地：上海市<br></code></pre></td></tr></table></figure><p>要测试长期记忆功能，还需要将“模型“的”携带上下文轮数“的值设置为0，否则模型会尝试从前面10轮会话中获取信息。</p><p>长期记忆生效后，可以在此处看到保存的信息：</p><figure><img src="https://s2.loli.net/2025/06/19/ZELtwTaOFQgMkrz.png"alt="image-20250619223432609" /><figcaption aria-hidden="true">image-20250619223432609</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/19/Rld5mJLg9TQFaWZ.png"alt="image-20250619223516321" /><figcaption aria-hidden="true">image-20250619223516321</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>coze学习01-相关概念学习</title>
    <link href="/2025/06/17/coze%E5%AD%A6%E4%B9%A001-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E5%AD%A6%E4%B9%A0/"/>
    <url>/2025/06/17/coze%E5%AD%A6%E4%B9%A001-%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>长沙国际会展中心观展第四届中非经贸博览会</title>
    <link href="/2025/06/14/%E9%95%BF%E6%B2%99%E5%9B%BD%E9%99%85%E4%BC%9A%E5%B1%95%E4%B8%AD%E5%BF%83%E8%A7%82%E5%B1%95%E7%AC%AC%E5%9B%9B%E5%B1%8A%E4%B8%AD%E9%9D%9E%E7%BB%8F%E8%B4%B8%E5%8D%9A%E8%A7%88%E4%BC%9A/"/>
    <url>/2025/06/14/%E9%95%BF%E6%B2%99%E5%9B%BD%E9%99%85%E4%BC%9A%E5%B1%95%E4%B8%AD%E5%BF%83%E8%A7%82%E5%B1%95%E7%AC%AC%E5%9B%9B%E5%B1%8A%E4%B8%AD%E9%9D%9E%E7%BB%8F%E8%B4%B8%E5%8D%9A%E8%A7%88%E4%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景介绍">一、背景介绍</h1><p>中非经贸博览会，中文全称“中国-非洲经贸博览会”，英文简称“CFETE”，英文全称“CHINA-AFRICAECONOMIC AND TRADE EXPO”，官网： https://www.caetexpo.org.cn/ 。</p><p>中国-非洲经贸博览会，由中国中央政府在2018年中非合作论坛北京峰会上宣布设立，是中国首个国家级对非经贸合作平台，长期落户湖南举办，每两年举办一届，由中华人民共和国商务部和湖南省人民政府共同主办。至今已经完整举办3届，分别是在2019年、2012年和2023年举办，今年第四届中国-非洲经贸博览会持续时间长度为4天即2025年6月12日~15日，吸引了近4700家中非企业、3万余名中外朋友参加，初步达成的合作项目总金额超过110亿美元。</p><p>博览会是落实中非合作论坛经贸举措的新平台，地方对非经贸合作的新窗口。博览会以“合作共赢，务实推进中非经贸关系”为主题，聚焦贸易、农业、投融资、合作园区、基础设施等领域，促进中非经贸的发展与共赢。博览会的主要目的可以概括为“通过机制化平台推动中非务实合作，实现互利共赢的现代化发展，具体表现为贸易增量、投资升级、政策创新和人文融合”（自己没有找到官方说明，自己在网上文章的基础上糅合总结的）。</p><p>更加官方资讯与动态详情可以参考其官网。</p><p>自己利用在长沙市工作学习的便利，于2025年6月14日（周六）上午与中午对参观与学习了下此次第四届中国-非洲经贸博览会（携带身份证刷证进入，好像扫码也行，也太注意，最好还是带身份证）。</p><p><strong>整个博览会中国与非洲的展览情况跟中国改革开放初期时西方与中国参加某博览会时的展览情况类似，就是说中国当前是处于一个主导地位，展览的产品品类、技术含量等要高于非洲，非洲当前主要是展览一些手工艺品、轻工业产品。</strong></p><p>具体记录如下。</p><h1 id="二参观详情">二、参观详情</h1><p>其实只有W2非洲商品馆有较多的非洲参展商或顾客，E1中时尚产业馆有一些非洲参展商，其他馆区基本是国内的人。自己就是随便按自己兴趣逛。</p><figure><img src="https://s2.loli.net/2025/06/15/O6sPjARb1gfa5TS.png"alt="image-20250615124120695" /><figcaption aria-hidden="true">image-20250615124120695</figcaption></figure><h2 id="进入会展中心">2.1 进入会展中心</h2><p>今年第四届中国-非洲经贸博览会举办地址：长沙国际会展中心。交通很便利，市内乘坐地铁4号线或2号线到达“光达”地铁站后，在2号口出来后右拐走地下通道过马路，即可方便到达长沙国际会展中心北登录厅。</p><p>天气晴朗，万里长空，蓝天白云：</p><figure><img src="https://s2.loli.net/2025/06/14/MPb7YCG3e9nFBiU.png"alt="image-20250614232212249" /><figcaption aria-hidden="true">image-20250614232212249</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/14/Z7CANESTmcuFrB1.png"alt="image-20250614232231801" /><figcaption aria-hidden="true">image-20250614232231801</figcaption></figure><p>然后需要排队刷身份证与过安检才能进行会展中心参观。</p><h2 id="机械工业优秀者">2.2 机械工业优秀者</h2><p>从北登录厅进入后一直往里走，走出场馆建筑来到空地，就看到长沙机械工业巨擘“三一重工”与“中联重科”等企业的挖机、起重机、汽车等代表性机动设备。</p><figure><img src="https://s2.loli.net/2025/06/14/MTi1aJvS7pqkoRe.png"alt="image-20250614232803674" /><figcaption aria-hidden="true">image-20250614232803674</figcaption></figure><p>这个挖机斗的容量是2.5 立方米！</p><figure><img src="https://s2.loli.net/2025/06/14/bqnYMUQpW6KEhmo.png"alt="image-20250614232912556" /><figcaption aria-hidden="true">image-20250614232912556</figcaption></figure><p>下面这个推土机的轮子好高好大，跟自己肩膀一样高（大致有1.5M左右），让自己联想起成龙大哥电影《一个好人》的最后桥段，成龙反杀开着高大的矿车的反派，然后驾驶它冲进反派所在大楼最终干掉对方的场景。</p><figure><img src="https://s2.loli.net/2025/06/14/UbYywQRHchFATXJ.png"alt="image-20250614232947264" /><figcaption aria-hidden="true">image-20250614232947264</figcaption></figure><h2 id="中国秋名山神车">2.3 中国秋名山神车</h2><p>中国秋名山神车的某型号电动车挺实惠的。</p><figure><img src="https://s2.loli.net/2025/06/14/ms8PC9pleNctyf1.png"alt="image-20250614233729085" /><figcaption aria-hidden="true">image-20250614233729085</figcaption></figure><h2 id="咖啡饮料自助售卖机">2.4 咖啡饮料自助售卖机</h2><p>太阳太大了，来到场馆内参观。发现一台自动制作咖啡与饮料的机器，买了一杯“冰葡萄果饮”，看机器中的纸杯一直在上下移动，现加的果汁和冰块，本来有点期待，最后拿到手喝了发现一言难尽，果汁应该是勾兑的，以后应该会慎买了。</p><p><img src="https://s2.loli.net/2025/06/14/dpJH8IqjyWtgo9b.png" /></p><h2 id="自动驾驶的电动车">2.5 “自动驾驶”的电动车</h2><p>来到国内出口汽车、电动车的企业展览区。发现一台“自动驾驶”的雅迪电动车。</p><p>思考一下：“自动驾驶”电动车的意义在哪里？有多大？</p><p>个人见解：下雨天，这种民用的自动驾驶电动车（其实是旁边一个工作人员拿着控制器在遥控，所以它有点像是那种遥控玩具车，只是多了站立不倒的能力）与使用者之间隔了一个较长的暴露在大雨下的距离，这时让遥控电动车让其自动行驶到使用者身边，然后使用者再穿上雨衣骑行电动车出行？感觉比较比较鸡肋，穿雨天骑行身上还是会淋湿的。为了避免在拿电动车过程中淋雨而多花上千元买一个增加了“遥控驾驶”功能的电动车，对于大多数人来说应该都是不接受或值得的。而且汽车的自动+智能驾驶都还不完善可靠，这种辅助设备更少的电动车更加不具有上路的自动驾驶价值。</p><figure><img src="https://s2.loli.net/2025/06/14/7YyxTaVMGIFEo9v.png"alt="image-20250614234628793" /><figcaption aria-hidden="true">image-20250614234628793</figcaption></figure><h2 id="人工智能分选解决方案">2.6 人工智能分选解决方案</h2><p>自己工作在不同行业，看到这个企业自称是全球领先的人工智能分选解决方案。我特地去网上搜索了下，公司成立于1999年，总部位于安徽合肥，是国家认定的高新技术企业，主要研发、制造智能色选设备，产品覆盖大米、茶叶、坚果、矿石等，畅销全球100多个国家和地区。</p><figure><img src="https://s2.loli.net/2025/06/15/RwXGJthQsxUAMnN.png"alt="image-20250615115324822" /><figcaption aria-hidden="true">image-20250615115324822</figcaption></figure><p>下面是参展的其中一台分选设备。我走到设备与工作人员旁边，询问对方“你们所说的人工智能分选”体现在什么方面，大致实现思路是什么？对方回复“我们的人工智能分选设备加入了人工智能元素与功能后，减少分选过程中人工介入的成本与概率，且内置多种人工智能分选算法能够高效准确地智能分选出不同待选物品。大致实现思路是研究与开发人工智能算法根据颜色、形状、大小、光泽度等属性进行筛选，当然也还有其他辅助机制如红外线扫描、湿密度检测等以进一步提高分选准确率”。</p><p><img src="https://s2.loli.net/2025/06/15/XPivb7OZofUlTmV.png" /></p><p>这是现场演示时的分选结果：</p><figure><img src="https://s2.loli.net/2025/06/15/CQLV4IF5Uuklxmc.png"alt="image-20250615120112619" /><figcaption aria-hidden="true">image-20250615120112619</figcaption></figure><h2 id="智能自助炒菜机">2.7 智能自助炒菜机</h2><p>如下是广州一家叫做富港万嘉的公司研发的名为司膳的智能厨房炒菜机，零售价9万元左右。目前已经开发出3000种左右菜品，通过设定各种菜品的配料规格（有一个默认的规格参数，自己可以再调整。工作人员说广州粤菜口味相对清淡，所以对于湖南客户可能主要是增加辣椒的量），然后将菜与配料按照放置在指定的位置，选定要烹饪的菜品启动烹饪。一般地烹饪一个普通的菜品大致三四~五六分钟左右不等。因为其中搭载了抽油烟机与散热器，所以可以在机场、高铁站、写字楼内进行使用。</p><p>现场还有一种未自带抽油烟机的智能厨房炒菜机，零售价9万左右，一次性能够烹饪的菜量更大（达到10斤），适合放在食堂或普通餐饮店使用，解放厨师双手、提高做菜效率。</p><figure><img src="https://s2.loli.net/2025/06/15/Z6DzuOLr7KkFb2o.png"alt="image-20250615120913370" /><figcaption aria-hidden="true">image-20250615120913370</figcaption></figure><p>菜品有默认的配料规格参数，可以自行进一步调整。</p><figure><img src="https://s2.loli.net/2025/06/15/NK32bwZIjJsufRT.png"alt="image-20250615120923754" /><figcaption aria-hidden="true">image-20250615120923754</figcaption></figure><p>下面是炒出来的“尖椒鸡丁”成品，试了下，味道还不错^_^。</p><figure><img src="https://s2.loli.net/2025/06/15/inlo6pBMywgI89S.png"alt="image-20250615120954891" /><figcaption aria-hidden="true">image-20250615120954891</figcaption></figure><p>支持很多菜品：</p><figure><img src="https://s2.loli.net/2025/06/15/meF38cUbY4ZqWju.png"alt="image-20250615122413374" /><figcaption aria-hidden="true">image-20250615122413374</figcaption></figure><h2 id="面向非洲与中东的美妆公司">2.8 面向非洲与中东的美妆公司</h2><p>DukanBeauty是一家总部位于中国广州的化妆品零售企业，主要做非洲深色人种与中东地区的美妆产品，2018年在广州成立，难怪国内以前没听说过。</p><p>参展商在现场与一位深色皮肤的美女达到一笔订单：</p><figure><img src="https://s2.loli.net/2025/06/15/QqpJwhxa6N1fVBP.png"alt="image-20250615155910582" /><figcaption aria-hidden="true">image-20250615155910582</figcaption></figure><p>除了非洲商品馆，现场非洲参展商与顾客其实是稀稀拉拉的：</p><figure><img src="https://s2.loli.net/2025/06/15/QDUig2mVIGLldbZ.png"alt="image-20250615123822975" /><figcaption aria-hidden="true">image-20250615123822975</figcaption></figure><h2 id="中非时尚品">2.9 中非时尚品</h2><p>来自非洲的时尚品主要是香料、民族风情衣服、小纪念品，没有什么较高端的产品。还有一些专门做非洲市场的国内企业，比如养颜护肤产品，比如一款从乳油木果中提取出来的用来做手脚保养的霜，我试了下，有点个人不喜欢的味道，没买。</p><figure><img src="https://s2.loli.net/2025/06/15/FXaDqviEKI5OVzt.png"alt="image-20250615124315704" /><figcaption aria-hidden="true">image-20250615124315704</figcaption></figure><p>中间的裙子略贵，看了下要360元人民币。</p><figure><img src="https://s2.loli.net/2025/06/15/lVvPp9K7YCer4qu.png"alt="image-20250615124213044" /><figcaption aria-hidden="true">image-20250615124213044</figcaption></figure><h2 id="w2非洲商品馆">2.10 W2非洲商品馆</h2><p>主要有香料、民族风情衣服、小纪念品、雕塑、咖啡、巧克力等，可能还有一些其他的东西，自己没注意到。还有一些中非合作项目如电网项目、工业园区啥的，走到中午有点累了，走马观花完了直接回家。</p><p>来自非洲的黑猩猩：</p><figure><img src="https://s2.loli.net/2025/06/15/Q4UOTakiRnF7L9x.png"alt="image-20250615124854849" /><figcaption aria-hidden="true">image-20250615124854849</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>参展与外出交流</category>
      
    </categories>
    
    
    <tags>
      
      <tag>参展与外出交流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openwebui-v0.6.5学习02-常用配置与使用</title>
    <link href="/2025/06/11/openwebui-v0.6.5%E5%AD%A6%E4%B9%A002-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/06/11/openwebui-v0.6.5%E5%AD%A6%E4%B9%A002-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一管理员面板">一、管理员面板</h1><p>以“管理员”权限组的用户比如超级管理员登录系统，才能看到与操作“管理员面板”。</p><figure><img src="https://s2.loli.net/2025/06/12/eQlmuDP4NcgXijM.png"alt="image-20250612113108218" /><figcaption aria-hidden="true">image-20250612113108218</figcaption></figure><h2 id="用户">1.1 用户</h2><h3 id="概述中的用户管理">1.1.1 概述中的用户管理</h3><p>安装open-webui的最后步骤，自行注册的用户是超级管理员，无法被删除。可以修改其用户名与密码，邮箱无法修改。</p><ul><li>添加用户<ul><li>添加用户时，需要选择其权限组，有“待激活、用户、管理员”三个选项可选。拥有“待激活”权限的用户，登录后无法进行实际操作，需要联系管理员进行激活；拥有“用户”权限的用户，是普通用户，拥有较小的操作权限比如可以选择LLM进行对话，可以管理自己的信息，但无法修改系统配置信息与管理其他用户等；拥有“管理员”权限的用户，在前者的基础上，进行拥有修改系统配置信息与管理其他用户等的权限，此类型用户无法被删除，如果要删除先要将其修改为拥有“用户”权限的用户。</li><li>添加用户时填写的邮箱不会进行真正的校验，如果是开发或自用，随便填写个邮箱账号即可。</li></ul></li></ul><figure><img src="https://s2.loli.net/2025/06/12/ufp1cFtnGEgzkOR.png"alt="image-20250612122503748" /><figcaption aria-hidden="true">image-20250612122503748</figcaption></figure><ul><li><p>编辑用户与删除用户</p><p>此处用户可以被删除、编辑。此处用户的权限组只能是系统默认创建的“待激活、用户、管理员”的3个权限组中的一个。</p></li></ul><h3 id="权限组管理">1.1.2 权限组管理</h3><p>此处为自定义权限组，跟系统默认存在的3个权限组（管理员、用户、待激活）是不同但又有联系的概念。自定义权限组可以添加系统中的用户，但只有系统默认的“用户或待激活”权限组下的用户才能添加进来。</p><ul><li>创建权限组：</li></ul><figure><img src="https://s2.loli.net/2025/06/12/wNZ3yezCMBmsEa1.png"alt="image-20250612143227393" /><figcaption aria-hidden="true">image-20250612143227393</figcaption></figure><ul><li>编辑权限组：</li></ul><figure><img src="https://s2.loli.net/2025/06/12/3eTjNkLHJKd84fS.png"alt="image-20250612143554275" /><figcaption aria-hidden="true">image-20250612143554275</figcaption></figure><ul><li>为权限组添加、删除用户：</li></ul><figure><img src="https://s2.loli.net/2025/06/12/Isc4GatnXE2jVid.png"alt="image-20250612150521690" /><figcaption aria-hidden="true">image-20250612150521690</figcaption></figure><ul><li>默认权限：</li></ul><p>​系统默认的“用户”权限组的权限可以进行编辑。但如果此处权限与自定义权限组的权限不同或冲突时，谁的权限较大以谁为准（个人觉得应该以自定义权限组的权限为准）。</p><figure><img src="https://s2.loli.net/2025/06/12/BrAIzqQVxk5XeJH.png"alt="image-20250612145359065" /><figcaption aria-hidden="true">image-20250612145359065</figcaption></figure><h2 id="设置">1.2 设置</h2><p>如果在页面做了修改，一定点击页面右下角的“保存”按钮保存所做修改，否则无效。</p><h3 id="通用">1.2.1 通用</h3><figure><img src="https://s2.loli.net/2025/06/12/2IOdjV7YfH3kRc6.png"alt="image-20250612155144746" /><figcaption aria-hidden="true">image-20250612155144746</figcaption></figure><h3 id="外部连接">1.2.2 外部连接</h3><figure><img src="https://s2.loli.net/2025/06/12/217mHxEWBTUtNVL.png"alt="image-20250612155734260" /><figcaption aria-hidden="true">image-20250612155734260</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/12/Xd9LRYmUrDcCSsJ.png"alt="image-20250612170001569" /><figcaption aria-hidden="true">image-20250612170001569</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/12/wAoJqaN7OM4REBP.png"alt="image-20250612160252442" /><figcaption aria-hidden="true">image-20250612160252442</figcaption></figure><p>创建一个模型时，可以上述小窗口的json输入框中输入如下内容（qwen2.5:3b在本地ollama环境中是否存在都没关系，如果不存在的话，ollama就自动尝试去下载），然后点击右上角的上传图标，就会从qwen2.5:3b复制出一个模型my-modelfile:latest</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;model&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;my-modelfile&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;from&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;qwen2.5:3b&quot;</span><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="模型">1.2.3 模型</h3><figure><img src="https://s2.loli.net/2025/06/13/3L4ONmARU8iGFa5.png"alt="image-20250613103947977" /><figcaption aria-hidden="true">image-20250613103947977</figcaption></figure><ul><li><p>相关说明：</p><ul><li><p>（1）LLM被禁用后，就无法被看见与使用</p></li><li><p>（2）LLM被隐藏后，只是无法被看见，有权限的用户如果知道某个LLM仍可直接使用</p></li><li><p>（3）此页面看到的LLM都是基础模型，可以修改基础模型的的信息如名称、可见性、系统提示词、知识库、工具等</p></li><li><p>​如果基础模型的可见性是私有并分配给某个（些）自定义权限组了，则其他自定义权限组中用户则无法看见与使用此基础模型（只有系统默认“用户、待激活”角色的用户才能添加到自定义权限组），系统默认“管理员”角色中的用户仍可继续看见与使用此基础模型。</p></li><li><p>（4）如果基础模型的可见性是私有并分配给某个（些）自定义权限组g1了，但在工作空间中基于基础LLM创建一个自定义LLM，如果此自定义LLM是私有的并设置为自定义权限组g1可见，则其他自定义权限组不可看到与使用。</p></li><li><p>​如果基础模型的可见性是私有并分配给某个（些）自定义权限组g1了，但在工作空间中基于基础LLM创建一个自定义LLM，如果此自定义LLM是私有的，可以被设置为自定义权限组g2可见，其他自定义权限组不可看到与使用。</p></li><li><p>​就是说自定义权限组中的用户只能看到“工作空间”中分配给自己权限组的自定义LLM。</p></li><li><p>（5）在工作空间中基于基础LLM创建一个自定义LLM，如果基础LLM被隐藏了，则在会话的下拉模型列表中基础LLM不可见，自定义LLM可以被看见与使用；如果基础LLM被禁用了，则在会话的下拉模型列表中基础LLM不可见，此自定义LLM可以被看见但有一个“external”标识，使用时会报错提示“404:Model not found”</p></li><li><p>（6）以上关于隐藏的相关操作，对系统默认“管理员”角色中的用户都无影响。</p></li></ul></li></ul><h3 id="数据库">1.2.4 数据库</h3><figure><img src="https://s2.loli.net/2025/06/13/N3xIpdgnqmOFbjo.png"alt="image-20250613141651657" /><figcaption aria-hidden="true">image-20250613141651657</figcaption></figure><p>将系统的通用配置导出与导入</p><p>将系统的底层数据库信息导出为.db文件，可以使用开源软件dbeaver打开，然后可以查看其中的数据表等信息</p><p>导出所有用户的对话记录（默认每个用户最多保存 100个会话记录，超过的话就会删除最早的会话记录，且不主动过期）</p><hr /><hr /><figure><img src="https://s2.loli.net/2025/06/11/KkmdEgIhSFZc9Px.png"alt="image-20250611174745413" /><figcaption aria-hidden="true">image-20250611174745413</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">(llamafactory) root@g406011748489384920:~# ollama list<br><br></code></pre></td></tr></table></figure><h1 id="二工作空间">二、工作空间</h1><p>以“管理员”权限组的用户登录系统，才能看到与操作工作空间。</p><figure><img src="https://s2.loli.net/2025/06/12/y23suNlEgx9ndqM.png"alt="image-20250612125405289" /><figcaption aria-hidden="true">image-20250612125405289</figcaption></figure><h2 id="工具">2.1 工具</h2><figure><img src="https://s2.loli.net/2025/06/13/k8fNaIP59E3MdxQ.png"alt="image-20250613150851408" /><figcaption aria-hidden="true">image-20250613150851408</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/pN14hEk3PU6FqyC.png"alt="image-20250613151519202" /><figcaption aria-hidden="true">image-20250613151519202</figcaption></figure><h2 id="提示词">2.2 提示词</h2><figure><img src="https://s2.loli.net/2025/06/13/kC2xeW5EtbwXziM.png"alt="image-20250613153704366" /><figcaption aria-hidden="true">image-20250613153704366</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/9qwsALlPNSI6OEJ.png"alt="image-20250613154010417" /><figcaption aria-hidden="true">image-20250613154010417</figcaption></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini">\<span class="hljs-comment"># 角色</span><br><span class="hljs-comment">## 你是一个聊天助手，能够提取用户提问中的关键词，并给出精简准确的回答。</span><br><br><span class="hljs-comment"># 强烈要求</span><br><span class="hljs-comment">## 如果你不知道提问的答案或者说没有掌握提问相关知识，请直接回复“对不起，我还没有掌握此提问相关知识”，不要凭空捏造内容进行回复。</span><br></code></pre></td></tr></table></figure><h2 id="知识库">2.3 知识库</h2><figure><img src="https://s2.loli.net/2025/06/13/qcgQLjR2uVDX5dS.png"alt="image-20250613154046905" /><figcaption aria-hidden="true">image-20250613154046905</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/Omdx2toXLF73yeI.png"alt="image-20250613154222910" /><figcaption aria-hidden="true">image-20250613154222910</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/qQFhILRWySuj3Pd.png"alt="image-20250613154308566" /><figcaption aria-hidden="true">image-20250613154308566</figcaption></figure><p>上传文件到知识库中时，会使用嵌入模型将文件向量化，使用上述容器化方式部署open-webui0.6.5时，默认使用的嵌入模型是sentence-transformers/all-MiniLM-L6-v2，可以通过如下命令查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">宿主机上</span><br>(llamafactory) root@g406011748489384920:~/.cache/modelscope/hub/models# docker inspect open-webui | grep EMBEDDING<br>                &quot;USE_EMBEDDING_MODEL_DOCKER=sentence-transformers/all-MiniLM-L6-v2&quot;,<br>                &quot;RAG_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2&quot;,<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">容器化</span><br>root@e38be1309275:/app/backend# env | grep EMBEDDING<br>USE_EMBEDDING_MODEL_DOCKER=sentence-transformers/all-MiniLM-L6-v2<br>RAG_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2<br></code></pre></td></tr></table></figure><p>在管理员面板-&gt;设置-&gt;文档页面，也可以看到嵌入模型及其相关向量化与召回配置：</p><figure><img src="https://s2.loli.net/2025/06/13/pZnwtM9OKTzj4r6.png"alt="image-20250613160635090" /><figcaption aria-hidden="true">image-20250613160635090</figcaption></figure><h2 id="模型-1">2.4 模型</h2><p>模型配置：</p><figure><img src="https://s2.loli.net/2025/06/13/PFkl8gUy7wAjEqc.png"alt="image-20250613160720802" /><figcaption aria-hidden="true">image-20250613160720802</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/2OKAClnhoNzSdHZ.png"alt="image-20250613161637049" /><figcaption aria-hidden="true">image-20250613161637049</figcaption></figure><p>模型使用：</p><figure><img src="https://s2.loli.net/2025/06/13/Drwvtbk6CZogpd2.png"alt="image-20250613162150701" /><figcaption aria-hidden="true">image-20250613162150701</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/b4nHZ5zBopSkWQG.png"alt="image-20250613170340370" /><figcaption aria-hidden="true">image-20250613170340370</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/13/7RfojHxetV1NOsr.png"alt="image-20250613170517086" /><figcaption aria-hidden="true">image-20250613170517086</figcaption></figure><h1 id="三设置">三、设置</h1><h2 id="通用-1">3.1 通用</h2><figure><img src="https://s2.loli.net/2025/06/13/uECXbAnKcqB94sg.png"alt="image-20250613171150498" /><figcaption aria-hidden="true">image-20250613171150498</figcaption></figure><h2 id="对话">3.2 对话</h2><figure><img src="https://s2.loli.net/2025/06/13/WFUbwZXsLyCivM3.png"alt="image-20250613171931810" /><figcaption aria-hidden="true">image-20250613171931810</figcaption></figure><h2 id="账号">3.3 账号</h2><figure><img src="https://s2.loli.net/2025/06/13/I2ZYLUmkWypP83e.png"alt="image-20250613170815466" /><figcaption aria-hidden="true">image-20250613170815466</figcaption></figure><p>其实在 调用本地 Ollama 模型时，如果使用的是 OpenAI 兼容协议并通过openai Python SDK 接入时，不会校验 api_key，但必须有这个字段，所以可以随便填写一个值。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有LLM</span><br>(llamafactory) root@g406011748489384920:/opt/jiangsy# ollama list<br>NAME              ID              SIZE      MODIFIED     <br>qwen2.5:1.5b      65ec06548149    986 MB    25 hours ago    <br>phi3:latest       4f2222927938    2.2 GB    2 days ago      <br>qwen2.5:3b        357c53fb659c    1.9 GB    2 days ago      <br>deepseek-r1:7b    755ced02ce7b    4.7 GB    2 weeks ago<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#通过python sdk调用LLM示例</span><br><span class="hljs-keyword">from</span> openai <span class="hljs-keyword">import</span> OpenAI<br><br>client = OpenAI(<br>    <span class="hljs-comment">#api_key=&quot;sk-7800dc8fded44016b70814bf80f4c78f&quot;,</span><br>    api_key = <span class="hljs-string">&quot;aaa&quot;</span>,<br>    base_url=<span class="hljs-string">&quot;http://localhost:11434/v1&quot;</span><br>)<br>models = client.models.<span class="hljs-built_in">list</span>()<br><br>messages=[<br>        &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;system&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;You are a helpful assistant.&quot;</span>&#125;,<br>        &#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;证明必达格拉斯定理&quot;</span>&#125;<br>    ]<br>params = &#123;<br>        <span class="hljs-string">&quot;model&quot;</span>: <span class="hljs-string">&quot;qwen2.5:1.5b&quot;</span>,<br>        <span class="hljs-string">&quot;messages&quot;</span>: messages,<br>        <span class="hljs-string">&quot;stream&quot;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&quot;timeout&quot;</span>: <span class="hljs-number">600</span>,<br>        <span class="hljs-string">&quot;temperature&quot;</span>: <span class="hljs-number">0.0</span>,<br>    &#125;<br><br>stream = client.chat.completions.create(**params)<br><br><span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> stream:<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> chunk.choices <span class="hljs-keyword">or</span> chunk.choices[<span class="hljs-number">0</span>].delta.content <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-built_in">print</span>(chunk.choices[<span class="hljs-number">0</span>].delta.content, end=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>()<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">调用成功，但LLM的回复是不正确的，此时需要对其进行微调或联网</span><br>(llamafactory) root@g406011748489384920:/opt/jiangsy# python call-llm-by-python-sdk02.py <br>必达格拉斯定理（Perron-Frobenius Theorem）是线性代数和矩阵理论中的一个重要结果，它描述了非奇异的实对称矩阵的特征向量的一些性质。这个定理在许多领域都有应用，包括机器学习、信号处理和控制论等。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 必达格拉斯定理的内容</span></span><br><br>必达格拉斯定理主要涉及的是一个实对称矩阵 \( A \) 的特征值和特征向量。对于非奇异的实对称矩阵 \( A \)，以下结论成立：<br><br>1. **最大特征值**：\( A \) 有一个最大的正实部特征值，称为 \( A \) 的 **谱半径**（spectral radius），记为 \( r(A) \)。<br>2. **特征向量的正性**：对于 \( A \) 的所有正实部特征值，对应的特征向量都是正向量。换句话说，如果 \( \lambda \) 是 \( A \) 的一个正实部特征值，则 \( x \) 是 \( A \) 对应的正向量。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 证明</span></span><br><br>证明必达格拉斯定理通常涉及几个关键步骤：<br><br>1. **矩阵对称性**：首先，我们注意到 \( A \) 是一个实对称矩阵。这意味着 \( A = A^T \)，即 \( A \) 的转置等于它本身。<br>2. **特征值的性质**：由于 \( A \) 是实对称的，它的特征值是实数，并且可以被归一化为正实部的特征向量。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 证明过程</span></span><br><br>1. **最大特征值的存在性**：<br>   - 首先，我们证明存在一个最大的正实部特征值。考虑 \( A \) 的所有特征值 \( \lambda_1, \lambda_2, \ldots, \lambda_n \)，其中 \( n = \text&#123;rank&#125;(A) \) 是矩阵的秩。<br>   - 由于 \( A \) 是实对称的，它的特征值是实数。因此，我们可以考虑这些特征值在复平面中的部分。<br><br>2. **正向量的存在性**：<br>   - 对于每个正实部的特征值 \( \lambda_i \)，我们可以通过归一化找到一个对应的正向量 \( x_i \)。<br>   - 由于 \( A \) 是非奇异的，它的秩等于其维度，即 \( n = \text&#123;rank&#125;(A) \)。这意味着存在一个正实部的特征值。<br><br>3. **最大特征值的存在性**：<br>   - 我们可以证明存在一个最大的正实部特征值。考虑所有正实部的特征值和它们对应的正向量。<br>   - 由于 \( A \) 是非奇异的，它的秩等于其维度，即 \( n = \text&#123;rank&#125;(A) \)。这意味着存在一个正实部的特征值。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 结论</span></span><br><br>综上所述，必达格拉斯定理表明对于非奇异的实对称矩阵 \( A \)，它有一个最大的正实部特征值，并且对应于这个最大特征值的所有特征向量都是正向量。这在许多应用中是重要的，特别是在信号处理和控制理论中。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 参考文献</span></span><br><br>- **参考文献**：《线性代数及其应用》（Linear Algebra and Its Applications），作者：Gilbert Strang<br>  - 这本书详细介绍了矩阵理论中的各种定理和证明方法。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openwebui-v0.6.5学习01-部署</title>
    <link href="/2025/06/11/openwebui-v0.6.5%E5%AD%A6%E4%B9%A001-%E9%83%A8%E7%BD%B2/"/>
    <url>/2025/06/11/openwebui-v0.6.5%E5%AD%A6%E4%B9%A001-%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="一文档与服务器信息">一、文档与服务器信息</h1><h2 id="参考文档">1.1 参考文档</h2><p>github地址： https://github.com/open-webui/open-webui</p><p>环境变量解析：https://docs.openwebui.com/getting-started/env-configuration</p><p>监控open-webui：https://docs.openwebui.com/getting-started/advanced-topics/monitoring</p><h2 id="服务器信息">1.2 服务器信息</h2><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>g406011748489384920</td><td>10.11.15.190(vpc)<br/>10.251.19.46(浮动ip)</td><td>Ubuntu 22.04.5 LTS -amd64</td><td>12c20g+100G</td><td>GeForce RTX 4060 *1</td><td>OpenStack虚拟机</td></tr></tbody></table><h1 id="二容器化部署">二、容器化部署</h1><p>我的环境有点特殊，OpenStack的vxlan网络mtu值是1450，然后虚拟机、容器桥接网络的mtu值都要相同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker network create \<br>  --driver=bridge \<br>  --opt com.docker.network.driver.mtu=1450 \<br>  mynet<br></code></pre></td></tr></table></figure><h2 id="以默认配置安装">2.1 以默认配置安装</h2><h3 id="只使用cpu">2.1.1 只使用CPU</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1）如果ollma服务运行在本机</span><br>docker run -d \<br>    -p 18080:8080 \<br>    --network=mynet \<br>    --add-host=host.docker.internal:host-gateway \<br>    --volume=open-webui:/app/backend/data \<br>    --name open-webui \<br>    --restart always \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.6.5<br><span class="hljs-meta prompt_">#</span><span class="language-bash">-d 是说容器以后台模式运行</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--network=mynet 容器使用自定义docker network</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--volume 是将openwebui容器中的数据存放目录“/app/backend/data”映射到宿主机上的名为open-webui这个docker volume，这样即使容器停止甚至删除，先前的数据还在，可以尽量保障数据安全性</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--name open-webui 为容器指定名称。否则会得到一个随机字符串名称</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--restart always 容器在宿主机重启或docker服务重启后，总是会自动重启（如果是手动stop它，就不会重启了）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令假设ollama服务就部署在本机上，openwebui服务默认认为ollama服务的监听地址是host.docker.internal:11434</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2）如果ollma服务运行在它机</span><br>docker run -d \<br>    -p 18080:8080 \<br>    --network=mynet \<br>    --add-host=host.docker.internal:host-gateway \<br>    --volume=open-webui:/app/backend/data \<br>    --name open-webui \<br>    --restart always \<br>    -e OLLAMA_BASE_URL=http://它机IP:11434 \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.6.5<br></code></pre></td></tr></table></figure><p>运行上述命令后，可以使用如下命令查看open-webui容器的状态（每隔两秒刷新一次），如果其状态变更为healthy（可能需要等待几分钟），就可以访问其web界面了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">watch docker ps -a --filter &quot;name=open-webui&quot;<br><br>(llamafactory) root@g406011748489384920:/opt/code_repos/dify# docker ps -a --filter &quot;name=open-webui&quot;<br>CONTAINER ID   IMAGE                                                                           COMMAND           CREATED          STATUS                    PORTS                                           NAMES<br>e38be1309275   swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.6.5   &quot;bash start.sh&quot;   34 minutes ago   Up 31 minutes (healthy)   0.0.0.0:18080-&gt;8080/tcp, [::]:18080-&gt;8080/tcp   open-webui<br></code></pre></td></tr></table></figure><p>访问<code>10.251.19.46:18080</code>，注册后，看到如下界面信息：</p><figure><img src="https://s2.loli.net/2025/06/11/Ry2eTNkwFnmsQuA.png"alt="image-20250611113651134" /><figcaption aria-hidden="true">image-20250611113651134</figcaption></figure><p>在open-webui中与ollama中管理的模型进行对话：</p><figure><img src="https://s2.loli.net/2025/06/11/HZaEofc4psnDzeY.png"alt="image-20250611153012775" /><figcaption aria-hidden="true">image-20250611153012775</figcaption></figure><h3 id="使用gpu">2.1.2 使用GPU</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d \<br>    -p 18080:8080 \<br>    --gpus=all \<br>    --network=mynet \<br>    --add-host=host.docker.internal:host-gateway \<br>    --volume=open-webui:/app/backend/data \<br>    --name open-webui \<br>    --restart always \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.6.5<br></code></pre></td></tr></table></figure><h2 id="安装后仅使用openai模型">2.2 安装后仅使用openai模型</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d \<br>  -p 18080:8080 \<br>  -e OPENAI_API_KEY=自己的openai-api-key \<br>  -v open-webui:/app/backend/data \<br>  --name open-webui \<br>  --restart always \<br>  ghcr.io/open-webui/open-webui:main<br><span class="hljs-meta prompt_">#</span><span class="language-bash">OPENAI_API_KEY 就是自己在openai 官网申请的api key，用于访问openai的大模型</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">这种方式需要魔法，大陆应该基本上用不上</span><br></code></pre></td></tr></table></figure><h1 id="三通过python-pip安装">三、通过python-pip安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用conda创建python3.11 虚拟机环境</span><br>(base) root@ksp-registry:~# conda create -n py3.11 python=3.11<br>(base) root@ksp-registry:~# conda activate py3.11<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装Open WebUI</span><br>(py3.11) root@ksp-registry:~# pip install open-webui<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置模型文件下载需用到的镜像网站</span><br>(py3.11) root@ksp-registry:~# export HF_ENDPOINT=https://hf-mirror.com<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">相关环境变量跟容器中基本相同，比如OLLAMA_BASE_URL，更多环境变量参考https://docs.openwebui.com/getting-started/env-configuration</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">比如要设置OLLAMA_BASE_URL变量：</span><br>export OLLAMA_BASE_URL=http://localhost:11434<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动Open WebUI服务（如果要指定服务监听端口，使用“--port 8081”）</span><br>(py3.11) root@ksp-registry:~# open-webui serve<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载的 内置模型文件（例如 VAD 模型、reranker、语音模型等） 默认存放在如下目录是：/root/.cache/huggingface/hub/</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">open-webui服务的默认监听端口是8080。访问 http://localhost:8080</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">ksp-registry服务器（ip为172.20.0.22）上ollama管理的LLM</span><br>(py3.11) root@ksp-registry:~# ollama list<br>NAME                                   ID              SIZE      MODIFIED   <br>qwen2.5:32b                            9f13ba1299af    19 GB     2 days ago    <br>linux6200/bge-reranker-v2-m3:latest    abf5c6d8bc56    1.2 GB    2 days ago    <br>nomic-embed-text:v1.5                  0a109f422b47    274 MB    2 days ago    <br>qwen3:32b                              030ee887880f    20 GB     4 days ago    <br>qwen2.5-72b-it-Q4_K_M-LOT:latest       5b52a20c9d44    48 GB     5 days ago<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/06/11/lv5EwzYXs2rF7uJ.png"alt="image-20250611170821831" /><figcaption aria-hidden="true">image-20250611170821831</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FastGPT与Dify功能对比</title>
    <link href="/2025/06/05/FastGPT%E4%B8%8EDify%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94/"/>
    <url>/2025/06/05/FastGPT%E4%B8%8EDify%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="一常用功能对比表">一、常用功能对比表</h1><table><thead><tr><th>Fastgpt与Dify功能对比一览表</th><th></th><th></th></tr></thead><tbody><tr><td>软件</td><td>Fastgpt</td><td>Dify</td></tr><tr><td>开源</td><td>是</td><td>开源</td></tr><tr><td>商用</td><td>3万</td><td>免费</td></tr><tr><td>支持的LLMS</td><td>OpenAI</td><td>大部分</td></tr><tr><td>知识库</td><td>支持</td><td>支持</td></tr><tr><td>知识库文档批量上传</td><td>支持</td><td>不支持</td></tr><tr><td>RGA引擎</td><td>支持</td><td>支持</td></tr><tr><td>本地部署</td><td>支持</td><td>支持</td></tr><tr><td>团队权限设置</td><td>支持</td><td>不支持</td></tr><tr><td>插件</td><td>支持</td><td>支持</td></tr><tr><td>插件库</td><td>空</td><td>丰富</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dify1.4.1学习02-进行基础配置</title>
    <link href="/2025/06/03/dify1.4.1%E5%AD%A6%E4%B9%A002-%E8%BF%9B%E8%A1%8C%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/06/03/dify1.4.1%E5%AD%A6%E4%B9%A002-%E8%BF%9B%E8%A1%8C%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="一配置语言与时区">一、配置语言与时区</h1><figure><img src="https://s2.loli.net/2025/06/03/SHNmyIog2jLcRDw.png"alt="image-20250603162838074" /><figcaption aria-hidden="true">image-20250603162838074</figcaption></figure><p>从默认的西五区纽约时间改成东八区北京时间：</p><figure><img src="https://s2.loli.net/2025/06/03/1qe3lFWZBUwxAnS.png"alt="image-20250603163057486" /><figcaption aria-hidden="true">image-20250603163057486</figcaption></figure><h1 id="二安装配置模型供应商">二、安装配置模型供应商</h1><h2 id="安装模型供应商">2.1 安装模型供应商</h2><h3 id="以在线方式安装模型供应商">2.1.1 以在线方式安装模型供应商</h3><figure><img src="https://s2.loli.net/2025/06/03/DXpb4iHAPBolNL5.png"alt="image-20250603150122644" /><figcaption aria-hidden="true">image-20250603150122644</figcaption></figure><p>以下尝试以在线方式安装国产的“深度求索”模型供应商。</p><figure><img src="https://s2.loli.net/2025/06/03/asx6jJnKXt5HV9D.png"alt="image-20250603150347954" /><figcaption aria-hidden="true">image-20250603150347954</figcaption></figure><h3 id="以离线插件方式安装模型供应商">2.1.2以离线插件方式安装模型供应商</h3><p>在 Dify 1.4.1版本中，模型供应商可以通过插件的方式安装。此处以“本地插件”的方式来相关模型供应商。</p><h4 id="下载deepseek相关模型供应商插件">2.1.2.1下载deepseek相关模型供应商插件</h4><p>访问 Dify插件市场（https://marketplace.dify.ai/），搜索<code>deepseek</code> 并下载 <code>.difypkg</code> 文件。</p><figure><img src="https://s2.loli.net/2025/06/03/yYR7HQ15rtMe8a6.png"alt="image-20250603153025291" /><figcaption aria-hidden="true">image-20250603153025291</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/03/5wr7kIhbuFElDWP.png"alt="image-20250603153037303" /><figcaption aria-hidden="true">image-20250603153037303</figcaption></figure><p>点击上图中的代表“下载”的图标后，正常时可以下载得到一个文件<code>langgenius-deepseek_0.0.5.difypkg</code>，保存在本地备用。</p><h4 id="本地插件方式安装插件">2.1.2.2 本地插件方式安装插件</h4><p>进入插件列表页面：</p><figure><img src="https://s2.loli.net/2025/06/03/EBqoKcjQYHOUiMa.png"alt="image-20250603153327091" /><figcaption aria-hidden="true">image-20250603153327091</figcaption></figure><p>按照上图标注的文字，通过“本地插件”的方式安装插件（会提示用户选中本地保存的插件离线安装文件）：</p><figure><img src="https://s2.loli.net/2025/06/03/h1UaPNBRbmeniMJ.png"alt="image-20250603153437474" /><figcaption aria-hidden="true">image-20250603153437474</figcaption></figure><p>安装成功时，如下：</p><figure><img src="https://s2.loli.net/2025/06/03/c3AVW4obp8gaeIG.png"alt="image-20250603153533147" /><figcaption aria-hidden="true">image-20250603153533147</figcaption></figure><p>同时在插件列表页面也可看到已经安装的插件：</p><figure><img src="https://s2.loli.net/2025/06/03/AcCbFeH5WvmShyt.png"alt="image-20250603153704280" /><figcaption aria-hidden="true">image-20250603153704280</figcaption></figure><h4 id="安装常用本地模型供应商">2.1.2.3 安装常用本地模型供应商</h4><p>我们本地开发产品或使用时，一般都是自己在自己的服务器上部署开源LLM。部署开源LLM时使用的推理服务常用的有ollama与vllm。所以此处把这两个模型供应商都安装上。</p><figure><img src="https://s2.loli.net/2025/06/17/3H2yI9kMVnJLFNW.png"alt="image-20250617103203228" /><figcaption aria-hidden="true">image-20250617103203228</figcaption></figure><h2 id="配置模型供应商">2.2 配置模型供应商</h2><p>以下ollama与vllm都是部署在同一个服务器（其实是一个OpenStack虚拟机），dify1.4.1也部署在此服务器上。此服务器的内网IP：10.11.15.190，浮动IP： 10.251.19.46 。</p><h3 id="配置深度求索模型供应商">2.2.1 配置深度求索模型供应商</h3><figure><img src="https://s2.loli.net/2025/06/03/SOt2ZlCoYwQ3VzW.png"alt="image-20250603160952200" /><figcaption aria-hidden="true">image-20250603160952200</figcaption></figure><p>填写api key：</p><figure><img src="https://s2.loli.net/2025/06/03/2WoaIxQhdPLwrKA.png"alt="image-20250603161405917" /><figcaption aria-hidden="true">image-20250603161405917</figcaption></figure><p>查看模型列表：</p><figure><img src="https://s2.loli.net/2025/06/03/Qc4ptvGyoCNziU2.png"alt="image-20250603161916158" /><figcaption aria-hidden="true">image-20250603161916158</figcaption></figure><h3 id="配置ollama模型供应商">2.2.2 配置ollama模型供应商</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">systemd管理ollama服务</span><br>(llamafactory) root@g406011748489384920:~# cat /etc/systemd/system/ollama.service <br>[Unit]<br>Description=Ollama Service<br>After=network-online.target<br><br>[Service]<br>ExecStart=/usr/local/bin/ollama serve<br>User=ollama<br>Group=ollama<br>Restart=always<br>RestartSec=3<br>Environment=&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&quot;<br>Environment=&quot;OLLAMA_HOST=0.0.0.0&quot;<br><br>[Install]<br>WantedBy=default.target<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ollama服务监听端口是默认的11434，可从任意服务器访问</span><br>(llamafactory) root@g406011748489384920:~# ss -antlup | grep ollama<br>tcp   LISTEN 0      4096                   *:11434            *:*    users:((&quot;ollama&quot;,pid=3455491,fd=3))          <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看ollama当前管理的大模型</span><br>(llamafactory) root@g406011748489384920:~# ollama list<br>NAME              ID              SIZE      MODIFIED    <br>qwen2.5:1.5b      65ec06548149    986 MB    4 days ago       <br>qwen2.5:3b        357c53fb659c    1.9 GB    5 days ago     <br>deepseek-r1:7b    755ced02ce7b    4.7 GB    2 weeks ago    <br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/06/17/NUDWm4cuGqZrCaT.png" alt="image-20250617105808763" style="zoom:67%;" /></p><figure><img src="https://s2.loli.net/2025/06/17/EUckyLGhTZXiRtH.png"alt="image-20250617105901534" /><figcaption aria-hidden="true">image-20250617105901534</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建新目录，假设/mnt/ 是一个新磁盘分区挂载的目录</span><br>mkdir /mnt/ollama/.ollama/models -p<br>systemctl status ollama<br>systemctl stop ollama<br><span class="hljs-meta prompt_">#</span><span class="language-bash">/usr/share/ollama/.ollama/models 是ollama存储模型文件的默认目录</span><br>mv /usr/share/ollama/.ollama/models /mnt/ollama/.ollama/<br><br>vi /etc/systemd/system/ollama.service<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在[Service]下面添加如下内容：Environment=<span class="hljs-string">&quot;OLLAMA_MODELS=/mnt/ollama/.ollama/models&quot;</span></span><br><br>systemctl daemon-reload &amp;&amp; systemctl restart ollama &amp;&amp; systemctl enable ollama<br>ollama list<br></code></pre></td></tr></table></figure><h3 id="配置vllm模型供应商">2.2.3 配置vllm模型供应商</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以容器方式启动vllm进程</span><br>docker run --runtime nvidia --name vllm --gpus all \<br>  -v /root/.cache/modelscope/hub/models/Qwen/Qwen3-0.6B:/model \<br>  -p 8000:8000 \<br>  --ipc=host \<br>  swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai:v0.9.1 \<br>  --model /model \<br>  --served-model-name qwen3-0.6b<br><span class="hljs-meta prompt_">#</span><span class="language-bash">vLLM 当前一次仅支持加载并运行一个大模型。如果要支持多个模型，可以运行多个 Docker 容器，每个容器加载不同模型，监听不同端口</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有模型</span><br>curl http://localhost:8000/v1/models<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">模型名： qwen3-0.6b</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">vllm服务base url： http://10.11.15.190:8000/v1</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/06/17/sW5oTE1fcwzUFhC.png" alt="image-20250617175010391" style="zoom: 67%;" /></p><figure><img src="https://s2.loli.net/2025/06/17/yqi9MQB5RsDxrPA.png"alt="image-20250617175639704" /><figcaption aria-hidden="true">image-20250617175639704</figcaption></figure><h2 id="系统模型设置">2.3 系统模型设置</h2><p>由于DeepSeek官方只提供了可用于”系统推理模型“的LLM，其他模型如Embedding模型、Rerank模型等，可以通过安装通义千问插件并添加其apikey以使用。以下我一共安装与配置了3个插件：深度求索、通义千问与硅基流动。</p><figure><img src="https://s2.loli.net/2025/06/04/LIqV9yilvTnjJDM.png"alt="image-20250604171434390" /><figcaption aria-hidden="true">image-20250604171434390</figcaption></figure><p>如果是自己开发与学习，建议安装、配置好ollama或vllm模型供应商，然后在系统模型设置中优先使用ollama或vllm中的模型</p>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dify1.4.1学习01-使用docker-compose部署</title>
    <link href="/2025/06/03/dify1.4.1%E5%AD%A6%E4%B9%A001-%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2/"/>
    <url>/2025/06/03/dify1.4.1%E5%AD%A6%E4%B9%A001-%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文档">一、参考文档</h1><ul><li>官方部署文档：<ul><li>https://docs.dify.ai/en/getting-started/install-self-hosted/docker-compose</li></ul></li></ul><h1 id="二环境信息">二、环境信息</h1><ul><li><p>服务器信息：</p><ul><li><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>g406011748489384920</td><td>10.11.15.190(VPC)<br />10.251.19.46(浮动IP)</td><td>Ubuntu 22.04.5 LTS</td><td>12c20g+100G</td><td>NVIDIA GeForce RTX 4060*1</td><td></td></tr></tbody></table></li></ul></li></ul><p>此文档使用docker-compose的方式来部署dify。</p><h1 id="三部署操作">三、部署操作</h1><h2 id="下载安装源码">3.1 下载安装源码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">current latest version is 1.4.1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果太慢或一直拉取失败就先导入到gitee中再拉取（https://gitee.com/sy-jiang/dify.git）</span><br>(llamafactory) root@g406011748489384920:/opt/code_repos# git clone https://github.com/langgenius/dify.git --branch 1.4.1<br></code></pre></td></tr></table></figure><h2 id="安装docker">3.2 安装Docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖组件</span><br>root@g406011748489384920:~# apt install apt-transport-https ca-certificates curl gnupg lsb-release<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有弹出窗口提示哪些服务或守护进程要重启，保持默认即可。</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">从阿里云镜像站下载 Docker CE 的 GPG 密钥，并将其添加到系统的 APT 密钥链中</span><br>root@g406011748489384920:~# curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加阿里云的docker-ce安装源，比默认使用的官方安装源要快些</span><br>root@g406011748489384920:~# add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行安装docker-ce</span><br>root@g406011748489384920:~# apt install docker-ce docker-ce-cli containerd.io<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有弹出窗口提示哪些服务或守护进程要重启，保持默认即可。</span><br><br>root@g406011748489384920:~# vi /etc/docker/daemon.json<br>&#123;<br>    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>    &quot;dns&quot;: [<br>        &quot;223.5.5.5&quot;,<br>        &quot;223.6.6.6&quot;,<br>        &quot;8.8.8.8&quot;<br>    ],<br>    &quot;log-opts&quot;: &#123;<br>        &quot;max-file&quot;: &quot;5&quot;,<br>        &quot;max-size&quot;: &quot;50m&quot;<br>    &#125;,<br>    &quot;registry-mirrors&quot;: [<br>        &quot;https://hub.rat.dev&quot;,<br>        &quot;https://registry.aliyuncs.com&quot;,<br>        &quot;https://registry.docker-cn.com&quot;,<br>        &quot;https://docker.chenby.cn&quot;,<br>        &quot;https://docker.registry.cyou&quot;,<br>        &quot;https://docker-cf.registry.cyou&quot;,<br>        &quot;https://dockercf.jsdelivr.fyi&quot;,<br>        &quot;https://docker.jsdelivr.fyi&quot;,<br>        &quot;https://dockertest.jsdelivr.fyi&quot;,<br>        &quot;https://dockerproxy.com&quot;,<br>        &quot;https://docker.m.daocloud.io&quot;,<br>        &quot;https://docker.nju.edu.cn&quot;,<br>        &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>        &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>        &quot;https://mirror.iscas.ac.cn&quot;,<br>        &quot;https://docker.rainbond.cc&quot;<br>    ]<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启docker</span><br>root@g406011748489384920:~# systemctl daemon-reload<br>root@g406011748489384920:~# systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="安装docker-compose">3.3 安装docker-compose</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@g406011748489384920:/opt# mkdir /opt/instakkPkgs<br>root@g406011748489384920:/opt# cd /opt/instakkPkgs/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">直接下载二进制可执行文件</span><br>root@g406011748489384920:/opt/instakkPkgs# curl -L &quot;https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-$(uname -m)&quot; -o /usr/local/bin/docker-compose<br><span class="hljs-meta prompt_">#</span><span class="language-bash">赋予可执行权限</span><br>root@g406011748489384920:/opt/instakkPkgs# chmod +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><h2 id="执行部署相关命令">3.4 执行部署相关命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">备份相关文件</span><br>root@g406011748489384920:/opt/code_repos/dify/docker# cp .env.example .env &amp;&amp; cp docker-compose.yaml docker-compose.yaml.bak<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改.<span class="hljs-built_in">env</span>文件</span><br>root@g406011748489384920:/opt/code_repos/dify/docker# vi .env<br>PLUGIN_PYTHON_ENV_INIT_TIMEOUT=120   ---&gt;   PLUGIN_PYTHON_ENV_INIT_TIMEOUT=600<br>PIP_MIRROR_URL=                      ---&gt;   PIP_MIRROR_URL=https://pypi.tuna.tsinghua.edu.cn/simple<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改docker-compose.yaml文件（这个是自己OpenStack虚拟机的特殊配置，此虚拟机创建时使用的是vxlan网络，此vxlan网络在Openstack中对应一个vxlan类型</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">网络条目，此vxlan类型网络条目有一个mtu属性，其默认值是1450，创建虚拟机时使用此vxlan网络，然后虚拟机被分配得到一个网卡ens3，其对应的IP是</span> <br><span class="hljs-meta prompt_"># </span><span class="language-bash">10.11.15.190，然后虚拟机操作系统上有一个文件值即“/sys/class/net/ens3/mtu”也继承Openstack此vxlan类型网络条目的mtu属性值。但使用docker</span> <br><span class="hljs-meta prompt_"># </span><span class="language-bash">network create创建容器网络时如果没有明确声明mtu值，其默认值却是1500。虚拟机上mtu值与容器网络的mtu值不一致，就会出现网络通信问题，此时在创建容器</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">网络时要明确指定其mtu值，保持二者相同。）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">1）在docker-compose.yaml文件中的network块下添加如下内容</span><br>root@g406011748489384920:/opt/code_repos/dify/docker# vi docker-compose.yaml<br>networks:<br><span class="hljs-meta prompt_">  # </span><span class="language-bash">create a network between sandbox, api and ssrf_proxy, and can not access outside.</span><br>  default:<br>    driver: bridge<br>    driver_opts:<br>      com.docker.network.driver.mtu: &quot;1450&quot;<br>  milvus:<br>    driver: bridge<br>    driver_opts:<br>      com.docker.network.driver.mtu: &quot;1450&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">2）db、plugin_daemon、nginx、weaviate、web、worker、redis下添加一个networks: docker_default ，即如下：（此操作可省）</span><br>  plugin_daemon:<br>    image: langgenius/dify-plugin-daemon:0.1.1-local<br>    networks:<br>      - default<br>    ...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">启动dify服务</span><br>root@g406011748489384920:/opt/code_repos/dify/docker# docker-compose up -d<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有容器的状态</span><br>(llamafactory) root@g406011748489384920:/opt/code_repos/dify/docker# docker-compose ps<br>NAME                     IMAGE                                       COMMAND                  SERVICE         CREATED          STATUS                    PORTS<br>docker-api-1             langgenius/dify-api:1.4.1                   &quot;/bin/bash /entrypoi…&quot;   api             32 seconds ago   Up 29 seconds             5001/tcp<br>docker-db-1              postgres:15-alpine                          &quot;docker-entrypoint.s…&quot;   db              38 seconds ago   Up 32 seconds (healthy)   5432/tcp<br>docker-nginx-1           nginx:latest                                &quot;sh -c &#x27;cp /docker-e…&quot;   nginx           32 seconds ago   Up 28 seconds             0.0.0.0:80-&gt;80/tcp, [::]:80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, [::]:443-&gt;443/tcp<br>docker-plugin_daemon-1   langgenius/dify-plugin-daemon:0.1.1-local   &quot;/bin/bash -c /app/e…&quot;   plugin_daemon   32 seconds ago   Up 29 seconds             0.0.0.0:5003-&gt;5003/tcp, [::]:5003-&gt;5003/tcp<br>docker-redis-1           redis:6-alpine                              &quot;docker-entrypoint.s…&quot;   redis           38 seconds ago   Up 32 seconds (healthy)   6379/tcp<br>docker-sandbox-1         langgenius/dify-sandbox:0.2.12              &quot;/main&quot;                  sandbox         38 seconds ago   Up 32 seconds (healthy)   <br>docker-ssrf_proxy-1      ubuntu/squid:latest                         &quot;sh -c &#x27;cp /docker-e…&quot;   ssrf_proxy      38 seconds ago   Up 32 seconds             3128/tcp<br>docker-weaviate-1        semitechnologies/weaviate:1.19.0            &quot;/bin/weaviate --hos…&quot;   weaviate        38 seconds ago   Up 32 seconds             <br>docker-web-1             langgenius/dify-web:1.4.1                   &quot;/bin/sh ./entrypoin…&quot;   web             38 seconds ago   Up 32 seconds             3000/tcp<br>docker-worker-1          langgenius/dify-api:1.4.1                   &quot;/bin/bash /entrypoi…&quot;   worker          32 seconds ago   Up 29 seconds             5001/tcp<br><br></code></pre></td></tr></table></figure><h2 id="登录web界面继续部署">3.5 登录web界面继续部署</h2><p>浏览器访问：http://10.251.19.46/install，输入管理员的相关信息后，点击设置</p><figure><img src="https://s2.loli.net/2025/06/03/uWIpoUAhLK1bJya.png"alt="image-20250603143953358" /><figcaption aria-hidden="true">image-20250603143953358</figcaption></figure><p>然后使用上述管理员信息登录，即可看到dify1.4.1如下界面：</p><figure><img src="https://s2.loli.net/2025/06/03/Wgn4Lmu6jiGNhzq.png"alt="image-20250603144140386" /><figcaption aria-hidden="true">image-20250603144140386</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学习【2025年中国AIGC应用全景图谱报告总结】</title>
    <link href="/2025/06/02/%E5%AD%A6%E4%B9%A0%E3%80%902025%E5%B9%B4%E4%B8%AD%E5%9B%BDAIGC%E5%BA%94%E7%94%A8%E5%85%A8%E6%99%AF%E5%9B%BE%E8%B0%B1%E6%8A%A5%E5%91%8A%E6%80%BB%E7%BB%93%E3%80%91/"/>
    <url>/2025/06/02/%E5%AD%A6%E4%B9%A0%E3%80%902025%E5%B9%B4%E4%B8%AD%E5%9B%BDAIGC%E5%BA%94%E7%94%A8%E5%85%A8%E6%99%AF%E5%9B%BE%E8%B0%B1%E6%8A%A5%E5%91%8A%E6%80%BB%E7%BB%93%E3%80%91/</url>
    
    <content type="html"><![CDATA[<h1 id="一本文内容概述">一、本文内容概述</h1><p>《2025年中国AIGC应用全景图谱报告》是量子位智库的年度核心研究成果，基于对国内上千款AI产品的长期追踪与系统性研究，以全景式视角呈现了国内AI产业生态的竞争格局与创新脉络。该报告围绕C端消费市场、B端产业应用和开发层工具三大核心维度，共涵盖50多个细分赛道及400多个头部产品，深入分析了产品格局变动背后的原因和长期趋势。</p><p>以下内容来自于自己对《2025年中国AIGC应用全景图谱报告》的学习，结合对AIGC的从业从业与使用体验，最终总结而成。上述图片绝大部分来自《2025年中国AIGC应用全景图谱报告》中附图，软件工程AI化中相关AI编程助手使用的截图来本人，本文部分内容有借助于AI进行润色。</p><p><strong>需要此《2025年中国AIGC应用全景图谱报告》原文件的，可以关注本公众号，后台回复“报告”领取。</strong></p><p>以下是截至2025年3月底的中国AIGC应用全景图谱。</p><figure><img src="https://s2.loli.net/2025/06/02/YIzonPm2vahGuZt.png"alt="image-20250602205712697" /><figcaption aria-hidden="true">image-20250602205712697</figcaption></figure><h1 id="二aigc应用趋势总览">二、AIGC应用趋势总览</h1><h2 id="模型层趋势">2.1 模型层趋势</h2><ol type="1"><li><p>大模型普惠化：新模型架构和训练策略优化推动大模型普惠，使AI技术更加平民化。</p><figure><img src="https://s2.loli.net/2025/06/02/nGtVJaAxM76KZWI.png"alt="image-20250602193309301" /><figcaption aria-hidden="true">image-20250602193309301</figcaption></figure></li><li><p>模型协作创新范式：厂商更关注成本效率和场景定义权，"协作创新"取代了此前的"重复造轮子"。</p><figure><img src="https://s2.loli.net/2025/06/02/SrV9Ov7EhHZYLxN.png"alt="image-20250602193528562" /><figcaption aria-hidden="true">image-20250602193528562</figcaption></figure><p>从上图中可以看出，腾讯元宝在2025年2月13日开始接入满血版DeepSeek并开始重点宣传后，其App端与网页端单日访问量都逐渐开始出现上升，到2025年2月中下日旬就出现了明显的访问量增加，同时在2月中下旬腾讯也一并上线与宣传其混元T1双推理模型。个人目前的体会：在DeepSeek模型的加持或启发下，腾讯“救活”了其大模型能力。</p></li><li><p>单点突破 ：推理、多模态及端侧模型领域出现明显突破。</p><figure><img src="https://s2.loli.net/2025/06/02/JTiEwFRoWKax1DX.png"alt="image-20250602195255079" /><figcaption aria-hidden="true">image-20250602195255079</figcaption></figure></li><li><p>资源向头部聚集：模型层投融资呈现雪球效应，资源向头部企业聚集，潜在资本重点转向应用层。</p></li></ol><h2 id="c端产品层趋势">2.2 C端产品层趋势</h2><ol type="1"><li><p>AI智能助手领跑场景探索：AI智能助手成为C端产品的主要形态，引领场景探索。</p><p>从整体来看，AI硬件侧仍在市场教育的探索阶段，以搭载多形式的AI智能助手或实时翻译/总结/修图等单点AI功能为主，暂无代表性产品出现。</p><p>在AI软件的Web端，头部产品主要由互联网大厂掌控，业务矩阵联通和一站式AI工作流特色明显。</p><figure><img src="https://s2.loli.net/2025/06/02/8cldCDRbri9YIQF.png"alt="image-20250602195736262" /><figcaption aria-hidden="true">image-20250602195736262</figcaption></figure><p><em><strong>注：</strong>MAU是"Monthly ActiveUsers"的缩写，即月活跃用户。</em></p><p>AI软件的APP端则有更多初创公司和创新场景出现，但目前国内APP端的头部产品仍主要集中在大厂手中。得益于模型架构和算力技术创新，以及开源和降价策略，AIGC应用开发成本大幅降低，AI应用有望成为独立开发者的重要突破口。</p><figure><img src="https://s2.loli.net/2025/06/02/3HUSkTX7l4EnPha.png"alt="image-20250602200611043" /><figcaption aria-hidden="true">image-20250602200611043</figcaption></figure><p><em><strong>注：</strong>DAU是“Daily ActiveUser”的缩写，即日活跃用户。</em></p></li><li><p>一站式/全陪伴工具成为短期趋势：AI产品呈现"功能一站式"、"形态全陪伴"特征，从单点效率工具上升为端到端超级工具。</p></li><li><p>AI操作系统或成下一代超级流量入口：AI操作系统有望成为下一代超级流量入口，为厂商的AI业务矩阵提供支持。</p><figure><img src="https://s2.loli.net/2025/06/02/YoRIvXn7NerxAlH.png"alt="image-20250602201121520" /><figcaption aria-hidden="true">image-20250602201121520</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/02/YaLh3FPKktlBnCx.png"alt="image-20250602201139274" /><figcaption aria-hidden="true">image-20250602201139274</figcaption></figure></li><li><p>AI Agent是最终理想形态 ：AIAgent通过"意图直达"实现新交互范式和服务分发网络，其竞争点在于对外部工具的调用能力。</p><figure><img src="https://s2.loli.net/2025/06/02/WoRLXM8T6IVExCr.png"alt="image-20250602201318369" /><figcaption aria-hidden="true">image-20250602201318369</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/02/Yu1DN8h4URopdiy.png"alt="image-20250602201435431" /><figcaption aria-hidden="true">image-20250602201435431</figcaption></figure></li><li><p>AI原生场景受关注 ：搜索、AI2D生图和AI视频生成成为最受关注的AI原生场景。</p></li><li><p>C端产品分类：报告将C端产品分为AI智能助手、AI办公、AI创作、AI文娱和AI生活五大场景。</p><figure><img src="https://s2.loli.net/2025/06/02/Mkl8TPyD6E7ihcw.png"alt="image-20250602201814231" /><figcaption aria-hidden="true">image-20250602201814231</figcaption></figure></li></ol><h2 id="b端应用层趋势">2.3 B端应用层趋势</h2><figure><img src="https://s2.loli.net/2025/06/02/6hqIH7TmrCgSU1w.png"alt="image-20250602201847146" /><figcaption aria-hidden="true">image-20250602201847146</figcaption></figure><ol type="1"><li><p>行业垂直大模型带动多场景规模化渗透：行业垂直大模型推动AI在各行业的规模化应用。</p><figure><img src="https://s2.loli.net/2025/06/02/cEWYL8rnOsqG1bN.png"alt="image-20250602201934680" /><figcaption aria-hidden="true">image-20250602201934680</figcaption></figure></li><li><p>开源模型+行业微调提升中小企业渗透率：开源模型和行业微调技术使中小企业更容易采用AI技术。</p></li><li><p>B端产品商业化程度高：B端产品80%实现营收，而C端产品近50%以免费为主。</p></li></ol><h2 id="开发工具层趋势">2.4 开发工具层趋势</h2><ol type="1"><li><p>开发生态标准化：MaaS平台、LLMOps和MCP等协议的完善，推动接口式标准化开发。</p><figure><img src="https://s2.loli.net/2025/06/02/2wVnZRlbTFp45UW.png"alt="image-20250602202351480" /><figcaption aria-hidden="true">image-20250602202351480</figcaption></figure></li><li><p>软件工程AI化：AI代码工具和低代码AIGC应用/Agent开发工具的发展，使软件工程更加智能化。</p><figure><img src="https://s2.loli.net/2025/06/02/nZH87N6gUGoKY9M.png"alt="image-20250602203106291" /><figcaption aria-hidden="true">image-20250602203106291</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/02/a2hdxvLEHCRiG1g.png"alt="image-20250602203038721" /><figcaption aria-hidden="true">image-20250602203038721</figcaption></figure></li><li><p>独立开发者迎来模块化开发时代：开发工具的进步为独立开发者提供了更多机会。</p><figure><img src="https://s2.loli.net/2025/06/02/Px5Qj71e2fLqDpM.png"alt="image-20250602203253748" /><figcaption aria-hidden="true">image-20250602203253748</figcaption></figure><figure><img src="https://s2.loli.net/2025/06/02/3y6QMKcrHmYGbSq.png"alt="image-20250602203242286" /><figcaption aria-hidden="true">image-20250602203242286</figcaption></figure></li></ol><h1 id="三c端重点赛道与产品汇总">三、C端重点赛道与产品汇总</h1><h2 id="ai智能助手">3.1 AI智能助手</h2><p>作为国内各厂商底层模型和产品能力最直观的体现，AI智能助手已经成为国内AI产品中的核心支柱。</p><p>从技术落地来看，推理、多模态理解、实时语音交互等细分技术往往会首先在头部AI智能助手中落地应用。而为了更好的把握这一核心流量入口，AI视频生成、AI智能体等功能板块也多被集中在AI智能助手中进行引流。</p><p>AI智能助手的未来形态可能有两大演变方向。第一，短期内为可随时唤起的底层操作系统或APP最终形态则会向AIAgent演变。目前国内已经有智谱华章AutoGLM、蚂蚁集团支小宝和Manus等单独的AIAgent应用出现，强调其自主任务执行和全天候陪伴。第二，演进方向包括：多模态融合、垂直场景渗透、高度个性化和情感化、生态协同与硬件融合创新。</p><h2 id="ai办公">3.2 AI办公</h2><p>因使用频率高、适用广泛、降本增效明显，AI搜索、AI写作、AI总结、AIPPT等在产品数量、用户活跃度和变现能力上表现突出。</p><figure><img src="https://s2.loli.net/2025/06/02/57LKHEfZcAhaXVg.png"alt="image-20250602204717699" /><figcaption aria-hidden="true">image-20250602204717699</figcaption></figure><h2 id="ai创作">3.4 AI创作</h2><p>AI创作领域的近期进展主要集中于AI视频和AI3D生成领域，底层技术进步成为核心推动力，但整体数据仍有较大提升空间。</p><figure><img src="https://s2.loli.net/2025/06/02/8W6LVfuDkntoQRg.png"alt="image-20250602204841828" /><figcaption aria-hidden="true">image-20250602204841828</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大语言模型MCP学习05-将自定义mcp服务部署到百炼平台02</title>
    <link href="/2025/05/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A005-%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89mcp%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E5%88%B0%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B002/"/>
    <url>/2025/05/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A005-%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89mcp%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E5%88%B0%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B002/</url>
    
    <content type="html"><![CDATA[<h1 id="一阿里云函数计算">一、阿里云函数计算</h1><p>阿里云函数的官网： https://www.aliyun.com/product/fc 。官方对其的定义与介绍是：函数计算（FunctionCompute，简称FC）是事件驱动的全托管计算服务。使用函数计算，您无需采购与管理服务器等基础设施，只需编写并上传代码或镜像。函数计算为您准备好计算资源，可靠地运行任务，通过弹性伸缩应对流量峰谷，并提供日志查询、性能监控和报警等功能。函数计算提供了一种事件驱动的计算模型。您可以在指定函数中创建触发器，该触发器描述了一组规则，当某个事件满足这些规则，事件源就会触发关联的函数</p><p>使用Serverless架构的函数计算，只需聚焦于业务本身，平台为用户准备好计算资源，可靠地运行任务，并通过弹性伸缩应对流量峰谷，用户只需为任务实际消耗的资源付费。</p><p>从技术上来说，除了阿里云函数计算，其实还有可以使用云服务器（应该是其他厂商的云服务器也可以，但因为要使用百炼平台，所以使用阿里云服务器应该最好）。如果自己已经购买了阿里云服务器，直接使用即可；但如果目前还没有购买，不建议为了测试与试用“在云服务器上部署MCP服务”而购买阿里云服务器，因为有更实惠的选择，它就是阿里云函数计算。</p><h1 id="二实施步骤">二、实施步骤</h1><h2 id="优化服务端代码">2.1 优化服务端代码</h2><p>在 <ahref="https://jiangsanyin.github.io/2025/05/22/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A003-MCP%E5%AE%9E%E7%8E%B0%E5%AF%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C/">大语言模型MCP学习03-MCP实现对MySQL数据库的操作</a>一文中，笔者描述了如何在cursor中通过本地模式运行与使用自定义MCP服务，我把这个MCP服务命令为“操作MySQL数据库的自定义MCP应用”（其实是MySQL类数据库都可以，即包含MySQL与MariaDB），下文简称为自定义MCP应用。但当时那个版本的"自定义MCP应用"直接将数据库的连接信息配置在源码文件<code>main.py</code>中，不够规范严谨。现对此<code>main.py</code>进行优化，改进优化点如下：</p><ul><li><strong>配置灵活性</strong>:支持通过命令行参数、环境变量和默认值配置数据库连接</li><li><strong>安全性</strong>: 不再将敏感信息硬编码在代码中</li><li><strong>可维护性</strong>: 配置和代码分离，便于不同环境的部署</li><li><strong>兼容性</strong>: 支持本地部署和远程部署</li></ul><p>另一方面，改进优化支持通过命令参数方式、系统环境变量、默认值3种方式配置数据库连接信息，优化级逐渐降低：</p><ul><li>命令行参数 (--host, --port, --user, --password, --database)</li><li>环境变量 (MYSQL_HOST, MYSQL_PORT, MYSQL_USER, MYSQL_PASSWORD,MYSQL_DATABASE)</li><li>默认值 (localhost, 3306, root, 'root@123', 'test01')</li></ul><p>如下是改进优化的main.py源文件内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">MySQL MCP Server - 配置优化版本</span><br><span class="hljs-string">提供MySQL数据库的创建表、增删改查等操作功能</span><br><span class="hljs-string">支持通过环境变量和命令行参数配置数据库连接</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">Any</span>, <span class="hljs-type">Dict</span>, <span class="hljs-type">List</span>, <span class="hljs-type">Optional</span><br><br><span class="hljs-keyword">import</span> aiomysql<br><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP<br><span class="hljs-keyword">from</span> mcp.server.stdio <span class="hljs-keyword">import</span> stdio_server<br><br><span class="hljs-comment"># 配置日志</span><br>logging.basicConfig(<br>    level=logging.INFO,<br>    <span class="hljs-built_in">format</span>=<span class="hljs-string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;</span>,<br>    handlers=[<br>        logging.StreamHandler(sys.stderr)  <span class="hljs-comment"># 输出到stderr避免与MCP通信冲突</span><br>    ]<br>)<br>logger = logging.getLogger(__name__)<br><br><span class="hljs-comment">## 从环境变量获取端口，如果没有则使用默认端口</span><br>port = <span class="hljs-built_in">int</span>(os.environ.get(<span class="hljs-string">&#x27;FC_SERVER_PORT&#x27;</span>, <span class="hljs-string">&#x27;9000&#x27;</span>))<br>host = os.environ.get(<span class="hljs-string">&#x27;FC_SERVER_HOST&#x27;</span>, <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>)<br><span class="hljs-comment">## 在创建FastMCP实例时传递host和port参数</span><br>app = FastMCP(<span class="hljs-string">&quot;mysql-mcp-server&quot;</span>, host=host, port=port)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MySQLManager</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, host=<span class="hljs-literal">None</span>, port=<span class="hljs-literal">None</span>, user=<span class="hljs-literal">None</span>, password=<span class="hljs-literal">None</span>, database=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        初始化MySQL管理器</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        Args:</span><br><span class="hljs-string">            host: 数据库主机地址</span><br><span class="hljs-string">            port: 数据库端口</span><br><span class="hljs-string">            user: 数据库用户名</span><br><span class="hljs-string">            password: 数据库密码</span><br><span class="hljs-string">            database: 数据库名称</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-comment"># 优先使用传入的参数，然后是环境变量，最后是默认值</span><br>        <span class="hljs-variable language_">self</span>.db_config = &#123;<br>            <span class="hljs-string">&#x27;host&#x27;</span>: host <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_HOST&#x27;</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>),<br>            <span class="hljs-string">&#x27;port&#x27;</span>: <span class="hljs-built_in">int</span>(port <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_PORT&#x27;</span>, <span class="hljs-number">3306</span>)),<br>            <span class="hljs-string">&#x27;user&#x27;</span>: user <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_USER&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>),<br>            <span class="hljs-string">&#x27;password&#x27;</span>: password <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;root@123&#x27;</span>),<br>            <span class="hljs-string">&#x27;db&#x27;</span>: database <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_DATABASE&#x27;</span>, <span class="hljs-string">&#x27;test01&#x27;</span>),<br>            <span class="hljs-string">&#x27;charset&#x27;</span>: <span class="hljs-string">&#x27;utf8mb4&#x27;</span>,<br>            <span class="hljs-string">&#x27;autocommit&#x27;</span>: <span class="hljs-literal">True</span><br>        &#125;<br>        <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>        <span class="hljs-variable language_">self</span>._lock = asyncio.Lock()<br>        <br>        <span class="hljs-comment"># 验证必要的配置</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;password&#x27;</span>]:<br>            logger.warning(<span class="hljs-string">&quot;数据库密码为空，请确保这是预期的配置&quot;</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_config_info</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;获取配置信息（隐藏密码）&quot;&quot;&quot;</span><br>        config_info = <span class="hljs-variable language_">self</span>.db_config.copy()<br>        config_info[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-built_in">len</span>(config_info[<span class="hljs-string">&#x27;password&#x27;</span>]) <span class="hljs-keyword">if</span> config_info[<span class="hljs-string">&#x27;password&#x27;</span>] <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Empty&#x27;</span><br>        <span class="hljs-keyword">return</span> config_info<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_connection</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;获取数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> <span class="hljs-variable language_">self</span>._lock:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-variable language_">self</span>.pool:<br>                <span class="hljs-keyword">try</span>:<br>                    logger.info(<span class="hljs-string">f&quot;正在连接数据库: <span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;host&#x27;</span>]&#125;</span>:<span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span>)<br>                    <span class="hljs-variable language_">self</span>.pool = <span class="hljs-keyword">await</span> aiomysql.create_pool(<br>                        host=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;host&#x27;</span>],<br>                        port=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;port&#x27;</span>],<br>                        user=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;user&#x27;</span>],<br>                        password=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;password&#x27;</span>],<br>                        db=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;db&#x27;</span>],<br>                        charset=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;charset&#x27;</span>],<br>                        autocommit=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;autocommit&#x27;</span>],<br>                        minsize=<span class="hljs-number">1</span>,<br>                        maxsize=<span class="hljs-number">5</span>,<br>                        connect_timeout=<span class="hljs-number">10</span>,<br>                        pool_recycle=<span class="hljs-number">3600</span><br>                    )<br>                    logger.info(<span class="hljs-string">&quot;数据库连接池创建成功&quot;</span>)<br>                <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                    logger.error(<span class="hljs-string">f&quot;创建数据库连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">raise</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            conn = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.acquire()<br>            <span class="hljs-keyword">return</span> conn<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            logger.error(<span class="hljs-string">f&quot;获取数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">raise</span><br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">release_connection</span>(<span class="hljs-params">self, conn</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;释放数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> conn <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.release(conn)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;释放数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">close_pool</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;关闭连接池&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-variable language_">self</span>.pool.close()<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.wait_closed()<br>                <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>                logger.info(<span class="hljs-string">&quot;数据库连接池已关闭&quot;</span>)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;关闭连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 全局MySQL管理器实例（将在main函数中初始化）</span><br>mysql_manager = <span class="hljs-literal">None</span><br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_table</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">List</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-built_in">str</span>]]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    创建MySQL数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 列定义数组，每个元素包含name(列名)、type(数据类型)、constraints(约束条件，可选)</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        创建结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 构建CREATE TABLE语句</span><br>            column_defs = []<br>            <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns:<br>                col_def = <span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;name&#x27;</span>]&#125;</span>` <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;type&#x27;</span>]&#125;</span>&quot;</span><br>                <span class="hljs-keyword">if</span> col.get(<span class="hljs-string">&#x27;constraints&#x27;</span>):<br>                    col_def += <span class="hljs-string">f&quot; <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;constraints&#x27;</span>]&#125;</span>&quot;</span><br>                column_defs.append(col_def)<br>            <br>            sql = <span class="hljs-string">f&quot;CREATE TABLE IF NOT EXISTS `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;<span class="hljs-string">&#x27;, &#x27;</span>.join(column_defs)&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            logger.info(<span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span><br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;创建表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">insert_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    向表中插入数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要插入的数据，键值对形式</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        插入结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            columns = <span class="hljs-built_in">list</span>(data.keys())<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            placeholders = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">&#x27;%s&#x27;</span>] * <span class="hljs-built_in">len</span>(values))<br>            column_names = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;INSERT INTO `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;column_names&#125;</span>) VALUES (<span class="hljs-subst">&#123;placeholders&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据插入成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;插入数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">select_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>, </span><br><span class="hljs-params">                     where_clause: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;&quot;</span>, limit: <span class="hljs-built_in">int</span> = <span class="hljs-number">100</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    查询表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 要查询的列名，默认为所有列</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">        limit: 限制返回行数</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        查询结果的JSON字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> columns <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        columns = [<span class="hljs-string">&quot;*&quot;</span>]<br>    <br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor(aiomysql.DictCursor) <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">if</span> columns == [<span class="hljs-string">&quot;*&quot;</span>]:<br>                column_str = <span class="hljs-string">&quot;*&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                column_str = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;SELECT <span class="hljs-subst">&#123;column_str&#125;</span> FROM `<span class="hljs-subst">&#123;table_name&#125;</span>`&quot;</span><br>            <span class="hljs-keyword">if</span> where_clause:<br>                sql += <span class="hljs-string">f&quot; WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            sql += <span class="hljs-string">f&quot; LIMIT <span class="hljs-subst">&#123;limit&#125;</span>&quot;</span><br>            <br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            results = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> results:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;未找到数据&quot;</span><br>            <br>            <span class="hljs-comment"># 格式化结果</span><br>            formatted_results = []<br>            <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> results:<br>                formatted_results.append(<span class="hljs-built_in">dict</span>(row))<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(formatted_results, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>, default=<span class="hljs-built_in">str</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;查询数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">update_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>], where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    更新表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要更新的数据，键值对形式</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        更新结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            set_clauses = [<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;key&#125;</span>` = %s&quot;</span> <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> data.keys()]<br>            set_clause = <span class="hljs-string">&#x27;, &#x27;</span>.join(set_clauses)<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            <br>            sql = <span class="hljs-string">f&quot;UPDATE `<span class="hljs-subst">&#123;table_name&#125;</span>` SET <span class="hljs-subst">&#123;set_clause&#125;</span> WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据更新成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;更新数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    删除表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        删除结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            sql = <span class="hljs-string">f&quot;DELETE FROM `<span class="hljs-subst">&#123;table_name&#125;</span>` WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            result_msg = <span class="hljs-string">f&quot;数据删除成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;删除数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">show_tables</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    显示所有数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        表列表字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SHOW TABLES&quot;</span>)<br>            tables = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> tables:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;数据库中没有表&quot;</span><br>            <br>            table_list = [table[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> tables]<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;数据库中的表(<span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(table_list)&#125;</span>个):\n&quot;</span> + <span class="hljs-string">&#x27;\n&#x27;</span>.join([<span class="hljs-string">f&quot;- <span class="hljs-subst">&#123;table&#125;</span>&quot;</span> <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> table_list])<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;显示表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database_info</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取当前数据库连接信息和状态</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        数据库信息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 获取数据库版本</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br>            version = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取当前数据库</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT DATABASE()&quot;</span>)<br>            current_db = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取连接信息</span><br>            config_info = mysql_manager.get_config_info()<br>            info = &#123;<br>                **config_info,<br>                <span class="hljs-string">&quot;mysql_version&quot;</span>: version[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> version <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;Unknown&quot;</span>,<br>                <span class="hljs-string">&quot;current_database&quot;</span>: current_db[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> current_db <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;None&quot;</span>,<br>                <span class="hljs-string">&quot;connection_status&quot;</span>: <span class="hljs-string">&quot;Connected&quot;</span><br>            &#125;<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(info, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;获取数据库信息失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_connection</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;测试数据库连接&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;正在测试数据库连接...&quot;</span>)<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT 1&quot;</span>)<br>            result = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-number">1</span>:<br>                logger.info(<span class="hljs-string">&quot;数据库连接测试成功&quot;</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;数据库连接测试失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">parse_arguments</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;解析命令行参数，如果未提供则从环境变量中读取&quot;&quot;&quot;</span><br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;MySQL MCP Server&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--host&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL host (default: localhost)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--port&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL port (default: 3306)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--user&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL user (default: root)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--password&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL password&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--database&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL database name (default: test01)&#x27;</span>)<br>    <br>    args = parser.parse_args()<br>    <br>    <span class="hljs-comment"># 如果命令行参数未提供，则从环境变量中读取</span><br>    <span class="hljs-keyword">if</span> args.host <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.host = os.getenv(<span class="hljs-string">&#x27;MYSQL_HOST&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.port <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        port_env = os.getenv(<span class="hljs-string">&#x27;MYSQL_PORT&#x27;</span>)<br>        <span class="hljs-keyword">if</span> port_env:<br>            args.port = <span class="hljs-built_in">int</span>(port_env)<br>    <span class="hljs-keyword">if</span> args.user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.user = os.getenv(<span class="hljs-string">&#x27;MYSQL_USER&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.password <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.password = os.getenv(<span class="hljs-string">&#x27;MYSQL_PASSWORD&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.database <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.database = os.getenv(<span class="hljs-string">&#x27;MYSQL_DATABASE&#x27;</span>)<br>    <br>    <span class="hljs-keyword">return</span> args<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">global</span> mysql_manager<br>    <br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;MySQL MCP Server 启动中...&quot;</span>)<br>        <br>        <span class="hljs-comment"># 解析命令行参数</span><br>        args = parse_arguments()<br>        <br>        <span class="hljs-comment"># 初始化MySQL管理器</span><br>        mysql_manager = MySQLManager(<br>            host=args.host,<br>            port=args.port,<br>            user=args.user,<br>            password=args.password,<br>            database=args.database<br>        )<br>        <br>        <span class="hljs-comment"># 显示配置信息</span><br>        config_info = mysql_manager.get_config_info()<br>        logger.info(<span class="hljs-string">f&quot;数据库配置: <span class="hljs-subst">&#123;config_info&#125;</span>&quot;</span>)<br>        <br>        <span class="hljs-comment"># 测试数据库连接</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">await</span> test_connection():<br>            logger.error(<span class="hljs-string">&quot;数据库连接失败，服务器无法启动&quot;</span>)<br>            <span class="hljs-keyword">return</span><br>        <br>        <span class="hljs-comment"># 使用stdio服务器运行MCP应用</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> stdio_server() <span class="hljs-keyword">as</span> (read_stream, write_stream):<br>            logger.info(<span class="hljs-string">&quot;MCP服务器正在运行...&quot;</span>)<br>            <span class="hljs-keyword">await</span> app.run(<br>                read_stream,<br>                write_stream,<br>                app.create_initialization_options()<br>            )<br>    <br>    <span class="hljs-keyword">except</span> KeyboardInterrupt:<br>        logger.info(<span class="hljs-string">&quot;服务器收到中断信号，正在关闭...&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;服务器运行错误: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-comment"># 清理资源</span><br>        <span class="hljs-keyword">if</span> mysql_manager:<br>            <span class="hljs-keyword">await</span> mysql_manager.close_pool()<br>        logger.info(<span class="hljs-string">&quot;服务器已关闭&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 解析命令行参数并初始化MySQL管理器</span><br>        args = parse_arguments()<br>        mysql_manager = MySQLManager(<br>            host=args.host,<br>            port=args.port,<br>            user=args.user,<br>            password=args.password,<br>            database=args.database<br>        )<br>        <br>        <span class="hljs-comment"># 运行FastMCP应用</span><br>        app.run(transport=<span class="hljs-string">&quot;stdio&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;程序启动失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>        sys.exit(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h2 id="在本地测调试mcp服务">2.2 在本地测/调试MCP服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">(manipulate_mysql) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;mcp dev main.py<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/25/67cxIt92KXRTzGr.png"alt="image-20250525211855439" /><figcaption aria-hidden="true">image-20250525211855439</figcaption></figure><p>本地浏览器访问<code>http://127.0.0.1:6274</code>，看到如下界面，根据实际情况修改Arguments的值</p><figure><img src="https://s2.loli.net/2025/05/25/nLoUbdYNIpxrgaK.png"alt="image-20250525212002117" /><figcaption aria-hidden="true">image-20250525212002117</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/L5yRPljEdKHmSqD.png"alt="image-20250525212217581" /><figcaption aria-hidden="true">image-20250525212217581</figcaption></figure><h2 id="cursor中配置自定义mcp服务端">2.3cursor中配置自定义MCP服务端</h2><p>修改mcp.json文件：</p><figure><img src="https://s2.loli.net/2025/05/25/Noe7XDbYn2qP9pa.png"alt="image-20250525212453988" /><figcaption aria-hidden="true">image-20250525212453988</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/25/n9EcNek65dhGiQB.png"alt="image-20250525212540322" /><figcaption aria-hidden="true">image-20250525212540322</figcaption></figure><h2 id="cursor中使用自定义mcp服务端">2.4cursor中使用自定义MCP服务端</h2><figure><img src="https://s2.loli.net/2025/05/25/6OVcbxErBaXHJ8p.png"alt="image-20250525212845801" /><figcaption aria-hidden="true">image-20250525212845801</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/25/Vg9pbX3Ni4mzwSD.png"alt="image-20250525213213756" /><figcaption aria-hidden="true">image-20250525213213756</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/25/CojmfThZrnRbvgq.png"alt="image-20250525213302763" /><figcaption aria-hidden="true">image-20250525213302763</figcaption></figure><h2 id="将此自定义mcp服务部署到阿里云函数计算平台">2.5将此自定义mcp服务部署到阿里云函数计算平台</h2><p>打开阿里云函数计算概览界面：https://fcnext.console.aliyun.com/overview ，点击左侧的“<ahref="https://cap.console.aliyun.com/">FunctionAI</a>”功能按钮，进入“云原生应用开发平台 CAP控制台”页面，然后点击此页面左侧的“MCP广场”，进入“MCP广场|FunctionAI”页面后，点击右上角的“创建自定义MCP Server”按钮。</p><ul><li>创建自定义MCP Server：</li></ul><figure><img src="https://s2.loli.net/2025/05/25/iqxuKZ4hoX6QFl7.png"alt="image-20250525143522255" /><figcaption aria-hidden="true">image-20250525143522255</figcaption></figure><ul><li>新建服务：</li></ul><figure><img src="https://s2.loli.net/2025/05/25/tXsFOoQUax4iSwY.png"alt="image-20250525213526806" /><figcaption aria-hidden="true">image-20250525213526806</figcaption></figure><h3 id="基础配置">2.5.1 基础配置</h3><figure><img src="https://s2.loli.net/2025/05/25/TmfhuQpcx6It7ij.png"alt="image-20250525214458965" /><figcaption aria-hidden="true">image-20250525214458965</figcaption></figure><h3 id="mcp服务配置">2.5.2 MCP服务配置</h3><figure><img src="https://s2.loli.net/2025/05/25/yTlq94BnOg25zES.png"alt="image-20250525215030927" /><figcaption aria-hidden="true">image-20250525215030927</figcaption></figure><p>其中manipulate_mysql.zip是将main.py打包压缩成一个zip文件，在前面基础做如下修改：运行FastMCP应用的相关语句的参数"transport"修改成"sse"，并指定主机IP与端口默认值分别为0.0.0.0、9000。如下是修改后的main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">MySQL MCP Server - 配置优化版本</span><br><span class="hljs-string">提供MySQL数据库的创建表、增删改查等操作功能</span><br><span class="hljs-string">支持通过环境变量和命令行参数配置数据库连接</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">Any</span>, <span class="hljs-type">Dict</span>, <span class="hljs-type">List</span>, <span class="hljs-type">Optional</span><br><br><span class="hljs-keyword">import</span> aiomysql<br><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP<br><span class="hljs-keyword">from</span> mcp.server.stdio <span class="hljs-keyword">import</span> stdio_server<br><br><span class="hljs-comment"># 配置日志</span><br>logging.basicConfig(<br>    level=logging.INFO,<br>    <span class="hljs-built_in">format</span>=<span class="hljs-string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;</span>,<br>    handlers=[<br>        logging.StreamHandler(sys.stderr)  <span class="hljs-comment"># 输出到stderr避免与MCP通信冲突</span><br>    ]<br>)<br>logger = logging.getLogger(__name__)<br><br><span class="hljs-comment">## 从环境变量获取端口，如果没有则使用默认端口</span><br>port = <span class="hljs-built_in">int</span>(os.environ.get(<span class="hljs-string">&#x27;FC_SERVER_PORT&#x27;</span>, <span class="hljs-string">&#x27;9000&#x27;</span>))<br>host = os.environ.get(<span class="hljs-string">&#x27;FC_SERVER_HOST&#x27;</span>, <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>)<br><span class="hljs-comment"># 在创建FastMCP实例时传递host和port参数</span><br>app = FastMCP(<span class="hljs-string">&quot;mysql-mcp-server&quot;</span>, host=host, port=port)<br><span class="hljs-comment">#app = FastMCP(&quot;mysql-mcp-server&quot;)</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MySQLManager</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, host=<span class="hljs-literal">None</span>, port=<span class="hljs-literal">None</span>, user=<span class="hljs-literal">None</span>, password=<span class="hljs-literal">None</span>, database=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        初始化MySQL管理器</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        Args:</span><br><span class="hljs-string">            host: 数据库主机地址</span><br><span class="hljs-string">            port: 数据库端口</span><br><span class="hljs-string">            user: 数据库用户名</span><br><span class="hljs-string">            password: 数据库密码</span><br><span class="hljs-string">            database: 数据库名称</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-comment"># 优先使用传入的参数，然后是环境变量，最后是默认值</span><br>        <span class="hljs-variable language_">self</span>.db_config = &#123;<br>            <span class="hljs-string">&#x27;host&#x27;</span>: host <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_HOST&#x27;</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>),<br>            <span class="hljs-string">&#x27;port&#x27;</span>: <span class="hljs-built_in">int</span>(port <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_PORT&#x27;</span>, <span class="hljs-number">3306</span>)),<br>            <span class="hljs-string">&#x27;user&#x27;</span>: user <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_USER&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span>),<br>            <span class="hljs-string">&#x27;password&#x27;</span>: password <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;root@123&#x27;</span>),<br>            <span class="hljs-string">&#x27;db&#x27;</span>: database <span class="hljs-keyword">or</span> os.getenv(<span class="hljs-string">&#x27;MYSQL_DATABASE&#x27;</span>, <span class="hljs-string">&#x27;test01&#x27;</span>),<br>            <span class="hljs-string">&#x27;charset&#x27;</span>: <span class="hljs-string">&#x27;utf8mb4&#x27;</span>,<br>            <span class="hljs-string">&#x27;autocommit&#x27;</span>: <span class="hljs-literal">True</span><br>        &#125;<br>        <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>        <span class="hljs-variable language_">self</span>._lock = asyncio.Lock()<br>        <br>        <span class="hljs-comment"># 验证必要的配置</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;password&#x27;</span>]:<br>            logger.warning(<span class="hljs-string">&quot;数据库密码为空，请确保这是预期的配置&quot;</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_config_info</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;获取配置信息（隐藏密码）&quot;&quot;&quot;</span><br>        config_info = <span class="hljs-variable language_">self</span>.db_config.copy()<br>        config_info[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;*&#x27;</span> * <span class="hljs-built_in">len</span>(config_info[<span class="hljs-string">&#x27;password&#x27;</span>]) <span class="hljs-keyword">if</span> config_info[<span class="hljs-string">&#x27;password&#x27;</span>] <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;Empty&#x27;</span><br>        <span class="hljs-keyword">return</span> config_info<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_connection</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;获取数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> <span class="hljs-variable language_">self</span>._lock:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-variable language_">self</span>.pool:<br>                <span class="hljs-keyword">try</span>:<br>                    logger.info(<span class="hljs-string">f&quot;正在连接数据库: <span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;host&#x27;</span>]&#125;</span>:<span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span>)<br>                    <span class="hljs-variable language_">self</span>.pool = <span class="hljs-keyword">await</span> aiomysql.create_pool(<br>                        host=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;host&#x27;</span>],<br>                        port=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;port&#x27;</span>],<br>                        user=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;user&#x27;</span>],<br>                        password=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;password&#x27;</span>],<br>                        db=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;db&#x27;</span>],<br>                        charset=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;charset&#x27;</span>],<br>                        autocommit=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;autocommit&#x27;</span>],<br>                        minsize=<span class="hljs-number">1</span>,<br>                        maxsize=<span class="hljs-number">5</span>,<br>                        connect_timeout=<span class="hljs-number">10</span>,<br>                        pool_recycle=<span class="hljs-number">3600</span><br>                    )<br>                    logger.info(<span class="hljs-string">&quot;数据库连接池创建成功&quot;</span>)<br>                <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                    logger.error(<span class="hljs-string">f&quot;创建数据库连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">raise</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            conn = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.acquire()<br>            <span class="hljs-keyword">return</span> conn<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            logger.error(<span class="hljs-string">f&quot;获取数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">raise</span><br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">release_connection</span>(<span class="hljs-params">self, conn</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;释放数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> conn <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.release(conn)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;释放数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">close_pool</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;关闭连接池&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-variable language_">self</span>.pool.close()<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.wait_closed()<br>                <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>                logger.info(<span class="hljs-string">&quot;数据库连接池已关闭&quot;</span>)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;关闭连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 全局MySQL管理器实例（将在main函数中初始化）</span><br>mysql_manager = <span class="hljs-literal">None</span><br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_table</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">List</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-built_in">str</span>]]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    创建MySQL数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 列定义数组，每个元素包含name(列名)、type(数据类型)、constraints(约束条件，可选)</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        创建结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 构建CREATE TABLE语句</span><br>            column_defs = []<br>            <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns:<br>                col_def = <span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;name&#x27;</span>]&#125;</span>` <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;type&#x27;</span>]&#125;</span>&quot;</span><br>                <span class="hljs-keyword">if</span> col.get(<span class="hljs-string">&#x27;constraints&#x27;</span>):<br>                    col_def += <span class="hljs-string">f&quot; <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;constraints&#x27;</span>]&#125;</span>&quot;</span><br>                column_defs.append(col_def)<br>            <br>            sql = <span class="hljs-string">f&quot;CREATE TABLE IF NOT EXISTS `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;<span class="hljs-string">&#x27;, &#x27;</span>.join(column_defs)&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            logger.info(<span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span><br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;创建表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">insert_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    向表中插入数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要插入的数据，键值对形式</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        插入结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            columns = <span class="hljs-built_in">list</span>(data.keys())<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            placeholders = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">&#x27;%s&#x27;</span>] * <span class="hljs-built_in">len</span>(values))<br>            column_names = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;INSERT INTO `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;column_names&#125;</span>) VALUES (<span class="hljs-subst">&#123;placeholders&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据插入成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;插入数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">select_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>, </span><br><span class="hljs-params">                     where_clause: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;&quot;</span>, limit: <span class="hljs-built_in">int</span> = <span class="hljs-number">100</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    查询表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 要查询的列名，默认为所有列</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">        limit: 限制返回行数</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        查询结果的JSON字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> columns <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        columns = [<span class="hljs-string">&quot;*&quot;</span>]<br>    <br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor(aiomysql.DictCursor) <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">if</span> columns == [<span class="hljs-string">&quot;*&quot;</span>]:<br>                column_str = <span class="hljs-string">&quot;*&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                column_str = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;SELECT <span class="hljs-subst">&#123;column_str&#125;</span> FROM `<span class="hljs-subst">&#123;table_name&#125;</span>`&quot;</span><br>            <span class="hljs-keyword">if</span> where_clause:<br>                sql += <span class="hljs-string">f&quot; WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            sql += <span class="hljs-string">f&quot; LIMIT <span class="hljs-subst">&#123;limit&#125;</span>&quot;</span><br>            <br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            results = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> results:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;未找到数据&quot;</span><br>            <br>            <span class="hljs-comment"># 格式化结果</span><br>            formatted_results = []<br>            <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> results:<br>                formatted_results.append(<span class="hljs-built_in">dict</span>(row))<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(formatted_results, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>, default=<span class="hljs-built_in">str</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;查询数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">update_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>], where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    更新表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要更新的数据，键值对形式</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        更新结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            set_clauses = [<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;key&#125;</span>` = %s&quot;</span> <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> data.keys()]<br>            set_clause = <span class="hljs-string">&#x27;, &#x27;</span>.join(set_clauses)<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            <br>            sql = <span class="hljs-string">f&quot;UPDATE `<span class="hljs-subst">&#123;table_name&#125;</span>` SET <span class="hljs-subst">&#123;set_clause&#125;</span> WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据更新成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;更新数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    删除表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        删除结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            sql = <span class="hljs-string">f&quot;DELETE FROM `<span class="hljs-subst">&#123;table_name&#125;</span>` WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            result_msg = <span class="hljs-string">f&quot;数据删除成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;删除数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">show_tables</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    显示所有数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        表列表字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SHOW TABLES&quot;</span>)<br>            tables = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> tables:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;数据库中没有表&quot;</span><br>            <br>            table_list = [table[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> tables]<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;数据库中的表(<span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(table_list)&#125;</span>个):\n&quot;</span> + <span class="hljs-string">&#x27;\n&#x27;</span>.join([<span class="hljs-string">f&quot;- <span class="hljs-subst">&#123;table&#125;</span>&quot;</span> <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> table_list])<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;显示表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database_info</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取当前数据库连接信息和状态</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        数据库信息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 获取数据库版本</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br>            version = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取当前数据库</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT DATABASE()&quot;</span>)<br>            current_db = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取连接信息</span><br>            config_info = mysql_manager.get_config_info()<br>            info = &#123;<br>                **config_info,<br>                <span class="hljs-string">&quot;mysql_version&quot;</span>: version[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> version <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;Unknown&quot;</span>,<br>                <span class="hljs-string">&quot;current_database&quot;</span>: current_db[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> current_db <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;None&quot;</span>,<br>                <span class="hljs-string">&quot;connection_status&quot;</span>: <span class="hljs-string">&quot;Connected&quot;</span><br>            &#125;<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(info, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;获取数据库信息失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_connection</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;测试数据库连接&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;正在测试数据库连接...&quot;</span>)<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT 1&quot;</span>)<br>            result = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-number">1</span>:<br>                logger.info(<span class="hljs-string">&quot;数据库连接测试成功&quot;</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;数据库连接测试失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">parse_arguments</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;解析命令行参数，如果未提供则从环境变量中读取&quot;&quot;&quot;</span><br>    parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;MySQL MCP Server&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--host&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL host (default: localhost)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--port&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL port (default: 3306)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--user&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL user (default: root)&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--password&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL password&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;--database&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;MySQL database name (default: test01)&#x27;</span>)<br>    <br>    args = parser.parse_args()<br>    <br>    <span class="hljs-comment"># 如果命令行参数未提供，则从环境变量中读取</span><br>    <span class="hljs-keyword">if</span> args.host <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.host = os.getenv(<span class="hljs-string">&#x27;MYSQL_HOST&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.port <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        port_env = os.getenv(<span class="hljs-string">&#x27;MYSQL_PORT&#x27;</span>)<br>        <span class="hljs-keyword">if</span> port_env:<br>            args.port = <span class="hljs-built_in">int</span>(port_env)<br>    <span class="hljs-keyword">if</span> args.user <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.user = os.getenv(<span class="hljs-string">&#x27;MYSQL_USER&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.password <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.password = os.getenv(<span class="hljs-string">&#x27;MYSQL_PASSWORD&#x27;</span>)<br>    <span class="hljs-keyword">if</span> args.database <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        args.database = os.getenv(<span class="hljs-string">&#x27;MYSQL_DATABASE&#x27;</span>)<br>    <br>    <span class="hljs-keyword">return</span> args<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">global</span> mysql_manager<br>    <br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;MySQL MCP Server 启动中...&quot;</span>)<br>        <br>        <span class="hljs-comment"># 解析命令行参数</span><br>        args = parse_arguments()<br>        <br>        <span class="hljs-comment"># 初始化MySQL管理器</span><br>        mysql_manager = MySQLManager(<br>            host=args.host,<br>            port=args.port,<br>            user=args.user,<br>            password=args.password,<br>            database=args.database<br>        )<br>        <br>        <span class="hljs-comment"># 显示配置信息</span><br>        config_info = mysql_manager.get_config_info()<br>        logger.info(<span class="hljs-string">f&quot;数据库配置: <span class="hljs-subst">&#123;config_info&#125;</span>&quot;</span>)<br>        <br>        <span class="hljs-comment"># 测试数据库连接</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">await</span> test_connection():<br>            logger.error(<span class="hljs-string">&quot;数据库连接失败，服务器无法启动&quot;</span>)<br>            <span class="hljs-keyword">return</span><br>        <br>        <span class="hljs-comment"># 使用stdio服务器运行MCP应用</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> stdio_server() <span class="hljs-keyword">as</span> (read_stream, write_stream):<br>            logger.info(<span class="hljs-string">&quot;MCP服务器正在运行...&quot;</span>)<br>            <span class="hljs-keyword">await</span> app.run(<br>                read_stream,<br>                write_stream,<br>                app.create_initialization_options()<br>            )<br>    <br>    <span class="hljs-keyword">except</span> KeyboardInterrupt:<br>        logger.info(<span class="hljs-string">&quot;服务器收到中断信号，正在关闭...&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;服务器运行错误: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-comment"># 清理资源</span><br>        <span class="hljs-keyword">if</span> mysql_manager:<br>            <span class="hljs-keyword">await</span> mysql_manager.close_pool()<br>        logger.info(<span class="hljs-string">&quot;服务器已关闭&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 解析命令行参数并初始化MySQL管理器</span><br>        args = parse_arguments()<br>        mysql_manager = MySQLManager(<br>            host=args.host,<br>            port=args.port,<br>            user=args.user,<br>            password=args.password,<br>            database=args.database<br>        )<br>        <br>        <span class="hljs-comment"># 运行FastMCP应用</span><br>        app.run(transport=<span class="hljs-string">&quot;sse&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;程序启动失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>        sys.exit(<span class="hljs-number">1</span>)<br><br></code></pre></td></tr></table></figure><h3 id="资源配置">2.5.3 资源配置</h3><figure><img src="https://s2.loli.net/2025/05/25/J3xCTNbE21HBeUd.png"alt="image-20250525215301013" /><figcaption aria-hidden="true">image-20250525215301013</figcaption></figure><p>其余配置保持默认。然后点击“预览与部署”按钮以查看与执行部署：</p><figure><img src="https://s2.loli.net/2025/05/25/RqbcX5r7M4TuBLZ.png"alt="image-20250525215350656" /><figcaption aria-hidden="true">image-20250525215350656</figcaption></figure><p>此时会报错，并提示如下信息：No module named 'aiomysql'，打开WebIDE中的Terminal，执行如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install aiomysql mcp uvicorn -t .<br></code></pre></td></tr></table></figure><p>保存后重新部署即可。</p><figure><img src="https://s2.loli.net/2025/05/25/BmfOMLc1Jo3RhXy.png"alt="image-20250525230119824" /><figcaption aria-hidden="true">image-20250525230119824</figcaption></figure><h3 id="服务变量">2.5.4 服务变量</h3><p>就是添加系统环境变量。分别是MySQL或MariaDB数据库的端口与IP（此处是做了外网映射后的值）</p><figure><img src="https://s2.loli.net/2025/05/25/WpEiLfODHnkYsGZ.png"alt="image-20250525232944864" /><figcaption aria-hidden="true">image-20250525232944864</figcaption></figure><h3 id="服务测试">2.5.5 服务测试</h3><figure><img src="https://s2.loli.net/2025/05/25/UQ2unpVzbRAaE4r.png"alt="image-20250525233102049" /><figcaption aria-hidden="true">image-20250525233102049</figcaption></figure><h2 id="mcp管理中创建自定义mcp-服务">2.6 MCP管理中创建自定义MCP服务</h2><figure><img src="https://s2.loli.net/2025/05/25/MoWQ5U91AneqvVX.png"alt="image-20250525231011726" /><figcaption aria-hidden="true">image-20250525231011726</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/5nybSQfkOHtwWNh.png"alt="image-20250525231135510" /><figcaption aria-hidden="true">image-20250525231135510</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/K8txNb72R5wszEI.png"alt="image-20250525233130022" /><figcaption aria-hidden="true">image-20250525233130022</figcaption></figure><h2 id="创建智能体应用">2.7 创建智能体应用</h2><figure><img src="https://s2.loli.net/2025/05/25/3ZSTDcoJMOtlCkV.png"alt="image-20250525231305016" /><figcaption aria-hidden="true">image-20250525231305016</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/2kjePzaB5DwoGIV.png"alt="image-20250525231412600" /><figcaption aria-hidden="true">image-20250525231412600</figcaption></figure><p>配置提示词：</p><figure><img src="https://s2.loli.net/2025/05/25/pF9NuxsjWXYhPwz.png"alt="image-20250525233834258" /><figcaption aria-hidden="true">image-20250525233834258</figcaption></figure><h2 id="试用智能体包含mcp服务在内的能力">2.8试用智能体包含MCP服务在内的能力</h2><figure><img src="https://s2.loli.net/2025/05/25/dU4Fql1IkticgK5.png"alt="image-20250525234318728" /><figcaption aria-hidden="true">image-20250525234318728</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/oTrehw9WtZNuFRs.png"alt="image-20250525234355455" /><figcaption aria-hidden="true">image-20250525234355455</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/3fhynYmirVlAu9W.png"alt="image-20250525234527656" /><figcaption aria-hidden="true">image-20250525234527656</figcaption></figure><h2 id="发布应用">2.9 发布应用</h2><figure><img src="https://s2.loli.net/2025/05/25/wPnHh7KDzx9jaSY.png"alt="image-20250525234646826" /><figcaption aria-hidden="true">image-20250525234646826</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大语言模型MCP学习04-将自定义mcp服务部署到百炼平台01</title>
    <link href="/2025/05/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A004-%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89mcp%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E5%88%B0%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B001/"/>
    <url>/2025/05/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A004-%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89mcp%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E5%88%B0%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B001/</url>
    
    <content type="html"><![CDATA[<h1 id="一文档">一、文档</h1><p>https://www.youtube.com/watch?v=55FbKvc9nSI</p><p>https://www.datawhale.cn/learn/content/163/3932</p><p>https://bailian.console.aliyun.com/?tab=doc#/doc/?type=app&amp;url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F2879604.html</p><h1 id="二实施步骤">二、实施步骤</h1><h2 id="跑通本地mcp服务">2.1 跑通本地MCP服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建目录manipulate_mysql</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;uv init hello_mcp<br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;cd hello_mcp<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用uv创建虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp&gt;uv venv<br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活此虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp&gt;.venv\Scripts\activate<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装MCP Python SDK</span><br>(hello_mcp) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp&gt;uv add &quot;mcp[cli]==1.9.0&quot; httpx<br></code></pre></td></tr></table></figure><p>以一个简单的代码<code>main.py</code>来演示MCP服务使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP<br><span class="hljs-keyword">import</span> random<br><br>mcp = FastMCP(<span class="hljs-string">&quot;Demo&quot;</span>)<br><br><span class="hljs-comment"># 尽量加description，让AI更好理解函数的功能</span><br><span class="hljs-meta">@mcp.tool(<span class="hljs-params">description=<span class="hljs-string">&quot;这是一个超级聪明的AI，能回答你的一切问题&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">chat</span>(<span class="hljs-params">message: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>: <span class="hljs-comment"># 变量名尽量要体现出函数的功能，让AI更好理解，同时可以在函数定义出显式提示该函数的输入输出格式，如这里就指明输入输出都是字符串str</span><br>    <span class="hljs-string">&quot;&quot;&quot;输入一个问题，返回一个回答&quot;&quot;&quot;</span><br>    replies = [<span class="hljs-string">&quot;你好！&quot;</span>, <span class="hljs-string">&quot;今天天气不错！&quot;</span>, <span class="hljs-string">&quot;你想聊些什么呢？&quot;</span>, <span class="hljs-string">&quot;我很好，你呢？&quot;</span>, <span class="hljs-string">&quot;再见！&quot;</span>]<br>    <span class="hljs-keyword">return</span> random.choice(replies)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    mcp.run(transport=<span class="hljs-string">&#x27;sse&#x27;</span>) <span class="hljs-comment"># 连接端点为 host:port/sse</span><br>    <span class="hljs-comment">#mcp.run(transport=&quot;streamable-http&quot;) # 连接端点为 host:port/mcp/，这个过于先进，阿里云还不支持</span><br>    <span class="hljs-comment">#mcp.run() # 本地使用</span><br></code></pre></td></tr></table></figure><p>直接以python解析器运行上述py文件，如下是正常与成功时的显示内容：</p><figure><img src="https://s2.loli.net/2025/05/25/KUERhDoic3AaYkX.png"alt="image-20250525105852989" /><figcaption aria-hidden="true">image-20250525105852989</figcaption></figure><h2 id="在本地测试mcp服务">2.2 在本地测试MCP服务</h2><p>上述cmd窗口及其中运行的<code>python main.py</code>进程不要停止，打开另外一个cmd窗口并执行如下操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行如下命令连接与调试mcp服务</span><br>(hello_mcp) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp&gt;mcp dev main.py<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/25/yaU217CImHehRlk.png"alt="image-20250525110408073" /><figcaption aria-hidden="true">image-20250525110408073</figcaption></figure><p>在自己本地浏览器中访问<code>http://127.0.0.1:6274</code>，可以如下界面，然后按下图中注释进行操作：</p><figure><img src="https://s2.loli.net/2025/05/25/obxSUO1Fcv5TGCu.png"alt="image-20250525110921418" /><figcaption aria-hidden="true">image-20250525110921418</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/25/STpRXr1LA97FM4C.png"alt="image-20250525111647637" /><figcaption aria-hidden="true">image-20250525111647637</figcaption></figure><h2 id="用阿里云函数计算部署自定义mcp-server">2.3用阿里云函数计算部署自定义MCP server</h2><p>从技术上来说，除了阿里云函数计算，其实还有可以使用云服务器（应该是其他厂商的云服务器也可以，但因为要使用百炼平台，所以使用阿里云服务器应该最好）。如果自己已经购买了阿里云服务器，直接使用即可；但如果目前还没有购买，不建议为了测试与试用“在云服务器上部署MCP服务”而购买阿里云服务器，因为有更实惠的选择，它就是阿里云函数计算。</p><p>这是阿里云函数的官网： https://www.aliyun.com/product/fc 。官方对其的定义与介绍是：函数计算（FunctionCompute，简称FC）是事件驱动的全托管计算服务。使用函数计算，您无需采购与管理服务器等基础设施，只需编写并上传代码或镜像。函数计算为您准备好计算资源，可靠地运行任务，通过弹性伸缩应对流量峰谷，并提供日志查询、性能监控和报警等功能。函数计算提供了一种事件驱动的计算模型。您可以在指定函数中创建触发器，该触发器描述了一组规则，当某个事件满足这些规则，事件源就会触发关联的函数</p><p>使用Serverless架构的函数计算，只需聚焦于业务本身，平台为用户准备好计算资源，可靠地运行任务，并通过弹性伸缩应对流量峰谷，用户只需为任务实际消耗的资源付费。</p><p>打开阿里云函数计算概览界面：https://fcnext.console.aliyun.com/overview ，点击左侧的“<ahref="https://cap.console.aliyun.com/">FunctionAI</a>”功能按钮，进入“云原生应用开发平台 CAP控制台”页面，然后点击此页面左侧的“MCP广场”，进入“MCP广场|FunctionAI”页面后，点击右上角的“创建自定义MCP Server”按钮，</p><figure><img src="https://s2.loli.net/2025/05/25/iqxuKZ4hoX6QFl7.png"alt="image-20250525143522255" /><figcaption aria-hidden="true">image-20250525143522255</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/b7Hla8zhoKdqwAG.png"alt="image-20250525143755752" /><figcaption aria-hidden="true">image-20250525143755752</figcaption></figure><hr /><p>MCP服务基础配置：</p><figure><img src="https://s2.loli.net/2025/05/25/x9T7IybYl4oPRhw.png"alt="image-20250525144447989" /><figcaption aria-hidden="true">image-20250525144447989</figcaption></figure><p>MCP服务配置：</p><figure><img src="https://s2.loli.net/2025/05/25/qkNHQ4Z9I3iKAgV.png"alt="image-20250525145147575" /><figcaption aria-hidden="true">image-20250525145147575</figcaption></figure><p>我上传的hello_mcp.zip内的文件结构如下：</p><figure><img src="https://s2.loli.net/2025/05/25/vDwGjMUITYnaNKm.png"alt="image-20250525150700920" /><figcaption aria-hidden="true">image-20250525150700920</figcaption></figure><p>资源配置：</p><figure><img src="https://s2.loli.net/2025/05/25/WMvbL6SHc41nlt3.png"alt="image-20250525145611059" /><figcaption aria-hidden="true">image-20250525145611059</figcaption></figure><p>确认部署：</p><figure><img src="https://s2.loli.net/2025/05/25/qAPTXbf8nghLx49.png"alt="image-20250525145708962" /><figcaption aria-hidden="true">image-20250525145708962</figcaption></figure><p>（日志服务sls的开通好像需要一点缓冲的时间，如上图是未开通的。但过了几十秒后就提示我开通了）我第一次执行部署时失败了，稍等几十秒后（不知道期间发生了什么），再次部署就成功了。此时部署虽然成功了，但其中相关服务确是启动失败了：</p><figure><img src="https://s2.loli.net/2025/05/25/LY61d2ZiMTuvsHC.png"alt="image-20250525151013082" /><figcaption aria-hidden="true">image-20250525151013082</figcaption></figure><p>根据日志提示，”没有找到一个叫做mcp的模块“，那么尝试通过WebIDE安装配置看看：</p><figure><img src="https://s2.loli.net/2025/05/25/cNvHXUJS4ytFa8T.png"alt="image-20250525151354708" /><figcaption aria-hidden="true">image-20250525151354708</figcaption></figure><p>依次点击此编辑器”Terminal-&gt;NewTerminal“，打开一个Terminal窗口：</p><figure><img src="https://s2.loli.net/2025/05/25/bxLcATGsf2SV4zQ.png"alt="image-20250525151547595" /><figcaption aria-hidden="true">image-20250525151547595</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/qKcaWjMBhiD9EZA.png"alt="image-20250525152308258" /><figcaption aria-hidden="true">image-20250525152308258</figcaption></figure><p>然后重新部署，但服务还是启动失败，报销如下：</p><figure><img src="https://s2.loli.net/2025/05/25/E2wYABN8F3zkeZ7.png"alt="image-20250525161330765" /><figcaption aria-hidden="true">image-20250525161330765</figcaption></figure><p>然后我依次做了下操作：</p><p>（1）在WebIDE的编辑器的Terminal窗口中执行了命令“pip install uvicorn-t .”，保存后重新部署。</p><p>（2）在WebIDE的编辑器中，将“.python-version、pyproject.toml”这两个文件中的python3.11改成python3.10，保存后重新部署。</p><p>但都还是失败。最后参照如下“此文2.6.1章节”所述方法即可解决。解决后，服务部署成功，测试成功：</p><figure><img src="https://s2.loli.net/2025/05/25/byWj1g5MN4OupQw.png"alt="image-20250525162814568" /><figcaption aria-hidden="true">image-20250525162814568</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/ym9bF1tjOY3EHUs.png"alt="image-20250525163839738" /><figcaption aria-hidden="true">image-20250525163839738</figcaption></figure><p><img src="https://s2.loli.net/2025/05/25/ym9bF1tjOY3EHUs.png" /></p><hr /><p>将此MCP服务的公网访问地址复制备用：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//syjiangv-rnmcfk-dekkcmnyuu.cn-hangzhou.fcapp.run/sse</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/25/FXizGebuNxJ1Z6A.png"alt="image-20250525164004059" /><figcaption aria-hidden="true">image-20250525164004059</figcaption></figure><h2 id="百炼平台mcp管理创建自定义mcp服务">2.4百炼平台MCP管理创建自定义MCP服务</h2><figure><img src="https://s2.loli.net/2025/05/25/TwUvrK4RuJj9Hyh.png"alt="image-20250525181919182" /><figcaption aria-hidden="true">image-20250525181919182</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/hE4kKNlR3ogXSpT.png"alt="image-20250525164811941" /><figcaption aria-hidden="true">image-20250525164811941</figcaption></figure><h2 id="百炼平台智能体应用中使用上述自定义mcp服务">2.5百炼平台智能体应用中使用上述自定义MCP服务</h2><figure><img src="https://s2.loli.net/2025/05/25/e93yoSjTnEzYfNc.png"alt="image-20250525165100643" /><figcaption aria-hidden="true">image-20250525165100643</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/lgiHBRsPUN3yLbW.png"alt="image-20250525165150273" /><figcaption aria-hidden="true">image-20250525165150273</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/FiraxTMuSZE24Of.png"alt="image-20250525170915386" /><figcaption aria-hidden="true">image-20250525170915386</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/25/zAxa5YpOBECXk34.png"alt="image-20250525171814715" /><figcaption aria-hidden="true">image-20250525171814715</figcaption></figure><h2 id="问题与处理">2.6 问题与处理</h2><h3id="服务部署时一直报错function-instance-health-check-failed-on-port-8000-in-120-seconds.">2.6.1服务部署时一直报错“Function instance health check failed on port 8000 in120 seconds.”</h3><h4 id="错误描述">2.6.1.1 错误描述</h4><p>使用上述操作在FC中创建MCP与函数后，服务一直运行失败。自己最终使用如下操作重新创建一个工程目录hello_mcp02，其中使用python3.10，同时未再指定mcp版本。main.py文件内容还是一样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建目录manipulate_mysql</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;uv init hello_mcp02 --python 3.10<br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;cd hello_mcp02<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用uv创建虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp02&gt;uv venv<br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活此虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp02&gt;.venv\Scripts\activate<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装MCP Python SDK</span><br>(hello_mcp02) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\hello_mcp02&gt;uv add &quot;mcp[cli]&quot; httpx<br></code></pre></td></tr></table></figure><p>以一个简单的代码<code>main.py</code>来演示MCP服务使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP<br><span class="hljs-keyword">import</span> random<br><br>mcp = FastMCP(<span class="hljs-string">&quot;Demo&quot;</span>)<br><br><span class="hljs-comment"># 尽量加description，让AI更好理解函数的功能</span><br><span class="hljs-meta">@mcp.tool(<span class="hljs-params">description=<span class="hljs-string">&quot;这是一个超级聪明的AI，能回答你的一切问题&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">chat</span>(<span class="hljs-params">message: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>: <span class="hljs-comment"># 变量名尽量要体现出函数的功能，让AI更好理解，同时可以在函数定义出显式提示该函数的输入输出格式，如这里就指明输入输出都是字符串str</span><br>    <span class="hljs-string">&quot;&quot;&quot;输入一个问题，返回一个回答&quot;&quot;&quot;</span><br>    replies = [<span class="hljs-string">&quot;你好！&quot;</span>, <span class="hljs-string">&quot;今天天气不错！&quot;</span>, <span class="hljs-string">&quot;你想聊些什么呢？&quot;</span>, <span class="hljs-string">&quot;我很好，你呢？&quot;</span>, <span class="hljs-string">&quot;再见！&quot;</span>]<br>    <span class="hljs-keyword">return</span> random.choice(replies)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    mcp.run(transport=<span class="hljs-string">&#x27;sse&#x27;</span>) <span class="hljs-comment"># 连接端点为 host:port/sse</span><br>    <span class="hljs-comment">#mcp.run(transport=&quot;streamable-http&quot;) # 连接端点为 host:port/mcp/，这个过于先进，阿里云还不支持</span><br>    <span class="hljs-comment">#mcp.run() # 本地使用</span><br></code></pre></td></tr></table></figure><p>将此main.py文件打包压缩成main.zip重新上传到上述“代码包”配置项，重新部署。</p><p>还是失败</p><figure><img src="https://s2.loli.net/2025/05/25/q3cW8KEkhaN5o6R.png"alt="image-20250525161341966" /><figcaption aria-hidden="true">image-20250525161341966</figcaption></figure><h4 id="解决办法">2.6.1.2 解决办法</h4><p>做了如下修改：</p><ul><li>源码main.py，尝试读取FC_SERVER_HOST与FC_SERVER_PORT系统变量，没有找到时优先使用0.0.0.0、9000，并尝试在创建FastMCP实例时传递根据配置报错来看，FC_SERVER_PORT是有默认值的，是9000</li><li>函数计算MCP服务配置界面的监听端口配置成9000</li><li>重新部署服务。成功时的日志如下。</li></ul><figure><img src="https://s2.loli.net/2025/05/25/byWj1g5MN4OupQw.png"alt="image-20250525162814568" /><figcaption aria-hidden="true">image-20250525162814568</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将自定义python库发布到pypi</title>
    <link href="/2025/05/24/%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89python%E5%BA%93%E5%8F%91%E5%B8%83%E5%88%B0pypi/"/>
    <url>/2025/05/24/%E5%B0%86%E8%87%AA%E5%AE%9A%E4%B9%89python%E5%BA%93%E5%8F%91%E5%B8%83%E5%88%B0pypi/</url>
    
    <content type="html"><![CDATA[<h1 id="一文档">一、文档</h1><h1 id="二实施步骤">二、实施步骤</h1><h2 id="pypi相关准备工作">2.1 pypi相关准备工作</h2><h3 id="注册pypi账号">2.1.1 注册pypi账号</h3><p>https://pypi.org/account/register/</p><h3 id="添加pypi-api令牌">2.1.2 添加pypi API令牌</h3><figure><img src="https://s2.loli.net/2025/05/24/hIuPFZGRCeKTwLd.png"alt="image-20250524213258148" /><figcaption aria-hidden="true">image-20250524213258148</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/24/xKc97RUtAlGveJd.png"alt="image-20250524213323053" /><figcaption aria-hidden="true">image-20250524213323053</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/24/o9niLkeMtqXR6rV.png"alt="image-20250524213427536" /><figcaption aria-hidden="true">image-20250524213427536</figcaption></figure><h2 id="创建相关python文件夹">2.2 创建相关python文件(夹)</h2><p>首先创建如下文件结构：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">my_pypi_test_pkg/<br>|-- README.md<br>|-- pyproject.toml<br>|-- .gitignore<br>`-- src<br>    `-- my_pypi_test_pkg_example<br>        |-- __init__.py<br>        `-- greeter.py<br></code></pre></td></tr></table></figure><h3 id="相关文件夹解析">2.2.1 相关文件(夹)解析</h3><ul><li><p>README.md：README 文件。</p></li><li><p>pyproject.toml：这是定义项目元数据和构建配置的核心文件。</p></li><li><p>src目录与my_pypi_test_pkg_example：我们将创建一个 src目录，并在其中放置我们的包代码。包名将是 my_pypi_test_pkg_example (与pyproject.toml 中的 name 相对应，但 Python模块名通常用下划线)。</p></li><li><p>__init__.py：这个文件可以为空，但它的存在告诉 Python这个目录是一个包。我们可以在里面定义包的版本。</p></li><li><p>greeter.py：它将包含一个简单的函数。</p></li></ul><h3 id="修改my_pypi_test_pkgpyproject.toml">2.2.2修改my_pypi_test_pkg/pyproject.toml</h3><p>这是定义项目元数据和构建配置的核心文件。</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[build-system]</span><br><span class="hljs-attr">requires</span> = [<span class="hljs-string">&quot;hatchling&quot;</span>]<br><span class="hljs-attr">build-backend</span> = <span class="hljs-string">&quot;hatchling.build&quot;</span><br><br><span class="hljs-section">[project]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;my_pypi_test_pkg_example&quot;</span>  <span class="hljs-comment"># 重要：请替换 &#x27;example&#x27; 为你的唯一标识符</span><br><span class="hljs-attr">version</span> = <span class="hljs-string">&quot;0.0.1&quot;</span><br><span class="hljs-attr">authors</span> = [<br>  &#123; name=<span class="hljs-string">&quot;Your Name&quot;</span>, email=<span class="hljs-string">&quot;you@example.com&quot;</span> &#125;, <span class="hljs-comment"># 重要：替换为你的名字和邮箱</span><br>]<br><span class="hljs-attr">description</span> = <span class="hljs-string">&quot;A small example package for PyPI testing&quot;</span><br><span class="hljs-attr">readme</span> = <span class="hljs-string">&quot;README.md&quot;</span> <span class="hljs-comment"># 我们稍后可以创建一个简单的 README</span><br><span class="hljs-attr">requires-python</span> = <span class="hljs-string">&quot;&gt;=3.7&quot;</span><br><span class="hljs-attr">classifiers</span> = [<br>    <span class="hljs-string">&quot;Programming Language :: Python :: 3&quot;</span>,<br>    <span class="hljs-string">&quot;License :: OSI Approved :: MIT License&quot;</span>,<br>    <span class="hljs-string">&quot;Operating System :: OS Independent&quot;</span>,<br>]<br><br><span class="hljs-section">[project.urls]</span><br><span class="hljs-attr">&quot;Homepage&quot;</span> = <span class="hljs-string">&quot;https://github.com/yourusername/my_pypi_test_pkg&quot;</span>  <span class="hljs-comment"># 重要：替换为你的项目主页 (可选)</span><br><span class="hljs-attr">&quot;Bug Tracker&quot;</span> = <span class="hljs-string">&quot;https://github.com/yourusername/my_pypi_test_pkg/issues&quot;</span> <span class="hljs-comment"># 重要：替换 (可选) </span><br></code></pre></td></tr></table></figure><p>修改之后如下：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-section">[build-system]</span><br><span class="hljs-attr">requires</span> = [<span class="hljs-string">&quot;hatchling&quot;</span>]<br><span class="hljs-attr">build-backend</span> = <span class="hljs-string">&quot;hatchling.build&quot;</span><br><br><span class="hljs-section">[project]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;my_pypi_test_pkg_syjiang&quot;</span>  <span class="hljs-comment"># 重要：请替换 &#x27;example&#x27; 为你的唯一标识符</span><br><span class="hljs-attr">version</span> = <span class="hljs-string">&quot;0.0.1&quot;</span><br><span class="hljs-attr">authors</span> = [<br>  &#123; name=<span class="hljs-string">&quot;syjiang&quot;</span>, email=<span class="hljs-string">&quot;1327212357@qq.com&quot;</span> &#125;, <span class="hljs-comment"># 重要：替换为你的名字和邮箱</span><br>]<br><span class="hljs-attr">description</span> = <span class="hljs-string">&quot;A small example package for PyPI testing&quot;</span><br><span class="hljs-attr">readme</span> = <span class="hljs-string">&quot;README.md&quot;</span> <span class="hljs-comment"># 我们稍后可以创建一个简单的 README</span><br><span class="hljs-attr">requires-python</span> = <span class="hljs-string">&quot;&gt;=3.7&quot;</span><br><span class="hljs-attr">classifiers</span> = [<br>    <span class="hljs-string">&quot;Programming Language :: Python :: 3&quot;</span>,<br>    <span class="hljs-string">&quot;License :: OSI Approved :: MIT License&quot;</span>,<br>    <span class="hljs-string">&quot;Operating System :: OS Independent&quot;</span>,<br>]<br><br><span class="hljs-section">[project.urls]</span><br><span class="hljs-attr">&quot;Homepage&quot;</span> = <span class="hljs-string">&quot;https://github.com/jiangsanyin/my_pypi_test_pkg&quot;</span>  <span class="hljs-comment"># 重要：替换为你的项目主页 (可选)</span><br><span class="hljs-attr">&quot;Bug Tracker&quot;</span> = <span class="hljs-string">&quot;https://github.com/jiangsanyin/my_pypi_test_pkg/issues&quot;</span> <span class="hljs-comment"># 重要：替换 (可选) </span><br></code></pre></td></tr></table></figure><h3 id="修改my_pypi_test_pkgmy_pypi_test_pkg_example目录">2.2.3修改my_pypi_test_pkg/my_pypi_test_pkg_example目录</h3><p>根据<code>my_pypi_test_pkg/pyproject.toml</code>中[project]中修改后的name配置项的值，需要将<code>my_pypi_test_pkg/my_pypi_test_pkg_example</code>目录修改为<code>my_pypi_test_pkg/my_pypi_test_pkg_syjiang</code>目录</p><h3 id="查看与修改srcmy_pypi_test_pkg_syjiang__init__.py">2.2.4查看与修改src/my_pypi_test_pkg_syjiang/__init__.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;My PyPI Test Package - Example&quot;&quot;&quot;</span><br><br>__version__ = <span class="hljs-string">&quot;0.0.1&quot;</span><br><br><span class="hljs-keyword">from</span> .greeter <span class="hljs-keyword">import</span> greet <br></code></pre></td></tr></table></figure><h3id="查看与修改srcmy_pypi_test_pkg_syjianggreeter.py">查看与修改src/my_pypi_test_pkg_syjiang/greeter.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">name: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;Returns a greeting message.&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Hello, <span class="hljs-subst">&#123;name&#125;</span>! Welcome to your test PyPI package.&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="查看与修改-readme.md-可选但推荐">查看与修改 README.md(可选但推荐)</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># My PyPI Test Package (Example)</span><br><br>This is a simple package created for testing the PyPI packaging and publishing process.<br><br>Remember to replace <span class="hljs-code">`example`</span> in the package name and <span class="hljs-code">`pyproject.toml`</span> with your unique identifier.<br><br><span class="hljs-section">## Installation</span><br><br>Once published to TestPyPI (or PyPI):<br><br><span class="hljs-code">```bash</span><br><span class="hljs-code"># From TestPyPI</span><br><span class="hljs-code">pip install -i https://test.pypi.org/simple/ my-pypi-test-pkg-example</span><br><span class="hljs-code"></span><br><span class="hljs-code"># From PyPI (if you publish there)</span><br><span class="hljs-code"># pip install my-pypi-test-pkg-example</span><br><span class="hljs-code">```</span><br><br><span class="hljs-section">## Usage</span><br><br><span class="hljs-code">```python</span><br><span class="hljs-code">from my_pypi_test_pkg_example import greet</span><br><span class="hljs-code"></span><br><span class="hljs-code">print(greet(&quot;Your Name&quot;))</span><br><span class="hljs-code">``` </span><br></code></pre></td></tr></table></figure><p>修改后为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section"># My PyPI Test Package (Example)</span><br><br>This is a simple package created for testing the PyPI packaging and publishing process.<br><br>Remember to replace <span class="hljs-code">`example`</span> in the package name and <span class="hljs-code">`pyproject.toml`</span> with your unique identifier.<br><br><span class="hljs-section">## Installation</span><br><br>Once published to TestPyPI (or PyPI):<br><br><span class="hljs-code">```bash</span><br><span class="hljs-code"># From TestPyPI</span><br><span class="hljs-code">pip install -i https://test.pypi.org/simple/ my-pypi-test-pkg-syjiang</span><br><span class="hljs-code"></span><br><span class="hljs-code"># From PyPI (if you publish there)</span><br><span class="hljs-code"># pip install my-pypi-test-pkg-syjiang</span><br><span class="hljs-code">```</span><br><br><span class="hljs-section">## Usage</span><br><br><span class="hljs-code">```python</span><br><span class="hljs-code">from my_pypi_test_pkg_syjiang import greet</span><br><span class="hljs-code"></span><br><span class="hljs-code">print(greet(&quot;Your Name&quot;))</span><br><span class="hljs-code">``` </span><br></code></pre></td></tr></table></figure><h3id="查看与修改my_pypi_test_pkg.gitignore">查看与修改my_pypi_test_pkg\.gitignore</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment"># Python</span><br>__pycache__/<br>*.py<span class="hljs-section">[cod]</span><br>*$py.class<br><br><span class="hljs-comment"># Build artifacts</span><br>dist/<br>build/<br>*.egg-info/<br><br><span class="hljs-comment"># Virtual environment</span><br>.venv/<br>venv/<br>ENV/ <br></code></pre></td></tr></table></figure><h3 id="安装构建工具">安装构建工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install build twine<br></code></pre></td></tr></table></figure><h3 id="构建包">构建包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">(在 my_pypi_test_pkg 目录下运行)</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">python -m build</span><br>* Creating isolated environment: venv+pip...<br>* Installing packages in isolated environment:<br>  - hatchling<br>* Getting build dependencies for sdist...<br>* Building sdist...<br>* Building wheel from sdist<br>* Creating isolated environment: venv+pip...<br>* Installing packages in isolated environment:<br>  - hatchling<br>* Getting build dependencies for wheel...<br>* Building wheel...<br>Successfully built my_pypi_test_pkg_syjiang-0.0.1.tar.gz and my_pypi_test_pkg_syjiang-0.0.1-py3-none-any.whl<br><br></code></pre></td></tr></table></figure><h3 id="上传到-testpypi一直失败">上传到 TestPyPI(一直失败)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">twine upload --repository testpypi dist/*<br></code></pre></td></tr></table></figure><p>但一直报错，报错信息如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Uploading distributions <span class="hljs-built_in">to</span> <span class="hljs-keyword">https</span>://test.pypi.org/legacy/<br>Enter your API <span class="hljs-keyword">token</span>:<br>Uploading my_pypi_test_pkg_syjiang<span class="hljs-number">-0.0</span><span class="hljs-number">.1</span>-py3-<span class="hljs-literal">none</span>-<span class="hljs-keyword">any</span>.whl<br><span class="hljs-number">100</span>% ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class="hljs-number">5.1</span>/<span class="hljs-number">5.1</span> kB • <span class="hljs-number">00</span>:<span class="hljs-number">00</span> • ?<br>WARNING  Error during upload. Retry <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> <span class="hljs-comment">--verbose option for more details.</span><br>ERROR    HTTPError: <span class="hljs-number">403</span> Forbidden <span class="hljs-built_in">from</span> <span class="hljs-keyword">https</span>://test.pypi.org/legacy/<br>         Forbidden<br></code></pre></td></tr></table></figure><p>如下两种方法都试过了，仍未解决：</p><figure><img src="https://s2.loli.net/2025/05/24/81knIbYXP3WopdR.png"alt="image-20250524224450089" /><figcaption aria-hidden="true">image-20250524224450089</figcaption></figure><h3 id="测试从-testpypi-安装">测试从 TestPyPI 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install -i https://test.pypi.org/simple/ my_pypi_test_pkg_syjiang<br></code></pre></td></tr></table></figure><h3 id="上传到-pypi">上传到 PyPI</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果你准备好了，并且包名是唯一的</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">twine upload dist/*</span><br>Uploading distributions to https://upload.pypi.org/legacy/<br>Enter your API token:<br>Uploading my_pypi_test_pkg_syjiang-0.0.1-py3-none-any.whl<br><span class="hljs-meta prompt_">100% </span><span class="language-bash">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.1/5.1 kB • 00:01 • ?</span><br>Uploading my_pypi_test_pkg_syjiang-0.0.1.tar.gz<br><span class="hljs-meta prompt_">100% </span><span class="language-bash">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 4.6/4.6 kB • 00:00 • ?</span><br><br>View at:<br>https://pypi.org/project/my-pypi-test-pkg-syjiang/0.0.1/<br></code></pre></td></tr></table></figure><h3 id="测试从-pypi-安装">测试从 PyPI 安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py312) D:\&gt;pip install -i https://pypi.org/simple/ my-pypi-test-pkg-syjiang<br>Looking in indexes: https://pypi.org/simple/<br>Collecting my-pypi-test-pkg-syjiang<br>  Downloading my_pypi_test_pkg_syjiang-0.0.1-py3-none-any.whl.metadata (1.1 kB)<br>Downloading my_pypi_test_pkg_syjiang-0.0.1-py3-none-any.whl (2.0 kB)<br>Installing collected packages: my-pypi-test-pkg-syjiang<br>Successfully installed my-pypi-test-pkg-syjiang-0.0.1<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py312) D:\&gt;pip show my-pypi-test-pkg-syjiang<br>Name: my_pypi_test_pkg_syjiang<br>Version: 0.0.1<br>Summary: A small example package for PyPI testing<br>Home-page: https://github.com/jiangsanyin/my_pypi_test_pkg<br>Author:<br>Author-email: syjiang &lt;1327212357@qq.com&gt;<br>License:<br>Location: D:\ProgramData\anaconda3\envs\py312\Lib\site-packages<br>Requires:<br>Required-by:<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py312) D:\&gt;python<br>Python 3.12.9 | packaged by Anaconda, Inc. | (main, Feb  6 2025, 18:49:16) [MSC v.1929 64 bit (AMD64)] on win32<br>Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; import my_pypi_test_pkg_syjiang</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; from my_pypi_test_pkg_syjiang import greet</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; greet(<span class="hljs-string">&quot;jack&quot;</span>)</span><br>&#x27;Hello, jack! Welcome to your test PyPI package.&#x27;<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown文件转成pdf文件</title>
    <link href="/2025/05/23/markdown%E6%96%87%E4%BB%B6%E8%BD%AC%E6%88%90pdf%E6%96%87%E4%BB%B6/"/>
    <url>/2025/05/23/markdown%E6%96%87%E4%BB%B6%E8%BD%AC%E6%88%90pdf%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="方法说明与汇总">0、方法说明与汇总</h1><table><thead><tr><th>方法</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>方法1：使用typora软件自带转换功能</td><td>方便，使用typora软件打开相关文档即可导出成多种格式；支持的导出格式多，包括pdf、html、word（需要先安装pandoc软件）、长图等；支持markdown文件中的文字、段落、图片、数学公式等</td><td>导出的的pdf文件中个别地方跟原文件效果稍有差别，但基本一致、内容不变</td></tr><tr><td>方法2：借助vscode插件与浏览器</td><td>还原度高，导出成pdf后的效果跟原文件效果基本相同；支持markdown文件中的文字、段落、图片、数学公式等</td><td>相对“方法1”步骤要多些；需提前安装vscode插件“Markdown PreviewEnhanced”</td></tr><tr><td>方法3：使用pandoc软件</td><td></td><td></td></tr></tbody></table><h1id="一使用typora软件自带转换功能">一、使用typora软件自带转换功能</h1><figure><img src="https://s2.loli.net/2025/05/31/TWYkhOmrdioQCSF.png"alt="image-20250531160342474" /><figcaption aria-hidden="true">image-20250531160342474</figcaption></figure><h1 id="二借助vscode插件与浏览器">二、借助vscode插件与浏览器</h1><h2 id="vscode安装插件">2.1 vscode安装插件</h2><p>安装插件：Markdown Preview Enhanced</p><figure><img src="https://s2.loli.net/2025/05/23/VESg2QucfkCM6Uz.png"alt="image-20250523165809819" /><figcaption aria-hidden="true">image-20250523165809819</figcaption></figure><h2 id="打开md文件及预览">2.2 打开md文件及预览</h2><figure><img src="https://s2.loli.net/2025/05/23/Guy7VXMIHdC6RpQ.png"alt="image-20250523170311961" /><figcaption aria-hidden="true">image-20250523170311961</figcaption></figure><h2 id="预览视图中再从浏览器中打开">2.3 预览视图中再从浏览器中打开</h2><figure><img src="https://s2.loli.net/2025/05/23/IWhFK1uBxeZi4Nb.png"alt="image-20250523170413227" /><figcaption aria-hidden="true">image-20250523170413227</figcaption></figure><h2 id="浏览器中查看效果">2.4 浏览器中查看效果</h2><p>此时可以在默认浏览器中看到markdown文件被解析后的效果，跟vscode中看到的预览视图效果一样</p><figure><img src="https://s2.loli.net/2025/05/23/ZqwpUFvxPEd1uJ8.png"alt="image-20250523170500900" /><figcaption aria-hidden="true">image-20250523170500900</figcaption></figure><h2 id="以pdf格式打印">2.5 以pdf格式打印</h2><p>在上述浏览器页面中，鼠标右键-&gt;打印，打开如下视图：</p><figure><img src="https://s2.loli.net/2025/05/23/JY7sSPVMKxIdoHv.png"alt="image-20250523170832319" /><figcaption aria-hidden="true">image-20250523170832319</figcaption></figure><p>选择另存为pdf，所有页面，布局根据自己的情况选择（一般是纵向），保存。就可以得到一个pdf文件</p><figure><img src="https://s2.loli.net/2025/05/23/n9DvMWiPAzKuxqN.png"alt="image-20250523171033946" /><figcaption aria-hidden="true">image-20250523171033946</figcaption></figure><h1 id="三使用pandoc软件">三、使用pandoc软件</h1><p>是开源项目，github仓库地址： https://github.com/jgm/pandoc 。</p><p>从其文档来看，支持的源格式与目标格式都很多，目前本人还未使用过此软件转换成pdf。</p><p>目前只支持命令行操作，可通过第三方工具（如 PanWriter）扩展。</p>]]></content>
    
    
    <categories>
      
      <category>工具与奇技淫巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具与奇技淫巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大语言模型MCP学习03-MCP实现对MySQL数据库的操作</title>
    <link href="/2025/05/22/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A003-MCP%E5%AE%9E%E7%8E%B0%E5%AF%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <url>/2025/05/22/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A003-MCP%E5%AE%9E%E7%8E%B0%E5%AF%B9MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景与需求">一、背景与需求</h1><p>本人能够熟练使用Python语言，能对MySQL数据库、常见的AI工具进行操作。</p><p>在当前MCP服务开发社区内，我发现在网上（主要是mcp.so）上并没有找到一个能够完全正常通过<strong>远程服务</strong>方式运行的操作MySQL数据库的MCP服务端，但我在使用LLM时又有操作MySQL数据库的需求，所以我想自己开发一个通过<strong>本地运行</strong>方式运行的操作MySQL数据库的MCP服务端。</p><p>由于平时有工作，且最近做的工作也没有直接与MCP相关。所以考虑到时间的紧迫性与自己对于pythonMCPSDK不够熟练，所以自己想通过LLM来完成“编写MCP服务端代码”这个工作，自己主要编写LLM的提示词即可。然后自己通过自己已经掌握的方法将其部署到cursor/trae这个工具中进行使用。</p><h1 id="二环境信息">二、环境信息</h1><h2 id="mysql数据库">2.1 MySQL数据库</h2><ul><li>MySQL数据库服务所在IP、远程访问用户名、密码与数据库名称分别是：172.20.0.22、root、root@123、test01。</li><li>MySQL数据库版本：10.5.6-MariaDB-1:10.5.6+maria~focal</li></ul><h2 id="客户端环境">2.2 客户端环境</h2><ul><li>联想笔记本电脑，win11操作系统</li><li>已经安装好uv工具</li><li>python3.11</li></ul><h1 id="三具体实施步骤">三、具体实施步骤</h1><p>使用Claude（使用trace也可以）这个工具及其中的Claude3.7LLM来帮助我编写python代码。</p><h2 id="撰写mcp应用服务端代码">3.1 撰写MCP应用服务端代码</h2><p>自己编写的提示词如下：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">你作为一个大模型开发工程师，现在需要开发一个MCP应用，这个应用的功能主要是对MySQL数据库进行创建表以及增删改查操作。<br>- 要求<br> -请用<span class="hljs-keyword">python3</span>语言实现MCP服务端<br> -此次使用的<span class="hljs-keyword">python</span> MCP SDK的版本是<span class="hljs-number">1.9</span>.<span class="hljs-number">0</span><br> -请给出测试时需要用到的客户端代码<br></code></pre></td></tr></table></figure><p>然后LLM会给出服务端python代码的内容，以及使用说明。</p><ul><li><p>将上述生成的服务端代码保存为main.py。并修改其中的数据库连接信息（暂时未对MySQL的连接信息及连接过程进行修改与封装）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">MySQL MCP Server - 修复版本</span><br><span class="hljs-string">提供MySQL数据库的创建表、增删改查等操作功能</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">Any</span>, <span class="hljs-type">Dict</span>, <span class="hljs-type">List</span>, <span class="hljs-type">Optional</span><br><br><span class="hljs-keyword">import</span> aiomysql<br><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP<br><span class="hljs-keyword">from</span> mcp.server.stdio <span class="hljs-keyword">import</span> stdio_server<br><br><span class="hljs-comment"># 配置日志</span><br>logging.basicConfig(<br>    level=logging.INFO,<br>    <span class="hljs-built_in">format</span>=<span class="hljs-string">&#x27;%(asctime)s - %(name)s - %(levelname)s - %(message)s&#x27;</span>,<br>    handlers=[<br>        logging.StreamHandler(sys.stderr)  <span class="hljs-comment"># 输出到stderr避免与MCP通信冲突</span><br>    ]<br>)<br>logger = logging.getLogger(__name__)<br><br><span class="hljs-comment"># 创建FastMCP实例</span><br>app = FastMCP(<span class="hljs-string">&quot;mysql-mcp-server&quot;</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MySQLManager</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.db_config = &#123;<br>            <span class="hljs-string">&#x27;host&#x27;</span>: <span class="hljs-string">&#x27;172.20.0.22&#x27;</span>,<br>            <span class="hljs-string">&#x27;port&#x27;</span>: <span class="hljs-number">3306</span>,<br>            <span class="hljs-string">&#x27;user&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,<br>            <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;root@123&#x27;</span>,<br>            <span class="hljs-string">&#x27;db&#x27;</span>: <span class="hljs-string">&#x27;test01&#x27;</span>,<br>            <span class="hljs-string">&#x27;charset&#x27;</span>: <span class="hljs-string">&#x27;utf8mb4&#x27;</span>,<br>            <span class="hljs-string">&#x27;autocommit&#x27;</span>: <span class="hljs-literal">True</span><br>        &#125;<br>        <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>        <span class="hljs-variable language_">self</span>._lock = asyncio.Lock()<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_connection</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;获取数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> <span class="hljs-variable language_">self</span>._lock:<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-variable language_">self</span>.pool:<br>                <span class="hljs-keyword">try</span>:<br>                    logger.info(<span class="hljs-string">f&quot;正在连接数据库: <span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;host&#x27;</span>]&#125;</span>:<span class="hljs-subst">&#123;self.db_config[<span class="hljs-string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span>)<br>                    <span class="hljs-variable language_">self</span>.pool = <span class="hljs-keyword">await</span> aiomysql.create_pool(<br>                        host=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;host&#x27;</span>],<br>                        port=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;port&#x27;</span>],<br>                        user=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;user&#x27;</span>],<br>                        password=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;password&#x27;</span>],<br>                        db=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;db&#x27;</span>],<br>                        charset=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;charset&#x27;</span>],<br>                        autocommit=<span class="hljs-variable language_">self</span>.db_config[<span class="hljs-string">&#x27;autocommit&#x27;</span>],<br>                        minsize=<span class="hljs-number">1</span>,<br>                        maxsize=<span class="hljs-number">5</span>,<br>                        connect_timeout=<span class="hljs-number">10</span>,<br>                        pool_recycle=<span class="hljs-number">3600</span><br>                    )<br>                    logger.info(<span class="hljs-string">&quot;数据库连接池创建成功&quot;</span>)<br>                <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                    logger.error(<span class="hljs-string">f&quot;创建数据库连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">raise</span><br>        <br>        <span class="hljs-keyword">try</span>:<br>            conn = <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.acquire()<br>            <span class="hljs-keyword">return</span> conn<br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            logger.error(<span class="hljs-string">f&quot;获取数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">raise</span><br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">release_connection</span>(<span class="hljs-params">self, conn</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;释放数据库连接&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> conn <span class="hljs-keyword">and</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.release(conn)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;释放数据库连接失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">close_pool</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;关闭连接池&quot;&quot;&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.pool:<br>            <span class="hljs-keyword">try</span>:<br>                <span class="hljs-variable language_">self</span>.pool.close()<br>                <span class="hljs-keyword">await</span> <span class="hljs-variable language_">self</span>.pool.wait_closed()<br>                <span class="hljs-variable language_">self</span>.pool = <span class="hljs-literal">None</span><br>                logger.info(<span class="hljs-string">&quot;数据库连接池已关闭&quot;</span>)<br>            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>                logger.error(<span class="hljs-string">f&quot;关闭连接池失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># 创建全局MySQL管理器实例</span><br>mysql_manager = MySQLManager()<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_table</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">List</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-built_in">str</span>]]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    创建MySQL数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 列定义数组，每个元素包含name(列名)、type(数据类型)、constraints(约束条件，可选)</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        创建结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 构建CREATE TABLE语句</span><br>            column_defs = []<br>            <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns:<br>                col_def = <span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;name&#x27;</span>]&#125;</span>` <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;type&#x27;</span>]&#125;</span>&quot;</span><br>                <span class="hljs-keyword">if</span> col.get(<span class="hljs-string">&#x27;constraints&#x27;</span>):<br>                    col_def += <span class="hljs-string">f&quot; <span class="hljs-subst">&#123;col[<span class="hljs-string">&#x27;constraints&#x27;</span>]&#125;</span>&quot;</span><br>                column_defs.append(col_def)<br>            <br>            sql = <span class="hljs-string">f&quot;CREATE TABLE IF NOT EXISTS `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;<span class="hljs-string">&#x27;, &#x27;</span>.join(column_defs)&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            logger.info(<span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;表 &#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; 创建成功&quot;</span><br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;创建表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">insert_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]</span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    向表中插入数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要插入的数据，键值对形式</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        插入结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            columns = <span class="hljs-built_in">list</span>(data.keys())<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            placeholders = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">&#x27;%s&#x27;</span>] * <span class="hljs-built_in">len</span>(values))<br>            column_names = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;INSERT INTO `<span class="hljs-subst">&#123;table_name&#125;</span>` (<span class="hljs-subst">&#123;column_names&#125;</span>) VALUES (<span class="hljs-subst">&#123;placeholders&#125;</span>)&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据插入成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;插入数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">select_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, columns: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>, </span><br><span class="hljs-params">                     where_clause: <span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;&quot;</span>, limit: <span class="hljs-built_in">int</span> = <span class="hljs-number">100</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    查询表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        columns: 要查询的列名，默认为所有列</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">        limit: 限制返回行数</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        查询结果的JSON字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> columns <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        columns = [<span class="hljs-string">&quot;*&quot;</span>]<br>    <br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor(aiomysql.DictCursor) <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">if</span> columns == [<span class="hljs-string">&quot;*&quot;</span>]:<br>                column_str = <span class="hljs-string">&quot;*&quot;</span><br>            <span class="hljs-keyword">else</span>:<br>                column_str = <span class="hljs-string">&#x27;, &#x27;</span>.join([<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;col&#125;</span>`&quot;</span> <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> columns])<br>            <br>            sql = <span class="hljs-string">f&quot;SELECT <span class="hljs-subst">&#123;column_str&#125;</span> FROM `<span class="hljs-subst">&#123;table_name&#125;</span>`&quot;</span><br>            <span class="hljs-keyword">if</span> where_clause:<br>                sql += <span class="hljs-string">f&quot; WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            sql += <span class="hljs-string">f&quot; LIMIT <span class="hljs-subst">&#123;limit&#125;</span>&quot;</span><br>            <br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            results = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> results:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;未找到数据&quot;</span><br>            <br>            <span class="hljs-comment"># 格式化结果</span><br>            formatted_results = []<br>            <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> results:<br>                formatted_results.append(<span class="hljs-built_in">dict</span>(row))<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(formatted_results, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>, default=<span class="hljs-built_in">str</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;查询数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">update_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>], where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    更新表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        data: 要更新的数据，键值对形式</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        更新结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            set_clauses = [<span class="hljs-string">f&quot;`<span class="hljs-subst">&#123;key&#125;</span>` = %s&quot;</span> <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> data.keys()]<br>            set_clause = <span class="hljs-string">&#x27;, &#x27;</span>.join(set_clauses)<br>            values = <span class="hljs-built_in">list</span>(data.values())<br>            <br>            sql = <span class="hljs-string">f&quot;UPDATE `<span class="hljs-subst">&#123;table_name&#125;</span>` SET <span class="hljs-subst">&#123;set_clause&#125;</span> WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql, values)<br>            result_msg = <span class="hljs-string">f&quot;数据更新成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;更新数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete_data</span>(<span class="hljs-params">table_name: <span class="hljs-built_in">str</span>, where_clause: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    删除表中的数据</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        table_name: 表名</span><br><span class="hljs-string">        where_clause: WHERE条件子句</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        删除结果消息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            sql = <span class="hljs-string">f&quot;DELETE FROM `<span class="hljs-subst">&#123;table_name&#125;</span>` WHERE <span class="hljs-subst">&#123;where_clause&#125;</span>&quot;</span><br>            <span class="hljs-keyword">await</span> cursor.execute(sql)<br>            result_msg = <span class="hljs-string">f&quot;数据删除成功，受影响行数: <span class="hljs-subst">&#123;cursor.rowcount&#125;</span>&quot;</span><br>            logger.info(result_msg)<br>            <span class="hljs-keyword">return</span> result_msg<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;删除数据失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">show_tables</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    显示所有数据表</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        表列表字符串</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SHOW TABLES&quot;</span>)<br>            tables = <span class="hljs-keyword">await</span> cursor.fetchall()<br>            <br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> tables:<br>                <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;数据库中没有表&quot;</span><br>            <br>            table_list = [table[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> tables]<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;数据库中的表(<span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(table_list)&#125;</span>个):\n&quot;</span> + <span class="hljs-string">&#x27;\n&#x27;</span>.join([<span class="hljs-string">f&quot;- <span class="hljs-subst">&#123;table&#125;</span>&quot;</span> <span class="hljs-keyword">for</span> table <span class="hljs-keyword">in</span> table_list])<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;显示表失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-meta">@app.tool()</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database_info</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取当前数据库连接信息和状态</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        数据库信息</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    conn = <span class="hljs-literal">None</span><br>    <span class="hljs-keyword">try</span>:<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-comment"># 获取数据库版本</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT VERSION()&quot;</span>)<br>            version = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取当前数据库</span><br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT DATABASE()&quot;</span>)<br>            current_db = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <br>            <span class="hljs-comment"># 获取连接信息</span><br>            info = &#123;<br>                <span class="hljs-string">&quot;host&quot;</span>: mysql_manager.db_config[<span class="hljs-string">&#x27;host&#x27;</span>],<br>                <span class="hljs-string">&quot;port&quot;</span>: mysql_manager.db_config[<span class="hljs-string">&#x27;port&#x27;</span>],<br>                <span class="hljs-string">&quot;user&quot;</span>: mysql_manager.db_config[<span class="hljs-string">&#x27;user&#x27;</span>],<br>                <span class="hljs-string">&quot;database&quot;</span>: mysql_manager.db_config[<span class="hljs-string">&#x27;db&#x27;</span>],<br>                <span class="hljs-string">&quot;mysql_version&quot;</span>: version[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> version <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;Unknown&quot;</span>,<br>                <span class="hljs-string">&quot;current_database&quot;</span>: current_db[<span class="hljs-number">0</span>] <span class="hljs-keyword">if</span> current_db <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;None&quot;</span>,<br>                <span class="hljs-string">&quot;connection_status&quot;</span>: <span class="hljs-string">&quot;Connected&quot;</span><br>            &#125;<br>            <br>            <span class="hljs-keyword">return</span> json.dumps(info, ensure_ascii=<span class="hljs-literal">False</span>, indent=<span class="hljs-number">2</span>)<br>    <br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        error_msg = <span class="hljs-string">f&quot;获取数据库信息失败: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br>        logger.error(error_msg)<br>        <span class="hljs-keyword">return</span> error_msg<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-keyword">if</span> conn:<br>            <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">test_connection</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;测试数据库连接&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;正在测试数据库连接...&quot;</span>)<br>        conn = <span class="hljs-keyword">await</span> mysql_manager.get_connection()<br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>            <span class="hljs-keyword">await</span> cursor.execute(<span class="hljs-string">&quot;SELECT 1&quot;</span>)<br>            result = <span class="hljs-keyword">await</span> cursor.fetchone()<br>            <span class="hljs-keyword">if</span> result[<span class="hljs-number">0</span>] == <span class="hljs-number">1</span>:<br>                logger.info(<span class="hljs-string">&quot;数据库连接测试成功&quot;</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">await</span> mysql_manager.release_connection(conn)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;数据库连接测试失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;主函数&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        logger.info(<span class="hljs-string">&quot;MySQL MCP Server 启动中...&quot;</span>)<br>        <br>        <span class="hljs-comment"># 测试数据库连接</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">await</span> test_connection():<br>            logger.error(<span class="hljs-string">&quot;数据库连接失败，服务器无法启动&quot;</span>)<br>            <span class="hljs-keyword">return</span><br>        <br>        <span class="hljs-comment"># 使用stdio服务器运行MCP应用</span><br>        <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> stdio_server() <span class="hljs-keyword">as</span> (read_stream, write_stream):<br>            logger.info(<span class="hljs-string">&quot;MCP服务器正在运行...&quot;</span>)<br>            <span class="hljs-keyword">await</span> app.run(<br>                read_stream,<br>                write_stream,<br>                app.create_initialization_options()<br>            )<br>    <br>    <span class="hljs-keyword">except</span> KeyboardInterrupt:<br>        logger.info(<span class="hljs-string">&quot;服务器收到中断信号，正在关闭...&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;服务器运行错误: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        <span class="hljs-comment"># 清理资源</span><br>        <span class="hljs-keyword">await</span> mysql_manager.close_pool()<br>        logger.info(<span class="hljs-string">&quot;服务器已关闭&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">try</span>:<br>        app.run(transport=<span class="hljs-string">&quot;stdio&quot;</span>)<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        logger.error(<span class="hljs-string">f&quot;程序启动失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>        sys.exit(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure></li><li><p>同时LLM还提示我运行此服务端代码时需要安装的python库列表，将这些内容保存为requirements.txt文件，内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">aiomysql</span>==<span class="hljs-number">0.2</span>.<span class="hljs-number">0</span><br>mcp&gt;=1.0.0<br>asyncio<br>typing<br>uvicorn<br></code></pre></td></tr></table></figure></li></ul><h2 id="为服务端运行配置环境">3.2 为服务端运行配置环境</h2><p>以管理员权限打开win11的cmd窗口，然后执行如下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建目录manipulate_mysql</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;uv init manipulate_mysql<br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01&gt;cd manipulate_mysql<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用uv创建虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;uv venv<br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活此虚拟python环境</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;.venv\Scripts\activate<br>(manipulate_mysql) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;<br></code></pre></td></tr></table></figure><p>将前面生成的main.py与requirements.txt 文件放到manipulate_mysql目录下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖（就单次安装而言，以下两种方式都可以。但推荐第1种，因为这种方式会自动更新 pyproject.toml 和 uv.lock 文件，确保构建可复现，适用于管理项目依赖）</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方式1</span><br>(manipulate_mysql) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;uv add -r requirements.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方式2</span><br>(manipulate_mysql) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;uv pip install -r requirements.txt<br></code></pre></td></tr></table></figure><h2 id="调试">3.3 调试</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#安装MCP Python SDK</span><br><span class="hljs-params">(manipulate_mysql)</span> E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\<span class="hljs-keyword">try</span>01\manipulate_mysql&gt;uv add <span class="hljs-string">&quot;mcp[cli]&quot;</span> httpx<br><br><span class="hljs-comment">#启动调试</span><br><span class="hljs-params">(manipulate_mysql)</span> E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\<span class="hljs-keyword">try</span>01\manipulate_mysql&gt;mcp dev main.py<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/22/SKCx8WXI2grjOdf.png"alt="image-20250522235037047" /><figcaption aria-hidden="true">image-20250522235037047</figcaption></figure><p>调试时显示可正常使用。</p><h2 id="命令行部署服务端">3.4 命令行部署服务端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">(manipulate_mysql) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql&gt;uv run main.py<br></code></pre></td></tr></table></figure><p>但是此时就报错，提示如下：</p><figure><img src="https://s2.loli.net/2025/05/22/vGAIOPSoibBmr4j.png"alt="image-20250522235255115" /><figcaption aria-hidden="true">image-20250522235255115</figcaption></figure><p>解决办法如下（将如下try中语句改成：app.run(transport="stdio")：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    try:<br>        app.run(transport=<span class="hljs-string">&quot;stdio&quot;</span>)<br>    except Exception as e:<br>        logger.error(f<span class="hljs-string">&quot;程序启动失败: &#123;e&#125;&quot;</span>, exc_info=True)<br>        sys.<span class="hljs-keyword">exit</span>(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>原因分析如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros">根据LLM提示：这个问题的根本原因在于 FastMCP 和传统 MCP 服务器的初始化和运行机制不同。<br><br>FastMCP 是一个高级封装的 MCP 框架，它内部处理了所有必요的初始化过程，包括：<br>自动设置 notification options<br>处理 capabilities 协商<br>管理工具注册和通知机制<br><br>而原先的方式，“当你手动创建 stdio_server() 并调用 app.<span class="hljs-built_in">run</span>() 时，FastMCP 期望的某些初始化步骤可能没有正确执行，特别是 notification_options 没有被正确设置，导致在访问 notification_options.tools_changed 时出现 NoneType 错误。”<br><br>为什么 app.<span class="hljs-built_in">run</span>(<span class="hljs-attribute">transport</span>=<span class="hljs-string">&quot;stdio&quot;</span>) 能解决问题：<br>完整的初始化流程：app.<span class="hljs-built_in">run</span>(<span class="hljs-attribute">transport</span>=<span class="hljs-string">&quot;stdio&quot;</span>) 会自动处理所有必要的初始化步骤<br>正确的生命周期管理：FastMCP 内部管理连接的建立、维护和清理<br>自动的 capabilities 设置：框架会自动设置正确的 notification_options<br></code></pre></td></tr></table></figure><p>之后，再在命令启动服务端，服务端将一直处于等待状态：</p><figure><img src="https://s2.loli.net/2025/05/22/vc7EnQx6MPOIUFW.png"alt="image-20250522235536082" /><figcaption aria-hidden="true">image-20250522235536082</figcaption></figure><p>正常。</p><h2 id="cursor中配置自定义mcp服务端">3.5cursor中配置自定义MCP服务端</h2><p>File-&gt;Preferences-&gt;Cursor Settings，看到如下界面：</p><figure><img src="https://s2.loli.net/2025/05/22/r8Dxk7G6eYBVHLg.png"alt="image-20250522235804195" /><figcaption aria-hidden="true">image-20250522235804195</figcaption></figure><p>点击上述"Add new global MCPserver"，将显示一个mcp.json文件，添加如下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;mcpServers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;manipulate_mysqlmo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;disabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;timeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">180</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;uv&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;--directory&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;E:\\Hdisk\\学习\\06_AI学习\\13_LatestTechKnowledge\\01_MCP\\try01\\manipulate_mysql&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;run&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;main.py&quot;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;transportType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;stdio&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>其中“E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\manipulate_mysql”是我的MCP服务代码的路径。</p><p>回到CursorSettings界面，保证“Enabled”启用，然后点击“刷新”按钮，当mcp服务的左边出现一个绿点时，表示其正常工作了。</p><figure><img src="https://s2.loli.net/2025/05/23/fIPFQDcoC2xRWUl.png"alt="image-20250523000111236" /><figcaption aria-hidden="true">image-20250523000111236</figcaption></figure><h2 id="cursor中使用自定义mcp服务端">3.6cursor中使用自定义MCP服务端</h2><figure><img src="https://s2.loli.net/2025/05/23/TMZNAqc2oQry5CO.png"alt="image-20250523000457842" /><figcaption aria-hidden="true">image-20250523000457842</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大语言模型MCP学习02-在claude中使用mcp应用</title>
    <link href="/2025/05/19/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A002-%E5%9C%A8claude%E4%B8%AD%E4%BD%BF%E7%94%A8mcp%E5%BA%94%E7%94%A8/"/>
    <url>/2025/05/19/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A002-%E5%9C%A8claude%E4%B8%AD%E4%BD%BF%E7%94%A8mcp%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一实施步骤">一、实施步骤</h1><h2 id="需要的工具或软件">1.1 需要的工具或软件</h2><p>安装 Claude Desktop（需要魔法）</p><p>Python 3.10+ 环境（下述步骤中会安装）</p><p>Python MCP SDK 1.2.0+（下述步骤中会安装）</p><h2 id="配置应用环境">1.2 配置应用环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装uv，查看其github官方网址“https://github.com/astral-sh/uv”</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">在Windows上，执行如下命令</span><br>powershell -ExecutionPolicy ByPass -c &quot;irm https://astral.sh/uv/install.ps1 | iex&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">管理员模式打开cmd窗口中执行如下命令。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建项目目录</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02&gt;uv init scan_kantu<br>Initialized project `scan-kantu` at `E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu`<br><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02&gt;cd scan_kantu<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">使用uv创建虚拟python环境并激活（这里默认就是使用CPython3.11.12）</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu&gt;uv venv<br>Using CPython 3.11.12<br>Creating virtual environment at: .venv<br>Activate with: .venv\Scripts\activate<br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时在当前目录下，可以看到一个名为“.python-version”的文件，里面内容包含“3.11”</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">(1)如果不明确指定使用的python版本，uv会默认有自己的机制去决定使用哪个python版本</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用<span class="hljs-string">&quot;uv python list&quot;</span>可以看到uv当前能看到与使用的python环境与版本(而且uv自己会维护跟自己版本匹配的python环境)，后续如果不给uv命令加--python参数指定python版本，它会首选在自己维护的python环境列表中查找一个已经安装了的、最匹配的python版本（从下面内容可知，它从自己维护的python3.10.16与python3.11.12 两个python版本中，选择了后者），整个过程通过“uv init xxx --verbose”可以看得更清楚</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try01\add_numbers&gt;uv python list<br>cpython-3.14.0a6-windows-x86_64-none                 &lt;download available&gt;<br>cpython-3.14.0a6+freethreaded-windows-x86_64-none    &lt;download available&gt;<br>cpython-3.13.3-windows-x86_64-none                   C:\Python313\python.exe<br>cpython-3.13.3-windows-x86_64-none                   C:\ProgramData\chocolatey\bin\python3.13.exe<br>cpython-3.13.3-windows-x86_64-none                   &lt;download available&gt;<br>cpython-3.13.3+freethreaded-windows-x86_64-none      &lt;download available&gt;<br>cpython-3.12.10-windows-x86_64-none                  &lt;download available&gt;<br>cpython-3.12.7-windows-x86_64-none                   D:\ProgramData\anaconda3\python.exe<br>cpython-3.11.12-windows-x86_64-none                  C:\Users\jiangsanyin\AppData\Roaming\uv\python\cpython-3.11.12-windows-x86_64-none\python.exe<br>cpython-3.10.17-windows-x86_64-none                  &lt;download available&gt;<br>cpython-3.10.16-windows-x86_64-none                  C:\Users\jiangsanyin\AppData\Roaming\uv\python\cpython-3.10.16-windows-x86_64-none\python.exe<br>cpython-3.9.22-windows-x86_64-none                   &lt;download available&gt;<br>cpython-3.8.20-windows-x86_64-none                   &lt;download available&gt;<br>cpython-3.7.9-windows-x86_64-none                    &lt;download available&gt;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">(2)也可以在使用uv init xxx命令时，明确指定要使用的python版本</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">比如：“uv init scan_kantu --python 3.12”</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时，scan_kantu 目录会自动创建一个.python-version文件，其中的内容是 3.12</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后执行“uv venv”时将会初始化这个虚拟python环境，如果uv维护的python环境没有此版本，将会使用上述python列表中匹配python版本(但不会使用同一个python可执行文件，而是会新创建一个)</span><br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#解除禁止运行脚本的限制（在powershell窗口中执行。其余未说明的就是在cmd窗口中执行）</span><br>E:\Hdisk\学习\<span class="hljs-number">06</span>_AI学习\<span class="hljs-number">13</span>_LatestTechKnowledge\<span class="hljs-number">01</span>_MCP\try02\scan_kantu&gt;<span class="hljs-built_in">set-ExecutionPolicy</span> RemoteSigned<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">激活</span><br>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu&gt;.venv\Scripts\activate<br>(scan_kantu) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu&gt;python -V<br>Python 3.11.12<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装依赖</span><br>(scan_kantu) E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu&gt;uv add &quot;mcp[cli]&quot; httpx<br></code></pre></td></tr></table></figure><h2 id="编写提示词">1.3 编写提示词</h2><p>在 windows上进行开发测试，使用如下提示词，以让LLM为我们自动生成mcp服务端文件（我以看图王这个软件为例，是因为其总是试图修改我电脑上打开pdf或图片的默认软件，让我觉得比较烦，想干掉它。当然有其他可行的方法完全将其卸载，此处不探讨）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">打造一个 MCP 服务器，它能够：<br>- 功能：<br>    - 统计当前桌面上的是否存在名称中包含“看图”的快捷方式<br>    - 获取对应快捷方式的名字<br><br>- 要求：<br>    - 你可以假设我的桌面路径为 C:\Users\&#123;username&#125;\Desktop<br></code></pre></td></tr></table></figure><p>或者，如果我们对其他类型文件比如.py、.java等感兴趣，可以编写如下提示词：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">打造一个 MCP 服务器，它能够：<br>- 功能：<br>    - 检查当前桌面上的是否存在python源码文件<br>    - 获取python源码文件的名字<br>    - 解读python源码文件的内容<br><br>- 要求：<br>    - 你可以假设我的桌面路径为 C:\Users\&#123;username&#125;\Desktop<br></code></pre></td></tr></table></figure><p>或者，如果我们对其他类型文件（或快捷方式）比如操作数据库的客户端软件感兴趣，可以编写如下提示词：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown">打造一个 MCP 服务器，它能够：<br><span class="hljs-bullet">-</span> 功能：<br><span class="hljs-bullet">    -</span> 检查当前桌面上的是否存在“连接与操作数据库的客户端软件”的快捷方式或工具<br><span class="hljs-bullet">    -</span> 获取这类快捷方式或工具的名字<br><br><span class="hljs-bullet">-</span> 要求：<br><span class="hljs-bullet">    -</span> 你可以假设我的桌面路径为 C:\Users\&#123;username&#125;\Desktop<br></code></pre></td></tr></table></figure><h2 id="编写mcp服务端文件">1.4 编写mcp服务端文件</h2><p>使用 Claude 3.7大模型直接生成相关代码（输出类似如下图。记得根据开发环境操作系统使用不同的提示词）。</p><p>输入提示词前，还需要上传一个README.md文件（这个文件在此处叫做DomainKnowledge），下载自如下链接：https://raw.githubusercontent.com/modelcontextprotocol/python-sdk/refs/heads/main/README.md</p><figure><img src="https://s2.loli.net/2025/05/18/xNwq3vBSitjgEnQ.png"alt="image-20250518223140526" /><figcaption aria-hidden="true">image-20250518223140526</figcaption></figure><p>可以直接保存为“E:\06_AI学习\13_LatestTechKnowledge\01_MCP_kantu_kantu.py”，作为mcp服务端文件。（本来这个文件的内容是需要开发人员手动编写的，现使用claude帮忙生成）</p><figure><img src="https://s2.loli.net/2025/05/18/QAO2mWicbdBZ8KN.png"alt="image-20250518223241719" /><figcaption aria-hidden="true">image-20250518223241719</figcaption></figure><p>如下是在win11上经过验证好的内容（某些情况下如果有需要，可能需要对LLM生成的代码再修改）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> glob<br><span class="hljs-keyword">import</span> win32com.client<br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><span class="hljs-keyword">from</span> mcp.server.fastmcp <span class="hljs-keyword">import</span> FastMCP, Context<br><br><span class="hljs-comment"># 创建 MCP 服务器</span><br>mcp = FastMCP(<span class="hljs-string">&quot;桌面快捷方式扫描器&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_desktop_path</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;获取当前用户的桌面路径&quot;&quot;&quot;</span><br>    username = os.environ.get(<span class="hljs-string">&quot;USERNAME&quot;</span>)<br>    <span class="hljs-keyword">return</span> os.path.join(<span class="hljs-string">&quot;C:&quot;</span>, <span class="hljs-string">&quot;Users&quot;</span>, username, <span class="hljs-string">&quot;Desktop&quot;</span>)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_shortcut_target</span>(<span class="hljs-params">shortcut_path</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;获取快捷方式的目标路径&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">try</span>:<br>        shell = win32com.client.Dispatch(<span class="hljs-string">&quot;WScript.Shell&quot;</span>)<br>        shortcut = shell.CreateShortCut(shortcut_path)<br>        <span class="hljs-keyword">return</span> shortcut.TargetPath<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;无法获取目标: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">find_shortcuts_with_keyword</span>(<span class="hljs-params">keyword=<span class="hljs-string">&quot;看图&quot;</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;查找包含特定关键词的快捷方式&quot;&quot;&quot;</span><br>    desktop_path = get_desktop_path()<br>    shortcuts = []<br>    <br>    <span class="hljs-comment"># 查找所有 .lnk 文件 (Windows 快捷方式)</span><br>    shortcut_files = glob.glob(os.path.join(desktop_path, <span class="hljs-string">&quot;*.lnk&quot;</span>))<br>    <br>    <span class="hljs-keyword">for</span> shortcut_path <span class="hljs-keyword">in</span> shortcut_files:<br>        filename = os.path.basename(shortcut_path)<br>        <span class="hljs-comment"># 检查文件名是否包含关键词</span><br>        <span class="hljs-keyword">if</span> keyword <span class="hljs-keyword">in</span> filename:<br>            target = get_shortcut_target(shortcut_path)<br>            shortcuts.append(&#123;<br>                <span class="hljs-string">&quot;name&quot;</span>: filename,<br>                <span class="hljs-string">&quot;path&quot;</span>: shortcut_path,<br>                <span class="hljs-string">&quot;target&quot;</span>: target<br>            &#125;)<br>    <br>    <span class="hljs-keyword">return</span> shortcuts<br><br><br><span class="hljs-meta">@mcp.tool()</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">count_image_viewers</span>(<span class="hljs-params">ctx: Context</span>) -&gt; <span class="hljs-built_in">int</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;统计桌面上名称包含&#x27;看图&#x27;的快捷方式数量&quot;&quot;&quot;</span><br>    shortcuts = find_shortcuts_with_keyword(<span class="hljs-string">&quot;看图&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(shortcuts)<br><br><br><span class="hljs-meta">@mcp.tool()</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_image_viewer_names</span>() -&gt; <span class="hljs-built_in">list</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;获取桌面上所有名称包含&#x27;看图&#x27;的快捷方式名称列表&quot;&quot;&quot;</span><br>    shortcuts = find_shortcuts_with_keyword(<span class="hljs-string">&quot;看图&quot;</span>)<br>    <span class="hljs-keyword">return</span> [shortcut[<span class="hljs-string">&quot;name&quot;</span>] <span class="hljs-keyword">for</span> shortcut <span class="hljs-keyword">in</span> shortcuts]<br><br><br><span class="hljs-meta">@mcp.tool()</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_image_viewer_details</span>() -&gt; <span class="hljs-built_in">list</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;获取桌面上所有名称包含&#x27;看图&#x27;的快捷方式详细信息&quot;&quot;&quot;</span><br>    shortcuts = find_shortcuts_with_keyword(<span class="hljs-string">&quot;看图&quot;</span>)<br>    <span class="hljs-keyword">return</span> shortcuts<br><br><br><span class="hljs-meta">@mcp.resource(<span class="hljs-params"><span class="hljs-string">&quot;desktop://viewers&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_viewers_resource</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;获取桌面上的图片查看器资源信息&quot;&quot;&quot;</span><br>    shortcuts = find_shortcuts_with_keyword(<span class="hljs-string">&quot;看图&quot;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> shortcuts:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;桌面上未找到包含&#x27;看图&#x27;的快捷方式。&quot;</span><br>    <br>    result = <span class="hljs-string">&quot;桌面上找到以下包含&#x27;看图&#x27;的快捷方式：\n\n&quot;</span><br>    <span class="hljs-keyword">for</span> i, shortcut <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(shortcuts, <span class="hljs-number">1</span>):<br>        result += <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i&#125;</span>. 名称: <span class="hljs-subst">&#123;shortcut[<span class="hljs-string">&#x27;name&#x27;</span>]&#125;</span>\n&quot;</span><br>        result += <span class="hljs-string">f&quot;   路径: <span class="hljs-subst">&#123;shortcut[<span class="hljs-string">&#x27;path&#x27;</span>]&#125;</span>\n&quot;</span><br>        result += <span class="hljs-string">f&quot;   目标: <span class="hljs-subst">&#123;shortcut[<span class="hljs-string">&#x27;target&#x27;</span>]&#125;</span>\n\n&quot;</span><br>    <br>    <span class="hljs-keyword">return</span> result<br><br><br><span class="hljs-meta">@mcp.prompt()</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">how_to_use</span>() -&gt; <span class="hljs-built_in">str</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;提供如何使用此服务器的说明&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">我是桌面快捷方式扫描器，可以帮助您检查桌面上是否存在包含&quot;看图&quot;的快捷方式。</span><br><span class="hljs-string"></span><br><span class="hljs-string">您可以使用以下工具：</span><br><span class="hljs-string">1. count_image_viewers - 计算桌面上包含&quot;看图&quot;的快捷方式数量</span><br><span class="hljs-string">2. get_image_viewer_names - 获取所有包含&quot;看图&quot;的快捷方式名称</span><br><span class="hljs-string">3. get_image_viewer_details - 获取所有包含&quot;看图&quot;的快捷方式的详细信息</span><br><span class="hljs-string"></span><br><span class="hljs-string">您也可以访问以下资源：</span><br><span class="hljs-string">- desktop://viewers - 获取所有包含&quot;看图&quot;的快捷方式的详细信息</span><br><span class="hljs-string"></span><br><span class="hljs-string">请问您想了解哪方面的信息？</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    mcp.run()<br></code></pre></td></tr></table></figure><p>上述内容保存成<code>E:\Hdisk\学习\06_AI学习\13_LatestTechKnowledge\01_MCP\try02\scan_kantu\scan_kantu.py</code></p><h2 id="测试mcp应用">1.5. 测试MCP应用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#安装pywin32 python库</span><br>(scan_kantu) E:\Hdisk\学习\<span class="hljs-number">06</span>_AI学习\<span class="hljs-number">13</span>_LatestTechKnowledge\<span class="hljs-number">01</span>_MCP\try02\scan_kantu&gt;uv add pywin32<br><br>(scan_kantu) E:\Hdisk\学习\<span class="hljs-number">06</span>_AI学习\<span class="hljs-number">13</span>_LatestTechKnowledge\<span class="hljs-number">01</span>_MCP\try02\scan_kantu&gt;mcp dev scan_kantu.py<br>Need to install the following packages:<br>@modelcontextprotocol/inspector@<span class="hljs-number">0.12</span>.<span class="hljs-number">0</span><br>Ok to proceed? (y) y<br><br>Starting MCP inspector...<br>🔍 MCP Inspector is up and running at http://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">6274</span> 🚀<br>⚙️ Proxy server listening on port <span class="hljs-number">6277</span><br></code></pre></td></tr></table></figure><p>在自己win11的chrome浏览器中访问上述地址<code>http://127.0.0.1:6274</code>，将看到如下内容：</p><figure><img src="https://s2.loli.net/2025/05/19/HtEJS1zcvypXC7N.png"alt="image-20250518224358340" /><figcaption aria-hidden="true">image-20250518224358340</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/19/dxRVezcthLrpA3I.png"alt="image-20250519143105848" /><figcaption aria-hidden="true">image-20250519143105848</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/05/19/DUM3b1gAjGHiEFm.png"alt="image-20250519144333266" /><figcaption aria-hidden="true">image-20250519144333266</figcaption></figure><p>其他的工具如“count_image_viewers”、“get_image_viewer_details”也可以在此界面上进行测试</p><h2 id="mcp应用集成到claude">1.6 MCP应用集成到claude</h2><p>将上述编写的scan_kantu.py文件（此处是使用claude3.7大模型生成的）接入到ClaudeDesktop中。需要编辑ClaudeDesktop的<code>claude_desktop_config.json</code>文件，按照如下方式打开：File-&gt;Settings-&gt;Developer-&gt;"EditConfig"，编辑后的<code>claude_desktop_config.json</code>文件内容可能如下：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nix">&#123;<br>  <span class="hljs-string">&quot;mcpServers&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;scan_kantu&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;command&quot;</span>: <span class="hljs-string">&quot;C:<span class="hljs-char escape_">\\</span>Users<span class="hljs-char escape_">\\</span>jiangsanyin<span class="hljs-char escape_">\\</span>.local<span class="hljs-char escape_">\\</span>bin<span class="hljs-char escape_">\\</span>uv.exe&quot;</span>,<br>      <span class="hljs-string">&quot;args&quot;</span>: [<br>        <span class="hljs-string">&quot;--directory&quot;</span>,<br>        <span class="hljs-string">&quot;E:<span class="hljs-char escape_">\\</span>Hdisk<span class="hljs-char escape_">\\</span>学习<span class="hljs-char escape_">\\</span>06_AI学习<span class="hljs-char escape_">\\</span>13_LatestTechKnowledge<span class="hljs-char escape_">\\</span>01_MCP<span class="hljs-char escape_">\\</span>try02<span class="hljs-char escape_">\\</span>scan_kantu&quot;</span>,<br>        <span class="hljs-string">&quot;run&quot;</span>,<br>        <span class="hljs-string">&quot;scan_kantu.py&quot;</span><br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后重启 Claude Desktop（是先Exit而不是Close，再重新打开ClaudeDesktop）。此时就可以看到有几个MCP tools可用了。</p><figure><img src="https://s2.loli.net/2025/05/19/jIo5t1ONRkmAL3r.png"alt="image-20250519150226210" /><figcaption aria-hidden="true">image-20250519150226210</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/19/vOrIAEsjZaLh9J6.png"alt="image-20250519150239800" /><figcaption aria-hidden="true">image-20250519150239800</figcaption></figure><h2 id="在claude中使用mcp应用">1.7 在claude中使用mcp应用</h2><p>使用一个简单的 prompt 来进行实际测试：“能推测我当前桌面上 txt文件名的含义吗？”</p><figure><img src="https://s2.loli.net/2025/05/19/qyaElu4SsFUQkOR.png"alt="image-20250519150417991" /><figcaption aria-hidden="true">image-20250519150417991</figcaption></figure><p>执行结果正确，情况如下：</p><figure><img src="https://s2.loli.net/2025/05/19/wnRjq2yztZ8NV1b.png"alt="image-20250519150612965" /><figcaption aria-hidden="true">image-20250519150612965</figcaption></figure><h2 id="mcp应用工作流程">1.8 MCP应用工作流程</h2><ol type="1"><li>MCP客户端将请求发送给Claude LLM</li><li>Claude LLM分析可用的工具、决定使用哪个（些）工具</li><li>MCP客户端通过MCP服务端执行LLM决定使用的那些工具</li><li>工具执行后的结果被返回给Claude LLM</li><li>ClaudeLLM根据历史会话消息与工具执行后返回的结果，生成结果并组织成流畅可读的自然语言形式的回复</li><li>这些回复最终被展示在用户（你）的面前</li></ol><h1 id="二相关文档">二、相关文档</h1><ul><li>For ServerDevelopers：https://modelcontextprotocol.io/quickstart/server</li><li>Example Servers：https://modelcontextprotocol.io/examples</li><li>quickstart-resources：https://github.com/modelcontextprotocol/quickstart-resources/tree/main</li></ul>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>容器版dify-v0.15.3升级到v1.3.1</title>
    <link href="/2025/05/15/%E5%AE%B9%E5%99%A8%E7%89%88dify-v0-15-3%E5%8D%87%E7%BA%A7%E5%88%B0v1-3-1/"/>
    <url>/2025/05/15/%E5%AE%B9%E5%99%A8%E7%89%88dify-v0-15-3%E5%8D%87%E7%BA%A7%E5%88%B0v1-3-1/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文档">一、参考文档</h1><p>（1）https://docs.dify.ai/zh-hans/development/migration/migrate-to-v1</p><p>（2）https://github.com/langgenius/dify/releases/tag/1.3.1</p><h1 id="二步骤">二、步骤</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">备份 docker-compose YAML 文件</span><br>root@dify:/opt/code_repos/dify# cp docker-compose.yaml docker-compose.yaml.$(date +%s).bak<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">更新远程仓库中的所有tag到本地</span><br>root@dify:/opt/code_repos/dify# git fetch --tags<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行命令停止服务，在 Docker 目录中执行备份数据命令</span><br>root@dify:/opt/code_repos/dify/docker# docker-compose down<br>root@dify:/opt/code_repos/dify/docker# tar -cvf volumes-$(date +%s).tgz volumes<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">升级版本</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">切换至 1.3.1 tag</span><br>root@dify:/opt/code_repos/dify/docker# git checkout 1.3.1 <br><span class="hljs-meta prompt_">#</span><span class="language-bash">根据实际情况修改.<span class="hljs-built_in">env</span>与docker-compose.yaml文件（主要是修改yaml文件中使用到的镜像）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动服务</span><br>root@dify:/opt/code_repos/dify/docker# docker-compose up -d<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/15/l56VvTZQ9K3JM8D.png"alt="image-20250515152107390" /><figcaption aria-hidden="true">image-20250515152107390</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/15/1fKisIaN92xyHTC.png"alt="image-20250515152308201" /><figcaption aria-hidden="true">image-20250515152308201</figcaption></figure><p>如果要迁移工具为插件：<ahref="https://docs.dify.ai/zh-hans/development/migration/migrate-to-v1#3-%E5%B7%A5%E5%85%B7%E8%BF%81%E7%A7%BB%E4%B8%BA%E6%8F%92%E4%BB%B6">工具迁移为插件</a></p><h1 id="三备注">三、备注</h1><h2 id="dify1.3.1使用到的原镜像及加速镜像">3.1dify1.3.1使用到的原镜像及加速镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">第一行为原镜像</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">第二行是加速镜像</span><br><br>langgenius/dify-api:1.3.1<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-api:1.3.1<br><br>postgres:15-alpine<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/postgres:15-alpine<br><br>redis:6-alpine<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/redis:6-alpine<br><br>langgenius/dify-sandbox:0.2.11<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-sandbox:0.2.11<br><br>langgenius/dify-plugin-daemon:0.0.9-local<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-plugin-daemon:0.0.9-local<br><br>ubuntu/squid:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/ubuntu/squid:latest<br><br>certbot/certbot<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/certbot/certbot:latest<br><br>nginx:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/nginx:latest<br><br>semitechnologies/weaviate:1.19.0<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/semitechnologies/weaviate:1.19.0<br><br>langgenius/qdrant:v1.7.3<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/qdrant:v1.7.3<br><br>pgvector/pgvector:pg16<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/pgvector/pgvector:pg16<br><br>vastdata/vastbase-vector<br><br><br>tensorchord/pgvecto-rs:pg16-v0.3.0<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0<br><br>ghcr.io/chroma-core/chroma:0.5.20<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/chroma-core/chroma:0.5.20<br><br>oceanbase/oceanbase-ce:4.3.5.1-101000042025031818<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/oceanbase/oceanbase-ce:4.3.5.1-101000042025031818<br><br>container-registry.oracle.com/database/free:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/container-registry.oracle.com/database/free:latest<br><br>quay.io/coreos/etcd:v3.5.5<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/quay.io/coreos/etcd:v3.5.5<br><br>minio/minio:RELEASE.2023-03-20T20-16-18Z<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/minio/minio:RELEASE.2023-03-20T20-16-18Z<br><br>milvusdb/milvus:v2.5.0-beta<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/milvusdb/milvus:v2.5.0-beta<br><br>opensearchproject/opensearch:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/opensearchproject/opensearch:latest<br><br>opensearchproject/opensearch-dashboards:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/opensearchproject/opensearch-dashboards:latest<br><br>opengauss/opengauss:7.0.0-RC1<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/opengauss/opengauss:7.0.0-RC1<br><br>myscale/myscaledb:1.6.4<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/myscale/myscaledb:1.6.4<br><br>docker.elastic.co/elasticsearch/elasticsearch:8.14.3<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.elastic.co/elasticsearch/elasticsearch:8.14.3<br><br>docker.elastic.co/kibana/kibana:8.14.3<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.elastic.co/kibana/kibana:8.14.3<br><br>downloads.unstructured.io/unstructured-io/unstructured-api:latest<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/downloads.unstructured.io/unstructured-io/unstructured-api:latest<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大语言模型MCP学习01-概念学习与cursor中初体验</title>
    <link href="/2025/04/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A001-%E6%A6%82%E5%BF%B5%E5%AD%A6%E4%B9%A0%E4%B8%8Ecursor%E4%B8%AD%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2025/04/25/%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8BMCP%E5%AD%A6%E4%B9%A001-%E6%A6%82%E5%BF%B5%E5%AD%A6%E4%B9%A0%E4%B8%8Ecursor%E4%B8%AD%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="一概念学习">一、概念学习</h1><h2 id="mcp是什么">1.1 MCP是什么</h2><p>MCP 是 Anthropic (Claude)主导发布的一个开放的、通用的、有共识的协议标准。官网地址：https://modelcontextprotocol.io/introduction。其示意图如下。</p><figure><img src="https://s2.loli.net/2025/04/25/i21Sh5IzmRuBK7Z.png"alt="image-20250425165703422" /><figcaption aria-hidden="true">image-20250425165703422</figcaption></figure><p>MCP是一个开放标准协议，它为应用如何为LLM提供上下文这个过程提供了一个标准协议。可以把MCP看成是AI应用程序的USB-C接口，就像USB-C接口提供了一个标准的方式以把你的设备连接到各种各样的周边设备和配件一样，MCP提供了一个标准的方式以将AI模型连接到不同的数据源和工具。</p><p>MCP能够帮助我们集成现有的各个Agent，使得我们能够更加高效便捷地开发自己的AI应用程序。因为我们可以直接从https://mcp.so/ （它有点像是Docker生态中的官方 dockerhub网站）网站下载别人上传的MCP Server或MCPClient，直接使用。当然此网站中如果没有我们想要的功能，我们在MCP规范下自己实现。</p><figure><img src="https://s2.loli.net/2025/04/25/NPDdca4sQVU15oC.png"alt="image-20250425170351457" /><figcaption aria-hidden="true">image-20250425170351457</figcaption></figure><h2 id="mcp总体构架">1.2 MCP总体构架</h2><p>MCP的核心思想是：MCP遵循C-S构架，即一个主机应用程序连接到多个不同的MCP服务端。其架构图如下：</p><figure><img src="https://s2.loli.net/2025/04/25/MiuFJ5ltAZsVfWx.png"alt="image-20250425170700928" /><figcaption aria-hidden="true">image-20250425170700928</figcaption></figure><hr /><p>上图中各种概念的解析如下。</p><p><strong>MCP Hosts</strong>：如ClaudeDesktop、IDE或AI工具等想要通过MCP获取数据的程序。</p><p><strong>MCP Clients</strong>：与MCP 服务器保持 1:1的连接的协议客户端，从上图可以看到，MCP客户端与MCP Host是在一起的。</p><p><strong>MCPServers</strong>：它是一个轻量级的、通过标准模型上下文协议暴露特定能力的程序。</p><p><strong>Local Data Sources</strong>：指你电脑上的可供 MCP服务器安全访问的数据资源，如文件、数据库与服务。</p><p><strong>Remote Services</strong>：通过互联网络可供 MCP服务器连接与访问（比如通过API调用的形式）的外部系统。</p><h2 id="mcp大致工作过程">1.3 MCP大致工作过程</h2><ol type="1"><li>用户在MCP客户端（比如cursor或claude或python程序客户端）输入问题，MCP客户端查询MCP服务端有哪些工具可用，然后MCP客户端将“问题与可用工具的相关情况”发送给LLM（比如自己使用过Claude-3.7或DeepSeek-V3）</li><li>LLM分析问题，向客户端进行回复，回复中包含是否需要调用工具相关信息（这里的工具其实就是函数，这个时候函数名与函数的注释说明就很重要了，它将影响LLM的决定）</li><li>如果不需要调用工具，则LLM的回复中就直接包含了问题的答复，可以被直接使用了。如果需要调用工具（可以依次调用多个工具），则MCP客户端向MCP服务端请求说“帮忙调用哪个工具，并将需要的参数传递给它”。MCP客户端等待并拿到工具调用的结果，然后将工具调用结果作为历史信息告诉LLM，让LLM根据所有历史消息解决我们的问题。</li><li>然后就回到第2步或第3步了（如果不超过LLM的最大token或程序栈溢出，直接调用SDK来实现可以这样不断调用下去；cursor或claude这样的集成客户端是只会调用一次工具还是会不断重复直到不再需要调用工具了，还不确定）。直到不再需要调用工具了，LLM直接组织语言针对问题进行分析与最后的总结回复。</li></ol><h1 id="二cursor中体验mcp">二、cursor中体验MCP</h1><h2 id="配置高德地图mcp-server">2.1 配置高德地图MCP-server</h2><p>在阿里云百练平台中，我们可以创建工作流，在工作流中我们可以调用“周边查询”的插件来享受“周边位置信息查询服务”，比如查询行程、查找饭店酒店等。MCP中也有类似的功能，在cursor中使用方式如下。</p><h3 id="高德开放平台申请key">2.1.1 高德开放平台申请Key</h3><figure><img src="https://s2.loli.net/2025/05/09/KVPuc61ShtiYGd5.png"alt="image-20250509162544289" /><figcaption aria-hidden="true">image-20250509162544289</figcaption></figure><p>复制上述Key值，后面要用。</p><h3 id="打开cursor-setting">2.1.2 打开cursor setting</h3><p>File-&gt;Preferences-&gt;Cursor Setting，然后</p><figure><img src="https://s2.loli.net/2025/05/09/D6nJcFBtpvbHMdC.png"alt="image-20250509160218716" /><figcaption aria-hidden="true">image-20250509160218716</figcaption></figure><h3 id="配置mcp.json">2.1.3 配置mcp.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;mcpServers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;amap-maps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>          <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npx&quot;</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-string">&quot;-y&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-string">&quot;@amap/amap-maps-mcp-server&quot;</span><br>          <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-attr">&quot;env&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;AMAP_MAPS_API_KEY&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;此处替换成前面自己申请的AMAP_MAPS_API_KEY&quot;</span><br>          <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="确认配置情况">2.1.4 确认配置情况</h3><figure><img src="https://s2.loli.net/2025/05/09/W2vVQmOrwMoblAY.png"alt="image-20250509162819638" /><figcaption aria-hidden="true">image-20250509162819638</figcaption></figure><p>如果配置成功，则配置mcp-server项左边会有一个绿色的小点。如果是红色或其他情况就说明报错了没安装配置成功，通过如下方法查看具体日志：cursor菜单栏依次点击“View-&gt;Output”，然后可以看到如下界面视图，在下拉列表中选择“CursorMCP”：</p><figure><img src="https://s2.loli.net/2025/05/09/TudhFs78P6oS4xR.png"alt="image-20250509163356708" /><figcaption aria-hidden="true">image-20250509163356708</figcaption></figure><p>如果有错误，视情况解决。</p><h3 id="实际试用">2.1.5 实际试用</h3><p>模式选择“Agent”，模型选择“claude-3.7-sonnet”，然后输入问题发送进行提问。</p><figure><img src="https://s2.loli.net/2025/05/09/irJ9UoVXeEPDpwY.png"alt="image-20250509164028896" /><figcaption aria-hidden="true">image-20250509164028896</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/09/pm3jO2gb5Rq9LAZ.png"alt="image-20250509164321025" /><figcaption aria-hidden="true">image-20250509164321025</figcaption></figure><p>后续每次调用一个工具都需要用户点击“Runtool”按钮一次，直到不再需要调用工具。然后输出LLM总结所有的信息，用自然语言输出来呈现给用户：</p><figure><img src="https://s2.loli.net/2025/05/09/odTI27k6GvKfHFt.png"alt="image-20250509164752401" /><figcaption aria-hidden="true">image-20250509164752401</figcaption></figure><h2 id="配置mysql数据库mcp-server">2.2 配置MySQL数据库MCP-server</h2><p>以下配置是用来部署MySQL数据库mcp服务器的，部署后可以在cursor中直接操作配置的数据库及数据表。</p><h3 id="访问mcp.so网站">2.2.1 访问mcp.so网站</h3><p>搜索“mcp-mysql-server”，在多个搜索结果选择一个。</p><figure><img src="https://s2.loli.net/2025/05/09/fy4U5rxscZmGD7d.png"alt="image-20250509173402129" /><figcaption aria-hidden="true">image-20250509173402129</figcaption></figure><p>但自己测试时，总是有各种各样的问题。唯有这个“https://mcp.so/server/MCP-MySQL-server-implementation/shensiqi0701?tab=content”能生成待执行sql语句，但却不会真正执行，即需要自己手动去执行生成的sql语句。</p><p>以下是自己在找到的一个可用配置。</p><h3 id="配置mcp.json-1">2.2.2 配置mcp.json</h3><p>根据自己的实际情况进行修改，最后的mcp.json文件如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;mcpServers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;amap-maps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npx&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;-y&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;@amap/amap-maps-mcp-server&quot;</span><br>      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;env&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;AMAP_MAPS_API_KEY&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;自己申请的AMAP_MAPS_API_KEY&quot;</span><br>      <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;MySQL&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;npx&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;args&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;mcprunner&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;MYSQL_HOST=172.20.0.22&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;MYSQL_PORT=3306&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;MYSQL_USER=root&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;MYSQL_PASS=root@123&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;MYSQL_DB=test01&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;ALLOW_INSERT_OPERATION=true&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;ALLOW_UPDATE_OPERATION=true&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;ALLOW_DELETE_OPERATION=true&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;--&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;npx&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;-y&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot;@benborla29/mcp-server-mysql&quot;</span><br>      <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="确认配置情况-1">2.2.3 确认配置情况</h3><figure><img src="https://s2.loli.net/2025/05/09/lhqYb2L9EZKOaHS.png"alt="image-20250509215137649" /><figcaption aria-hidden="true">image-20250509215137649</figcaption></figure><h3 id="实际试用-1">2.2.4 实际试用</h3><p>输入提示提示词：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">请为我在test01数据库中创建一张数据表，表名是products，用来保存商品信息的。其中包含如下几个字段，<span class="hljs-built_in">id</span>、商品名、商品价格、商品重量、产地、生产商、生产时间、保持期。请为每个字段加上备注<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/09/vuadFZqxoJ2AH5W.png"alt="image-20250509215432301" /><figcaption aria-hidden="true">image-20250509215432301</figcaption></figure><p>然后提示需要调用某某工具，需要用户不断点击“Runtool”按钮。如下所示，mcp服务端首先生成创建数据表的语句，然后判断test01数据库是否存在、在test01数据库中是否有创建表的权限、检查用户root对此数据库的操作权限、切换到test01数据库（就是执行usetest01）、执行创建数据表的语句，但是执行时提示权限错误，LLM又去检查了products数据表已经被成功创建出来，发现没有，于是给出了一些提示并输出创建products数据表的sql语句，让用户自己手动去执行。</p><figure><img src="https://s2.loli.net/2025/05/09/zxe7BuKgrS26HhR.png"alt="image-20250509215727489" /><figcaption aria-hidden="true">image-20250509215727489</figcaption></figure><hr /><p>我们利用上述生成的sql语句手动创建数据表后继续操作。现在尝试向此表中插入一条数据：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">请向products表中插入一条数据，商品名“曲奇饼干”，价格是<span class="hljs-number">20</span>.<span class="hljs-number">98</span>，商品重量是<span class="hljs-number">0</span>.<span class="hljs-number">08</span>，产地是广东东莞，生产商是东莞利发食品厂，生产日期是<span class="hljs-number">2025年5月9</span>日，保持期是<span class="hljs-number">12</span>个月<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/09/au2Rv6xMTBZIjP3.png"alt="image-20250509220601775" /><figcaption aria-hidden="true">image-20250509220601775</figcaption></figure><p>系统提示插入数据成功了。</p><hr /><p>我们继续操作，尝试修改某字段值：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">上一条数据稍微有点问题，价格错了，需要修改成19.98<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/09/6uR1aqGHcNkXWMw.png"alt="image-20250509220827182" /><figcaption aria-hidden="true">image-20250509220827182</figcaption></figure><p>系统提示修改数据成功了。根据会话时LLM的输出可以看出，历史信息也是被LLM记录并使用的。</p><hr /><p>最后，我们尝试查询下数据表中数据：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">请查询商品信息表中的所有数据<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/05/09/edSD7UhqiW8GauO.png"alt="image-20250509221220294" /><figcaption aria-hidden="true">image-20250509221220294</figcaption></figure><h1 id="三相关文档">三、相关文档</h1><p><strong>MCP官网：</strong>https://modelcontextprotocol.io/introduction</p><p><strong>MCP服务器导航与托管平台：</strong>https://mcp.so/</p><p><strong>cursor中配置使用mcp：</strong>﻿https://docs.cursor.com/context/model-context-protocol</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百炼平台-智能多模态识别应用</title>
    <link href="/2025/04/16/%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B0-%E6%99%BA%E8%83%BD%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AF%86%E5%88%AB%E5%BA%94%E7%94%A8/"/>
    <url>/2025/04/16/%E7%99%BE%E7%82%BC%E5%B9%B3%E5%8F%B0-%E6%99%BA%E8%83%BD%E5%A4%9A%E6%A8%A1%E6%80%81%E8%AF%86%E5%88%AB%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>相关说明：</p><p>（1）本文通过创建一个知识库，其中有3个文件：PyTorch学习教程.pdf、2019年各厂商手机出货量.docx、各种类型案件数.docx。后两个文件各有一张图片，第一个文件中有图有文字描述。</p><p>（2）创建一个智能体应用，使用了“通义千问VL-Max-Latest”模型。如果不开启知识库“多模态回复增强”功能，则图表解析可能不能正常工作。开启后，增加了正常工作的功能性，但仍可能出现问题如解析不准确。</p><p>具体过程如下。</p><h1 id="一创建知识库">一、创建知识库</h1><figure><img src="https://s2.loli.net/2025/04/16/lr79wX6YBo1Depd.png"alt="image-20250416223516232" /><figcaption aria-hidden="true">image-20250416223516232</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/16/3KkWwhBTqyYH4Um.png"alt="image-20250416223612762" /><figcaption aria-hidden="true">image-20250416223612762</figcaption></figure><p>其余默认。</p><figure><img src="https://s2.loli.net/2025/04/16/FB8AZKiL76yebRY.png"alt="image-20250416223655986" /><figcaption aria-hidden="true">image-20250416223655986</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/16/I9aRtYJfjd1PKq6.png"alt="image-20250416230947835" /><figcaption aria-hidden="true">image-20250416230947835</figcaption></figure><h1 id="二创建智能体应用">二、创建智能体应用</h1><figure><img src="https://s2.loli.net/2025/04/16/riYlHF1tcoaxwyJ.png"alt="image-20250416223739268" /><figcaption aria-hidden="true">image-20250416223739268</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/16/rXC2YuWVctbyRiq.png"alt="image-20250416231040349" /><figcaption aria-hidden="true">image-20250416231040349</figcaption></figure><h1 id="三确证效果">三、确证效果</h1><h2id="如果未开启多模态视觉增强rag未能做出回答">如果未开启“多模态视觉增强”，RAG未能做出回答</h2><figure><img src="https://s2.loli.net/2025/04/16/l4BCN9Rbte2ay6X.png"alt="image-20250416231221485" /><figcaption aria-hidden="true">image-20250416231221485</figcaption></figure><h2id="开启多模态视觉增强rag回答正确">开启“多模态视觉增强”，RAG回答正确</h2><figure><img src="https://s2.loli.net/2025/04/16/cHpY3oXeEzfax9i.png"alt="image-20250416231256270" /><figcaption aria-hidden="true">image-20250416231256270</figcaption></figure><p>其中，图1的内容如下：</p><figure><img src="https://s2.loli.net/2025/04/16/vrZkECjLSNUOHIg.png"alt="image-20250416231322652" /><figcaption aria-hidden="true">image-20250416231322652</figcaption></figure><hr /><h2 id="再次检验">再次检验</h2><p>但此智能体应用并不能百分百正确解析与回复图表相关问题，比如回复关于“2019年全球各品牌手机出货量，哪个品牌的手机出货量最多”问题时，未能正确解析相关图表内容（虽然最终回复结果是正确的，但解析有错）。解析效果如下：</p><figure><img src="https://s2.loli.net/2025/04/16/o1iAwWjmbd3felI.png"alt="image-20250416231618064" /><figcaption aria-hidden="true">image-20250416231618064</figcaption></figure><p>其实，2019年全球各品牌手机出货量相关统计数据如下：</p><figure><img src="https://s2.loli.net/2025/04/16/YKJwPXGqM8CNQi6.png"alt="image-20250416231458612" /><figcaption aria-hidden="true">image-20250416231458612</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dify中Agent类型应用-个人在线旅游助手</title>
    <link href="/2025/04/15/dify%E4%B8%ADAgent%E7%B1%BB%E5%9E%8B%E5%BA%94%E7%94%A8-%E4%B8%AA%E4%BA%BA%E5%9C%A8%E7%BA%BF%E6%97%85%E6%B8%B8%E5%8A%A9%E6%89%8B/"/>
    <url>/2025/04/15/dify%E4%B8%ADAgent%E7%B1%BB%E5%9E%8B%E5%BA%94%E7%94%A8-%E4%B8%AA%E4%BA%BA%E5%9C%A8%E7%BA%BF%E6%97%85%E6%B8%B8%E5%8A%A9%E6%89%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一创建空白应用">一、创建空白应用</h1><p>参考：https://docs.dify.ai/zh-hans/workshop/basic/travel-assistant</p><p>工作室-创建空白应用-Agent</p><figure><img src="https://s2.loli.net/2025/04/15/HxqyO71Yf2bEgjT.png"alt="image-20250415164828514" /><figcaption aria-hidden="true">image-20250415164828514</figcaption></figure><h1 id="二配置与确认工具">二、配置与确认工具</h1><h2 id="配置serpapi">2.1 配置SerpAPI</h2><p>进入页面 <a href="https://serpapi.com/manage-api-key">SerpAPI - APIKey</a> ，我这里使用github账号进行注册登录的。创建一个apikye，SerpAPI提供一个月100次的免费调用次数。</p><figure><img src="https://s2.loli.net/2025/04/15/H1vhfqi8UQcMNz2.png"alt="image-20250415165406012" /><figcaption aria-hidden="true">image-20250415165406012</figcaption></figure><p>Dify中操作：</p><figure><img src="https://s2.loli.net/2025/04/15/4MHWXKVugZaby3N.png"alt="image-20250415165641152" /><figcaption aria-hidden="true">image-20250415165641152</figcaption></figure><h2 id="确认webscraper">2.2 确认webscraper</h2><p>它是一个爬虫工具，从指定的网页中抓取内容，Dify已提供内置工具，无需额外配置。</p><p>此工具无须进行配置，比如配置api key，直接使用即可。</p><figure><img src="https://s2.loli.net/2025/04/15/uCVcPdDE2lb7TMW.png"alt="image-20250415165714419" /><figcaption aria-hidden="true">image-20250415165714419</figcaption></figure><h2 id="确认wikipedia">2.3 确认Wikipedia</h2><p>要让Agent 能够准确介绍目的地知识，Wikipedia是一个比较好知识来源，Dify 也内置了该工具，无需额外配置。</p><p>此工具也无须进行配置，比如配置api key，直接使用即可。</p><figure><img src="https://s2.loli.net/2025/04/15/EWInwL7ehXTsK1C.png"alt="image-20250415165827316" /><figcaption aria-hidden="true">image-20250415165827316</figcaption></figure><h1 id="三配置agent应用">三、配置Agent应用</h1><h2 id="变量">变量</h2><figure><img src="https://s2.loli.net/2025/04/15/HDf4b6B2OpSzsKJ.png"alt="image-20250415170159086" /><figcaption aria-hidden="true">image-20250415170159086</figcaption></figure><h2 id="工具">工具</h2><figure><img src="https://s2.loli.net/2025/04/15/R3hDug61JSsOTVU.png"alt="image-20250415170119159" /><figcaption aria-hidden="true">image-20250415170119159</figcaption></figure><h2 id="系统提示词">系统提示词</h2><p>示例输出的目的是为了给 Agent 一个书写格式的参考，以确保 Agent的输出更接近我们的期望。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs markdown">你是一个在线旅行助手，请根据如下信息给出一个详细的旅行计划，目的地是&#123;&#123;destination&#125;&#125;，旅行天数是&#123;&#123;day&#125;&#125;，旅行预算是&#123;&#123;budget&#125;&#125; 。如下是一个旅行计划示例<br><br><br><span class="hljs-section">## 示例</span><br><span class="hljs-section">### 详细旅行计划</span><br><br><span class="hljs-strong">**酒店推荐**</span><br><span class="hljs-bullet">1.</span> 肯辛顿酒店 (了解更多：www.doylecollection.com/hotels/the-kensington-hotel)<br><span class="hljs-bullet">-</span> 评分：4.6⭐<br><span class="hljs-bullet">-</span> 价格：每晚约350美元<br><span class="hljs-bullet">-</span> 简介：坐落在一座摄政时期的联排别墅中，这家优雅的酒店距离南肯辛顿地铁站5分钟步行路程，距离维多利亚和阿尔伯特博物馆10分钟步行路程。<br><br><span class="hljs-bullet">2.</span> 伦勃朗酒店 (了解更多：www.sarova-rembrandthotel.com)<br><span class="hljs-bullet">-</span> 评分：4.3⭐<br><span class="hljs-bullet">-</span> 价格：每晚约130美元<br><span class="hljs-bullet">-</span> 简介：建于1911年，最初是哈罗德百货公司（距离0.4英里）的公寓，这家现代化酒店坐落在维多利亚和阿尔伯特博物馆对面，距离南肯辛顿地铁站（直达希思罗机场）5分钟步行路程。<br><br><span class="hljs-strong">**第1天 - 抵达和安顿**</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**上午**</span>：抵达机场。欢迎来到你的冒险之旅！我们的代表将在机场迎接你，确保你顺利入住。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**下午**</span>：入住酒店，稍作休息，恢复精力。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**晚上**</span>：在住宿周边进行轻松的步行游览，熟悉当地环境。发现附近的用餐选择，享受愉快的第一顿晚餐。<br><br><span class="hljs-strong">**第2天 - 文化与自然之旅**</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**上午**</span>：从帝国理工学院开始你的一天，这是世界顶尖的学府之一。享受一次校园导览。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**下午**</span>：选择参观自然历史博物馆（以其引人入胜的展览而闻名）或维多利亚和阿尔伯特博物馆（庆祝艺术和设计）。之后，在宁静的海德公园放松，也许还可以在蛇形湖上乘船游览。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**晚上**</span>：探索当地美食。我们推荐你在传统的英国酒吧享用晚餐。<br><br><span class="hljs-strong">**附加服务：**</span><br><span class="hljs-bullet">-</span> <span class="hljs-strong">**礼宾服务**</span>：在你停留期间，我们的礼宾服务随时可以协助预订餐厅、购买门票、安排交通，以及满足任何特殊要求，以提升你的体验。<br><span class="hljs-bullet">-</span> <span class="hljs-strong">**24/7支持**</span>：我们提供全天候支持，以解决你在旅行中可能遇到的任何问题或需求。<br><br>祝你旅途愉快，满载丰富经历和美好回忆！<br></code></pre></td></tr></table></figure><p>上述内容填写在如下“提示词”输入框内：</p><figure><img src="https://s2.loli.net/2025/04/15/HWBOtvu57dlf6er.png"alt="image-20250415170429931" /><figcaption aria-hidden="true">image-20250415170429931</figcaption></figure><h2 id="其他调整设置">其他调整设置</h2><p>Agent设置-&gt;最大迭代次数，设置为1即可：</p><figure><img src="https://s2.loli.net/2025/04/15/fSn5oJVzedyPKZR.png"alt="image-20250415170539433" /><figcaption aria-hidden="true">image-20250415170539433</figcaption></figure><hr /><p>选择模型，可以自己想要使用的模型，前提是已经配置模型提供商，我已经配置好了通义千问与DeepSeek，此处使用了通义千问的“qwen-vl-max-0809”模型，此模型是一个多模态模型（准确地说是视觉语言模型visionlanguagemodel），其实此处使用普通的大语言模型即可比如"qwen-max-latest"</p><h2 id="试用效果">试用效果</h2><ul><li><p>目的地、旅行天数、旅行预算，输入适当内容</p></li><li><p>输入用户提示词</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">我旅行时喜欢古代建筑与自然风光，住宿费要求在500元/晚 以下，晚餐在当地中等水平即可。请给出一个为期7天的旅行计划<br></code></pre></td></tr></table></figure></li><li><p>模型回答如下</p></li></ul><figure><img src="https://s2.loli.net/2025/04/15/CtNIFueQH7y3UiJ.png"alt="image-20250415170247520" /><figcaption aria-hidden="true">image-20250415170247520</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>企业级RAG行业应用落地分享</title>
    <link href="/2025/04/14/2025%E5%B9%B44%E6%9C%8814%E6%97%A5%E5%90%AC%E8%AF%BE/"/>
    <url>/2025/04/14/2025%E5%B9%B44%E6%9C%8814%E6%97%A5%E5%90%AC%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="一毛卫俊老师分享">一、毛卫俊老师分享</h1><h2 id="行业痛点锚定">1.1 行业痛点锚定</h2><figure><img src="https://s2.loli.net/2025/04/14/KZVJHBdXSPsgRny.png"alt="image-20250414203520866" /><figcaption aria-hidden="true">image-20250414203520866</figcaption></figure><p>AI就好像你带了一个名校毕业的实习生助理。那么你要如何与他协作呢?</p><p>明确的任务、丰富的案例数据、定期的进度沟通</p><figure><img src="https://s2.loli.net/2025/04/14/gYDUlX9PdeJI4cB.png"alt="image-20250414203936908" /><figcaption aria-hidden="true">image-20250414203936908</figcaption></figure><h2 id="商业价值是否值得干">1.2 商业价值（是否值得干）</h2><figure><img src="https://s2.loli.net/2025/04/14/tg3DhbPrTXZoHz9.png"alt="image-20250414204638495" /><figcaption aria-hidden="true">image-20250414204638495</figcaption></figure><h2 id="技术可行性评估">1.3 技术可行性评估</h2><figure><img src="https://s2.loli.net/2025/04/14/6DcAMdBrEoU97CY.png"alt="image-20250414205223348" /><figcaption aria-hidden="true">image-20250414205223348</figcaption></figure><h2 id="项目开发阶段">1.4 项目开发阶段</h2><figure><img src="https://s2.loli.net/2025/04/14/OIxroN15SEJf4A7.png"alt="image-20250414210042138" /><figcaption aria-hidden="true">image-20250414210042138</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/xjgchsFPQ9V8iwb.png"alt="image-20250414210117641" /><figcaption aria-hidden="true">image-20250414210117641</figcaption></figure><p>开源的数据清洗工具，github开源项目：MinerU（上海人工智能实验室研发开源）</p><p>https://github.com/opendatalab/MinerU</p><h1 id="二丁瑞雪老师分享">二、丁瑞雪老师分享</h1><figure><img src="https://s2.loli.net/2025/04/14/evyBu9QZwDEP2qp.png"alt="image-20250414213049351" /><figcaption aria-hidden="true">image-20250414213049351</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/X4dwOt5YFK8jki7.png"alt="image-20250414213215639" /><figcaption aria-hidden="true">image-20250414213215639</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/AQHlv8WLtarXois.png"alt="image-20250414213320631" /><figcaption aria-hidden="true">image-20250414213320631</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/z2HD46QZsea9Ohm.png"alt="image-20250414213455387" /><figcaption aria-hidden="true">image-20250414213455387</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dify0.15.3学习02_chatflow类型应用</title>
    <link href="/2025/04/14/Dify0.15.3%E5%AD%A6%E4%B9%A002_chatflow%E7%B1%BB%E5%9E%8B%E5%BA%94%E7%94%A8/"/>
    <url>/2025/04/14/Dify0.15.3%E5%AD%A6%E4%B9%A002_chatflow%E7%B1%BB%E5%9E%8B%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景信息介绍">一、背景信息介绍</h1><p>搭建教程：https://jiangsanyin.github.io/2025/03/17/Ubuntu2204%E9%83%A8%E7%BD%B2Dify%E7%8E%AF%E5%A2%83/</p><p>现在一个新的服务器上重新搭建了一套dify0.15.3环境，服务器IP是：172.20.0.22，dify服务运行在81端口。</p><figure><img src="https://s2.loli.net/2025/04/14/IwGUmOLuisr9BFh.png"alt="image-20250414100326346" /><figcaption aria-hidden="true">image-20250414100326346</figcaption></figure><h1 id="二工作流应用">二、工作流应用</h1><h2 id="chatflow类型应用">2.1 chatflow类型应用</h2><figure><img src="https://s2.loli.net/2025/04/14/Qd1JpEzhOMlxVwv.png"alt="image-20250414171302837" /><figcaption aria-hidden="true">image-20250414171302837</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/qY8yDrV3x4IapLX.png"alt="image-20250414171423497" /><figcaption aria-hidden="true">image-20250414171423497</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/14/rGEYwl4sNydxW3e.png"alt="image-20250414105611601" /><figcaption aria-hidden="true">image-20250414105611601</figcaption></figure><p>创建如下工作流内容：</p><figure><img src="https://s2.loli.net/2025/04/14/rWHGqouRxtLcFXb.png"alt="image-20250414171539734" /><figcaption aria-hidden="true">image-20250414171539734</figcaption></figure><p>具体内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">app:</span><br>  <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">icon:</span> <span class="hljs-string">🤖</span><br>  <span class="hljs-attr">icon_background:</span> <span class="hljs-string">&#x27;#FFEAD5&#x27;</span><br>  <span class="hljs-attr">mode:</span> <span class="hljs-string">advanced-chat</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">知识库问答工作流</span><br>  <span class="hljs-attr">use_icon_as_answer_icon:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">app</span><br><span class="hljs-attr">version:</span> <span class="hljs-number">0.1</span><span class="hljs-number">.5</span><br><span class="hljs-attr">workflow:</span><br>  <span class="hljs-attr">conversation_variables:</span> []<br>  <span class="hljs-attr">environment_variables:</span> []<br>  <span class="hljs-attr">features:</span><br>    <span class="hljs-attr">file_upload:</span><br>      <span class="hljs-attr">allowed_file_extensions:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.JPG</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.JPEG</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.PNG</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.GIF</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.WEBP</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">.SVG</span><br>      <span class="hljs-attr">allowed_file_types:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">image</span><br>      <span class="hljs-attr">allowed_file_upload_methods:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">local_file</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">remote_url</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">fileUploadConfig:</span><br>        <span class="hljs-attr">audio_file_size_limit:</span> <span class="hljs-number">50</span><br>        <span class="hljs-attr">batch_count_limit:</span> <span class="hljs-number">5</span><br>        <span class="hljs-attr">file_size_limit:</span> <span class="hljs-number">100</span><br>        <span class="hljs-attr">image_file_size_limit:</span> <span class="hljs-number">10</span><br>        <span class="hljs-attr">video_file_size_limit:</span> <span class="hljs-number">100</span><br>        <span class="hljs-attr">workflow_file_upload_limit:</span> <span class="hljs-number">10</span><br>      <span class="hljs-attr">image:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">number_limits:</span> <span class="hljs-number">3</span><br>        <span class="hljs-attr">transfer_methods:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">local_file</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">remote_url</span><br>      <span class="hljs-attr">number_limits:</span> <span class="hljs-number">3</span><br>    <span class="hljs-attr">opening_statement:</span> <span class="hljs-string">我是你</span> <span class="hljs-string">PyTorch学习助手，有什么可以帮您。</span><br>    <span class="hljs-attr">retriever_resource:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">sensitive_word_avoidance:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">speech_to_text:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">suggested_questions:</span> []<br>    <span class="hljs-attr">suggested_questions_after_answer:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">text_to_speech:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">language:</span> <span class="hljs-string">&#x27;&#x27;</span><br>      <span class="hljs-attr">voice:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">graph:</span><br>    <span class="hljs-attr">edges:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">sourceType:</span> <span class="hljs-string">start</span><br>        <span class="hljs-attr">targetType:</span> <span class="hljs-string">llm</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-number">1744599364444</span><span class="hljs-string">-llm</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">&#x27;1744599364444&#x27;</span><br>      <span class="hljs-attr">sourceHandle:</span> <span class="hljs-string">source</span><br>      <span class="hljs-attr">target:</span> <span class="hljs-string">llm</span><br>      <span class="hljs-attr">targetHandle:</span> <span class="hljs-string">target</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">isInIteration:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">sourceType:</span> <span class="hljs-string">llm</span><br>        <span class="hljs-attr">targetType:</span> <span class="hljs-string">knowledge-retrieval</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">llm-source-1744604782998-target</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">llm</span><br>      <span class="hljs-attr">sourceHandle:</span> <span class="hljs-string">source</span><br>      <span class="hljs-attr">target:</span> <span class="hljs-string">&#x27;1744604782998&#x27;</span><br>      <span class="hljs-attr">targetHandle:</span> <span class="hljs-string">target</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">zIndex:</span> <span class="hljs-number">0</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">isInIteration:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">sourceType:</span> <span class="hljs-string">knowledge-retrieval</span><br>        <span class="hljs-attr">targetType:</span> <span class="hljs-string">llm</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-number">1744604782998</span><span class="hljs-string">-source-1744605230519-target</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">&#x27;1744604782998&#x27;</span><br>      <span class="hljs-attr">sourceHandle:</span> <span class="hljs-string">source</span><br>      <span class="hljs-attr">target:</span> <span class="hljs-string">&#x27;1744605230519&#x27;</span><br>      <span class="hljs-attr">targetHandle:</span> <span class="hljs-string">target</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">zIndex:</span> <span class="hljs-number">0</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">isInIteration:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">sourceType:</span> <span class="hljs-string">llm</span><br>        <span class="hljs-attr">targetType:</span> <span class="hljs-string">answer</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-number">1744605230519</span><span class="hljs-string">-source-answer-target</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">&#x27;1744605230519&#x27;</span><br>      <span class="hljs-attr">sourceHandle:</span> <span class="hljs-string">source</span><br>      <span class="hljs-attr">target:</span> <span class="hljs-string">answer</span><br>      <span class="hljs-attr">targetHandle:</span> <span class="hljs-string">target</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">zIndex:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">nodes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">title:</span> <span class="hljs-string">开始</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">start</span><br>        <span class="hljs-attr">variables:</span> []<br>      <span class="hljs-attr">height:</span> <span class="hljs-number">53</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">&#x27;1744599364444&#x27;</span><br>      <span class="hljs-attr">position:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">80</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">positionAbsolute:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">80</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">sourcePosition:</span> <span class="hljs-string">right</span><br>      <span class="hljs-attr">targetPosition:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">244</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">context:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>          <span class="hljs-attr">variable_selector:</span> []<br>        <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-attr">memory:</span><br>          <span class="hljs-attr">query_prompt_template:</span> <span class="hljs-string">&#x27;用户的问题如下：</span><br><span class="hljs-string"></span><br><span class="hljs-string">            &#123;&#123;#sys.query#&#125;&#125;&#x27;</span><br>          <span class="hljs-attr">role_prefix:</span><br>            <span class="hljs-attr">assistant:</span> <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-attr">user:</span> <span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-attr">window:</span><br>            <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-attr">size:</span> <span class="hljs-number">10</span><br>        <span class="hljs-attr">model:</span><br>          <span class="hljs-attr">completion_params:</span><br>            <span class="hljs-attr">temperature:</span> <span class="hljs-number">0.7</span><br>          <span class="hljs-attr">mode:</span> <span class="hljs-string">chat</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">qwen-max-latest</span><br>          <span class="hljs-attr">provider:</span> <span class="hljs-string">tongyi</span><br>        <span class="hljs-attr">prompt_template:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">90d3eb3d-8c11-4069-9f6c-b0cf1effd52b</span><br>          <span class="hljs-attr">role:</span> <span class="hljs-string">system</span><br>          <span class="hljs-attr">text:</span> <span class="hljs-string">&#x27;## 任务</span><br><span class="hljs-string"></span><br><span class="hljs-string">            请从用户给定的问题中提取关键内容，用于检索知识库内容</span><br><span class="hljs-string"></span><br><span class="hljs-string">            ## 输出</span><br><span class="hljs-string"></span><br><span class="hljs-string">            输出多个关键字或关键句，关键字或关键句之间用空格隔开，不需要其他无关的文本内容。禁止直接回复用户的问题&#x27;</span><br>        <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">title:</span> <span class="hljs-string">提取关键内容</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">llm</span><br>        <span class="hljs-attr">variables:</span> []<br>        <span class="hljs-attr">vision:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">height:</span> <span class="hljs-number">97</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">llm</span><br>      <span class="hljs-attr">position:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">380</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">positionAbsolute:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">380</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">sourcePosition:</span> <span class="hljs-string">right</span><br>      <span class="hljs-attr">targetPosition:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">244</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">answer:</span> <span class="hljs-string">&#x27;&#123;&#123;#1744605230519.text#&#125;&#125;&#x27;</span><br>        <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">title:</span> <span class="hljs-string">直接回复</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">answer</span><br>        <span class="hljs-attr">variables:</span> []<br>      <span class="hljs-attr">height:</span> <span class="hljs-number">102</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">answer</span><br>      <span class="hljs-attr">position:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">1273</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">positionAbsolute:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">1273</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">sourcePosition:</span> <span class="hljs-string">right</span><br>      <span class="hljs-attr">targetPosition:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">244</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">dataset_ids:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">12b20101-0ff8-422b-98fc-cc78440007d8</span><br>        <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-attr">multiple_retrieval_config:</span><br>          <span class="hljs-attr">reranking_enable:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">reranking_mode:</span> <span class="hljs-string">reranking_model</span><br>          <span class="hljs-attr">reranking_model:</span><br>            <span class="hljs-attr">model:</span> <span class="hljs-string">gte-rerank</span><br>            <span class="hljs-attr">provider:</span> <span class="hljs-string">tongyi</span><br>          <span class="hljs-attr">top_k:</span> <span class="hljs-number">4</span><br>        <span class="hljs-attr">query_variable_selector:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">llm</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">text</span><br>        <span class="hljs-attr">retrieval_mode:</span> <span class="hljs-string">multiple</span><br>        <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">title:</span> <span class="hljs-string">知识检索</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">knowledge-retrieval</span><br>      <span class="hljs-attr">height:</span> <span class="hljs-number">91</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">&#x27;1744604782998&#x27;</span><br>      <span class="hljs-attr">position:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">681</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">positionAbsolute:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">681</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">282</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">sourcePosition:</span> <span class="hljs-string">right</span><br>      <span class="hljs-attr">targetPosition:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">244</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">data:</span><br>        <span class="hljs-attr">context:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">variable_selector:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;1744604782998&#x27;</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">result</span><br>        <span class="hljs-attr">desc:</span> <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-attr">memory:</span><br>          <span class="hljs-attr">query_prompt_template:</span> <span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-attr">role_prefix:</span><br>            <span class="hljs-attr">assistant:</span> <span class="hljs-string">&#x27;&#x27;</span><br>            <span class="hljs-attr">user:</span> <span class="hljs-string">&#x27;&#x27;</span><br>          <span class="hljs-attr">window:</span><br>            <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-attr">size:</span> <span class="hljs-number">50</span><br>        <span class="hljs-attr">model:</span><br>          <span class="hljs-attr">completion_params:</span><br>            <span class="hljs-attr">temperature:</span> <span class="hljs-number">0.7</span><br>          <span class="hljs-attr">mode:</span> <span class="hljs-string">chat</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">qwen-max-latest</span><br>          <span class="hljs-attr">provider:</span> <span class="hljs-string">tongyi</span><br>        <span class="hljs-attr">prompt_template:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">0741400e-f6df-4965-aa25-27a88c6423ac</span><br>          <span class="hljs-attr">role:</span> <span class="hljs-string">system</span><br>          <span class="hljs-attr">text:</span> <span class="hljs-string">&#x27;## 角色</span><br><span class="hljs-string"></span><br><span class="hljs-string">            你是一个专业的客服，擅长根据知识库内容回答用户的问题</span><br><span class="hljs-string"></span><br><span class="hljs-string">            ## 背景</span><br><span class="hljs-string"></span><br><span class="hljs-string">            严格根据知识库内容回答用户问题，对于用户理解私有文档十分重要。</span><br><span class="hljs-string"></span><br><span class="hljs-string">            ## 任务</span><br><span class="hljs-string"></span><br><span class="hljs-string">            严格根据下面的知识库的内容回答用户的问题</span><br><span class="hljs-string"></span><br><span class="hljs-string">            ## 知识库</span><br><span class="hljs-string"></span><br><span class="hljs-string">            &#123;&#123;#context#&#125;&#125;&#x27;</span><br>        <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">title:</span> <span class="hljs-string">回答问题</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">llm</span><br>        <span class="hljs-attr">variables:</span> []<br>        <span class="hljs-attr">vision:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">height:</span> <span class="hljs-number">97</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">&#x27;1744605230519&#x27;</span><br>      <span class="hljs-attr">position:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">959</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">271</span><br>      <span class="hljs-attr">positionAbsolute:</span><br>        <span class="hljs-attr">x:</span> <span class="hljs-number">959</span><br>        <span class="hljs-attr">y:</span> <span class="hljs-number">271</span><br>      <span class="hljs-attr">selected:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">sourcePosition:</span> <span class="hljs-string">right</span><br>      <span class="hljs-attr">targetPosition:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">custom</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">244</span><br>    <span class="hljs-attr">viewport:</span><br>      <span class="hljs-attr">x:</span> <span class="hljs-number">6.0819642019071125</span><br>      <span class="hljs-attr">y:</span> <span class="hljs-number">-54.89333757760929</span><br>      <span class="hljs-attr">zoom:</span> <span class="hljs-number">0.870550563296124</span><br></code></pre></td></tr></table></figure><p>执行效果如下：</p><figure><img src="https://s2.loli.net/2025/05/10/JMC6kUaKzAOLhHY.png"alt="image-20250414172009151" /><figcaption aria-hidden="true">image-20250414172009151</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大模型应用开发RAG-速通百炼RAG应用</title>
    <link href="/2025/04/13/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91RAG-%E9%80%9F%E9%80%9A%E7%99%BE%E7%82%BCRAG%E5%BA%94%E7%94%A8/"/>
    <url>/2025/04/13/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91RAG-%E9%80%9F%E9%80%9A%E7%99%BE%E7%82%BCRAG%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1id="一大模型应用如何走向企业落地">一、大模型应用如何走向企业落地？</h1><h2 id="大模型到业务的距离有多远">1.1 大模型到业务的距离有多远？</h2><p><strong>🤔：想把大模型用在生产场景、需要考虑哪些问题？</strong></p><p>​ 在企业生产环境下，常见的大模型应用落地的痛点和问题可能是这些：</p><ul><li><strong>应用搭建复杂</strong>：针对不同的业务目标、都需要花大量时间投入选型和测试</li><li><strong>提示词工程复杂</strong>：一个问题需要反复打磨提示词，员工需掌握“调教模型”技能，跨部门协作效率降低。</li><li><strong>无法解决复杂任务</strong>：AI很难执行复杂任务，不会拆解业务场景的核心问题</li><li><strong>缺少行业知识</strong>：领域知识匮乏、动态数据更新滞后、多模态处理能力差</li><li><strong>等等···</strong></li></ul><h2 id="企业级ai应用的参考答案-ai-agent智能体应用">1.2企业级AI应用的参考答案—— AI Agent（智能体应用）</h2><p>假设每个合适的工作场景都有一个智能助理，熟悉核心思路和数据，只要说需求，就可以获得能辅助业务决策的数据或方案。当企业里的每个人、都能用上这样的智能助理，工作效率将会发生怎样的变化？</p><p>答：在这种预期下、<strong>AI Agent =一个懂得复杂任务拆解、会持续学习内容、会聪明调用各种资源的一个数字员工</strong></p><figure><img src="https://s2.loli.net/2025/04/13/7uUvYrdpRcTwQ41.png"alt="image-20250413150510653" /><figcaption aria-hidden="true">image-20250413150510653</figcaption></figure><h2 id="我们来看两个真实的落地案例">1.3 我们来看两个真实的落地案例</h2><h3 id="案例1ai财务">1.3.1 案例1：AI+财务</h3><p>🤔：在这种业务场景、你会如何设计大模型应用？</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">目标企业 ：会计师事务所<br>应用目标 ：提升财务工作人员的工作效率<br>财务工作人员的业务特性 ： 政策敏感度、合规性、风险敏感度 等工作<br></code></pre></td></tr></table></figure><ul><li><p>项目真实情况</p><ul><li><p><strong>项目名称</strong> ：AI财会助手</p></li><li><p><strong>项目简介</strong>：构建动态更新的财税知识图谱，推动专业服务智能化转型。</p></li><li><p><strong>项目成果</strong>：构建了庞大的财务行业领域数据知识库，通过 <strong>RAG搜索增强</strong>等技术，构建了完整的财务知识图谱，让AI大模型在财务领域的专业度直线上升，<strong>最后获得了注册会计师96%的满意度评价</strong> 。</p></li></ul></li><li><p>亮点1：权威知识中枢</p><ul><li><strong>全维度法规覆盖</strong>：集成会计/证券/税务/经济四大核心领域法规库；支持实时同步最新政策文件</li><li><strong>智能知识图谱</strong>：建立法规条款-案例应用-业务实操的业务闭环</li><li><figure><img src="https://s2.loli.net/2025/04/13/61V4ZKqvSrYft8T.png"alt="image-20250413151040281" /><figcaption aria-hidden="true">image-20250413151040281</figcaption></figure></li></ul></li><li><p>亮点2：决策智能引擎</p><ul><li><strong>专业级AI解析</strong> ：基于行业资深注册会计师团队体系化评估，实际业务问题准确率达96%。</li><li><strong>动态学习系统</strong>：置信度专家库实时吸收用户反馈，持续优化的问答质量保障模型效果。</li><li><figure><img src="https://s2.loli.net/2025/04/13/MtHu19LGf7JKFIq.png"alt="image-20250413151307555" /><figcaption aria-hidden="true">image-20250413151307555</figcaption></figure></li></ul></li><li><p>亮点3：效率革命工具</p><ul><li><p><strong>快速检索</strong> ：高效进行新老政策法规检索；</p></li><li><p><strong>辅助解读</strong>：快速辅助从业人员对复杂法规进行理解；</p></li><li><p><strong>热榜洞察</strong> ：实时呈现行业高频问题热榜</p></li><li><figure><img src="https://s2.loli.net/2025/04/13/U8LkZMWgHYItszo.png"alt="image-20250413151455812" /><figcaption aria-hidden="true">image-20250413151455812</figcaption></figure></li></ul></li><li><p>亮点4：风险控制体系</p><ul><li><p><strong>溯源验证机制</strong></p><ul><li><p>支持关键条款的智能匹配与引用</p></li><li><p>双通道知识来源追溯（法规原文+案例依据）</p></li><li><p>重点条款高亮标注功能</p></li><li><figure><img src="https://s2.loli.net/2025/04/13/ZjgLlVI6tfekBCT.png"alt="image-20250413151548703" /><figcaption aria-hidden="true">image-20250413151548703</figcaption></figure></li><li><figure><img src="https://s2.loli.net/2025/04/13/FceTK8WzIGLmrOH.png"alt="image-20250413151624810" /><figcaption aria-hidden="true">image-20250413151624810</figcaption></figure></li></ul></li></ul></li></ul><h3 id="案例2ai购物">1.3.2 案例2：AI+购物</h3><p>🤔：在这种业务场景、你会如何设计大模型应用？</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">目标场景 ：购物系统<br>应用目标 ：提升消费者的购买体验<br></code></pre></td></tr></table></figure><ul><li><p>项目真实情况</p><ul><li><p><strong>项目名称</strong> ：AI购物系统</p></li><li><p><strong>项目简介</strong>：以用户为核心，构建一个全面智能化、个性化的购物生态系统。</p></li><li><p><strong>项目成果</strong> ：</p><ul><li><p>用户的每一次购物不再只是购买产品，而是获得一位“AI朋友”，一个真正懂用户、分析需求、推荐最适合方案的智能管家。</p></li><li><p>围绕用户需求场景，开发了<strong>AI导购，AI评估管家、AI饮食管家、AI睡眠管家、AI减压管家</strong>等功能，全方位服务用户的工作生活。</p></li></ul></li></ul></li><li><p>AI导购流程图</p><p>AI导购通过RAG技术做商品语义搜索，让用户在和AI的沟通中可以获得最精确的商品推荐</p><figure><img src="https://s2.loli.net/2025/04/13/BKmk6lICSrb3eRQ.png"alt="image-20250413162632646" /><figcaption aria-hidden="true">image-20250413162632646</figcaption></figure></li><li><p>项目效果示意</p></li></ul><figure><img src="https://s2.loli.net/2025/04/13/Z32rniyV9FOwlHh.png"alt="image-20250413162842838" /><figcaption aria-hidden="true">image-20250413162842838</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/LpPsJrgF7liXCcM.png"alt="image-20250413162937533" /><figcaption aria-hidden="true">image-20250413162937533</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/DmrHao1QC8Iv6cT.png"alt="image-20250413162945033" /><figcaption aria-hidden="true">image-20250413162945033</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/q4eUmvDYfOj5t8h.png"alt="image-20250413162949834" /><figcaption aria-hidden="true">image-20250413162949834</figcaption></figure><h3 id="划重点">划重点</h3><p>以上两个案例、最大头的工作其实都是清洗数据、构建良好的RAG效果，是保障这两个项目产品可用性的核心环节。</p><p>🤔：RAG在AI应用中究竟起到了什么作用？</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">以上案例为什么要用RAG？<br>在哪些环节可能会用到RAG？<br></code></pre></td></tr></table></figure><h2 id="ai千行百业正在转型">1.4 AI+千行百业，正在转型</h2><p>实际上，大模型的应用正在各行各业取得显著进展，除了作者所接触的真实项目，还有<strong>金融、医疗、教育、电子商务</strong> 等等。</p><p>随着 <strong>RAG、AI工作流</strong>等技术的日渐成熟、将大模型应用到生产场景大有可为。</p><p>许多公司也在寻求具备大模型应用能力的人才。从就业市场来看，大模型领域的需求非常大——</p><p><strong>相关岗位：</strong></p><ul><li><strong>机器学习工程师</strong>：专注于模型的训练、优化和部署。</li><li><strong>数据科学家</strong> ：以数据分析和挖掘为核心，推动 AI应用。</li><li><strong>AI 产品经理</strong> ：负责AI产品的规划与实施。</li><li><strong>AI应用开发工程师</strong>：结合传统开发背景，开发大模型应用。</li></ul><h1 id="二上手ai-agent应用开发">二、上手AI Agent应用开发</h1><p>🤔：我们如何快速上手 AI Agent应用开发呢？</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">本教程将带大家使用阿里云百炼平台进行AI应用开发**<br>作者项目中的 <span class="hljs-strong">**RAG模块**</span> 和一些核心组件正是选用的阿里云百炼平台实现的<br></code></pre></td></tr></table></figure><p>跳转到 <ahref="https://bailian.console.aliyun.com/?tab=app#/app-center">阿里云百炼平台-应用管理</a></p><h2 id="part15分钟创建ai财务助手">Part1：5分钟创建AI财务助手</h2><p>🤔：最简单的AI财务助手应该具备什么功能？</p><ul><li>财务助手主要是哪些人需要？</li><li>有哪些注意事项？</li><li>AI主要会在其中起什么作用？</li></ul><h3 id="创建应用">1️⃣ 创建应用</h3><p>选择创建智能体应用，并点击立即创建</p><figure><img src="https://s2.loli.net/2025/04/13/JpFoqHgmBsaCxTU.png"alt="image-20250413164044025" /><figcaption aria-hidden="true">image-20250413164044025</figcaption></figure><h3 id="选择模型">2️⃣ 选择模型</h3><p>根据自己的实际情况选择模型（推荐通义千问-Max），这个是笔者实践下来效果比较稳定的常用选择</p><h3 id="编写提示词并输入">3️⃣ 编写提示词并输入</h3><p>以下自己学习时用到的提示词：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 角色<br>你是一位专业的财会助手，专注于中国企业财税领域。凭借深厚的专业知识和丰富经验，依据用户提供的上下文信息,精准分析用户提出的财税相关问题，并给出全面、详细且专业的解答。<br><br>## 技能<br>### 技能 <span class="hljs-number">1</span>:精准把握用户需求<br><span class="hljs-number">1.</span>当用户输入完整问题时，迅速准确理解需求点，运用专业知识分析解答，<br><span class="hljs-number">2.</span>若用户仅输入一个短语，礼貌追问用户，引导其提供该问题相关的详细背景信息，如涉及的企业规模、业务场景、时间范围等。<br><span class="hljs-number">3.</span>先归纳结论。<br><br>###技能 <span class="hljs-number">2</span>:法规依据阐述<br>在给出任何答案之前，明确指出具体依据的相关法律法规名称、文号、第几条、相关条文内容，确保回复具有权威性和严谨性。<br><br>### 技能 <span class="hljs-number">3</span>:详细解答问题基于用户提供的信息和相关法律法规，提供逻辑清晰、内容完整的答案，必要时通过举例、图表等方式辅助说明，让用户易于理解。<br><br>## 限制<br>- 仅围绕用户提出的财税问题进行分析和回答，坚决拒绝回答与问题无关的话题。<br>- 回复必须条理清晰，用Markdown格式，每个要点前要有序号，每段要先归纳为一句话并加粗显示<br>- 答案内容需保证专业性和准确性，不能随意编造或传播未经证实的信息。<br></code></pre></td></tr></table></figure><h3 id="尝试一下各种功能">4️⃣ 尝试一下各种功能</h3><figure><img src="https://s2.loli.net/2025/04/13/CJec4t5YdE3SbRg.png"alt="image-20250413164807846" /><figcaption aria-hidden="true">image-20250413164807846</figcaption></figure><hr /><p>🤔：联网搜索也是RAG么？</p><ul><li>百炼上这些“知识”功能、都可以用来做什么？</li><li>不同的“知识”方案、有什么区别？</li><li>联网搜索的知识有什么优势？有可能存在什么问题？</li></ul><hr /><h3 id="测试应用">5️⃣ 测试应用</h3><figure><imgsrc="C:/Users/jiangsanyin/AppData/Roaming/Typora/typora-user-images/image-20250413165247743.png"alt="image-20250413165247743" /><figcaption aria-hidden="true">image-20250413165247743</figcaption></figure><h3 id="发布应用">6️⃣ 发布应用</h3><figure><img src="https://s2.loli.net/2025/04/13/buwZNWo7ItH13BM.png"alt="image-20250413165401991" /><figcaption aria-hidden="true">image-20250413165401991</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/4rQoJxikF9EpKeD.png"alt="image-20250413165456560" /><figcaption aria-hidden="true">image-20250413165456560</figcaption></figure><h2 id="part2在ai应用中添加rag能力">Part2：在AI应用中添加RAG能力</h2><p>本环节会带大家体验阿里云百炼的知识库功能，感受阿里云百炼的RAG效果。我给大家准备了我处理过的文件——</p><p>准备好文件《计学精要2021.zip》，下载页面：https://www.datawhale.cn/activity/189/29/124?rankingPage=1</p><h3 id="上传数据到百炼平台">1️⃣ 上传数据到百炼平台</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">你还可以使用自己的知识文件、创建自己场景下的应用。<br>百炼目前支持 <span class="hljs-string">.pdf</span>,<span class="hljs-string">.doc</span>,<span class="hljs-string">.docx</span>,<span class="hljs-string">.txt</span>,<span class="hljs-string">.md</span>,<span class="hljs-string">.pptx</span>,<span class="hljs-string">.ppt</span>,<span class="hljs-string">.png</span>,<span class="hljs-string">.jpg</span>,<span class="hljs-string">.jpeg</span>,<span class="hljs-string">.bmp</span>,<span class="hljs-string">.gif</span>,<span class="hljs-string">.xls</span>,<span class="hljs-string">.xlsx</span> 等格式的文件<br>对多模态文件有很好的兼容能力，大家都可以尝试看看~<br>如果是纯文本，我一般会处理成 <span class="hljs-string">.md</span> 文件<br></code></pre></td></tr></table></figure><figure><imgsrc="C:/Users/jiangsanyin/AppData/Roaming/Typora/typora-user-images/image-20250413170140241.png"alt="image-20250413170140241" /><figcaption aria-hidden="true">image-20250413170140241</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/C8YsK5RjbkpL3no.png"alt="image-20250413170309476" /><figcaption aria-hidden="true">image-20250413170309476</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/OVAguCo2af69GW1.png"alt="image-20250413170415777" /><figcaption aria-hidden="true">image-20250413170415777</figcaption></figure><h3 id="创建知识库">2️⃣ 创建知识库</h3><p><img src="https://s2.loli.net/2025/04/13/OVAguCo2af69GW1.png" /></p><figure><img src="https://s2.loli.net/2025/04/13/yhMQog9iVz3HKSp.png"alt="image-20250413170556935" /><figcaption aria-hidden="true">image-20250413170556935</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/bxkqcEifKIO4ZJS.png"alt="image-20250413170632182" /><figcaption aria-hidden="true">image-20250413170632182</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/ZMjgSdYzQF1vica.png"alt="image-20250413170715510" /><figcaption aria-hidden="true">image-20250413170715510</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/ODHVwBfIukUgi1C.png"alt="image-20250413170817727" /><figcaption aria-hidden="true">image-20250413170817727</figcaption></figure><h3 id="绑定知识库到智能体">3️⃣ 绑定知识库到智能体</h3><figure><img src="https://s2.loli.net/2025/04/13/zljCwamE68xKriG.png"alt="image-20250413173005718" /><figcaption aria-hidden="true">image-20250413173005718</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/zPIRO5ZVxSj2qrv.png"alt="image-20250413173147928" /><figcaption aria-hidden="true">image-20250413173147928</figcaption></figure><h3 id="测试验证效果">4️⃣ 测试验证效果</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">参考提问：<br>如何区分一项无形资产租赁业务时适用《企业会计准则第21号——租赁》还是《企业会计准则第6号——无形资产》？<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/04/13/tsMvl6ZQUJTcVHY.png"alt="image-20250413173409921" /><figcaption aria-hidden="true">image-20250413173409921</figcaption></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">从测试结果中可以发现、成功调用知识库后，会显示执行完成、并且给出知识库检索的结果——<br><br>按照匹配分数列出了5个匹配分数较高的内容，<br><br>这些索引到的内容都将作为问答的上下文补充， <span class="hljs-strong">**让AI在回答的时候有更多的输入**</span><br><br>PS：这些结果都可以在API调用的时候通过代码获得<br></code></pre></td></tr></table></figure><p>发布版本：</p><figure><img src="https://s2.loli.net/2025/04/13/RNbQluEezIdWPUV.png"alt="image-20250413173627526" /><figcaption aria-hidden="true">image-20250413173627526</figcaption></figure><h1 id="三作业">三、作业</h1><h2 id="作业1尝试使用工作流完成">3.1 作业1：尝试使用工作流(完成)</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">官方简介：<br>工作流应用支持 通过画布自定义和编排业务流程编排主体为原子节点 ，如大模型节点、知识库节点等快速实现业务逻辑设计及业务效果验证。<br>适用于需要结合大模型执行高确定性的业务逻辑的流程型应用，如可执行不同任务的智能助理工作流、自动化分析会议记录工作流等。<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/04/13/KzMfFDOeSdoBGlu.png"alt="image-20250413202908418" /><figcaption aria-hidden="true">image-20250413202908418</figcaption></figure><hr /><p>🤔：如何构建一个旅游规划工作流应用</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">demo功能需求：用户输入目标城市</span><span class="hljs-literal">--</span>&gt;<span class="hljs-comment">调用插件获取24小时内当地天气</span><span class="hljs-literal">--</span>&gt;<span class="hljs-comment">生成旅行规划</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/04/13/4haAUuiO7fokr8L.png"alt="image-20250413202950712" /><figcaption aria-hidden="true">image-20250413202950712</figcaption></figure><p>在百炼平台上实现如下：</p><figure><img src="https://s2.loli.net/2025/04/13/KLDeFjMsWT8p1Sm.png"alt="image-20250413203830280" /><figcaption aria-hidden="true">image-20250413203830280</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/DrZNMBSEKoHv3bw.png"alt="image-20250413203241028" /><figcaption aria-hidden="true">image-20250413203241028</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/L7oOhTqUj1tdADQ.png"alt="image-20250413203422100" /><figcaption aria-hidden="true">image-20250413203422100</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/9oKlwmTQHIqytgf.png"alt="image-20250413214749363" /><figcaption aria-hidden="true">image-20250413214749363</figcaption></figure><p>最后的工作流如下图：</p><figure><img src="https://s2.loli.net/2025/04/13/MiFyQUCnTrzh9Se.png"alt="image-20250413214700825" /><figcaption aria-hidden="true">image-20250413214700825</figcaption></figure><p>工作流执行效果如下图：</p><figure><img src="https://s2.loli.net/2025/04/13/NcG3kbdRH9lsiuI.png"alt="image-20250413215031257" /><figcaption aria-hidden="true">image-20250413215031257</figcaption></figure><h2 id="作业2尝试使用api调用你创建的应用暂未成功">3.2作业2：尝试使用API调用你创建的应用(暂未成功)</h2><p>要想做真实可用的商业级大模型应用、我们必然不能停留在零代码搭建的AI应用组件上、如何更好地将AI应用、RAG能力、稳定的工作流，融入到更方便的业务场景中使用呢？</p><p>答案是——</p><p>通过API调用我们已经调试稳定的AI能力。</p><p>接下来、你可以尝试学习<ahref="https://help.aliyun.com/zh/model-studio/application-calling/?spm=a2c4g.11186623.help-menu-2400256.d_3_0.78777980X6n5UC&amp;scm=20140722.H_2878495._.OR_help-T_cn~zh-V_1">官方API调用文档</a>，完成AI应用的调用！</p><p>官方API主要提供以下功能：</p><p><img src="https://s2.loli.net/2025/04/13/voy36DZfRSisaNq.png" alt="image-20250413215148062" style="zoom:67%;" /></p><hr /><figure><img src="https://s2.loli.net/2025/04/13/z2aOAvmQq6cygZT.png"alt="image-20250413222939881" /><figcaption aria-hidden="true">image-20250413222939881</figcaption></figure><h2 id="作业3尝试一下多模态格式的文件完成">3.3作业3：尝试一下多模态格式的文件(完成)</h2><figure><img src="https://s2.loli.net/2025/04/13/hACVZUwyIracb4W.png"alt="image-20250413224044018" /><figcaption aria-hidden="true">image-20250413224044018</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/5s3xkcnaAylwhST.png"alt="image-20250413224007909" /><figcaption aria-hidden="true">image-20250413224007909</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/13/XBaLYEOm8HW7orf.png"alt="image-20250413223955865" /><figcaption aria-hidden="true">image-20250413223955865</figcaption></figure><h2 id="作业4思考你想做的ai-agent应用场景部分完成">3.4作业4：思考你想做的AI Agent应用场景(部分完成)</h2><p>实际上我们通过上面的应用创建，仅仅只是完成了AI功能的部分验证和搭建，</p><p>真正要展开企业级大模型应用开发的工作，我们至少还需要考虑如下几点——</p><ul><li><p>我们要解决的业务痛点是什么？如何确定真实性和要求？</p><p>以下是自己根据自己在工作与学习中遇到问题，进行的思考与回复</p><ul><li>只依靠大模型本身的简单对话功能无法完成真实的复杂业务问题。实际业务问题比较复杂，比如需要同时解析30个word格式的日报文件（其中有文字与word表格），根据日报文件中的内容进行汇总，生成word格式的月报。此时只单纯使用大模型如DeepSeek本身的对话能力就无法准确地完成此业务功能。</li></ul></li><li><p>如何思考这个业务或需求是否适合引入AI应用和AI功能？</p></li><li><p>如何设计技术架构、完成合适的技术选型？</p></li><li><p>如何落地开发？核心工作有哪些？</p><ul><li>需要从技术可行性、复杂性、成本等多方面进行考虑</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CherryStudio使用入门</title>
    <link href="/2025/04/10/CherryStudio%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <url>/2025/04/10/CherryStudio%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一安装文件下载">一、安装文件下载</h1><p>参考其github仓库上的下载地址：https://github.com/CherryHQ/cherry-studio/releases</p><p>或官网：https://cherry-ai.com/download</p><p>以管理员身份安装，并且为所有用户安装。安装完成后，打开时界面如下图（v1.2.1）：</p><figure><img src="https://s2.loli.net/2025/04/10/1qTEzUdOm8lSveL.png"alt="image-20250410200715250" /><figcaption aria-hidden="true">image-20250410200715250</figcaption></figure><hr /><p>官方参考文档：https://docs.cherry-ai.com/</p><h1 id="二模型服务中的设置">二、模型服务中的设置</h1><figure><img src="https://s2.loli.net/2025/04/10/pHNFV3IAJCW4Uqc.png"alt="image-20250410201829599" /><figcaption aria-hidden="true">image-20250410201829599</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/10/1USnqPpWQcuBzIY.png"alt="image-20250410202032637" /><figcaption aria-hidden="true">image-20250410202032637</figcaption></figure><h1 id="三mcp配置与使用">三、MCP配置与使用</h1><p><strong>MCP(Model Context Protocol)</strong>是一种开源协议，旨在以标准化的方式向大语言模型（LLM）提供上下文信息。参考：https://docs.cherry-ai.com/advanced-basic/mcp/install</p><h2 id="mcp环境安装">MCP环境安装</h2><p>安装uv、bun</p><p><img src="https://s2.loli.net/2025/04/10/EXsDGbkOHNp1y7Z.png" alt="image-20250410211853071" style="zoom: 50%;" /></p><figure><img src="https://s2.loli.net/2025/04/10/5tdc69hxNgBGyq1.png"alt="image-20250410212010445" /><figcaption aria-hidden="true">image-20250410212010445</figcaption></figure><h2 id="配置与使用mcp">配置与使用MCP</h2><h3 id="添加mcp服务器">添加MCP服务器</h3><p><img src="https://s2.loli.net/2025/04/19/OgYbzAQNoVnJhpU.png" alt="image-20250419094752724" style="zoom:67%;" /></p><p>https://mcp.so/，在此网站查找一个叫做“Fetch”的MCPServer，它的具体地址是：https://mcp.so/server/fetch/modelcontextprotocol?tab=content，概要信息如下：</p><figure><img src="https://s2.loli.net/2025/04/19/lwj1R78Vfoge3Uu.png"alt="image-20250419094216902" /><figcaption aria-hidden="true">image-20250419094216902</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>5分钟内用AI做60分PPT</title>
    <link href="/2025/04/09/5%E5%88%86%E9%92%9F%E5%86%85%E7%94%A8AI%E5%81%9A60%E5%88%86PPT/"/>
    <url>/2025/04/09/5%E5%88%86%E9%92%9F%E5%86%85%E7%94%A8AI%E5%81%9A60%E5%88%86PPT/</url>
    
    <content type="html"><![CDATA[<h1id="一快临近ddl如何在5min内做60ppt">一、快:临近DDL如何在5min内做60‘PPT</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">主题：你现在只有一个大致主题：生成式AI对未来工作的影响<br>资料：几篇网络文章、一份行业报告、之前做过的相关笔记<br>如何快速利用手上的资料做出PPT呢？<br></code></pre></td></tr></table></figure><p>方法如下：</p><p>（1）访问KIMI官网</p><figure><img src="https://s2.loli.net/2025/04/09/voS1jW4FNKmMtwA.png"alt="image-20250409103852785" /><figcaption aria-hidden="true">image-20250409103852785</figcaption></figure><p>（2）将主题内容发送给PPT助手，注意要使用“已联网”功能，让AI从网上搜索相关文章并生成PPT大纲</p><p>（3）利用KIMI自带功能一键生成PPT</p><figure><img src="https://s2.loli.net/2025/04/09/iwT9u1bepJB7jEU.png"alt="image-20250409104525584" /><figcaption aria-hidden="true">image-20250409104525584</figcaption></figure><p>点击上述按钮后，需要用户选择一个PPT模板，再点击“生成PPT”按钮之后就能看到生成的PPT了：</p><figure><img src="https://s2.loli.net/2025/04/09/oIDmLjeGub9JasC.png"alt="image-20250409104648948" /><figcaption aria-hidden="true">image-20250409104648948</figcaption></figure><p>（4）生成的PPT可以编辑，也可以立即下载</p><hr /><p>回顾：上述生成PPT的方法，其实是KIMI跟AiPPT.com合作的结果。其中KIMI主要用于生成大纲与方案，而后者则用来专注于使用生成的大纲来进行PPT的设计与排版。</p><p>AiPPT官网地址：https://www.aippt.cn/</p><figure><img src="https://s2.loli.net/2025/04/09/2OntvJf9bNP3mVM.png"alt="image-20250409113219180" /><figcaption aria-hidden="true">image-20250409113219180</figcaption></figure><p><img src="https://s2.loli.net/2025/04/09/eprlmGxFHUJ5ZwT.png" alt="image-20250409113349227" style="zoom:50%;" /></p><figure><img src="https://s2.loli.net/2025/04/09/aZBNYuzDlh9IVXQ.png"alt="image-20250409113825579" /><figcaption aria-hidden="true">image-20250409113825579</figcaption></figure><p><img src="https://s2.loli.net/2025/04/09/8VIYKrnj7MxLGaf.png" alt="image-20250409113938932" style="zoom: 67%;" /></p><h1 id="二好ppt没思路抓住3个关键点">二、好:PPT没思路？抓住3个关键点</h1><h1 id="三好用ai辅助做ppt全流程">三、好:用AI辅助做PPT全流程</h1>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nvbandwidth测速GPU间带宽</title>
    <link href="/2025/04/02/nvbandwidth%E6%B5%8B%E9%80%9FGPU%E9%97%B4%E5%B8%A6%E5%AE%BD/"/>
    <url>/2025/04/02/nvbandwidth%E6%B5%8B%E9%80%9FGPU%E9%97%B4%E5%B8%A6%E5%AE%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="一环境信息">一、环境信息</h1><p>4台Ubuntu22.04.4 LTS服务器，每台服务器上有8个NVIDIAA800-SXM4-80GB</p><h1 id="二安装nvbandwidth">二、安装nvbandwidth</h1><p>参考：https://github.com/NVIDIA/nvbandwidth</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@deepseek2:/opt/code_repos# git clone https://github.com/NVIDIA/nvbandwidth.git<br>root@deepseek2:/opt/code_repos# cd nvbandwidth<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖</span><br>root@deepseek2:/opt/code_repos/nvbandwidth# ./debian_install.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装nvidia-imex（Imex服务是NVIDIA Internode内存交换服务）</span><br>root@deepseek2:/opt/code_repos/nvbandwidth# apt install nvidia-imex<br>root@deepseek2:/opt/code_repos/nvbandwidth# systemctl enable nvidia-imex<br>root@deepseek2:/opt/code_repos/nvbandwidth# systemctl start nvidia-imex.service <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 NUMA 开发库：libnuma-dev</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# apt install libnuma-dev<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装MPI（https://www.mpich.org/static/downloads/4.2.3/）</span><br>root@deepseek2:/opt/installPkgs# wget https://www.mpich.org/static/downloads/4.2.3/mpich-4.2.3.tar.gz<br><span class="hljs-meta prompt_">#</span><span class="language-bash">检测系统环境并生成适合当前系统的构建配置，此操作将生成Makefile</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# ./configure --prefix=/usr/local/mpich-4.2.3<br><span class="hljs-meta prompt_">#</span><span class="language-bash">编译</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# make -j$(nproc)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# make install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将mpirun可执行文件路径添加到PATH中</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# vi /root/.bashrc<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在文件最后添加如下内容</span><br>export PATH=/usr/local/mpich-4.2.3/bin:$PATH<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载上述文件</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# source /root/.bashrc<br><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3# cd examples/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">mpi接口对hellow.c进行编译</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3/examples# mpicc  hellow.c -o hellow<br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行hellow文件“mpirun -np N ./hellow”，将其中的N换成自定义进程数比如3</span><br>root@deepseek2:/opt/installPkgs/mpich-4.2.3/examples# mpirun -np 3 ./hellow<br>Hello world from process 0 of 3<br>Hello world from process 1 of 3<br>Hello world from process 2 of 3<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@deepseek2:/opt/code_repos/nvbandwidth# cmake -DMULTINODE=1 .<br>root@deepseek2:/opt/code_repos/nvbandwidth# make<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NVIDIA生态</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nvidia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI生成短视频</title>
    <link href="/2025/04/01/AI%E7%94%9F%E6%88%90%E7%9F%AD%E8%A7%86%E9%A2%91/"/>
    <url>/2025/04/01/AI%E7%94%9F%E6%88%90%E7%9F%AD%E8%A7%86%E9%A2%91/</url>
    
    <content type="html"><![CDATA[<h1 id="一可免费使用生成视频的网站">一、可免费使用生成视频的网站</h1><ul><li>通义万相：https://tongyi.aliyun.com/wanxiang/videoCreation，通义万相可以覆盖大部分场景下的创作</li><li>跃阶视频：https://yuewen.cn/videos</li><li>海螺ai：https://hailuoai.com/video</li><li>即梦ai：https://jimeng.jianying.com/ai-tool/home，擅长于调整音色</li><li>可灵：https://app.klingai.com/cn/image-to-video/frame-mode/new</li></ul><h1 id="二通义万相">二、通义万相</h1><h2 id="文生视频">2.1 文生视频</h2><p>以下是使用通义万相文生成视频的相关截图，生成一个五六秒钟的视频，大概需要三四分钟</p><figure><img src="https://s2.loli.net/2025/04/01/fea8R1FXvKPzHom.png"alt="image-20250401202848905" /><figcaption aria-hidden="true">image-20250401202848905</figcaption></figure><p>生成的带音频的视频效果截图如下：</p><figure><img src="https://s2.loli.net/2025/04/01/hRArvydZLXq1Gg2.png"alt="image-20250401203505503" /><figcaption aria-hidden="true">image-20250401203505503</figcaption></figure><h2 id="文生图">2.2 文生图</h2><figure><img src="https://s2.loli.net/2025/04/01/329M641afjiePKo.png"alt="image-20250401204839596" /><figcaption aria-hidden="true">image-20250401204839596</figcaption></figure><p>最终生成的图片效果如下（原本以为会是跟电影《哪吒》中一样的哪吒形象，但不是）：</p><figure><img src="https://s2.loli.net/2025/04/01/Tdr6yOKJpsbnxuv.png"alt="image-20250401205049965" /><figcaption aria-hidden="true">image-20250401205049965</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>markdown文件中编辑特殊符号与数学公式</title>
    <link href="/2025/03/26/markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E7%BC%96%E8%BE%91%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <url>/2025/03/26/markdown%E6%96%87%E4%BB%B6%E4%B8%AD%E7%BC%96%E8%BE%91%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="一特殊符号">一、特殊符号</h1><p><strong><font color='red'>注：</font></strong>markdown文件中支持HTML语法，所以<ahref="https://tool.chinaz.com/tools/htmlchar.aspx">HTML语法符号</a>也可以用来输出某些特殊符号。</p><h2 id="上下标">2.1 上下标</h2><p>上标：a<sup>2</sup></p><p>下标：a<sub>2</sub></p><h1 id="二数学公式">二、数学公式</h1><p>参考：https://blog.csdn.net/weixin_42782150/article/details/104878759</p><h2 id="字符上面的向上尖括号">字符上面的向上尖括号</h2><p><span class="math display">\[\overset{\wedge}{y}\]</span></p><h2 id="字符上面的标准横线">字符上面的标准横线</h2><p><span class="math display">\[\overline{y}\]</span></p><h2 id="分段函数">分段函数</h2><ul><li>定义函数的时候经常需要分情况给出表达式，使用 {…。其中：<ul><li>（1）使用 来分隔分组；</li><li>（2）使用&amp; 来指示需要对齐的位置；</li><li>（3）使用 + 空格来表示空格；</li><li>（4）如果要使分类之间的垂直间隔变大，可以使用[2ex]代替 来分隔不同的情况。(3ex,4ex 也可以用，1ex 相当于原始距离）。</li></ul></li></ul>$$ y=<span class="math display">\[\begin{cases}-x,\quad x\leq 0\\x, \quad x\gt0\end{cases}\]</span><p>\</p>y=<span class="math display">\[\begin{cases}-x,\quad x\leq 0 \\[2ex]x, \quad x\gt0\end{cases}\tag{1}\]</span><p>$$</p><h2 id="对齐">对齐</h2><p>有时需要将一行公式分多行显示，其中<code>\begin&#123;aligned&#125;</code>表示开始方程，<code>\end&#123;aligned&#125;</code>表示方程结束；使用<code>\\</code>表示公式换行。<code>\begin&#123;gather&#125;</code>表示环境设置。<code>&amp;</code>表示对齐的位置。</p><p>如下展示公式分多行屏幕显示时，以每行的第一个=号对齐。 <spanclass="math display">\[\begin{aligned}J(\mathbf{w})&amp;=\frac{1}{2m}\sum_{i=1}^m(f(\mathbf{x_i})-y_i)^2\\&amp;=\frac{1}{2m}\sum_{i=1}^m[f(\mathbf{x_i})]^2-2f(\mathbf{x_i)}y_i+y_i^2\end{aligned}\]</span> <code>flalign*</code>是专门用于左对齐的LaTeX环境，每行开头需用 <code>&amp;</code>标记对齐位置（通常放在公式最左侧）。 <span class="math display">\[\begin{flalign*}&amp; x = y + z 放在每行开头可实现左对齐放在每行开头可实现左对齐\\&amp; a = b + c \\&amp; 1 + 2 = 3放在每行开头可实现左对齐放在每行开头可实现左对齐放在每行开头可实现左对齐\\\end{flalign*}\\\]</span> <code>aligned</code> 环境通过 <code>&amp;</code>指定对齐点，将 <code>&amp;</code> 放在每行开头可实现左对齐。 <spanclass="math display">\[\begin{aligned}&amp; f(x) = x^2 + 1 \\&amp; \lim_{x \to 0} \frac{\sin x}{x} = 1 放在每行开头可实现左对齐\\&amp; \int_0^1 x \, dx = \frac{1}{2}放在每行开头可实现左对齐放在每行开头可实现左对齐放在每行开头可实现左对齐\end{aligned}\]</span></p><h2 id="公式编号">公式编号</h2><p>同一个公式框中，只能使用一次<code>\tag</code>符号 <spanclass="math display">\[x^2+y^2=z^2 \tag{1$&#39;$}\\\]</span></p><p><span class="math display">\[x^2+y^2=z^2 \tag{*}\]</span></p><p><span class="math display">\[x^5+y^5=z^5 \tag*{*}\]</span></p><h2 id="向量">向量</h2><table><thead><tr><th>数学算式</th><th>Markdown公式</th><th>核心语法</th></tr></thead><tbody><tr><td><span class="math inline">\(\vec{a}\)</span></td><td><code>\vec&#123;a&#125;</code></td><td>向量使用 <code>\vec&#123;a&#125;</code></td></tr><tr><td><span class="math inline">\(J(\mathbf{w})\)</span></td><td><code>J(\mathbf&#123;w&#125;)</code></td><td>向量使用 <code>\mathbf&#123;w&#125;</code></td></tr></tbody></table><p><span class="math display">\[\vec{a}\\\text{或}\\\mathbf{a}\]</span></p><h2 id="矩阵">矩阵</h2><p>使用markdown写矩阵：<ahref="https://blog.csdn.net/qq_38228254/article/details/79469727">使用markdown写矩阵</a></p><p>如下是一个3阶单位矩阵： <span class="math display">\[\left[\begin{matrix}   1 &amp; 0 &amp; 0 \\   0 &amp; 1 &amp; 0 \\   0 &amp; 0 &amp; 1  \end{matrix}\right]\]</span></p><h2 id="行列式">行列式</h2><p>行列式的行列必须一样大，因为行列式仅针对方阵（即行数和列数相等的矩阵）定义。<span class="math display">\[\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\\vdots &amp; \ddots &amp;        &amp; \vdots \\a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} \\\end{vmatrix}=\sum_{j_1j_2...j_n}^{}(-1)^{τ(j_1j_2...j_n)}a_{1j_1}a_{2j_2}...a_{nj_n}\]</span></p>]]></content>
    
    
    <categories>
      
      <category>工具与奇技淫巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具与奇技淫巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LLaMAFactory中进行模型微调</title>
    <link href="/2025/03/24/LlamaFactory%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/"/>
    <url>/2025/03/24/LlamaFactory%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/</url>
    
    <content type="html"><![CDATA[<h1 id="一安装llamafactory环境">一、安装LLaMAFactory环境</h1><p>以下是在ubuntu20.04 LTS环境上进行操作。</p><h2 id="安装python虚拟环境">安装python虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-registry:~# wget --user-agent=&quot;Mozilla&quot; https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh<br>root@ksp-registry:~# bash Anaconda3-2024.06-1-Linux-x86_64.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##anaconda的安装目录是/root/anaconda3</span></span><br>...<br>You can undo this by running `conda init --reverse $SHELL`? [yes|no]<br>[no] &gt;&gt;&gt; yes<br>...<br>You can undo this by running `conda init --reverse $SHELL`? [yes|no]<br>[no] &gt;&gt;&gt; yes<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载~/.bashrc</span><br>root@ksp-registry:~# source ~/.bashrc<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>root@ksp-registry:~# conda env list<br><br>root@ksp-registry:~# conda create -n llamafactory python=3.12<br></code></pre></td></tr></table></figure><h2 id="cuda安装">CUDA安装</h2><p>假设NVIDIA驱动已经安装好。接下来下载合适版本的CUDA安装文件：https://developer.nvidia.com/cuda-toolkit-archive，以下是下载与安装cuda的步骤：</p><figure><img src="https://s2.loli.net/2025/05/30/KW8epbiRvZdyXrL.png"alt="image-20250530094620001" /><figcaption aria-hidden="true">image-20250530094620001</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/30/eBrq6TUCgP2bJyj.png"alt="image-20250530094925281" /><figcaption aria-hidden="true">image-20250530094925281</figcaption></figure><hr /><p>笔者NVIDIA驱动版本是，已经安装CUDA12.4</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2024 NVIDIA Corporation<br>Built on Thu_Mar_28_02:18:24_PDT_2024<br>Cuda compilation tools, release 12.4, V12.4.131<br>Build cuda_12.4.r12.4/compiler.34097967_0<br></code></pre></td></tr></table></figure><h2 id="llamafactory安装">LLaMAFactory安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">(llamafactory) root@ksp-registry:/opt/code_repos# git clone --depth 1 https://github.com/hiyouga/LLaMA-Factory.git<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果上述github仓库访问失败，可以使用 https://gitee.com/sy-jiang/LLaMA-Factory.git</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改pip安装源</span><br>(llamafactory) root@ksp-registry:/opt/code_repos# mkdir /root/.pip<br>(llamafactory) root@ksp-registry:/opt/code_repos# tee /root/.pip/pip.conf &lt;&lt;EOF<br>[global]<br>trusted-host = mirrors.aliyun.com<br>index-url = https://mirrors.aliyun.com/pypi/simple<br>EOF<br><br>(llamafactory) root@ksp-registry:/opt/code_repos# cd LLaMA-Factory<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 LLaMA-Factory 及其依赖</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# pip install -e &quot;.[torch,metrics]&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中重要的python库版本</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">torch==2.6.0 transformers==4.50.0</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令执行后，并没有成功安装metrics这一python库，执行如下命令再次安装</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# pip install metrics<br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# pip show metrics<br><span class="hljs-meta prompt_">#</span><span class="language-bash">metrics==0.0.2</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#运行以下代码检查 PyTorch 是否编译了 CUDA 支持</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-built_in">print</span>(torch.__version__)  <span class="hljs-comment"># 查看 PyTorch 版本</span><br><span class="hljs-comment">#2.6.0+cu124</span><br><br><span class="hljs-built_in">print</span>(torch.cuda.is_available())  <span class="hljs-comment"># 检查是否支持 CUDA</span><br><span class="hljs-comment">#True</span><br><br><span class="hljs-built_in">print</span>(torch.version.cuda)  <span class="hljs-comment"># 查看编译时的 CUDA 版本</span><br><span class="hljs-comment">#12.4</span><br></code></pre></td></tr></table></figure><h2 id="llama-factory校验">LLaMA-Factory校验</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">校验安装是否成功</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# llamafactory-cli version  <br>----------------------------------------------------------<br>| Welcome to LLaMA Factory, version 0.9.3.dev0           |<br>|                                                        |<br>| Project page: https://github.com/hiyouga/LLaMA-Factory |<br>----------------------------------------------------------<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# llamafactory-cli help<br></code></pre></td></tr></table></figure><h1 id="二命令行使用可选">二、命令行使用（可选）</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装modelscope python库</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# pip install modelscope&gt;=1.11.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用魔搭社区下载模型文件与数据集（很关键）</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# export USE_MODELSCOPE_HUB=1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">文件备份</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# cp examples/train_lora/llama3_lora_sft.yaml examples/train_lora/llama3_lora_sft.yaml.bak<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改examples/train_lora/llama3_lora_sft.yaml，默认的model名或路径是hf中，在modelscope中不一定存在</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# vi examples/train_lora/llama3_lora_sft.yaml <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#model_name_or_path: meta-llama/Meta-Llama-3-8B-Instruct</span></span><br>model_name_or_path: modelscope/Meta-Llama-3-8B-Instruct<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果你不知道微调时使用的yaml文件中要填写的内容，可以先使用llamafactory的webui界面进行操作，（同时webui真正执行微调前可以生成一个预览命令，先从已有文件如llama3_lora_sft.yaml复制一份出来，可以根据预览命令修改复制出来的yaml文件中的配置内容，预览命令中没有的、但yaml文件中有的就保持默认）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动微调（以下展示了微调过程中输出内容的最后几行）</span><br>(llamafactory) root@ksp-registry:/opt/code_repos/LLaMA-Factory# llamafactory-cli train examples/train_lora/llama3_lora_sft.yaml<br>...<br>[INFO|tokenization_utils_base.py:2510] 2025-03-31 16:20:20,622 &gt;&gt; tokenizer config file saved in saves/llama3-8b/lora/sft/tokenizer_config.json<br>[INFO|tokenization_utils_base.py:2519] 2025-03-31 16:20:20,622 &gt;&gt; Special tokens file saved in saves/llama3-8b/lora/sft/special_tokens_map.json<br>***** train metrics *****<br>  epoch                    =     2.9826<br>  total_flos               = 22730138GF<br>  train_loss               =     0.9173<br>  train_runtime            = 0:34:54.13<br>  train_samples_per_second =      1.563<br>  train_steps_per_second   =      0.195<br>Figure saved at: saves/llama3-8b/lora/sft/training_loss.png<br>[WARNING|2025-03-31 16:20:21] llamafactory.extras.ploting:148 &gt;&gt; No metric eval_loss to plot.<br>[WARNING|2025-03-31 16:20:21] llamafactory.extras.ploting:148 &gt;&gt; No metric eval_accuracy to plot.<br>[INFO|modelcard.py:449] 2025-03-31 16:20:21,163 &gt;&gt; Dropping the following result as it does not have all the necessary fields:<br>&#123;&#x27;task&#x27;: &#123;&#x27;name&#x27;: &#x27;Causal Language Modeling&#x27;, &#x27;type&#x27;: &#x27;text-generation&#x27;&#125;&#125;<br></code></pre></td></tr></table></figure><p>如上生成的文件”saves/llama3-8b/lora/sft/training_loss.png“的内容如下：</p><figure><img src="https://s2.loli.net/2025/03/31/76Xi5vWVkSQqhBF.png"alt="image-20250331162458504" /><figcaption aria-hidden="true">image-20250331162458504</figcaption></figure><hr /><p><strong>提示，如下是一个微调DeepSeek-R1-Distill-Qwen-1.5B模型时用到的yaml文件：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">### model</span><br><span class="hljs-attr">model_name_or_path:</span> <span class="hljs-string">deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B</span><br><span class="hljs-attr">image_max_pixels:</span> <span class="hljs-number">262144</span><br><span class="hljs-attr">video_max_pixels:</span> <span class="hljs-number">16384</span><br><span class="hljs-attr">trust_remote_code:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment">### method</span><br><span class="hljs-attr">stage:</span> <span class="hljs-string">sft</span><br><span class="hljs-attr">do_train:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">finetuning_type:</span> <span class="hljs-string">lora</span><br><span class="hljs-attr">lora_rank:</span> <span class="hljs-number">8</span><br><span class="hljs-attr">lora_target:</span> <span class="hljs-string">all</span><br><br><span class="hljs-comment">### dataset</span><br><span class="hljs-attr">dataset:</span> <span class="hljs-string">alpaca_zh_demo</span><br><span class="hljs-attr">template:</span> <span class="hljs-string">deepseekr1</span><br><span class="hljs-attr">cutoff_len:</span> <span class="hljs-number">2048</span><br><span class="hljs-attr">max_samples:</span> <span class="hljs-number">100000</span><br><span class="hljs-attr">overwrite_cache:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">preprocessing_num_workers:</span> <span class="hljs-number">16</span><br><span class="hljs-attr">dataloader_num_workers:</span> <span class="hljs-number">4</span><br><br><span class="hljs-comment">### output</span><br><span class="hljs-attr">output_dir:</span> <span class="hljs-string">saves/DeepSeek-R1-1.5B-Distill/lora/sft</span><br><span class="hljs-attr">logging_steps:</span> <span class="hljs-number">5</span><br><span class="hljs-attr">save_steps:</span> <span class="hljs-number">100</span><br><span class="hljs-attr">plot_loss:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">overwrite_output_dir:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">save_only_model:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">report_to:</span> <span class="hljs-string">none</span>  <span class="hljs-comment"># choices: [none, wandb, tensorboard, swanlab, mlflow]</span><br><br><span class="hljs-comment">### train</span><br><span class="hljs-attr">per_device_train_batch_size:</span> <span class="hljs-number">2</span><br><span class="hljs-attr">gradient_accumulation_steps:</span> <span class="hljs-number">8</span><br><span class="hljs-attr">learning_rate:</span> <span class="hljs-number">0.00005</span><br><span class="hljs-attr">num_train_epochs:</span> <span class="hljs-number">3.0</span><br><span class="hljs-attr">lr_scheduler_type:</span> <span class="hljs-string">cosine</span><br><span class="hljs-attr">warmup_ratio:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">bf16:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">ddp_timeout:</span> <span class="hljs-number">180000000</span><br><span class="hljs-attr">resume_from_checkpoint:</span> <span class="hljs-literal">null</span><br><br><span class="hljs-comment">### eval</span><br><span class="hljs-comment"># val_size: 0.1</span><br><span class="hljs-comment"># per_device_eval_batch_size: 1</span><br><span class="hljs-comment"># eval_strategy: steps</span><br><span class="hljs-comment"># eval_steps: 500</span><br></code></pre></td></tr></table></figure><h1 id="三webui使用">三、WebUI使用</h1><h2 id="启动与使用微调llama-3-8b-instruct">3.1启动与使用（微调Llama-3-8B-Instruct）</h2><p>参考：https://llamafactory.readthedocs.io/zh-cn/latest/getting_started/webui.html、https://github.com/hiyouga/LLaMA-Factory/blob/main/examples/README_zh.md</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用以下命令启动webui</span><br>(llamafactory) root@ksp-registry:~# llamafactory-cli webui<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以在“llamafactory-cli webui”命令前添加一些变量比如CUDA_VISIBLE_DEVICES=0,1,2。此时在web界面设备数量就是3，当然如果不指定此变量，默认也是全部可用加速卡设备的数量3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">(llamafactory) root@ksp-registry:~# CUDA_VISIBLE_DEVICES=0,1,2 llamafactory-cli webuillamafactory-cli webui</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">假如启动此进程的服务器IP是：172.20.0.22，此时在笔记本电脑浏览器地址栏中输入“http://172.20.0.22:7860/” 将看到如下界面与内容</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/24/ZDW4v9IrygLCPpn.png"alt="image-20250324165207061" /><figcaption aria-hidden="true">image-20250324165207061</figcaption></figure><hr /><p>进行微调配置（下图中“检查点路径”无须配置任何值，未注明或显式修改配置项，保持默认即可）：</p><figure><img src="https://s2.loli.net/2025/03/31/ISd847lUOMLDrTg.png"alt="image-20250331165053689" /><figcaption aria-hidden="true">image-20250331165053689</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/31/NygEOVhbctZGdUf.png"alt="image-20250331163655420" /><figcaption aria-hidden="true">image-20250331163655420</figcaption></figure><p>正式开始执行微调后，在当前页面的最底部，将看到日志不断滚动输出，如下：</p><figure><img src="https://s2.loli.net/2025/03/31/xB3cP4GwvirYQXu.png"alt="image-20250331163915582" /><figcaption aria-hidden="true">image-20250331163915582</figcaption></figure><p>微调过程中默认能使用所有能用的GPU卡（参考https://github.com/hiyouga/LLaMA-Factory/blob/main/examples/README_zh.md），如下可以看到微调过程上，笔者的服务器上仅有一个GPU被使用中。</p><figure><img src="https://s2.loli.net/2025/03/31/XawVNkZ4U3BKcFs.png"alt="image-20250331172933559" /><figcaption aria-hidden="true">image-20250331172933559</figcaption></figure><p>在当前目录的“./saves/Llama-3-8B-Instruct/lora/train_2025-03-31-16-27-21”子目录中可以看到相关输出配置信息与微调日志信息。</p><h2 id="微调deepseek-r1-distill-qwen-1.5b">3.2微调DeepSeek-R1-Distill-Qwen-1.5B</h2><ul><li>执行微调</li></ul><figure><img src="https://s2.loli.net/2025/05/30/OTzlocZ3nBdMPVg.png"alt="image-20250530112133627" /><figcaption aria-hidden="true">image-20250530112133627</figcaption></figure><figure><img src="https://s2.loli.net/2025/05/30/Hu2fgFaL4xW6mUp.png"alt="image-20250530112210193" /><figcaption aria-hidden="true">image-20250530112210193</figcaption></figure><ul><li>保存训练参数</li></ul><figure><img src="https://s2.loli.net/2025/05/30/bH49Z8EuVLBvgK1.png"alt="image-20250530112606079" /><figcaption aria-hidden="true">image-20250530112606079</figcaption></figure><p>训练参数保存在如下目录下：</p><figure><img src="https://s2.loli.net/2025/05/30/O94C5twZkmXgLbc.png"alt="image-20250530112657883" /><figcaption aria-hidden="true">image-20250530112657883</figcaption></figure><h2 id="报错处理">3.3 报错处理</h2><h3id="微调unslothqwen2.5-7b-instruct-bnb-4bit模型时报错no-package-metadata-was-found-for-bitsandbytes">3.3.1微调“unsloth/Qwen2.5-7B-Instruct-bnb-4bit”模型时报错“No package metadatawas found for bitsandbytes”</h3><figure><img src="https://s2.loli.net/2025/04/01/sD6I5p24YfVAURO.png"alt="image-20250401105307875" /><figcaption aria-hidden="true">image-20250401105307875</figcaption></figure><figure><img src="https://s2.loli.net/2025/04/01/qDmslY6WQuUHiaR.png"alt="image-20250401105126808" /><figcaption aria-hidden="true">image-20250401105126808</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install bitsandbytes bitsandbytes-cuda117==0.26.0.post2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下面这行命令，笔者未执行成功（暂时忽略，不执行也可）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">pip install transformers[audio,deepspeed,ftfy,onnx,sentencepiece,timm,tokenizers,video,vision]==4.50.0</span><br></code></pre></td></tr></table></figure><h1 id="四使用微调后的模型对话">四、使用微调后的模型对话</h1><p>为了对比微调前后的效果，此处对比它们的对话结果。</p><h2 id="微调前">4.1 微调前</h2><ul><li>微调前加载模型</li></ul><figure><img src="https://s2.loli.net/2025/05/30/u2rNKWmP3kMp6bS.png"alt="image-20250530162943727" /><figcaption aria-hidden="true">image-20250530162943727</figcaption></figure><p>上述对深圳证通电子公司的介绍的相关回复，就有点乱七八糟了，基本上是不对的！</p><ul><li><p>询问深圳中兴公司的介绍</p><p>LLM的回复大体上还是比较符合实际的，但内容比较繁琐。</p></li></ul><hr /><figure><img src="https://s2.loli.net/2025/05/30/v8AfsMo2XBcpFwh.png"alt="image-20250530163049670" /><figcaption aria-hidden="true">image-20250530163049670</figcaption></figure><p>LLM完整的回复如下：</p><figure><img src="https://s2.loli.net/2025/05/30/AcnMJPdXOsSCi3Q.png"alt="image-20250530163204838" /><figcaption aria-hidden="true">image-20250530163204838</figcaption></figure><h2 id="微调后">4.2 微调后</h2><p>因为此处我此处使用的推荐引擎是 vllm，所以在启动llamafactorywebui服务前，先安装相关python库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">(llamafactory) root@ksp-registry:~<span class="hljs-comment"># pip install vllm==0.8.5</span><br></code></pre></td></tr></table></figure><p>如果已经启动llamafactorywebui服务，安装后重启此服务，再进行如下操作。</p><ul><li>微调后加载模型</li></ul><figure><img src="https://s2.loli.net/2025/05/30/E8W6Z3cDXynCLvM.png"alt="image-20250530163417517" /><figcaption aria-hidden="true">image-20250530163417517</figcaption></figure><ul><li>询问深圳证通电子公司的介绍</li></ul><figure><img src="https://s2.loli.net/2025/05/30/Zzsl3hGIbLNYOTp.png"alt="image-20250530163600544" /><figcaption aria-hidden="true">image-20250530163600544</figcaption></figure><ul><li>询问深圳中兴公司的介绍</li></ul><figure><img src="https://s2.loli.net/2025/05/30/HTiDRuLNc8s23te.png"alt="image-20250530163618426" /><figcaption aria-hidden="true">image-20250530163618426</figcaption></figure><p>可以看到，微调后，对上述两家公司的介绍的相关回复变得更加简洁与正确（相对准确）了。</p><h1 id="五参考资料">五、参考资料</h1><p>https://github.com/hiyouga/LLaMA-Factory/blob/main/README_zh.md</p><p>https://github.com/hiyouga/LLaMA-Factory/blob/main/examples/README_zh.md</p><p>https://llamafactory.readthedocs.io/zh-cn/latest/getting_started/sft.html</p><p>https://zhuanlan.zhihu.com/p/695287607</p><p>https://nvidia.csdn.net/675a7eabf3b8a55e4e980776.html</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Transformer模型中专业名词</title>
    <link href="/2025/03/22/Transformer%E6%A8%A1%E5%9E%8B%E4%B8%AD%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/"/>
    <url>/2025/03/22/Transformer%E6%A8%A1%E5%9E%8B%E4%B8%AD%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="词元token">1.<strong>词元（Token）</strong></h1><p>是输入文本经过分词后的离散符号，表示模型处理的最小单位。</p><ul><li><p><strong>定义</strong>：词元是输入文本经过<strong>分词（Tokenization）</strong>后得到的基本单位。它可以是单词、子词（Subword）或字符，具体取决于使用的分词方法。</p></li><li><p><strong>作用</strong>：词元是模型处理的最小单位，用于将文本转换为模型可以理解的离散符号。</p></li><li><p><strong>示例</strong>：</p><ul><li>对于句子 <code>"I love NLP."</code>，使用空格分词后，词元可能是<code>["I", "love", "NLP", "."]</code>。</li><li>使用子词分词（如 BPE）后，词元可能是<code>["I", "love", "NL", "##P", "."]</code>。</li></ul></li></ul><h1 id="词向量word-embedding">2.<strong>词向量（WordEmbedding）</strong></h1><p>是词元经过嵌入层后的连续向量表示，用于捕捉词元的语义信息。</p><p><img src="https://s2.loli.net/2025/03/23/Zy6JTWw2jKEsHVl.png" alt="image-20250323113236973" style="zoom:67%;" /></p><ul><li><p><strong>作用</strong>：词向量将离散的词元转换为连续的数值表示，便于模型进行计算和学习。</p></li><li><p><strong>示例</strong>：</p><ul><li>假设词元 <code>"love"</code> 被映射到一个 3维向量空间，其词向量可能是 <code>[0.2, 0.8, -0.3]</code>。</li><li>词向量通常是通过预训练（如 Word2Vec、GloVe）或模型训练（如Transformer）得到的。</li></ul></li><li><p><strong>词元与词向量的关系</strong></p><ul><li><strong>输入与输出</strong>：<ul><li>词元是模型的输入，表示文本的离散符号。</li><li>词向量是词元经过嵌入层（EmbeddingLayer）后的输出，表示词元的连续向量表示。</li></ul></li><li><strong>转换过程</strong>：<ul><li>在 Transformer 中，输入文本首先被分词为词元。</li><li>然后，词元通过嵌入层被转换为词向量。</li><li>之后词向量作为模型的输入，参与后续的计算（如自注意力机制）。</li></ul></li></ul></li><li><p><strong>示例</strong></p><p>假设输入句子为 <code>"I love NLP."</code>：</p><ul><li><p><strong>词元化</strong>：</p><ul><li>分词结果为 <code>["I", "love", "NLP", "."]</code>。</li></ul></li><li><p><strong>词向量化</strong>：</p><p>每个词元被映射为一个词向量，例如：</p><ul><li><p><code>"I"</code> → <code>[0.1, 0.3, -0.2]</code></p></li><li><p><code>"love"</code> → <code>[0.2, 0.8, -0.3]</code></p></li><li><p><code>"NLP"</code> → <code>[0.4, -0.1, 0.5]</code></p></li><li><p><code>"."</code> → <code>[-0.1, 0.0, 0.1]</code></p></li></ul></li></ul></li></ul><h1 id="旋转矩阵等相关">3.旋转矩阵等相关</h1><p>旋转矩阵、索引为i的旋转矩阵、索引为i的旋转矩阵与索引为j的旋转矩阵转置相乘？</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu2004安装maven制作容器镜像</title>
    <link href="/2025/03/21/Ubuntu2004%E5%AE%89%E8%A3%85maven%E5%88%B6%E4%BD%9C%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/"/>
    <url>/2025/03/21/Ubuntu2004%E5%AE%89%E8%A3%85maven%E5%88%B6%E4%BD%9C%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="一安装配置maven">一、安装配置maven</h1><p>访问maven官网：https://archive.apache.org/dist/maven/maven-3/</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载</span><br>root@dify:/opt/instakkPkgs# wget https://archive.apache.org/dist/maven/maven-3/3.8.3/binaries/apache-maven-3.8.3-bin.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压</span><br>root@dify:/opt/instakkPkgs# mkdir /opt/maven  <br>root@dify:/opt/instakkPkgs# tar xzvf apache-maven-3.8.1-bin.tar.gz -C /opt/maven<br>root@dify:/opt/instakkPkgs# cd /opt/maven/apache-maven-3.8.1/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置阿里镜像</span><br>root@dify:/opt/maven/apache-maven-3.8.1# vi conf/settings.xml<br>...<br>146   &lt;mirrors&gt;<br>147     &lt;!-- mirror<br>148      | Specifies a repository mirror site to use instead of a given repository. The repository that<br>149      | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used<br>150      | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.<br>151      |<br>152     &lt;mirror&gt;<br>153       &lt;id&gt;mirrorId&lt;/id&gt;<br>154       &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;<br>155       &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;<br>156       &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;<br>157     &lt;/mirror&gt;<br>158      --&gt;<br>159     &lt;mirror&gt;<br>160       &lt;id&gt;aliyunmaven&lt;/id&gt;<br>161       &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;<br>162       &lt;name&gt;aliyun maven&lt;/name&gt;<br>163       &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;<br>164     &lt;/mirror&gt;<br>165 &lt;!--    &lt;mirror&gt;<br>166       &lt;id&gt;maven-default-http-blocker&lt;/id&gt;<br>167       &lt;mirrorOf&gt;external:http:*&lt;/mirrorOf&gt;<br>168       &lt;name&gt;Pseudo repository to mirror external repositories initially using HTTP.&lt;/name&gt;<br>169       &lt;url&gt;http://0.0.0.0/&lt;/url&gt;<br>170       &lt;blocked&gt;true&lt;/blocked&gt;<br>171     &lt;/mirror&gt;<br>172 --&gt;<br>173   &lt;/mirrors&gt;<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将maven bin目录加入系统PATH</span><br>root@dify:/opt/maven/apache-maven-3.8.1# vi /root/.bashrc <br>export M2_HOME=/opt/maven/apache-maven-3.8.1<br>export PATH=$PATH:$M2_HOME/bin<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载设置的变量</span><br>root@dify:/opt/maven/apache-maven-3.8.1# source /root/.bashrc <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">验证</span><br>Apache Maven 3.8.1 (05c21c65bdfed0f71a2f2ada8b84da59348c4c5d)<br>Maven home: /opt/maven/apache-maven-3.8.1<br>Java version: 11.0.25, vendor: Oracle Corporation, runtime: /usr/local/jdk-11.0.25<br>Default locale: en, platform encoding: UTF-8<br>OS name: &quot;linux&quot;, version: &quot;5.15.0-102-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;<br></code></pre></td></tr></table></figure><h1 id="二制作容器镜像">二、制作容器镜像</h1>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s云原生</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nvidia-smi相关命令执行时输出内容</title>
    <link href="/2025/03/20/nvidia-smi%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%97%B6%E8%BE%93%E5%87%BA%E5%86%85%E5%AE%B9/"/>
    <url>/2025/03/20/nvidia-smi%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%97%B6%E8%BE%93%E5%87%BA%E5%86%85%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文档">一、参考文档</h1><p>docs.nvidia.com官方文档关于nvidia-smi的解释：https://docs.nvidia.com/deploy/nvidia-smi/</p><h1 id="二简介">二、简介</h1><p>nvidia-smi，全称NVIDIA System ManagementInterface，简称NVSMI，是为Fermi和更高架构的Tesla、Quadro、GRID和GeForce设备提供监控和管理功能（如开启或关闭GPU的ECC模式）的工具。GeForceTitan系列设备支持大多数功能，但为GeForce品牌的其他功能提供的信息非常有限。NVSMI是一个跨平台工具，支持所有标准的NVIDIA驱动程序支持的Linux发行版，以及从WindowsServer 2008R2开始的64位Windows版本。用户可以通过stdout直接使用指标，也可以通过CSV和XML格式的文件提供指标，以供脚本使用。</p><p>NVSMI的大部分功能都是由底层基于C语言的NVML库提供的。有关NVML的更多信息，参阅NVIDIA开发者网站链接（<em>http://developer.nvidia.com/nvidia-management-library-nvml/</em>）。也可以使用基于nvml的python绑定（<em>http://pypi.python.org/pypi/nvidia-ml-py/</em>）。</p><p>NVSMI的输出不能保证是向后兼容的。但是，NVML和Python绑定都是向后兼容的，在编写任何必须维护多个NVIDIA驱动程序发行版的工具时，它是首选。</p><h1 id="三nvidia-smi命令使用">三、nvidia-smi命令使用</h1><p>nvidia-smi命令的选项， 划分为不同的类别，如“LISTOPTIONS”（包含-L、-B）、"SUMMARY OPTIONS"（-i等）、“SELECTIVE QUERYOPTIONS”（含-q等）、“DEVICE MODIFICATIONOPTIONS”（所有以“--query”开头选项，如--query-gpu），还有“DEVICEMODIFICATIONOPTIONS”等多个类别。可通过如下命令查看：<code>nvidia-smi --help</code></p><h2 id="nvidia-smi">3.1 nvidia-smi</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help<br><br>(kt) root@ksp-registry:~# nvidia-smi <br>Thu Mar 20 11:08:24 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A40                     Off |   00000000:C1:00.0 Off |                    0 |<br>|  0%   46C    P0             77W /  300W |   10376MiB /  46068MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|    0   N/A  N/A     28419      C   python                                      10368MiB |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">Thu Mar 20 11:08:24 2025    表示查询时的日期与时间<br>NVIDIA-SMI 550.54.15        当前安装的 NVIDIA 驱动程序的版本号，格式为：主版本号.次版本号.修订号<br>Driver Version: 550.54.15   表示 NVIDIA 驱动程序的版本号，与前面内容一致<br>CUDA Version: 12.4          建议的cuda版本号，格式为：主版本号.次版本号<br><br>GPU:            整型数字，是GPU在当前服务器上的编号，从0开始<br>Name:           GPU的名字，显示的是GPU型号（如NVIDIA A40、Tesla V100-PCIE...）<br>Persistence-M：  持续模式的状态。设置后马上生效，重启后恢复成默认的Disabled即off状态，仅在Linux上可用。<br>                 持久模式是一种 NVIDIA GPU 的功能，用于控制 GPU 的电源管理行为。当持久模式启用时，GPU 会始终保持初始化状                    态，即使没有正在运行的 GPU 任务。禁用持久模式后，GPU 在空闲时会进入低功耗状态，重新启动任务时需要重新初始                    化， 这会增加延迟。启用持久模式可以避免这种延迟。<br>Fan：                   风扇转速（0%--100%），N/A表示没有风扇<br>Temp：                  GPU温度（GPU温度过高会导致GPU频率下降）<br>Perf：                  性能状态，从P0（最高性能）到P12（最低性能）。它会根据 GPU 负载、功耗限制和温度自动调整。<br>Pwr:Usage/Cap           GPU功耗，显示当前 GPU 的功耗和功耗上限<br><br>Bus-Id：        GPU总线，domain:bus:device.function<br>Disp.A：        Display Active，表示GPU 是否正在运行显示任务，例如是否连接了显示器。<br>Memory-Usage：  显存使用率<br><br>Volatile Uncorr. ECC：    是否开启错误检查和纠正技术，0/DISABLED, 1/ENABLED。N/A 表示这个 GPU 不支持 ECC 或者没                                 有启用 ECC。<br>GPU-Util:                 GPU使用率，0% 表示 GPU 目前在空闲状态。<br>Compute M.：              计算模式，0/DEFAULT,1/EXCLUSIVE_PROCESS,2/PROHIBITED。默认模式表示任何人都可以启动                                  GPU 计算任务。在其他模式下，只有特定用户或进程可以启动计算任务。<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#Processes 部分显示了 当前正在使用 GPU 的进程信息。比如哪些进程正在占用 GPU 资源，以及它们的使用情况</span></span><br>GPU             GPU 的 ID（如果有多个 GPU，第一个GPU的编号从 0 开始，显示当前进程所使用的GPU-id）<br>GI             GPU Instance ID（GPU 实例 ID，通常用于 MIG 多实例 GPU），未用MIG时显示 N/A<br>CI             Compute Instance ID（计算实例 ID，通常用于 MIG 多实例 GPU），未用MIG时显示 N/A<br>PID             进程 ID（Process ID），表示正在使用 GPU 的进程的操作系统进程 ID<br>Type         进程类型：<br>                    - C：Compute 计算进程<br>                    - G：Graphics 图形进程<br>                    - C+G：同时使用计算和图形<br>Process name   进程的名称或路径，表示正在使用 GPU 的进程的名称。可能只显示进程中第一个空格之间的内容<br>GPU Memory Usage进程占用的 GPU 显存大小（以 MiB 为单位）。<br></code></pre></td></tr></table></figure><h2 id="query-options">3.2 QUERY OPTIONS</h2><h3 id="nvidia-smi--q--xxx">3.2.1 nvidia-smi -q -xxx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果不再加其他参数，如下命令会将GPU的所有详细信息全部查询并输出到控制台</span><br>nvidia-smi -q<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看nvidia-smi 命令的用法</span><br>(kt) root@ksp-registry:/opt# nvidia-smi -h | more                <br>NVIDIA System Management Interface -- v550.54.15<br><br>NVSMI provides monitoring information for Tesla and select Quadro devices.<br>The data is presented in either a plain text or an XML format, via stdout or a file.<br>NVSMI also provides several management operations for changing the device state.<br><br>Note that the functionality of NVSMI is exposed through the NVML C-based<br>library. See the NVIDIA developer website for more information about NVML.<br>Python wrappers to NVML are also available.  The output of NVSMI is<br>not guaranteed to be backwards compatible; NVML and the bindings are backwards<br>compatible.<br><br>http://developer.nvidia.com/nvidia-management-library-nvml/<br>http://pypi.python.org/pypi/nvidia-ml-py/<br>Supported products:<br>- Full Support<br>    - All Tesla products, starting with the Kepler architecture<br>    - All Quadro products, starting with the Kepler architecture<br>    - All GRID products, starting with the Kepler architecture<br>    - GeForce Titan products, starting with the Kepler architecture<br>- Limited Support<br>    - All Geforce products, starting with the Kepler architecture<br>nvidia-smi [OPTION1 [ARG1]] [OPTION2 [ARG2]] ...<br><br>    -h,   --help                Print usage information and exit.<br><br>          --version             Print version information and exit.<br><br>  LIST OPTIONS:<br><br>    -L,   --list-gpus           Display a list of GPUs connected to the system.<br><br>    -B,   --list-excluded-gpus  Display a list of excluded GPUs in the system.<br><br>  SUMMARY OPTIONS:<br><br>    &lt;no arguments&gt;              Show a summary of GPUs connected to the system.<br><br>    [plus any of]<br><br>    -i,   --id=                 Target a specific GPU.<br>    -f,   --filename=           Log to a specified file, rather than to stdout.<br>    -l,   --loop=               Probe until Ctrl+C at specified second interval.<br><br>  QUERY OPTIONS:<br><br>    -q,   --query               Display GPU or Unit info.<br><br>    [plus any of]<br><br>    -u,   --unit                Show unit, rather than GPU, attributes.<br>    -i,   --id=                 Target a specific GPU or Unit.<br>    -f,   --filename=           Log to a specified file, rather than to stdout.<br>    -x,   --xml-format          Produce XML output.<br>          --dtd                 When showing xml output, embed DTD.<br>    -d,   --display=            Display only selected information: MEMORY,<br>                                    UTILIZATION, ECC, TEMPERATURE, POWER, CLOCK,<br>                                    COMPUTE, PIDS, PERFORMANCE, SUPPORTED_CLOCKS,<br>                                    PAGE_RETIREMENT, ACCOUNTING, ENCODER_STATS,<br>                                    SUPPORTED_GPU_TARGET_TEMP, VOLTAGE, FBC_STATS<br>                                    ROW_REMAPPER, RESET_STATUS, GSP_FIRMWARE_VERSION<br>                                Flags can be combined with comma e.g. ECC,POWER.<br>                                Sampling data with max/min/avg is also returned <br>                                for POWER, UTILIZATION and CLOCK display types.<br>                                Doesn&#x27;t work with -u or -x flags.<br>    -l,   --loop=               Probe until Ctrl+C at specified second interval.<br><br>    -lms, --loop-ms=            Probe until Ctrl+C at specified millisecond interval.<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">-d参数 指定要输出GPU哪些信息，如下为ECC与POWER，多个指标间中英文逗号连接</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-f参数 指定查询结果输出到某个文件中，而不是标准输出即控制台</span><br>(kt) root@ksp-registry:/opt# nvidia-smi -q -d ECC,POWER -f test01<br>(kt) root@ksp-registry:/opt# cat test01 <br><br>==============NVSMI LOG==============<br><br>Timestamp                                 : Thu Mar 20 15:28:46 2025<br>Driver Version                            : 550.54.15<br>CUDA Version                              : 12.4<br><br>Attached GPUs                             : 1<br>GPU 00000000:C1:00.0<br>    ECC Mode<br>        Current                           : Enabled<br>        Pending                           : Enabled<br>    ECC Errors<br>        Volatile<br>            SRAM Correctable              : 0<br>            SRAM Uncorrectable Parity     : 0<br>            SRAM Uncorrectable SEC-DED    : 0<br>            DRAM Correctable              : 0<br>            DRAM Uncorrectable            : 0<br>        Aggregate<br>            SRAM Correctable              : 0<br>            SRAM Uncorrectable Parity     : 0<br>            SRAM Uncorrectable SEC-DED    : 0<br>            DRAM Correctable              : 0<br>            DRAM Uncorrectable            : 0<br>            SRAM Threshold Exceeded       : No<br>        Aggregate Uncorrectable SRAM Sources<br>            SRAM L2                       : 0<br>            SRAM SM                       : 0<br>            SRAM Microcontroller          : 0<br>            SRAM PCIE                     : 0<br>            SRAM Other                    : 0<br>    GPU Power Readings<br>        Power Draw                        : 21.68 W<br>        Current Power Limit               : 300.00 W<br>        Requested Power Limit             : 300.00 W<br>        Default Power Limit               : 300.00 W<br>        Min Power Limit                   : 100.00 W<br>        Max Power Limit                   : 300.00 W<br>    Power Samples<br>        Duration                          : 117.96 sec<br>        Number of Samples                 : 119<br>        Max                               : 26.65 W<br>        Min                               : 21.49 W<br>        Avg                               : 21.75 W<br>    GPU Memory Power Readings <br>        Power Draw                        : N/A<br>    Module Power Readings<br>        Power Draw                        : N/A<br>        Current Power Limit               : N/A<br>        Requested Power Limit             : N/A<br>        Default Power Limit               : N/A<br>        Min Power Limit                   : N/A<br>        Max Power Limit                   : N/A<br>        <br><span class="hljs-meta prompt_">#</span><span class="language-bash">还可以将查询结果以xml格式输出，但POWER, UTILIZATION and CLOCK不能输出为xml文件或者与-u一起使用</span><br>nvidia-smi -q -x -f test01<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##一些常用命令</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">1)输出第0个GPU的详细信息</span><br>nvidia-smi -q -i 0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2)显示单元，而不是device, DTD 信息</span><br>(kt) root@ksp-registry:/opt# nvidia-smi -q -u<br>==============NVSMI LOG==============<br><br>Timestamp                                 : Thu Mar 20 15:46:29 2025<br>Driver Version                            : 550.54.15<br>CUDA Version                              : 12.4<br><br>HIC Info                                  : N/A<br>Attached Units                            : 0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3）第隔一段时间查询一次GPU信息，如下是5（单位默认是秒）</span><br>nvidia-smi -q -i 0 -l 5<br>nvidia-smi -q -i 0 -lms 500   #500毫秒<br><span class="hljs-meta prompt_">#</span><span class="language-bash">也可以将-l与-f参数结合起来使用，实现定期查询某GPU的情况并将查询结果重定向到某文件中</span><br>nvidia-smi -q -i 0 -l 5 -f ./gpu0.log<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4)只查询GPU某些指标（具体支持的指标通过如下命令查询：nvidia-smi --<span class="hljs-built_in">help</span> | egrep -w <span class="hljs-string">&quot;\-d&quot;</span> -A 10）</span><br>nvidia-smi -q -d ECC,POWER -f test01<br>nvidia-smi -q -i 0 -l 5 -d PIDS,MEMORY,UTILIZATION -f ./gpu0.log<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">5)</span><br></code></pre></td></tr></table></figure><h2 id="selective-query-options">3.3 SELECTIVE QUERY OPTIONS</h2><h3 id="nvidia-smi---query-gpu">3.3.1 nvidia-smi --query-gpu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">此叫做SELECTIVE QUERY OPTIONS 选择性查询选项，能够指定需要查询的具体指标与属性</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看nvidia-smi --query-gpu的帮助文档</span><br>(kt) root@ksp-registry:~# nvidia-smi --help-query-gpu<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">具体--query-gpu参数有哪些参数值可用，可通过“nvidia-smi --help-query-gpu”获知</span><br>nvidia-smi --query-gpu=gpu_name,driver_version,memory.total,memory.used --format=csv<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中“--format”参数值中一定要包含csv，此外还可以添加其他值（有noheader,nounits）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中noheader表示不打印表头， nounits表示不打印数值的单位</span><br>nvidia-smi --query-gpu=gpu_name,driver_version,memory.total,memory.used --format=csv,noheader<br></code></pre></td></tr></table></figure><h3 id="nvidia-smi---query-compute-apps">3.3.2 nvidia-smi--query-compute-apps</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询当前正在使用 GPU 进行计算任务的应用程序信息</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help-query-compute-apps<br><br>(kt) root@ksp-registry:~# nvidia-smi --query-compute-apps=timestamp,gpu_name,gpu_bus_id,gpu_serial,gpu_uuid,pid,process_name,used_gpu_memory --format=csv<br>timestamp, gpu_name, gpu_bus_id, gpu_serial, gpu_uuid, pid, process_name, used_gpu_memory [MiB]<br>2025/03/22 18:13:47.456, NVIDIA A40, 00000000:C1:00.0, 1320922048526, GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff, 9507, python, 11110 MiB<br></code></pre></td></tr></table></figure><h3 id="nvidia-smi---query-supported-clocks">3.3.3 nvidia-smi--query-supported-clocks</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询 GPU 支持的时钟频率及其组合</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help-query-supported-clocks<br><br>(kt) root@ksp-registry:~# nvidia-smi --query-supported-clocks=timestamp,gpu_name,gpu_bus_id,gpu_serial,gpu_uuid,memory,graphics --format=csv<br></code></pre></td></tr></table></figure><h3 id="nvidia-smi---query-accounted-apps">3.3.4 nvidia-smi--query-accounted-apps</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询启用了 GPU Accounting 功能的系统中，各个应用程序对 GPU 资源的使用情况</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help-query-accounted-apps<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">需要GPU型号支持、GPU驱动版本支持、GPU开启Accounting模式、有进程正在使用GPU</span><br>(self-llm) root@controller01:~# nvidia-smi --query-accounted-apps=timestamp,gpu_name,gpu_bus_id,gpu_serial,gpu_uuid,pid, --format=csv<br>timestamp, gpu_name, gpu_bus_id, gpu_serial, gpu_uuid, pid<br>2025/03/22 18:12:36.487, NVIDIA A40, 00000000:41:00.0, 1320922048169, GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4, 41337<br></code></pre></td></tr></table></figure><h3 id="nvidia-smi---query-retired-pages">3.3.5 nvidia-smi--query-retired-pages</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询已退役的GPU设备内存页列表</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help-query-query-retired-pages<br><br>(kt) root@ksp-registry:~# nvidia-smi --query-retired-pages=gpu_name,retired_pages.timestamp,retired_pages.cause --format=csv<br>gpu_name, retired_pages.timestamp, retired_pages.cause<br>NVIDIA A40, [N/A], Single Bit ECC<br>NVIDIA A40, [N/A], Double Bit ECC<br></code></pre></td></tr></table></figure><h3 id="nvidia-smi---query-remapped-rows">3.3.6 nvidia-smi--query-remapped-rows</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询 GPU 显存中的行重映射信息</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi --help-query-remapped-rows<br><br>(kt) root@ksp-registry:~# nvidia-smi --query-remapped-rows=gpu_name,remapped_rows.correctable,remapped_rows.uncorrectable --format=csv<br>gpu_name, remapped_rows.correctable, remapped_rows.uncorrectable<br>NVIDIA A40, 0, 0<br></code></pre></td></tr></table></figure><h2 id="device-monitoring">3.4 Device Monitoring</h2><h3 id="nvidia-smi-dmon">3.4.1 nvidia-smi dmon</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">是用来查询输出GPU设备（以GPU设备为维度）实时监控信息的工具，会持续输出数据（默认间隔为1秒），直到“ctrl+x”或指定刷新次数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会在标准输出中持续向下以固定的间隔滚动刷新输出</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi dmon --help<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">示例</span><br>(kt) root@ksp-registry:~# nvidia-smi dmon<br><span class="hljs-meta prompt_"># </span><span class="language-bash">gpu    pwr  gtemp  mtemp     sm    mem    enc    dec    jpg    ofa   mclk   pclk</span> <br><span class="hljs-meta prompt_"># </span><span class="language-bash">Idx      W      C      C      %      %      %      %      %      %    MHz    MHz</span> <br>    0     90     48      -     11      8      0      0      0      0   7250   1740 <br>    0     90     48      -     10      7      0      0      0      0   7250   1740 <br>    0     92     48      -     10      7      0      0      0      0   7250   1740 <br>    0     88     48      -      7      5      0      0      0      0   7250   1740 <br>    0     92     48      -      9      6      0      0      0      0   7250   1740 <br>    0     92     49      -     10      7      0      0      0      0   7250   1740 <br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1）-i参数指定被监控的GPU，可以是如下3种值：Idx/PCI bus ID或UUID</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中Idx就是GPU的序号从0开始，UUID是GPU的唯一标识，二者都可通过如下方式查询：nvidia-smi -L</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">PCI bus ID，可以通过如下方式查询：nvidia-smi -q | grep -i <span class="hljs-string">&quot;bus id&quot;</span></span><br>nvidia-smi dmon -i xxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2）-d参数，指定刷新间隔，单位是秒</span><br>nvidia-smi dmon –d xxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3）-c参数，指定刷新次数，然后退出</span><br>nvidia-smi dmon –c xxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4）-s参数，指定查询的监控指标。支持如下指标，可同时使用多个</span><br>[-s | --select]:      One or more metrics [default=puc]<br>                      Can be any of the following:<br>                          p - Power Usage and Temperature<br>                          u - Utilization<br>                          c - Proc and Mem Clocks<br>                          v - Power and Thermal Violations<br>                          m - FB, Bar1 and CC Protected Memory<br>                          e - ECC Errors and PCIe Replay errors<br>                          t - PCIe Rx and Tx Throughput<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如要监控电耗与温度、GPU利用率，则使用如下命令</span><br>nvidia-smi dmon -s pu<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">5）-o参数，在监控信息前显示监控信息的获取日期或时间，D表示日期，T表示时间</span><br>nvidia-smi dmon -s pu -o DT<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">6）-f参数，将查询的监控不输出到标准输出，而是重定向到指定的文件中</span><br>nvidia-smi dmon -s pu -o DT -f gpu0.log<br><br></code></pre></td></tr></table></figure><h3 id="nvidia-smi-pmon">3.4.2 nvidia-smi pmon</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">是用来查询输出使用GPU设备的进程（以进程为维度）实时监控信息的工具，会持续输出数据（默认间隔为1秒），直到“ctrl+x”或指定刷新次数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会在标准输出中持续向下以固定的间隔滚动刷新输出</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档</span><br>nvidia-smi pmon --help<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">示例</span><br>(kt) root@ksp-registry:~# nvidia-smi pmon<br><span class="hljs-meta prompt_"># </span><span class="language-bash">gpu         pid   <span class="hljs-built_in">type</span>     sm    mem    enc    dec    jpg    ofa    <span class="hljs-built_in">command</span></span> <br><span class="hljs-meta prompt_"># </span><span class="language-bash">Idx           <span class="hljs-comment">#    C/G      %      %      %      %      %      %    name</span></span> <br>    0       9507     C      0      0      -      -      -      -    python         <br>    0       9507     C      0      0      -      -      -      -    python         <br>    0       9507     C      0      0      -      -      -      -    python         <br>    0       9507     C      0      0      -      -      -      -    python         <br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">“nvidia-smi pmon”支持的常用参数，与“nvidia-smi dmon”支持的常用参数，基本上是一样的</span><br></code></pre></td></tr></table></figure><h2 id="device-modification-options">3.5 DEVICE MODIFICATIONOPTIONS</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看帮助文档，如下命令执行输出的<span class="hljs-string">&quot;DEVICE MODIFICATION OPTIONS&quot;</span>部分</span><br>nvidia-smi --help<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置持久化模式，0/DISABLED, 1/ENABLED</span><br>nvidia-smi -pm 0/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">切换ECC支持，0/DISABLED, 1/ENABLED</span><br>nvidia-smi –e 0/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重置ECC错误计数，0/VOLATILE, 1/AGGREGATE</span><br>nvidia-smi -p 0/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置GPU计算模式，0/DEFAULT, 1/EXCLUSIVE_THREAD (DEPRECATED),</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2/PROHIBITED, 3/EXCLUSIVE_PROCESS</span><br>nvidia-smi -c xx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置应用在GPU上执行时的时钟频率（GPU支持地时钟频率见nvidia-smi --query-accounted-apps）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">有两个值，分别是&lt;memory,graphics&gt;，分别代表核心时钟频率、显存时钟频率</span><br>nvidia-smi -ac 2000,800<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重置上述时钟频率</span><br>nvidia-smi -rac<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启停GPU的accounting模式，0/DISABLED, 1/ENABLED</span><br>nvidia-smi -ac 0/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启停MIG（需要重启服务器），0/DISABLED, 1/ENABLED</span><br>nvidia-smi -mig 0/1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">...</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NVIDIA生态</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nvidia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>联想Yoga笔记本经typeC线连接显示器无效</title>
    <link href="/2025/03/19/%E8%81%94%E6%83%B3Yoga%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%BB%8FtypeC%E7%BA%BF%E8%BF%9E%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8%E6%97%A0%E6%95%88/"/>
    <url>/2025/03/19/%E8%81%94%E6%83%B3Yoga%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%BB%8FtypeC%E7%BA%BF%E8%BF%9E%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%99%A8%E6%97%A0%E6%95%88/</url>
    
    <content type="html"><![CDATA[<p>自己使用一台联想Yoga 14SIHU 2021笔记本电脑，因为笔记本自带显示屏较小，故平时外接一台显示器来使用。</p><p>最近两天突然出现如下情况，显示器无法正常使用：</p><p>场景1：周一去公司办公，通过数据线将笔记本电脑的typeC接口，连接到显示器1的HDMI接口，显示器一直显示无信号。但显示器开机时可以看到亮灯与输出显示器标识，可以基本断定显示器无问题-&gt;怀疑是数据线的问题，使用同事的数据线也是同样的异常效果-&gt;那么同事可正常使用的数据线到我这里就不可用了，难道是我笔记本电脑接口的问题？因为有任务，白天也没功夫处理了，直接使用了笔记本自带的显示屏。</p><p>场景2：晚上下班，将电脑带回家。自家也有一条数据线与一个显示器，数据线两台都是type-C接口的。将它们连接上后，发现显示器还是没有正常显示笔记本电脑的桌面内容，因为前一天还在正常使用自家的数据线与显示器，所以现在严重怀疑是笔记本电脑type-C接口的的问题了。</p><p>抱着试一下的心态，去网卡搜索下“笔记本电脑 type-c 连接显示器无反应”，看到一篇文章<ahref="https://h30471.www3.hp.com/t5/bi-ji-ben-dian-nao/type-c-kou-wai-jie-xian-shi-qi-tu-ran-mei-fan-ying/td-p/1258469">type-c口外接显示器突然没反应</a>，文中描述了基本一样的问题现象。一位名为“坏坏的笑”的“专家”给出了如下两个方法</p><p>（1）释放静电：关机并拔掉电源适配器，移除全部外接设备，按住电源键并保持30秒再松开，之后，插电源适配器，开机观察。</p><p>（2）BIOS硬重置：关机状态下，同时按 Windows按键 + V按键并保持按住的状态，按电源键开机，Windows + V不要松开。等待一分钟，如果开机有显示，并提示502错误，就表示重置成功。之后如果原来是UEFI引导的系统，就可以直接进入系统。</p><p>自己尝试了方法（1）后，上述问题就不再存在。</p><p>在网上继续稍微学习了下：静电是由于设备内部或外部摩擦、感应等原因积累的电荷，如果不及时释放，可能会导致设备故障或损坏。那么笔记本电脑在日常使用中通常又不需要释放静电呢？这是因为现代笔记本电脑在设计上已经采取了多种措施来防止静电积累和静电放电（ESD）的影响。然而，偶尔需要释放静电的情况通常是由于某些特殊条件或意外情况导致的。</p><p>还有一种释放笔记本静电的方法：先把笔记本关机拔掉电源与所有外接设备，然后在笔记本关机后接上电源适配器但不插电这时候笔记本背后的灯（前提是需要有灯。但有些笔记本电脑背后没有这样的灯）如果亮了一下，那么就说明静电释放了。（如果笔记本电脑背后没有这样的灯，就如下操作）然后再直接开机就算还有残余的静电，也会随着电源适配器导掉</p>]]></content>
    
    
    <categories>
      
      <category>硬件问题与故障</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记本电脑</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu2204安装jdk11</title>
    <link href="/2025/03/19/Ubuntu2204%E5%AE%89%E8%A3%85jdk11/"/>
    <url>/2025/03/19/Ubuntu2204%E5%AE%89%E8%A3%85jdk11/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">x86 ubuntu20 LTS上二进制文件安装</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载安装文件：https://www.oracle.com/java/technologies/javase/jdk11-archive-downloads.html</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压安装文件，解压过程就是安装过程的一部分，解压后的文件就是后面要运行的二进制文件。建议解压到特定目录如：/usr/local/</span><br>root@dify:/opt/installPkgs# tar -zxf jdk-11.0.25_linux-x64_bin.tar.gz -C /usr/local/<br>root@dify:/opt/installPkgs# ls -al /usr/local/jdk-11.0.25<br>total 44<br>drwxr-xr-x  9 root  root  4096 Mar 19 09:24 .<br>drwxr-xr-x 11 root  root  4096 Mar 19 09:24 ..<br>-r--r--r--  1 10668 10668  160 Sep 30 05:32 README.html<br>drwxr-xr-x  2 root  root  4096 Mar 19 09:24 bin<br>drwxr-xr-x  4 root  root  4096 Mar 19 09:24 conf<br>drwxr-xr-x  3 root  root  4096 Mar 19 09:24 include<br>drwxr-xr-x  2 root  root  4096 Mar 19 09:24 jmods<br>drwxr-xr-x 72 root  root  4096 Mar 19 09:24 legal<br>drwxr-xr-x  6 root  root  4096 Mar 19 09:24 lib<br>drwxr-xr-x  3 root  root  4096 Mar 19 09:24 man<br>-rw-r--r--  1 10668 10668 1314 Sep 30 05:32 release<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置Java环境</span><br>root@dify:/opt/installPkgs# vi /etc/profile<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在此文件的最后添加如下内容</span><br>export JAVA_HOME=/usr/local/jdk-11.0.25<br>export JRE_HOME=$&#123;JAVA_HOME&#125;/jre<br>export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib<br>export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用配置文件</span><br>root@dify:/opt/installPkgs# source /etc/profile<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">检查Java版本</span><br>root@dify:/opt/installPkgs# java -version<br>java 11.0.25 2024-10-15 LTS<br>Java(TM) SE Runtime Environment 18.9 (build 11.0.25+9-LTS-256)<br>Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.25+9-LTS-256, mixed mode)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dify0.15.3学习01_使用docker-compose部署</title>
    <link href="/2025/03/17/Dify0.15.3%E5%AD%A6%E4%B9%A001_%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2/"/>
    <url>/2025/03/17/Dify0.15.3%E5%AD%A6%E4%B9%A001_%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文档">一、参考文档</h1><p>https://github.com/langgenius/dify/tree/0.15.3</p><p>https://github.com/langgenius/dify/tree/0.15.3/docker</p><h1 id="二环境与规划">二、环境与规划</h1><table><thead><tr><th>主机名</th><th>用途</th><th>IP</th><th>root用户密码</th><th>规格</th><th>系统盘</th><th>OS</th><th>备注</th></tr></thead><tbody><tr><td>dify</td><td>dify、ai-to-pptx-backend</td><td>10.12.62.32</td><td>cloud@2020</td><td>8c16g</td><td>500G</td><td>Ubuntu 22.04.3 LTS-amd64</td><td>联网</td></tr></tbody></table><p>此文档使用docker-compose的方式来部署dify</p><h1 id="三部署步骤">三、部署步骤</h1><h2 id="下载安装源码">3.1 下载安装源码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@dify:~# mkdir /opt/code_repos<br>root@dify:~# cd /opt/code_repos/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果太慢或一直拉取失败就先导入到gitee中再拉取(git <span class="hljs-built_in">clone</span> -b 0.15.3 https://gitee.com/sy-jiang/dify.git)</span><br>root@dify:/opt/code_repos# git clone -b 0.15.3 https://github.com/langgenius/dify.git<br></code></pre></td></tr></table></figure><h2 id="安装docker">3.2 安装Docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖组件</span><br>root@dify:~# apt install apt-transport-https ca-certificates curl gnupg lsb-release<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">从阿里云镜像站下载 Docker CE 的 GPG 密钥，并将其添加到系统的 APT 密钥链中</span><br>root@dify:~# curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加阿里云的docker-ce安装源，比默认使用的官方安装源要快些</span><br>root@dify:~# add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行安装docker-ce</span><br>root@dify:~# apt-get install docker-ce docker-ce-cli containerd.io<br>root@dify:~# vi /etc/docker/daemon.json <br>&#123;<br>    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>    &quot;dns&quot;: [<br>        &quot;223.5.5.5&quot;,<br>        &quot;223.6.6.6&quot;,<br>        &quot;202.103.0.68&quot;,<br>        &quot;8.8.8.8&quot;<br>    ],<br>    &quot;log-opts&quot;: &#123;<br>        &quot;max-file&quot;: &quot;5&quot;,<br>        &quot;max-size&quot;: &quot;50m&quot;<br>    &#125;,<br>    &quot;registry-mirrors&quot;: [<br>        &quot;https://hub.rat.dev&quot;,<br>        &quot;https://registry.aliyuncs.com&quot;,<br>        &quot;https://registry.docker-cn.com&quot;,<br>        &quot;https://docker.chenby.cn&quot;,<br>        &quot;https://docker.registry.cyou&quot;,<br>        &quot;https://docker-cf.registry.cyou&quot;,<br>        &quot;https://dockercf.jsdelivr.fyi&quot;,<br>        &quot;https://docker.jsdelivr.fyi&quot;,<br>        &quot;https://dockertest.jsdelivr.fyi&quot;,<br>        &quot;https://dockerproxy.com&quot;,<br>        &quot;https://docker.m.daocloud.io&quot;,<br>        &quot;https://docker.nju.edu.cn&quot;,<br>        &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>        &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>        &quot;https://mirror.iscas.ac.cn&quot;,<br>        &quot;https://docker.rainbond.cc&quot;<br>    ]<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启docker</span><br>root@dify:~# systemctl daemon-reload<br>root@dify:~# systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="安装docker-compose">3.3 安装docker-compose</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@dify:/opt# mkdir /opt/instakkPkgs<br>root@dify:/opt# cd /opt/instakkPkgs/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">直接下载二进制可执行文件</span><br>root@dify:/opt/instakkPkgs# curl -L &quot;https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-linux-$(uname -m)&quot; -o /usr/local/bin/docker-compose<br><span class="hljs-meta prompt_">#</span><span class="language-bash">赋予可执行权限</span><br>root@dify:/opt/instakkPkgs# chmod +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><h2 id="执行部署相关命令">3.4 执行部署相关命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@dify:/opt/code_repos/dify/docker# cp .env.example .env<br>root@dify:/opt/code_repos/dify/docker# cp docker-compose.yaml docker-compose.yaml.bak<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">替换镜像</span><br>root@dify:/opt/code_repos/dify/docker# cat sed-images.sh <br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>sed -i &quot;s#langgenius/dify-api:0.15.3#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-api:0.15.3#g&quot; docker-compose.yaml<br>sed -i &quot;s#langgenius/dify-web:0.15.3#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-web:0.15.3#g&quot; docker-compose.yaml<br>sed -i &quot;s#postgres:15-alpine#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/postgres:15-alpine#g&quot; docker-compose.yaml<br>sed -i &quot;s#redis:6-alpine#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/redis:6-alpine#g&quot; docker-compose.yaml<br>sed -i &quot;s#langgenius/dify-sandbox:0.2.10#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/dify-sandbox:0.2.10#g&quot; docker-compose.yaml<br>sed -i &quot;s#ubuntu/squid:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/ubuntu/squid:latest#g&quot; docker-compose.yaml<br>sed -i &quot;s#certbot/certbot#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/certbot/certbot:v3.2.0#g&quot; docker-compose.yaml<br>sed -i &quot;s#nginx:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/nginx:latest#g&quot; docker-compose.yaml<br>sed -i &quot;s#pingcap/tidb:v8.4.0#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/pingcap/tidb:v8.4.0#g&quot; docker-compose.yaml<br>sed -i &quot;s#semitechnologies/weaviate:1.19.0#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/semitechnologies/weaviate:1.19.0#g&quot; docker-compose.yaml<br>sed -i &quot;s#langgenius/qdrant:v1.7.3#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/langgenius/qdrant:v1.7.3#g&quot; docker-compose.yaml<br>sed -i &quot;s#pgvector/pgvector:pg16#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/pgvector/pgvector:pg16#g&quot; docker-compose.yaml<br>sed -i &quot;s#tensorchord/pgvecto-rs:pg16-v0.3.0#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0#g&quot; docker-compose.yaml<br>sed -i &quot;s#ghcr.io/chroma-core/chroma:0.5.20#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/chroma-core/chroma:0.5.20#g&quot; docker-compose.yaml<br>sed -i &quot;s#quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215#g&quot; docker-compose.yaml<br>sed -i &quot;s#container-registry.oracle.com/database/free:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/container-registry.oracle.com/database/free:latest#g&quot; docker-compose.yaml<br>sed -i &quot;s#quay.io/coreos/etcd:v3.5.5#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/quay.io/coreos/etcd:v3.5.5#g&quot; docker-compose.yaml<br>sed -i &quot;s#minio/minio:RELEASE.2023-03-20T20-16-18Z#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/minio/minio:RELEASE.2023-03-20T20-16-18Z#g&quot; docker-compose.yaml<br>sed -i &quot;s#milvusdb/milvus:v2.5.0-beta#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/milvusdb/milvus:v2.5.0-beta#g&quot; docker-compose.yaml<br>sed -i &quot;s#opensearchproject/opensearch:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/opensearchproject/opensearch:latest#g&quot; docker-compose.yaml<br>sed -i &quot;s#opensearchproject/opensearch-dashboards:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/opensearchproject/opensearch-dashboards:latest#g&quot; docker-compose.yaml<br>sed -i &quot;s#myscale/myscaledb:1.6.4#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/myscale/myscaledb:1.6.4#g&quot; docker-compose.yaml<br>sed -i &quot;s#docker.elastic.co/elasticsearch/elasticsearch:8.14.3#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.elastic.co/elasticsearch/elasticsearch:8.14.3#g&quot; docker-compose.yaml<br>sed -i &quot;s#docker.elastic.co/kibana/kibana:8.14.3#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.elastic.co/kibana/kibana:8.14.3#g&quot; docker-compose.yaml<br>sed -i &quot;s#downloads.unstructured.io/unstructured-io/unstructured-api:latest#swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/downloads.unstructured.io/unstructured-io/unstructured-api:latest#g&quot; docker-compose.yaml<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@dify:/opt/code_repos/dify/docker# bash sed-images.sh<br>root@dify:/opt/code_repos/dify/docker# docker compose up -d<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/17/ynf2WoQtP9xT5hZ.png"alt="image-20250317165600013" /><figcaption aria-hidden="true">image-20250317165600013</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">本人在另外一个服务器上遇到此情况：执行“docker compose up -d”后，docker-weaviate-1容器一直无法正常创建出来</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行如下命令后，创建成功（如果没有此容器，就相当于向量化服务未正常运行，后续知识库上传文件执行向量化时会提示“vector database connection error”）</span><br>root@ksp-registry:/opt/code_repos/dify/docker# docker-compose up weaviate -d <br></code></pre></td></tr></table></figure><h2 id="登录web界面继续部署">登录web界面继续部署</h2><p>浏览器访问：http://10.12.62.32/install</p><p>输入必填的相关信息后，点击设置</p><figure><img src="https://s2.loli.net/2025/03/17/XG8AHsOl1kUZizp.png"alt="image-20250317171057195" /><figcaption aria-hidden="true">image-20250317171057195</figcaption></figure><h1 id="四部署ai-to-pptx-backend">四、部署ai-to-pptx-backend</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@dify:/opt/code_repos# git clone https://gitee.com/sy-jiang/ai-to-pptx-backend.git<br>root@dify:/opt/code_repos# cd ai-to-pptx-backend/<br><br>1 下载镜像: docker pull chatbookai/ai-to-pptx:0.2<br>2 启动镜像: docker run -itd --name ai-to-pptx-backend -p 8080:80 -p 8081:81 chatbookai/ai-to-pptx:0.2<br>3 开始使用: 在浏览器里面输入: http://localhost:8080<br>4 列出镜像: docker ps -a<br>5 进入镜像: docker exec -it &lt;container_name_or_id&gt; /bin/bash<br></code></pre></td></tr></table></figure><h1 id="五部署ai-to-pptx">五、部署ai-to-pptx</h1><p>容器时已经部署前端</p>]]></content>
    
    
    <categories>
      
      <category>AIGC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AIGC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos8-x86_64上安装使用nvidia-docker</title>
    <link href="/2025/03/16/Centos8-x86-64%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8nvidia-docker/"/>
    <url>/2025/03/16/Centos8-x86-64%E4%B8%8A%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8nvidia-docker/</url>
    
    <content type="html"><![CDATA[<h1 id="一说明">一、说明</h1><p>由于一些原因，遇到了在centos8上使用nvidia-docker，以前基本上没使用过，将自己的安装、配置、使用过程记录一下。</p><h1 id="二步骤">二、步骤</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.卸载已有组件</span><br>yum remove docker \<br>  docker-client \<br>  docker-client-latest \<br>  docker-common \<br>  docker-latest \<br>  docker-latest-logrotate \<br>  docker-logrotate \<br>  docker-engine<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2.安装基础组件</span><br>yum install -y yum-utils \<br>  device-mapper-persistent-data \<br>  lvm2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3.配置仓库</span><br>yum-config-manager \<br>  --add-repo \<br>  https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.安装docker-ce*</span><br>yum list docker-ce --showduplicates | sort -r  #查看版本<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装最新版本</span><br>yum install docker-ce docker-ce-cli containerd.io<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果要安装指定版本</span><br>yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">5.启动docker并在不使用GPU时运行容器</span><br>systemctl start docker<br>docker run hello-world 或 docker run swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/hello-world:latest<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">6.安装 nvidia-container-* 包</span><br>yum install -y nvidia-container-toolkit install nvidia-container-runtime<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">7.Docker 守护进程以识别 NVIDIA 容器运行时（关键）</span><br>nvidia-ctk runtime configure --runtime=docker<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">8.修改/etc/docker/daemon.json文件，添加默认运行时为nvidia</span><br>vi /etc/docker/daemon.json<br>&#123;<br>    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>    &quot;dns&quot;: [<br>        &quot;223.5.5.5&quot;,<br>        &quot;223.6.6.6&quot;,<br>        &quot;202.103.0.68&quot;,<br>        &quot;8.8.8.8&quot;<br>    ],<br>    &quot;log-opts&quot;: &#123;<br>        &quot;max-file&quot;: &quot;5&quot;,<br>        &quot;max-size&quot;: &quot;50m&quot;<br>    &#125;,<br>    &quot;registry-mirrors&quot;: [<br>        &quot;https://hub.rat.dev&quot;,<br>        &quot;https://registry.aliyuncs.com&quot;,<br>        &quot;https://registry.docker-cn.com&quot;,<br>        &quot;https://docker.chenby.cn&quot;,<br>        &quot;https://docker.registry.cyou&quot;,<br>        &quot;https://docker-cf.registry.cyou&quot;,<br>        &quot;https://dockercf.jsdelivr.fyi&quot;,<br>        &quot;https://docker.jsdelivr.fyi&quot;,<br>        &quot;https://dockertest.jsdelivr.fyi&quot;,<br>        &quot;https://dockerproxy.com&quot;,<br>        &quot;https://docker.m.daocloud.io&quot;,<br>        &quot;https://docker.nju.edu.cn&quot;,<br>        &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>        &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>        &quot;https://mirror.iscas.ac.cn&quot;,<br>        &quot;https://docker.rainbond.cc&quot;<br>    ],<br>    &quot;default-runtime&quot;: &quot;nvidia&quot;,<br>    &quot;runtimes&quot;: &#123;<br>        &quot;nvidia&quot;: &#123;<br>            &quot;path&quot;: &quot;/usr/local/nvidia/toolkit/nvidia-container-runtime&quot;,<br>            &quot;runtimeArgs&quot;: []<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">9.加载daemon.json文件并重启docker服务</span><br>systemctl daemon-reload<br>systemctl restart docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.创建带NVIDIA GPU的容器</span><br>docker run -itd \<br>  --name ubuntu2204 \<br>  --gpus=&#x27;&quot;device=0,1&quot;&#x27; \<br>  --restart=always \<br>  swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/ubuntu:22.04<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果要使用全部NVIDIA GPU</span><br>docker run -itd \<br>  --name ubuntu2204 \<br>  --gpus all \<br>  --restart=always \<br>  swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/library/ubuntu:22.04<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>nvidia-docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>4✖8✖A800服务器部署满血版DeepSeek-R1-671B步骤</title>
    <link href="/2025/03/14/4%E2%9C%968%E2%9C%96A800%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E6%BB%A1%E8%A1%80%E7%89%88DeepSeek-R1-671B%E6%AD%A5%E9%AA%A4/"/>
    <url>/2025/03/14/4%E2%9C%968%E2%9C%96A800%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E6%BB%A1%E8%A1%80%E7%89%88DeepSeek-R1-671B%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="一服务器及配置信息">一、服务器及配置信息</h1><h2 id="服务器列表">1.1 服务器列表</h2><p>此次用来部署满血版DeepSeek-R1-671B，用到4个物理服务器。每个物理服务器上有8个NVIDIAA800，相关具体硬件信息如下。</p><table><thead><tr><th>主机名</th><th>IP</th><th>CPU</th><th>内存</th><th>硬盘</th><th>GPU情况</th><th>IB网卡</th><th>万兆网卡</th><th>其他信息</th></tr></thead><tbody><tr><td>deepseek1</td><td>10.119.165.139(万兆内网)<br />10.119.85.141(IB内网)</td><td>Intel 6348*2</td><td>64G DDR4*16</td><td>（1）960G SATA**2；（2）3.84T U.2 NVMe*1</td><td>HGX A800系统（8<em>NVIDIA A800 80GB SXM4 with6</em>NVSwitch）*1</td><td>需要</td><td>（1）10G 双光口<em>1；（2）25G 双光口 OCP3.0</em>1；（3）200G单光口HDR*4；</td><td>（1）电源：3500W PSU<em>4；（2）硬RAID：RAID LSI9540-8i；（3）其他：GPU仓背板</em>2；CPU仓EXP背板<em>1；riser</em>2；1.8M国标电源线<em>4；托轨</em>1</td></tr><tr><td>deepseek2</td><td>10.119.165.138(内网)<br />10.119.85.138(IB内网)</td><td>~</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>deepseek3</td><td>10.119.165.140(内网)<br />10.119.85.140(IB内网)</td><td>~</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>deepseek4</td><td>10.119.165.141(内网)<br />10.119.85.139(IB内网)</td><td>~</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><figure><img src="https://s2.loli.net/2025/02/26/Y96Gwv4AnultSVZ.png"alt="image-20250226103235878" /><figcaption aria-hidden="true">image-20250226103235878</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">10000M network</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.139 deepseek1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.138 deepseek2</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.140 deepseek3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.141 deepseek4</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">IB network</span><br>10.119.85.141 deepseek1<br>10.119.85.138 deepseek2<br>10.119.85.140 deepseek3<br>10.119.85.139 deepseek4<br></code></pre></td></tr></table></figure><p>（1）当前，物理服务器的系统盘由两个SATA盘做 RAID1构成，按照相关资料说明，建议使用两个1T左右的SSD做RAID1，安装操作系统</p><p>（2）现在模型文件是存放在nvme盘的挂载目录上</p><p>（3）服务访问、节点间网络通信，能用IB网络尽量用IB网络</p><p>（4）节点内8显卡、节点间显卡通信，需要配置好NVLink与NVSwitch</p><p>（5）其实上表格中还有一些东西没有用到，比如万兆网卡。</p><p>（6）以下deepseek用户具有无密sudo权限，实际操作时也可使用root用户，但还是不建议直接使用root用户。</p><h2 id="相关软件信息汇总">1.2 相关软件信息汇总</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">物理服务器操作系统：Ubuntu 22.04.4 LTS-x86_64<br>Nvidia driver version: 550.90.07<br>CUDA runtime version: 12.1.105(node容器内)、V12.4.99(物理服务器上)<br>nvidia-fabricmanager版本：550.90.07<br>nvlink：3.0<br>nvswitch：2.0<br><br>PyTorch version: 2.5.1+cu124<br>CUDA used to build PyTorch: 12.4<br>OS: Ubuntu 22.04.3 LTS (x86_64)<br>GCC version: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0<br>CMake version: version 3.31.4<br>Libc version: glibc-2.35<br>Python version: 3.12.9 (main, Feb  5 2025, 08:49:00) [GCC 11.4.0] (64-bit runtime)<br>Python platform: Linux-5.15.0-113-generic-x86_64-with-glibc2.35<br>Is CUDA available: True<br><br>CUDA_MODULE_LOADING set to: LAZY<br>Is XNNPACK available: True<br>CPU: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz, 112核心<br>numpy==1.26.4<br>torch==2.5.1<br>torchaudio==2.5.1<br>torchvision==0.20.1<br>triton==3.1.0<br></code></pre></td></tr></table></figure><h1 id="二准备工作">二、准备工作</h1><p>以下准备工作在所有服务器上都要执行。</p><h2 id="模型文件准备">2.1 模型文件准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">添加主机名与ip映射条目</span><br>deepseek@deepseek1:~$ sudo vi /etc/hosts<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加如下内容</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10000M network</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.139 deepseek1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.138 deepseek2</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.140 deepseek3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.141 deepseek4</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">IB network</span><br>10.119.85.141 deepseek1<br>10.119.85.138 deepseek2<br>10.119.85.140 deepseek3<br>10.119.85.139 deepseek4<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置python库安装源</span><br>deepseek@deepseek1:~$ sudo mkdir ~/.pip<br>deepseek@deepseek1:~$ sudo vi ~/.pip/pip.conf <br>deepseek@deepseek1:~$ sudo cat ~/.pip/pip.conf <br>[global]<br>trusted-host = mirrors.aliyun.com<br>index-url = https://mirrors.aliyun.com/pypi/simple<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载Anaconda3-2024.06-1-Linux-x86_64.sh，安装anaconda</span><br>deepseek@deepseek1:~/installPkgs$ wget --user-agent=“Mozilla” + https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh<br>deepseek@deepseek1:~/installPkgs$ sudo bash Anaconda3-2024.06-1-Linux-x86_64.sh -p /home/deepseek/anaconda3<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##anaconda的安装目录是/home/deepseek/anaconda3</span></span><br>...<br>You can undo this by running `conda init --reverse $SHELL`? [yes|no]<br>[no] &gt;&gt;&gt; yes<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载~/.bashrc</span><br>deepseek@deepseek1:~/installPkgs$ source ~/.bashrc<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>(base) deepseek@deepseek1:~/installPkgs$ conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                  *  /home/deepseek/anaconda3</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">准备好python3环境与pip3（使用上述conda创建虚拟python3、pip3环境）</span><br>(base) deepseek@deepseek1:~/installPkgs$ conda create -n self-llm python=3.12 <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#查看现有的conda管理的所有虚拟python环境</span></span><br>(base) deepseek@deepseek1:~/installPkgs$ conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">self-llm                 /home/deepseek/.conda/envs/self-llm</span><br>base                  *  /home/deepseek/anaconda3<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活self-llm 这个虚拟python环境，并在其中执行相关命令</span><br>(base) deepseek@deepseek1:~/installPkgs$ conda activate self-llm<br>(self-llm) deepseek@deepseek1:~/installPkgs$ <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">请先通过如下命令安装ModelScope</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ pip install modelscope<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以下4种方法下载不同的模型文件与使用，方法4验证成功</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在deepseek1服务器上下载好模型文件，其他3台服务器无需再通过网络下载模型文件，而是将模型文件从此服务器传输上去即可（速度应该快些）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法1（已经失败）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载完整模型repo。加参数“--local_dir ./”就是保存到当前目录，不加就是保存到/root/.cache目录下</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ modelscope download --model deepseek-ai/DeepSeek-R1<br>Downloading Model to directory: /home/deepseek/.cache/modelscope/hub/models/deepseek-ai/DeepSeek-R1<br>...<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载完成后，非蒸馏、满血版DeepSeek-R1:671B模型文件总大小共642G</span><br>(self-llm) deepseek@deepseek1:~/.cache/modelscope/hub/models/deepseek-ai/DeepSeek-R1$ du -sh ./      <br>642G    ./<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##失败原因：DeepSeek-R1:671B是fp8 模型，需要在支持fp8数据类型的GPU上运行，但NVIDIA A800（A800跟A100设计上基本上是一样的，只是减配了）不支持fp8数据类型。DeepSeek-R1 是 FP8 权重的，FP8 需要cuda架构不低于8.9，A800是8.0，所以需要将FP8转换成BF16</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法2（未验证）</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">DeepSeek-R1的BF16版本，但是GGUF文件：https://huggingface.co/unsloth/DeepSeek-R1-GGUF/tree/main/DeepSeek-R1-BF16</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">总大小为：1341.32G</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo parted /dev/nvme0n1 -s -- mklabel gpt mkpart DATA01 1 -1 <br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo mkfs.ext4 /dev/nvme0n1p1 <br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo mount /dev/nvme0n1p1 /mnt/<br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo tail -1 /etc/mtab<br>/dev/nvme0n1p1 /mnt ext4 rw,relatime,stripe=32 0 0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将上述输出内容写入/etc/fstab文件的末尾</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo vi /etc/fstab<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##下载DeepSeek-R1模型的BF16版本</span></span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo /home/deepseek/.conda/envs/self-llm/bin/modelscope download --model unsloth/DeepSeek-R1-GGUF --local_dir /mnt<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##目前，vLLM 仅支持加载单文件 GGUF 模型。如果您有多文件的 GGUF 模型，可以使用 gguf-split 工具将其合并为一个单文件模型（参考文档：https://vllm.hyper.ai/docs/quantization/gguf/）</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法3（已经失败）</span></span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ cd ~/code_repos/<br>(self-llm) deepseek@deepseek1:~/code_repos$ git clone https://github.com/deepseek-ai/DeepSeek-V3.git #或git clone https://gitee.com/sy-jiang/DeepSeek-V3.git<br>(self-llm) deepseek@deepseek1:~/code_repos$ cd DeepSeek-V3/<br>(self-llm) deepseek@deepseek1:~/code_repos$ sudo mkdir /mnt/DeepSeek-R1-bf16<br><span class="hljs-meta prompt_">#</span><span class="language-bash">权重转换， DeepSeek-R1 是 FP8 权重的，FP8 需要cuda架构不低于8.9，A800是8.0，所以需要将FP8转换成BF16。转换方法如下：</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">python fp8_cast_bf16.py --input-fp8-hf-path /path/to/DeepSeek-R1 --output-bf16-hf-path /path/to/deepseek-R1-bf16</span><br>(self-llm) deepseek@deepseek1:~/code_repos$ pip install torch==2.5.1<br>(self-llm) deepseek@deepseek1:~/code_repos$ pip install safetensors=0.5.2 numpy==1.26.4 tqdm==4.67.1 <br>(self-llm) deepseek@deepseek1:~/code_repos/DeepSeek-V3$ cd inference/<br>(self-llm) deepseek@deepseek1:~/code_repos/DeepSeek-V3$ sudo /home/deepseek/.conda/envs/self-llm/bin/python fp8_cast_bf16.py --input-fp8-hf-path /home/deepseek/.cache/modelscope/hub/models/deepseek-ai/DeepSeek-R1/ --output-bf16-hf-path /mnt/DeepSeek-R1-fp8_cast_bf16/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">结果表明：运行这个fp8_cast_bf16.py文件，应该也是需要CUDA <span class="hljs-built_in">arch</span> &gt;=8.9的NVIDIA GPU。符合这种条件的GPU有NVIDIA H100（具体看问题2）</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法4（成功）</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">DeepSeek-R1的BF16版本，是.safetensors文件，在vllm中直接可用：https://modelscope.cn/models/unsloth/DeepSeek-R1-BF16/files</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">总大小为：1341.32G左右</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时deepseek1正在下载方法2中文件，故此方法的实施先在deepseek2上下载相关文件（下载过程中发现，deepseek1上的下载进程占据大量带宽影响deepseek2下载文件，故将deepseek1上的下载进程杀死）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">/dev/nvme0n1  nvme硬盘，大小为3.5T</span><br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo parted /dev/nvme0n1 -s -- mklabel gpt mkpart DATA01 1 -1 <br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo mkfs.ext4 /dev/nvme0n1p1 <br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo mount /dev/nvme0n1p1 /mnt/<br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo tail -1 /etc/mtab<br>/dev/nvme0n1p1 /mnt ext4 rw,relatime,stripe=32 0 0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将上述输出内容写入/etc/fstab文件的末尾</span><br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo vi /etc/fstab<br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo rm -rf /mnt/lost+found<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##下载DeepSeek-R1模型的BF16版本</span></span><br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo mkdir -p hub/models/unsloth/DeepSeek-R1-BF16<br>(self-llm) deepseek@deepseek2:~/installPkgs$ sudo /home/deepseek/anaconda3/envs/self-llm/bin/modelscope download --model unsloth/DeepSeek-R1-BF16 --local_dir /mnt/hub/models/unsloth/DeepSeek-R1-BF16<br>Downloading Model to directory: /mnt/hub/models/unsloth/DeepSeek-R1-BF16<br>Downloading [config.json]: 100%|█████████████████████████████████████| 1.57k/1.57k [00:00&lt;00:00, 6.75kB/s]<br>...<br></code></pre></td></tr></table></figure><h3 id="报错与处理">2.1.1 报错与处理</h3><h4id="问题1-方法3-执行python-fp8_cast_bf16.py提示usrbinld-cannot-find--lcuda-no-such-file-or-directory">问题1-方法3-执行"pythonfp8_cast_bf16.py"提示“/usr/bin/ld: cannot find -lcuda: No such file ordirectory”</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek1:~/code_repos/DeepSeek-V3/inference$ sudo /home/deepseek/.conda/envs/self-llm/bin/python fp8_cast_bf16.py --input-fp8-hf-path /home/deepseek/.cache/modelscope/hub/models/deepseek-ai/DeepSeek-R1/ --output-bf16-hf-path /mnt/DeepSeek-R1-fp8_cast_bf16/<br><span class="hljs-meta prompt_">  0%</span><span class="language-bash">|                                                                                                                                                                                   | 0/163 [00:00&lt;?, ?it/s]/usr/bin/ld: cannot find -lcuda: No such file or directory</span><br>collect2: error: ld returned 1 exit status<br><span class="hljs-meta prompt_">  0%</span><span class="language-bash">|                                                                                                                                                                                   | 0/163 [00:01&lt;?, ?it/s]</span><br>Traceback (most recent call last):<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/fp8_cast_bf16.py&quot;, line 111, in &lt;module&gt;<br>    main(args.input_fp8_hf_path, args.output_bf16_hf_path)<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/fp8_cast_bf16.py&quot;, line 80, in main<br>    new_state_dict[weight_name] = weight_dequant(weight, scale_inv)<br>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/kernel.py&quot;, line 104, in weight_dequant<br>    weight_dequant_kernel[grid](x, s, y, M, N, BLOCK_SIZE=block_size)<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/jit.py&quot;, line 345, in &lt;lambda&gt;<br>    return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)<br>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/jit.py&quot;, line 607, in run<br>    device = driver.active.get_current_device()<br>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/driver.py&quot;, line 23, in __getattr__<br>    self._initialize_obj()<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/driver.py&quot;, line 20, in _initialize_obj<br>    self._obj = self._init_fn()<br>                ^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/driver.py&quot;, line 9, in _create_driver<br>    return actives[0]()<br>           ^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/backends/nvidia/driver.py&quot;, line 371, in __init__<br>    self.utils = CudaUtils()  # TODO: make static<br>                 ^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/backends/nvidia/driver.py&quot;, line 80, in __init__<br>    mod = compile_module_from_src(Path(os.path.join(dirname, &quot;driver.c&quot;)).read_text(), &quot;cuda_utils&quot;)<br>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/backends/nvidia/driver.py&quot;, line 57, in compile_module_from_src<br>    so = _build(name, src_path, tmpdir, library_dirs(), include_dir, libraries)<br>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/build.py&quot;, line 48, in _build<br>    ret = subprocess.check_call(cc_cmd)<br>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/subprocess.py&quot;, line 415, in check_call<br>    raise CalledProcessError(retcode, cmd)<br>subprocess.CalledProcessError: Command &#x27;[&#x27;/usr/bin/gcc&#x27;, &#x27;/tmp/tmp2u69cogx/main.c&#x27;, &#x27;-O3&#x27;, &#x27;-shared&#x27;, &#x27;-fPIC&#x27;, &#x27;-o&#x27;, &#x27;/tmp/tmp2u69cogx/cuda_utils.cpython-312-x86_64-linux-gnu.so&#x27;, &#x27;-lcuda&#x27;, &#x27;-L/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/backends/nvidia/lib&#x27;, &#x27;-L/lib/x86_64-linux-gnu&#x27;, &#x27;-I/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/backends/nvidia/include&#x27;, &#x27;-I/tmp/tmp2u69cogx&#x27;, &#x27;-I/home/deepseek/.conda/envs/self-llm/include/python3.12&#x27;]&#x27; returned non-zero exit status 1.<br></code></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">参考https://developer.aliyun.com/article/377598</span><br>cd /home/deepseek/.conda/envs/self-llm/lib<br>ln -sv /usr/local/cuda-12.4/targets/x86_64-linux/lib/stubs/libcuda.so libcuda.so<br></code></pre></td></tr></table></figure><h4id="问题2-方法3-执行python-fp8_cast_bf16.py提示assertionerror-fp8e4nv-data-type-is-not-supported-on-cuda-arch-89">问题2-方法3-执行"pythonfp8_cast_bf16.py"提示“AssertionError: fp8e4nv data type is not supportedon CUDA arch &lt; 89”</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">解决完上述问题1后，又出现如下问题2</span><br>(self-llm) deepseek@deepseek1:~/code_repos/DeepSeek-V3/inference$ sudo /home/deepseek/.conda/envs/self-llm/bin/python fp8_cast_bf16.py --input-fp8-hf-path /home/deepseek/.cache/modelscope/hub/models/deepseek-ai/DeepSeek-R1/ --output-bf16-hf-path /mnt/DeepSeek-R1-fp8_cast_bf16/<br><span class="hljs-meta prompt_">  0%</span><span class="language-bash">|                                                                                                                                                                                   | 0/163 [00:01&lt;?, ?it/s]</span><br>Traceback (most recent call last):<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/language/core.py&quot;, line 35, in wrapper<br>    return fn(*args, **kwargs)<br>           ^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/language/core.py&quot;, line 993, in to<br>    return semantic.cast(self, dtype, _builder, fp_downcast_rounding)<br>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/language/semantic.py&quot;, line 759, in cast<br>    assert builder.options.allow_fp8e4nv, &quot;fp8e4nv data type is not supported on CUDA arch &lt; 89&quot;<br>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>AssertionError: fp8e4nv data type is not supported on CUDA arch &lt; 89<br><br>The above exception was the direct cause of the following exception:<br><br>Traceback (most recent call last):<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/fp8_cast_bf16.py&quot;, line 111, in &lt;module&gt;<br>    main(args.input_fp8_hf_path, args.output_bf16_hf_path)<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/fp8_cast_bf16.py&quot;, line 80, in main<br>    new_state_dict[weight_name] = weight_dequant(weight, scale_inv)<br>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/code_repos/DeepSeek-V3/inference/kernel.py&quot;, line 104, in weight_dequant<br>    weight_dequant_kernel[grid](x, s, y, M, N, BLOCK_SIZE=block_size)<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/jit.py&quot;, line 345, in &lt;lambda&gt;<br>    return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)<br>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/runtime/jit.py&quot;, line 662, in run<br>    kernel = self.compile(<br>             ^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/compiler/compiler.py&quot;, line 276, in compile<br>    module = src.make_ir(options, codegen_fns, context)<br>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/home/deepseek/.conda/envs/self-llm/lib/python3.12/site-packages/triton/compiler/compiler.py&quot;, line 113, in make_ir<br>    return ast_to_ttir(self.fn, self, context=context, options=options, codegen_fns=codegen_fns)<br>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>triton.compiler.errors.CompilationError: at 23:8:<br><br>    Returns:<br>        None<br>    &quot;&quot;&quot;<br>    pid_m = tl.program_id(axis=0)<br>    pid_n = tl.program_id(axis=1)<br>    n = tl.cdiv(N, BLOCK_SIZE)<br>    offs_m = pid_m * BLOCK_SIZE + tl.arange(0, BLOCK_SIZE)<br>    offs_n = pid_n * BLOCK_SIZE + tl.arange(0, BLOCK_SIZE)<br>    offs = offs_m[:, None] * N + offs_n[None, :]<br>    mask = (offs_m[:, None] &lt; M) &amp; (offs_n[None, :] &lt; N)<br>    x = tl.load(x_ptr + offs, mask=mask).to(tl.float32)<br>        ^<br></code></pre></td></tr></table></figure><p>分析与解决办法：</p><p>运行这个fp8_cast_bf16.py文件，应该也是需要CUDA arch &gt;=8.9的NVIDIAGPU。符合这种条件的GPU有NVIDIA H100。所以如果没有NVIDIAH100，这种方法不可行</p><h2 id="查看服务器显卡">2.2 查看服务器/显卡</h2><p>4个物理服务器，每个物理服务器上的磁盘信息如下。系统盘是893G左右，其余还有6块893GSATA盘、一块3.5T的nvme盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">deepseek@deepseek1:~$ lsblk <br>NAME    MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS<br>loop0     7:0    0  63.9M  1 loop /snap/core20/2318<br>loop1     7:1    0    87M  1 loop /snap/lxd/28373<br>loop2     7:2    0  38.8M  1 loop /snap/snapd/21759<br>loop3     7:3    0  44.4M  1 loop /snap/snapd/23545<br>loop4     7:4    0  63.7M  1 loop /snap/core20/2496<br>loop5     7:5    0  89.4M  1 loop /snap/lxd/31333<br>sda       8:0    0 893.8G  0 disk <br>sdb       8:16   0 893.8G  0 disk <br>├─sdb1    8:17   0   550M  0 part /boot/efi<br>├─sdb2    8:18   0     8M  0 part <br>├─sdb3    8:19   0 893.1G  0 part /<br>└─sdb4    8:20   0    65M  0 part <br>sdc       8:32   0 893.8G  0 disk <br>sdd       8:48   0 893.8G  0 disk <br>sde       8:64   0 893.8G  0 disk <br>sdf       8:80   0 893.8G  0 disk <br>sdg       8:96   0 893.8G  0 disk <br>nvme0n1 259:0    0   3.5T  0 disk <br></code></pre></td></tr></table></figure><p>每个物理服务器上有8个NVIDIA A100-SXM4-80GB ，GPU型号、驱动版本、CUDA版本信息如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs shell">deepseek@deepseek1:~$ nvidia-smi <br>Fri Feb 21 09:25:35 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A800-SXM4-80GB          On  |   00000000:3D:00.0 Off |                    0 |<br>| N/A   33C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   1  NVIDIA A800-SXM4-80GB          On  |   00000000:42:00.0 Off |                    0 |<br>| N/A   29C    P0             58W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   2  NVIDIA A800-SXM4-80GB          On  |   00000000:61:00.0 Off |                    0 |<br>| N/A   30C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   3  NVIDIA A800-SXM4-80GB          On  |   00000000:67:00.0 Off |                    0 |<br>| N/A   33C    P0             64W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   4  NVIDIA A800-SXM4-80GB          On  |   00000000:AD:00.0 Off |                    0 |<br>| N/A   32C    P0             57W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   5  NVIDIA A800-SXM4-80GB          On  |   00000000:B1:00.0 Off |                    0 |<br>| N/A   29C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   6  NVIDIA A800-SXM4-80GB          On  |   00000000:D0:00.0 Off |                    0 |<br>| N/A   30C    P0             62W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   7  NVIDIA A800-SXM4-80GB          On  |   00000000:D3:00.0 Off |                    0 |<br>| N/A   32C    P0             60W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|  No running processes found                                                             |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><p>显卡驱动、cuda、以及nvidia-fabricmanager三者版本一定要相互匹配。</p><p>笔者显卡驱动、cuda、nvidia-fabricmanager版本信息分别是：550.90.07、V12.4.99、550.90.07。</p><h2 id="安装cuda">2.3 安装cuda</h2><p>Cuda安装可参考NVIDIA官方文档：<ahref="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#ubuntu">cuda-installation-guide-linux</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">服务器拿到手时，发现已经安装了Cuda11.5.119</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果要使用apt安装nvcc（此方式在Ubuntu22.04LTS上安装的是Cuda11.5.119）：sudo apt install nvidia-cuda-toolkit</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有nvcc版本</span><br>deepseek@deepseek1:~/installPkgs$ nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2021 NVIDIA Corporation<br>Built on Thu_Nov_18_09:45:30_PST_2021<br>Cuda compilation tools, release 11.5, V11.5.119<br>Build cuda_11.5.r11.5/compiler.30672275_0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##卸载现有的Cuda11.5.119：</span></span><br>deepseek@deepseek1:~/installPkgs$ sudo apt remove nvidia-cuda-toolkit<br></code></pre></td></tr></table></figure><p>我想改成使用Cuda12.4。访问<ahref="https://developer.nvidia.com/cuda-12-4-0-download-archive">NVIDIA官网cuda安装文件下载网页</a>，依次选择如下选项找到下载与安装命令：</p><figure><img src="https://s2.loli.net/2025/02/21/iv6oBq75Rr8EzDO.png"alt="image-20250221172033572" /><figcaption aria-hidden="true">image-20250221172033572</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载安装文件</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ wget https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.run<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行安装</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo sh cuda_12.4.0_550.54.14_linux.run<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在弹出对话中输入“accept”接受条款，然后如下选择</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/02/21/i8vKNVPkExZjD65.png" alt="image-20250221173309528" style="zoom:50%;" /></p><figure><img src="https://s2.loli.net/2025/02/22/s8wCKUVEL2Sphna.png"alt="image-20250222162736130" /><figcaption aria-hidden="true">image-20250222162736130</figcaption></figure><p>安装进程完成后，输出如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">===========<br>= Summary =<br>===========<br><br>Driver:   Not Selected<br>Toolkit:  Installed in /usr/local/cuda-12.4/<br><br>Please make sure that<br> -   PATH includes /usr/local/cuda-12.4/bin<br> -   LD_LIBRARY_PATH includes /usr/local/cuda-12.4/lib64, or, add /usr/local/cuda-12.4/lib64 to /etc/ld.so.conf and run ldconfig as root<br><br>To uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-12.4/bin<br>***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 550.00 is required for CUDA 12.4 functionality to work.<br>To install the driver using this installer, run the following command, replacing &lt;CudaInstaller&gt; with the name of this run file:<br>    sudo &lt;CudaInstaller&gt;.run --silent --driver<br><br>Logfile is /var/log/cuda-installer.log<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">发现系统已经创建软链接/usr/local/cuda，指向/usr/local/cuda-12.4/。后续使用此软链接</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ ls -al /usr/local/cuda<br>lrwxrwxrwx 1 root root 21 Feb 21 17:55 /usr/local/cuda -&gt; /usr/local/cuda-12.4/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">按照提示修改系统环境变量PATH、LD_LIBRARY_PATH</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo vi /etc/profile<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##在最后添加如下内容</span></span><br>export PATH=$PATH:/usr/local/cuda/bin/<br>export LD_LIBRARY_PATH=/usr/local/cuda/lib64/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新打一个终端会话窗口或重新加载上述文件以启用上述两个修改或添加的系统环境变量</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载上述文件的方法：<span class="hljs-built_in">source</span> /etc/profile</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下以重新打一个终端会话窗口为例继续后续操作</span><br>(base) deepseek@deepseek1:~$ conda activate self-llm<br>(self-llm) deepseek@deepseek1:~$ echo $PATH<br>/home/deepseek/anaconda3/envs/self-llm/bin:/home/deepseek/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/cuda/bin<br>(self-llm) deepseek@deepseek1:~$ echo $LD_LIBRARY_PATH  <br>/usr/local/cuda/lib64/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到当前使用的Cuda版本已经是V12.4.99</span><br>(self-llm) deepseek@deepseek1:~$ nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2024 NVIDIA Corporation<br>Built on Tue_Feb_27_16:19:38_PST_2024<br>Cuda compilation tools, release 12.4, V12.4.99<br>Build cuda_12.4.r12.4/compiler.33961263_0<br>(self-llm) deepseek@deepseek1:~$ <br></code></pre></td></tr></table></figure><h2 id="单机多gpu卡间互联nvlink">2.4 单机多GPU卡间互联NVlink</h2><p>单机上的8个NVIDIA A800-SXM4-80GB之间使用NVLink进行了连接。与NVIDIAA800所使用的Ampere架构相适配的，在NVIDIAA800使用NVLink版本是NVLink3.0，NvSwitch版本是NvSwitch 3.0。</p><p>NVLink3.0有12条Link接口，每个Link接口有8个lane，NVLink3.0的每个Link接口单向通信速度是25GB/s，所以每个NVIDIAA800使用NVLink3.0时，单向宽带是 25GB/s * 12 =300GB/s，双向宽带在单向宽带的基础上乘以2即为600GB/s。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs shell">deepseek@deepseek1:~$ nvidia-smi nvlink --status<br>GPU 0: NVIDIA A800-SXM4-80GB (UUID: GPU-f275597c-05e4-f7e8-35bc-a3ab26194262)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 1: NVIDIA A800-SXM4-80GB (UUID: GPU-56afa4fb-5618-6b47-7861-51c811bb87d8)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 2: NVIDIA A800-SXM4-80GB (UUID: GPU-9039f623-9c6f-bc1a-f7d4-fd706a7cd7f5)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 3: NVIDIA A800-SXM4-80GB (UUID: GPU-3029201c-2230-e6d4-290b-267c7c8adb03)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 4: NVIDIA A800-SXM4-80GB (UUID: GPU-54d02ccd-6b42-8ec6-1b2a-624974742a62)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 5: NVIDIA A800-SXM4-80GB (UUID: GPU-13254428-498a-5ec1-5dd5-d2c46dd29c36)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 6: NVIDIA A800-SXM4-80GB (UUID: GPU-5442c93d-d690-3603-f0c3-c0592cf3797c)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br>GPU 7: NVIDIA A800-SXM4-80GB (UUID: GPU-bfe7f980-f583-3778-9779-85c7ebbb9432)<br>         Link 0: 25 GB/s<br>         Link 1: 25 GB/s<br>         Link 2: 25 GB/s<br>         Link 3: 25 GB/s<br>         Link 4: 25 GB/s<br>         Link 5: 25 GB/s<br>         Link 6: 25 GB/s<br>         Link 7: 25 GB/s<br></code></pre></td></tr></table></figure><h2 id="nvidia-fabricmanager安装与确认">2.5nvidia-fabricmanager安装与确认</h2><h3 id="安装nvidia-fabricmanager">2.5.1 安装nvidia-fabricmanager</h3><p>A800 GPU 并支持 <strong>NvLink &amp;NvSwitch</strong>，需额外安装与驱动版本对应的 nvidia-fabricmanager服务使 GPU 卡间能够互联。安装 nvidia-fabricmanager 服务后都能正常使用GPU 实例，安装方法如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">Install the new cuda-keyring package（将创建文件/etc/apt/sources.list.d/cuda-ubuntu2204-x86_64.list ）</span><br>wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb<br>sudo dpkg -i cuda-keyring_1.1-1_all.deb<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装nvidia-fabricmanager-550=550.90.07-1</span><br>version=550.90.07<br>main_version=$(echo $version | awk -F &#x27;.&#x27; &#x27;&#123;print $1&#125;&#x27;)<br>sudo apt-get update<br>sudo apt-get -y install nvidia-fabricmanager-$&#123;main_version&#125;=$&#123;version&#125;-*<br><span class="hljs-meta prompt_">#</span><span class="language-bash">卸载不再需要的组件</span><br>sudo apt autoremove<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看已经安装的nvidia-fabricmanager版本</span><br>deepseek@deepseek1:~$ dpkg -l | grep nvidia-fabricmanager<br>ii  nvidia-fabricmanager-550               550.90.07-1                                              amd64        Fabric Manager for NVSwitch based systems.<br>deepseek@deepseek1:~$ nv-fabricmanager -v<br>Fabric Manager version is : 550.90.07<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">nvidia-fabricmanager 服务开机自启动、启动</span><br>sudo systemctl enable nvidia-fabricmanager<br>sudo systemctl start nvidia-fabricmanager.service<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看 nvidia-fabricmanager 服务</span><br>sudo systemctl status nvidia-fabricmanager<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到“已成功配置所有可用的gpu和nvswitch以路由NVLink流量”</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo systemctl status nvidia-fabricmanager<br>● nvidia-fabricmanager.service - NVIDIA fabric manager service<br>     Loaded: loaded (/lib/systemd/system/nvidia-fabricmanager.service; enabled; vendor preset: enabled)<br>     Active: active (running) since Thu 2025-02-20 18:11:52 CST; 21h ago<br>   Main PID: 3697 (nv-fabricmanage)<br>      Tasks: 19 (limit: 629145)<br>     Memory: 22.4M<br>        CPU: 36.002s<br>     CGroup: /system.slice/nvidia-fabricmanager.service<br>             └─3697 /usr/bin/nv-fabricmanager -c /usr/share/nvidia/nvswitch/fabricmanager.cfg<br><br>Feb 20 18:11:40 deepseek1 systemd[1]: Starting NVIDIA fabric manager service...<br>Feb 20 18:11:41 deepseek1 nv-fabricmanager[3697]: Connected to 1 node.<br>Feb 20 18:11:52 deepseek1 nv-fabricmanager[3697]: Successfully configured all the available GPUs and NVSwitches to route NVLink traffic.<br>Feb 20 18:11:52 deepseek1 systemd[1]: Started NVIDIA fabric manager service.<br></code></pre></td></tr></table></figure><h3 id="查看显卡拓扑结构">2.5.2 查看显卡拓扑结构</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">deepseek@deepseek1:~/installPkgs$ nvidia-smi topo --matrix<br>        GPU0    GPU1    GPU2    GPU3    GPU4    GPU5    GPU6    GPU7    NIC0    NIC1    NIC2    NIC3    NIC4    CPU Affinity    NUMA Affinity   GPU NUMA ID<br>GPU0     X      NV8     NV8     NV8     NV8     NV8     NV8     NV8     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span>     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">0-27</span>,<span class="hljs-number">56</span>-<span class="hljs-number">83</span>      <span class="hljs-number">0</span>               N/A<br>GPU1    NV8      X      NV8     NV8     NV8     NV8     NV8     NV8     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span>     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">0-27</span>,<span class="hljs-number">56</span>-<span class="hljs-number">83</span>      <span class="hljs-number">0</span>               N/A<br>GPU2    NV8     NV8      X      NV8     NV8     NV8     NV8     NV8     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">PXB</span>     SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">0-27</span>,<span class="hljs-number">56</span>-<span class="hljs-number">83</span>      <span class="hljs-number">0</span>               N/A<br>GPU3    NV8     NV8     NV8      X      NV8     NV8     NV8     NV8     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">PXB</span>     SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">0-27</span>,<span class="hljs-number">56</span>-<span class="hljs-number">83</span>      <span class="hljs-number">0</span>               N/A<br>GPU4    NV8     NV8     NV8     NV8      X      NV8     NV8     NV8     SYS     SYS     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span>     <span class="hljs-number">28</span>-<span class="hljs-number">55</span>,<span class="hljs-number">84</span>-<span class="hljs-number">111</span>    <span class="hljs-number">1</span>               N/A<br>GPU5    NV8     NV8     NV8     NV8     NV8      X      NV8     NV8     SYS     SYS     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span>     <span class="hljs-number">28</span>-<span class="hljs-number">55</span>,<span class="hljs-number">84</span>-<span class="hljs-number">111</span>    <span class="hljs-number">1</span>               N/A<br>GPU6    NV8     NV8     NV8     NV8     NV8     NV8      X      NV8     SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">PXB</span>     SYS     <span class="hljs-number">28</span>-<span class="hljs-number">55</span>,<span class="hljs-number">84</span>-<span class="hljs-number">111</span>    <span class="hljs-number">1</span>               N/A<br>GPU7    NV8     NV8     NV8     NV8     NV8     NV8     NV8      X      SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">PXB</span>     SYS     <span class="hljs-number">28</span>-<span class="hljs-number">55</span>,<span class="hljs-number">84</span>-<span class="hljs-number">111</span>    <span class="hljs-number">1</span>               N/A<br>NIC0    PXB     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    SYS     SYS     SYS     SYS      X      <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span>     SYS     <span class="hljs-keyword">NODE</span><br><span class="hljs-title">NIC1</span>    <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    PXB     PXB     SYS     SYS     SYS     SYS     <span class="hljs-keyword">NODE</span>     <span class="hljs-title">X</span>      SYS     SYS     <span class="hljs-keyword">NODE</span><br><span class="hljs-title">NIC2</span>    SYS     SYS     SYS     SYS     PXB     PXB     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    SYS     SYS      X      <span class="hljs-keyword">NODE</span>    <span class="hljs-title">SYS</span><br>NIC3    SYS     SYS     SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    PXB     PXB     SYS     SYS     <span class="hljs-keyword">NODE</span>     <span class="hljs-title">X</span>      SYS<br>NIC4    <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    SYS     SYS     SYS     SYS     <span class="hljs-keyword">NODE</span>    <span class="hljs-title">NODE</span>    SYS     SYS      X <br><br>Legend:<br><br>  X    = Self<br>  SYS  = Connection traversing PCIe as well as the SMP interconnect between NUMA nodes (e.g., QPI/UPI)<br>  <span class="hljs-keyword">NODE</span> <span class="hljs-title">= Connection</span> traversing PCIe as well as the interconnect between PCIe Host Bridges within a NUMA <span class="hljs-keyword">node</span><br>  <span class="hljs-title">PHB</span>  = Connection traversing PCIe as well as a PCIe Host Bridge (typically the CPU)<br>  PXB  = Connection traversing multiple PCIe bridges (without traversing the PCIe Host Bridge)<br>  PIX  = Connection traversing at most a single PCIe bridge<br>  NV<span class="hljs-comment">#  = Connection traversing a bonded set of # NVLinks</span><br><br>NIC Legend:<br><br>  NIC0: mlx5_2<br>  NIC1: mlx5_3<br>  NIC2: mlx5_4<br>  NIC3: mlx5_5<br>  NIC4: mlx5_bond_0<br></code></pre></td></tr></table></figure><p><strong>可以看到GPU0与其他GPU如GPU1之间是通过NV</strong></p><h2 id="超高性能网络-infiniband">2.6 超高性能网络-Infiniband</h2><p>InfiniBand（以下简称IB网络），是一种能力很强的通信技术协议。它的英文直译过来，就是“无限带宽”。它是一种专为高性能计算（HPC）和超大规模数据中心设计的网络技术，以亚微秒级超低延迟和超高带宽为核心优势。</p><p>IB网络因其低延迟、高带宽的网络特性被用于很多高性能计算（HighPerformance Computing，HPC）项目，IB网络采用了100G MellanoxIB网卡，通过专用IB交换机和控制器软件UFM实现网络通信和管理。IB网络通过PartitionKey实现网络隔离，不同租户的IB网络可通过不同的PartitionKey来隔离，类似于以太网的VLAN。在BMS场景，IB网络支持RDMA和IPoIB通信方式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">首先查看是否具有 Infiniband controller</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ lspci | grep -i infiniband<br>44:00.0 Infiniband controller: Mellanox Technologies MT28908 Family [ConnectX-6]<br>68:00.0 Infiniband controller: Mellanox Technologies MT28908 Family [ConnectX-6]<br>c2:00.0 Infiniband controller: Mellanox Technologies MT28908 Family [ConnectX-6]<br>db:00.0 Infiniband controller: Mellanox Technologies MT28908 Family [ConnectX-6]<br></code></pre></td></tr></table></figure><p>在保证系统上安装且启用了IB网卡的情况下，使用命令<code>ibdev2netdev -v</code>可以看到IB网口的状态。</p><p>可以看到最后有一个bond1，是IB网卡做的bond1，就用它了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">device和网口，mlx5_2是device名称，ibp68s0是网口名称</span><br>(self-llm) deepseek@deepseek2:~$ sudo ibdev2netdev -v<br>0000:44:00.0 mlx5_2 (MT4123 - MCX653105A-HDAT) ConnectX-6 VPI adapter card, HDR IB (200Gb/s) and 200GbE, single-port QSFP56                                                                                                           fw 20.35.3006 port 1 (ACTIVE) ==&gt; ibp68s0 (Up)<br>0000:68:00.0 mlx5_3 (MT4123 - MCX653105A-HDAT) ConnectX-6 VPI adapter card, HDR IB (200Gb/s) and 200GbE, single-port QSFP56                                                                                                           fw 20.35.3006 port 1 (ACTIVE) ==&gt; ibp104s0 (Up)<br>0000:c2:00.0 mlx5_4 (MT4123 - MCX653105A-HDAT) ConnectX-6 VPI adapter card, HDR IB (200Gb/s) and 200GbE, single-port QSFP56                                                                                                           fw 20.35.3006 port 1 (ACTIVE) ==&gt; ibp194s0 (Up)<br>0000:db:00.0 mlx5_5 (MT4123 - MCX653105A-HDAT) ConnectX-6 VPI adapter card, HDR IB (200Gb/s) and 200GbE, single-port QSFP56                                                                                                           fw 20.35.3006 port 1 (ACTIVE) ==&gt; ibp219s0 (Up)<br>0000:17:00.0 mlx5_bond_0 (MT4119 - MCX562A-ACAB) ConnectX-5 EN network interface card for OCP 3.0, with host management, 25GbE Dual-port SFP28, Pull Tab bracket                                                                        fw 16.35.3006 port 1 (ACTIVE) ==&gt; bond1 (Up)<br></code></pre></td></tr></table></figure><h2 id="推理引擎准备">2.7 推理引擎准备</h2><p>此处使用的推理引擎是vLLM，vLLM是一个快速易用的LLM推理和服务库，旨在提高模型运行的效率和性能。它通过内存优化和推理加速技术，使得在资源有限的环境下也能高效运行大型语言模型。它跟ollama是同一类开源产品。</p><p>从<ahref="https://docs.vllm.ai/en/latest/getting_started/installation/gpu/index.html">官方部署vLLM文档</a>上看，vLLM支持Python与Docker两种安装方式。此文档在多个服务器上以集群的方式运行vLLM进程，为了保证所有服务器上执行环境如模型文件所在目录、Python环境等的一致性，此处通过Docker的方式安装vLLM与运行vLLM。</p><h3 id="安装docker环境">2.7.1 安装Docker环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 apt 依赖包，用于通过HTTPS来获取仓库</span><br>sudo apt-get -qy install apt-transport-https ca-certificates curl gnupg-agent software-properties-common<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加 Docker 的官方 GPG 密钥</span><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命名会提示“gpg: no valid OpenPGP data found.”，其中一种解决办法如下：</span><br>sudo gpg --keyserver keyserver.ubuntu.com --recv 7EA0A9C3F273FCD8<br>sudo gpg --export --armor 7EA0A9C3F273FCD8 |sudo apt-key add -<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置稳定版仓库(添加到/etc/apt/sources.list中)</span><br>sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;<br><br>sudo apt-get update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查询可安装docker-ce版本</span><br>sudo apt-cache policy docker-ce<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装指定版本</span><br>sudo apt-get -qy install docker-ce=5:28.0.0-1~ubuntu.22.04~jammy<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看docker版本</span><br>sudo docker --version<br></code></pre></td></tr></table></figure><h3 id="配置docker使用nvidia-gpu">2.7.2 配置Docker使用NVIDIA GPU</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">设置 repository 和 GPG key</span><br>distribution=$(. /etc/os-release;echo $ID$VERSION_ID)<br>curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -<br>curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 nvidia-docker2</span><br>sudo apt-get update<br>sudo apt-get install -y nvidia-docker2<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改docker守护进程配置文件/etc/docker/daemon.json</span> <br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo vi /etc/docker/daemon.json <br>&#123;<br>  &quot;default-runtime&quot;: &quot;nvidia&quot;,<br>  &quot;runtimes&quot;: &#123;<br>    &quot;nvidia&quot;: &#123;<br>      &quot;path&quot;: &quot;/usr/bin/nvidia-container-runtime&quot;,<br>      &quot;runtimeArgs&quot;: []<br>    &#125; <br>  &#125;,<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>  &quot;dns&quot;: [<br>    &quot;223.5.5.5&quot;,<br>    &quot;223.6.6.6&quot;,<br>    &quot;8.8.8.8&quot;<br>  ],<br>  &quot;log-opts&quot;: &#123;<br>    &quot;max-file&quot;: &quot;5&quot;,<br>    &quot;max-size&quot;: &quot;50m&quot;<br>  &#125;,<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://registry.aliyuncs.com&quot;,<br>    &quot;https://registry.docker-cn.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.nju.edu.cn&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ] <br>&#125; <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载此文件，重启docker进程</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看docker详细配置信息</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo docker info<br>Client: Docker Engine - Community<br> Version:    28.0.0<br> Context:    default<br> Debug Mode: false<br><br>Server:<br> Containers: 0<br>  Running: 0<br>  Paused: 0<br>  Stopped: 0<br> Images: 0<br> Server Version: 26.1.4<br> Storage Driver: overlay2<br>  Backing Filesystem: extfs<br>  Supports d_type: true<br>  Using metacopy: false<br>  Native Overlay Diff: true<br>  userxattr: false<br> Logging Driver: json-file<br> Cgroup Driver: systemd<br> Cgroup Version: 2<br> Plugins:<br>  Volume: local<br>  Network: bridge host ipvlan macvlan null overlay<br>  Log: awslogs fluentd gcplogs gelf journald json-file local splunk syslog<br> Swarm: inactive<br> Runtimes: io.containerd.runc.v2 nvidia runc<br> Default Runtime: nvidia<br> ...<br></code></pre></td></tr></table></figure><h3 id="拉取vllm-openai镜像">2.7.3 拉取vllm-openai镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">此处不使用dockerhub上的镜像，而是使用阿里云上的镜像</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai:v0.7.2<br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo docker images<br>REPOSITORY                                                            TAG       IMAGE ID       CREATED       SIZE<br>swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai   v0.7.2    f78c8f2f8ad5   2 weeks ago   16.5GB<br></code></pre></td></tr></table></figure><h3 id="下载vllm代码仓库">2.7.4 下载vllm代码仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek1:~$ mkdir code_repos<br>(self-llm) deepseek@deepseek1:~$ cd code_repos/<br>(self-llm) deepseek@deepseek1:~/code_repos$ git clone https://github.com/vllm-project/vllm.git<br>(self-llm) deepseek@deepseek1:~/code_repos$ cd vllm/<br></code></pre></td></tr></table></figure><h1 id="三正式部署验证与使用">三、正式部署验证与使用</h1><h2 id="运行vllm推理引擎与验证">3.1 运行vLLM推理引擎与验证</h2><p>参考：<ahref="https://docs.vllm.ai/en/latest/serving/distributed_serving.html#running-vllm-on-multiple-nodes">RunningvLLM on multiple nodes</a></p><h3 id="在各节点启动node容器">3.1.1 在各节点启动node容器</h3><p>在各节点启动node容器，以创建ray集群或向其中添加节点。</p><h4 id="vllm集群主节点">vllm集群主节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">对于vllm集群主节点，操作如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##启动集群主节点上的进程命令如下</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bash run_cluster.sh \</span><br><span class="language-bash"><span class="hljs-comment">#    vllm/vllm-openai \</span></span><br><span class="language-bash"><span class="hljs-comment">#    ip_of_head_node \</span></span><br><span class="language-bash"><span class="hljs-comment">#    --head \</span></span><br><span class="language-bash"><span class="hljs-comment">#    /path/to/the/huggingface/home/in/this/node \</span></span><br><span class="language-bash"><span class="hljs-comment">#    -e VLLM_HOST_IP=ip_of_this_node</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下命令执行会在当前shell中启动子进程且永远阻塞，需要保证此shell进程不被关闭或杀死，如果某个shell进程被关闭或杀死（针对启动vllm集群的每个节点上的shell进程而言）将导致ray集群异常</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">保证/mnt目录有如下目录：hub/models/deepseek-ai/DeepSeek-R1-BP16/，此目录下放置从modelscope下载下来的DeepSeek-R1-BP16模型仓库中所有文件</span><br>(self-llm) deepseek@deepseek1:~/code_repos$ sudo bash examples/online_serving/run_cluster.sh \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai:v0.7.2 \<br>    10.119.85.141 \<br>    --head \<br>    /mnt \<br>    --cap-add SYS_ADMIN \<br>    -e VLLM_HOST_IP=10.119.85.141 \<br>    --privileged -e NCCL_IB_HCA=mlx5 \<br>    -e NCCL_P2P_LEVEL=NVL \<br>    -e NCCL_IB_GID_INDEX=3 \<br>    -e NCCL_IB_DISABLE=0 \<br>    -e NCCL_DEBUG=INFO \<br>    -e NCCL_SOCKET_IFNAME=bond1<br></code></pre></td></tr></table></figure><p>其中相关部分参数的解释如下（可参考官网：https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/index.html）：</p><ul><li><p>NCCL_IB_HCA</p></li><li><p>NCCL_P2P_LEVEL</p></li></ul><p>​允许用户精细控制何时在gpu之间使用点对点（P2P）传输。值是一个枚举类型，有LOC、NVL 等</p><ul><li>NCCL_IB_GID_INDEX</li></ul><p>​ 定义了RoCE模式中使用的全局ID索引。可选值如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek3:~$ show_gids              <br>DEV     PORT    INDEX   GID                                     IPv4            VER     DEV<br>---     ----    -----   ---                                     ------------    ---     ---<br>mlx5_2  1       0       fe80:0000:0000:0000:a088:c203:0014:e6e2                 v1<br>mlx5_3  1       0       fe80:0000:0000:0000:a088:c203:0014:e7ea                 v1<br>mlx5_4  1       0       fe80:0000:0000:0000:a088:c203:0014:e9f6                 v1<br>mlx5_5  1       0       fe80:0000:0000:0000:946d:ae03:00ed:119e                 v1<br>mlx5_bond_0     1       0       fe80:0000:0000:0000:1270:fdff:fec2:6294                 v1      bond1<br>mlx5_bond_0     1       1       fe80:0000:0000:0000:1270:fdff:fec2:6294                 v2      bond1<br>mlx5_bond_0     1       2       0000:0000:0000:0000:0000:ffff:0a77:558c 10.119.85.140   v1      bond1<br>mlx5_bond_0     1       3       0000:0000:0000:0000:0000:ffff:0a77:558c 10.119.85.140   v2      bond1<br>n_gids_found=8<br></code></pre></td></tr></table></figure><ul><li>NCCL_IB_DISABLE</li><li>NCCL_DEBUG</li><li>NCCL_SOCKET_IFNAME</li></ul><p>​指定用于通信的IP接口。参考：https://docs.nvidia.com/deeplearning/nccl/user-guide/docs/env.html#nccl-socket-ifname</p><ul><li>NCCL_NET_GDR_LEVEL</li></ul><p>​ 允许用户精细控制何时在网卡和GPU之间使用GPU直接RDMA。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">成功运行后，输出大致如下</span><br>2025-02-23 22:04:33,124 INFO usage_lib.py:467 -- Usage stats collection is enabled by default without user confirmation because this terminal is detected to be non-interactive. To disable this, add `--disable-usage-stats` to the command that starts the cluster, or run the following command: `ray disable-usage-stats` before starting the cluster. See https://docs.ray.io/en/master/cluster/usage-stats.html for more details.<br>2025-02-23 22:04:33,125 INFO scripts.py:865 -- Local node IP: 10.119.165.139<br>2025-02-23 22:04:34,147 SUCC scripts.py:902 -- --------------------<br>2025-02-23 22:04:34,147 SUCC scripts.py:903 -- Ray runtime started.<br>2025-02-23 22:04:34,147 SUCC scripts.py:904 -- --------------------<br>2025-02-23 22:04:34,147 INFO scripts.py:906 -- Next steps<br>2025-02-23 22:04:34,148 INFO scripts.py:909 -- To add another node to this Ray cluster, run<br>2025-02-23 22:04:34,148 INFO scripts.py:912 --   ray start --address=&#x27;10.119.165.139:6379&#x27;<br>2025-02-23 22:04:34,148 INFO scripts.py:921 -- To connect to this Ray cluster:<br>2025-02-23 22:04:34,148 INFO scripts.py:923 -- import ray<br>2025-02-23 22:04:34,148 INFO scripts.py:924 -- ray.init()<br>2025-02-23 22:04:34,148 INFO scripts.py:936 -- To submit a Ray job using the Ray Jobs CLI:<br>2025-02-23 22:04:34,148 INFO scripts.py:937 --   RAY_ADDRESS=&#x27;http://127.0.0.1:8265&#x27; ray job submit --working-dir . -- python my_script.py<br>2025-02-23 22:04:34,148 INFO scripts.py:946 -- See https://docs.ray.io/en/latest/cluster/running-applications/job-submission/index.html <br>2025-02-23 22:04:34,148 INFO scripts.py:950 -- for more information on submitting Ray jobs to the Ray cluster.<br>2025-02-23 22:04:34,148 INFO scripts.py:955 -- To terminate the Ray runtime, run<br>2025-02-23 22:04:34,148 INFO scripts.py:956 --   ray stop<br>2025-02-23 22:04:34,148 INFO scripts.py:959 -- To view the status of the cluster, use<br>2025-02-23 22:04:34,148 INFO scripts.py:960 --   ray status<br>2025-02-23 22:04:34,148 INFO scripts.py:964 -- To monitor and debug Ray, view the dashboard at <br>2025-02-23 22:04:34,148 INFO scripts.py:965 --   127.0.0.1:8265<br>2025-02-23 22:04:34,148 INFO scripts.py:972 -- If connection to the dashboard fails, check your firewall settings and network configuration.<br>2025-02-23 22:04:34,148 INFO scripts.py:1076 -- --block<br>2025-02-23 22:04:34,148 INFO scripts.py:1077 -- This command will now block forever until terminated by a signal.<br>2025-02-23 22:04:34,148 INFO scripts.py:1080 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.<br></code></pre></td></tr></table></figure><h4 id="vllm进程集群副节点">vllm进程集群副节点</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">对于vllm进程集群副节点，操作如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此次部署时，一共有4个服务器。deepseek1是主节点，deepseek2、deepseek3、deepseek4都是副节点</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所以deepseek3、deepseek4上也需要执行如下操作</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##启动集群副节点上的进程命令如下</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bash run_cluster.sh \</span><br><span class="language-bash"><span class="hljs-comment">#    vllm/vllm-openai \</span></span><br><span class="language-bash"><span class="hljs-comment">#    ip_of_head_node \</span></span><br><span class="language-bash"><span class="hljs-comment">#    --worker \</span></span><br><span class="language-bash"><span class="hljs-comment">#    /path/to/the/huggingface/home/in/this/node \</span></span><br><span class="language-bash"><span class="hljs-comment">#    -e VLLM_HOST_IP=ip_of_this_node</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下命令执行会在当前shell中启动子进程且永远阻塞，需要保证此shell进程不被关闭或杀死，如果某个shell进程被关闭或杀死（针对启动vllm集群的每个节点上的shell进程而言）将导致ray集群不符合预期</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下命令中注意修改VLLM_HOST_IP的值为具体节点的IP</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#10000M network</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.139 deepseek1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.138 deepseek2</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.140 deepseek3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.165.141 deepseek4</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#IB network</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.85.141 deepseek1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.85.138 deepseek2</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.85.140 deepseek3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.119.85.139 deepseek4</span><br>(self-llm) deepseek@deepseek2:~/code_repos/vllm$ sudo bash examples/online_serving/run_cluster.sh \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/vllm/vllm-openai:v0.7.2 \<br>    10.119.85.141 \<br>    --worker \<br>    /home/deepseek/.cache/modelscope \<br>    --cap-add SYS_ADMIN \<br>    -e VLLM_HOST_IP=10.119.85.138 \<br>    --privileged -e NCCL_IB_HCA=mlx5 \<br>    -e NCCL_P2P_LEVEL=NVL \<br>    -e NCCL_IB_GID_INDEX=3 \<br>    -e NCCL_IB_DISABLE=0 \<br>    -e NCCL_DEBUG=INFO \<br>    -e NCCL_SOCKET_IFNAME=bond1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行成功后，输出如下</span><br>[2025-02-23 22:06:55,915 W 1 1] global_state_accessor.cc:429: Retrying to get node with node ID de9745473ab8d1adb62391a32ea4254142ca109b2520c761285bc1a0<br>2025-02-23 22:06:55,851 INFO scripts.py:1047 -- Local node IP: 10.119.85.138<br>2025-02-23 22:06:56,937 SUCC scripts.py:1063 -- --------------------<br>2025-02-23 22:06:56,937 SUCC scripts.py:1064 -- Ray runtime started.<br>2025-02-23 22:06:56,937 SUCC scripts.py:1065 -- --------------------<br>2025-02-23 22:06:56,937 INFO scripts.py:1067 -- To terminate the Ray runtime, run<br>2025-02-23 22:06:56,938 INFO scripts.py:1068 --   ray stop<br>2025-02-23 22:06:56,938 INFO scripts.py:1076 -- --block<br>2025-02-23 22:06:56,938 INFO scripts.py:1077 -- This command will now block forever until terminated by a signal.<br>2025-02-23 22:06:56,938 INFO scripts.py:1080 -- Running subprocesses are monitored and a message will be printed if any of them terminate unexpectedly. Subprocesses exit with SIGTERM will be treated as graceful, thus NOT reported.<br><br></code></pre></td></tr></table></figure><p>上述操作当在每个服务器启动一个名为node的容器。按照vllm官方文档的说法，上述操作针启动一个<code>以容器形式运行的ray集群</code>（英文是“aray cluster of<strong>containers</strong>”，不知如何翻译更准确，暂时就叫这个名字吧），4个服务器上的每个node容器都是这个容器集群的一员。</p><h3 id="查看ray集群">3.1.2 查看ray集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在集群中任何一个节点进入node容器（每个节点上都有一个node容器）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">比如在deepseek1服务器上，再打开一个终端窗口，执行如下命令</span><br>(base) deepseek@deepseek1:~$ sudo docker exec -it node /bin/bash<br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下在node容器中执行</span><br>root@deepseek1:/vllm-workspace# ray status<br>======== Autoscaler status: 2025-02-23 22:08:18.818774 ========<br>Node status<br>---------------------------------------------------------------<br>Active:<br> 1 node_5a3c4cb16e576f2afb9e2c612f5052ab28c46014fcfa7d7b501eb35c<br> 1 node_de9745473ab8d1adb62391a32ea4254142ca109b2520c761285bc1a0<br> 1 node_f2f75b7120e56b71d416d9af7301c3ad78ead0a19a6bf810a35e016f<br> 1 node_d0f9e04c9e3425460679f6fc59d274be1547d81f6a5f1d3dbd96c0fb<br>Pending:<br> (no pending nodes)<br>Recent failures:<br> (no failures)<br><br>Resources<br>---------------------------------------------------------------<br>Usage:<br> 0.0/448.0 CPU<br> 0.0/32.0 GPU<br> 0B/3.89TiB memory<br> 0B/38.91GiB object_store_memory<br><br>Demands:<br> (no resource demands)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##可以看到当前ray集群中一共有4个节点，且都是处于Active状态；ray集群总CPU数是448、总GPU个数是32、总内存是3.89T</span></span><br>root@deepseek1:/vllm-workspace# <br></code></pre></td></tr></table></figure><h3 id="收集环境信息">3.1.3 收集环境信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@deepseek1:/vllm-workspace# python3 /usr/local/lib/python3.12/dist-packages/torch/utils/collect_env.py<br></code></pre></td></tr></table></figure><h3 id="检查跨节点gpu通信">3.1.4 检查跨节点GPU通信</h3><p>参考：<ahref="https://docs.vllm.ai/en/latest/getting_started/troubleshooting.html#incorrect-hardware-driver">sanitycheck script</a></p><h4 id="在node容器内创建test.py">在node容器内创建test.py</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python">root@deepseek1:/vllm-workspace<span class="hljs-comment"># cat test.py</span><br><span class="hljs-comment"># Test PyTorch NCCL</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.distributed <span class="hljs-keyword">as</span> dist<br>dist.init_process_group(backend=<span class="hljs-string">&quot;nccl&quot;</span>)<br>local_rank = dist.get_rank() % torch.cuda.device_count()<br>torch.cuda.set_device(local_rank)<br>data = torch.FloatTensor([<span class="hljs-number">1</span>,] * <span class="hljs-number">128</span>).to(<span class="hljs-string">&quot;cuda&quot;</span>)<br>dist.all_reduce(data, op=dist.ReduceOp.SUM)<br>torch.cuda.synchronize()<br>value = data.mean().item()<br>world_size = dist.get_world_size()<br><span class="hljs-keyword">assert</span> value == world_size, <span class="hljs-string">f&quot;Expected <span class="hljs-subst">&#123;world_size&#125;</span>, got <span class="hljs-subst">&#123;value&#125;</span>&quot;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;PyTorch NCCL is successful!&quot;</span>)<br><br><span class="hljs-comment"># Test PyTorch GLOO</span><br>gloo_group = dist.new_group(ranks=<span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(world_size)), backend=<span class="hljs-string">&quot;gloo&quot;</span>)<br>cpu_data = torch.FloatTensor([<span class="hljs-number">1</span>,] * <span class="hljs-number">128</span>)<br>dist.all_reduce(cpu_data, op=dist.ReduceOp.SUM, group=gloo_group)<br>value = cpu_data.mean().item()<br><span class="hljs-keyword">assert</span> value == world_size, <span class="hljs-string">f&quot;Expected <span class="hljs-subst">&#123;world_size&#125;</span>, got <span class="hljs-subst">&#123;value&#125;</span>&quot;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;PyTorch GLOO is successful!&quot;</span>)<br><br><span class="hljs-keyword">if</span> world_size &lt;= <span class="hljs-number">1</span>:<br>    exit()<br><br><span class="hljs-comment"># Test vLLM NCCL, with cuda graph</span><br><span class="hljs-keyword">from</span> vllm.distributed.device_communicators.pynccl <span class="hljs-keyword">import</span> PyNcclCommunicator<br><br>pynccl = PyNcclCommunicator(group=gloo_group, device=local_rank)<br><span class="hljs-comment"># pynccl is enabled by default for 0.6.5+,</span><br><span class="hljs-comment"># but for 0.6.4 and below, we need to enable it manually.</span><br><span class="hljs-comment"># keep the code for backward compatibility when because people</span><br><span class="hljs-comment"># prefer to read the latest documentation.</span><br>pynccl.disabled = <span class="hljs-literal">False</span><br><br>s = torch.cuda.Stream()<br><span class="hljs-keyword">with</span> torch.cuda.stream(s):<br>    data.fill_(<span class="hljs-number">1</span>)<br>    out = pynccl.all_reduce(data, stream=s)<br>    value = out.mean().item()<br>    <span class="hljs-keyword">assert</span> value == world_size, <span class="hljs-string">f&quot;Expected <span class="hljs-subst">&#123;world_size&#125;</span>, got <span class="hljs-subst">&#123;value&#125;</span>&quot;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;vLLM NCCL is successful!&quot;</span>)<br><br>g = torch.cuda.CUDAGraph()<br><span class="hljs-keyword">with</span> torch.cuda.graph(cuda_graph=g, stream=s):<br>    out = pynccl.all_reduce(data, stream=torch.cuda.current_stream())<br><br>data.fill_(<span class="hljs-number">1</span>)<br>g.replay()<br>torch.cuda.current_stream().synchronize()<br>value = out.mean().item()<br><span class="hljs-keyword">assert</span> value == world_size, <span class="hljs-string">f&quot;Expected <span class="hljs-subst">&#123;world_size&#125;</span>, got <span class="hljs-subst">&#123;value&#125;</span>&quot;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;vLLM NCCL with cuda graph is successful!&quot;</span>)<br><br>dist.destroy_process_group(gloo_group)<br>dist.destroy_process_group()<br></code></pre></td></tr></table></figure><h4 id="在单个节点上测试">在单个节点上测试</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">--nproc-per-node 是此节点上，待要使用的GPU个数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NCCL_DEBUG=TRACE torchrun --nproc-per-node=&lt;number-of-GPUs&gt; test.py</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NCCL_P2P_DISABLE=0</span> <br>NCCL_DEBUG=TRACE torchrun --nproc-per-node=8 test.py<br></code></pre></td></tr></table></figure><p>如果上述py文件运行成功且通信是正常的，则输出类似于如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell">...<br>deepseek1:1239:1239 [3] NCCL INFO Connected all trees<br>deepseek1:1239:1239 [3] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512<br>deepseek1:1239:1239 [3] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer<br>deepseek1:1240:1240 [4] NCCL INFO Connected all trees<br>deepseek1:1240:1240 [4] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512<br>deepseek1:1240:1240 [4] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer<br>deepseek1:1241:1241 [5] NCCL INFO Connected all trees<br>deepseek1:1241:1241 [5] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512<br>deepseek1:1241:1241 [5] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer<br>deepseek1:1243:1243 [7] NCCL INFO Connected all trees<br>deepseek1:1243:1243 [7] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512<br>deepseek1:1243:1243 [7] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer<br>deepseek1:1242:1242 [6] NCCL INFO Connected all trees<br>deepseek1:1242:1242 [6] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512<br>deepseek1:1242:1242 [6] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer<br>deepseek1:1236:1236 [0] NCCL INFO ncclCommInitRank comm 0xb606410 rank 0 nranks 8 cudaDev 0 nvmlDev 0 busId 3d000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1238:1238 [2] NCCL INFO ncclCommInitRank comm 0xb88e340 rank 2 nranks 8 cudaDev 2 nvmlDev 2 busId 61000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1240:1240 [4] NCCL INFO ncclCommInitRank comm 0xad28600 rank 4 nranks 8 cudaDev 4 nvmlDev 4 busId ad000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1242:1242 [6] NCCL INFO ncclCommInitRank comm 0xb29e250 rank 6 nranks 8 cudaDev 6 nvmlDev 6 busId d0000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1237:1237 [1] NCCL INFO ncclCommInitRank comm 0xb60f020 rank 1 nranks 8 cudaDev 1 nvmlDev 1 busId 42000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1241:1241 [5] NCCL INFO ncclCommInitRank comm 0xc2f2570 rank 5 nranks 8 cudaDev 5 nvmlDev 5 busId b1000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1239:1239 [3] NCCL INFO ncclCommInitRank comm 0xac2c590 rank 3 nranks 8 cudaDev 3 nvmlDev 3 busId 67000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>deepseek1:1243:1243 [7] NCCL INFO ncclCommInitRank comm 0xbd1b050 rank 7 nranks 8 cudaDev 7 nvmlDev 7 busId d3000 commId 0x3c2a650fc7de9a50 - Init COMPLETE<br>vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!<br><br><br><br><br><br>vLLM NCCL is successful!<br>vLLM NCCL is successful!<br>vLLM NCCL with cuda graph is successful!vLLM NCCL with cuda graph is successful!vLLM NCCL with cuda graph is successful!<br><br>vLLM NCCL with cuda graph is successful!<br><br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>deepseek1:1236:1299 [0] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek1:1237:1286 [1] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek1:1241:1291 [5] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek1:1240:1293 [4] NCCL INFO [Service thread] Connection closed by localRank 4<br>deepseek1:1239:1295 [3] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek1:1242:1288 [6] NCCL INFO [Service thread] Connection closed by localRank 6<br>deepseek1:1243:1287 [7] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek1:1238:1290 [2] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek1:1236:1400 [0] NCCL INFO comm 0x8265490 rank 0 nranks 8 cudaDev 0 busId 3d000 - Abort COMPLETE<br>deepseek1:1243:1405 [7] NCCL INFO comm 0x897f4f0 rank 7 nranks 8 cudaDev 7 busId d3000 - Abort COMPLETE<br>deepseek1:1237:1403 [1] NCCL INFO comm 0x828e430 rank 1 nranks 8 cudaDev 1 busId 42000 - Abort COMPLETE<br>deepseek1:1240:1402 [4] NCCL INFO comm 0x79a3f10 rank 4 nranks 8 cudaDev 4 busId ad000 - Abort COMPLETE<br>deepseek1:1241:1401 [5] NCCL INFO comm 0x8f75840 rank 5 nranks 8 cudaDev 5 busId b1000 - Abort COMPLETE<br>deepseek1:1242:1404 [6] NCCL INFO comm 0x7f1d4b0 rank 6 nranks 8 cudaDev 6 busId d0000 - Abort COMPLETE<br>deepseek1:1238:1407 [2] NCCL INFO comm 0x850c0d0 rank 2 nranks 8 cudaDev 2 busId 61000 - Abort COMPLETE<br>deepseek1:1239:1406 [3] NCCL INFO comm 0x78b0310 rank 3 nranks 8 cudaDev 3 busId 67000 - Abort COMPLETE<br></code></pre></td></tr></table></figure><h4 id="在多个节点间测试">在多个节点间测试</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法1）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--nnodes 是节点个数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--nproc-per-node 是各节点上，待要使用的GPU个数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--rdzv_endpoint 是ray集群中主节点的IP（保证这个IP在所有节点上都是可访问的。既然都已经搭建出ray集群，当然是可访问的）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在4个服务器上的node容器中执行如下相同的命令</span><br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --rdzv_backend=c10d --rdzv_endpoint=10.119.85.141 test.py<br><span class="hljs-meta prompt_">#</span><span class="language-bash">必须等4个容器中的命令都执行起来后，测试程序才会往下执行与输出相关内容</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##方法2）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在4个服务器上的node容器中分别执行如下命令：</span><br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 0 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 1 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 2 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 3 --master_addr 10.119.85.141 test.py<br><span class="hljs-meta prompt_">#</span><span class="language-bash">必须等4个容器中的命令都执行起来后，测试程序才会往下执行与输出相关内容</span><br></code></pre></td></tr></table></figure><p>如果上述py文件运行成功且通信是正常的，则某个node容器test.py将输出类似于如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><code class="hljs shell">...<br>INFO 02-24 00:01:07 pynccl.py:69] vLLM is using nccl==2.21.5<br>deepseek2:460:460 [4] NCCL INFO Using non-device net plugin version 0<br>deepseek2:460:460 [4] NCCL INFO Using network IB<br>deepseek2:459:459 [3] NCCL INFO ncclCommInitRank comm 0xb0c19c0 rank 11 nranks 32 cudaDev 3 nvmlDev 3 busId 67000 commId 0x8da567a0342af828 - Init START<br>deepseek2:458:458 [2] NCCL INFO ncclCommInitRank comm 0xb7b98b0 rank 10 nranks 32 cudaDev 2 nvmlDev 2 busId 61000 commId 0x8da567a0342af828 - Init START<br>deepseek2:457:457 [1] NCCL INFO ncclCommInitRank comm 0xc8103e0 rank 9 nranks 32 cudaDev 1 nvmlDev 1 busId 42000 commId 0x8da567a0342af828 - Init START<br>deepseek2:460:460 [4] NCCL INFO ncclCommInitRank comm 0xc1ff420 rank 12 nranks 32 cudaDev 4 nvmlDev 4 busId ad000 commId 0x8da567a0342af828 - Init START<br>deepseek2:456:456 [0] NCCL INFO ncclCommInitRank comm 0xbd9b580 rank 8 nranks 32 cudaDev 0 nvmlDev 0 busId 3d000 commId 0x8da567a0342af828 - Init START<br>deepseek2:461:461 [5] NCCL INFO ncclCommInitRank comm 0xc041a00 rank 13 nranks 32 cudaDev 5 nvmlDev 5 busId b1000 commId 0x8da567a0342af828 - Init START<br>deepseek2:463:463 [7] NCCL INFO ncclCommInitRank comm 0xc41ace0 rank 15 nranks 32 cudaDev 7 nvmlDev 7 busId d3000 commId 0x8da567a0342af828 - Init START<br>deepseek2:462:462 [6] NCCL INFO ncclCommInitRank comm 0xb794080 rank 14 nranks 32 cudaDev 6 nvmlDev 6 busId d0000 commId 0x8da567a0342af828 - Init START<br>deepseek2:463:463 [7] NCCL INFO Setting affinity for GPU 7 to ffff,fff00000,00ffffff,f0000000<br>deepseek2:463:463 [7] NCCL INFO NVLS multicast support is not available on dev 7<br>deepseek2:459:459 [3] NCCL INFO Setting affinity for GPU 3 to 0fffff,ff000000,0fffffff<br>deepseek2:459:459 [3] NCCL INFO NVLS multicast support is not available on dev 3<br>deepseek2:460:460 [4] NCCL INFO Setting affinity for GPU 4 to ffff,fff00000,00ffffff,f0000000<br>deepseek2:460:460 [4] NCCL INFO NVLS multicast support is not available on dev 4<br>deepseek2:461:461 [5] NCCL INFO Setting affinity for GPU 5 to ffff,fff00000,00ffffff,f0000000<br>deepseek2:461:461 [5] NCCL INFO NVLS multicast support is not available on dev 5<br>deepseek2:456:456 [0] NCCL INFO Setting affinity for GPU 0 to 0fffff,ff000000,0fffffff<br>deepseek2:456:456 [0] NCCL INFO NVLS multicast support is not available on dev 0<br>deepseek2:457:457 [1] NCCL INFO Setting affinity for GPU 1 to 0fffff,ff000000,0fffffff<br>deepseek2:457:457 [1] NCCL INFO NVLS multicast support is not available on dev 1<br>deepseek2:458:458 [2] NCCL INFO Setting affinity for GPU 2 to 0fffff,ff000000,0fffffff<br>deepseek2:458:458 [2] NCCL INFO NVLS multicast support is not available on dev 2<br>deepseek2:462:462 [6] NCCL INFO Setting affinity for GPU 6 to ffff,fff00000,00ffffff,f0000000<br>deepseek2:462:462 [6] NCCL INFO NVLS multicast support is not available on dev 6<br>deepseek2:463:463 [7] NCCL INFO comm 0xc41ace0 rank 15 nRanks 32 nNodes 4 localRanks 8 localRank 7 MNNVL 0<br>deepseek2:462:462 [6] NCCL INFO comm 0xb794080 rank 14 nRanks 32 nNodes 4 localRanks 8 localRank 6 MNNVL 0<br>deepseek2:457:457 [1] NCCL INFO comm 0xc8103e0 rank 9 nRanks 32 nNodes 4 localRanks 8 localRank 1 MNNVL 0<br>deepseek2:461:461 [5] NCCL INFO comm 0xc041a00 rank 13 nRanks 32 nNodes 4 localRanks 8 localRank 5 MNNVL 0<br>deepseek2:460:460 [4] NCCL INFO comm 0xc1ff420 rank 12 nRanks 32 nNodes 4 localRanks 8 localRank 4 MNNVL 0<br>deepseek2:458:458 [2] NCCL INFO comm 0xb7b98b0 rank 10 nRanks 32 nNodes 4 localRanks 8 localRank 2 MNNVL 0<br>deepseek2:462:462 [6] NCCL INFO Trees [0] 15/-1/-1-&gt;14-&gt;13 [1] 15/-1/-1-&gt;14-&gt;13 [2] 15/-1/-1-&gt;14-&gt;13 [3] 15/-1/-1-&gt;14-&gt;13<br>deepseek2:463:463 [7] NCCL INFO Trees [0] -1/-1/-1-&gt;15-&gt;14 [1] 8/-1/-1-&gt;15-&gt;14 [2] -1/-1/-1-&gt;15-&gt;14 [3] 8/-1/-1-&gt;15-&gt;14<br>deepseek2:459:459 [3] NCCL INFO comm 0xb0c19c0 rank 11 nRanks 32 nNodes 4 localRanks 8 localRank 3 MNNVL 0<br>deepseek2:456:456 [0] NCCL INFO comm 0xbd9b580 rank 8 nRanks 32 nNodes 4 localRanks 8 localRank 0 MNNVL 0<br>deepseek2:462:462 [6] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:461:461 [5] NCCL INFO Trees [0] 14/-1/-1-&gt;13-&gt;12 [1] 14/-1/-1-&gt;13-&gt;12 [2] 14/-1/-1-&gt;13-&gt;12 [3] 14/-1/-1-&gt;13-&gt;12<br>deepseek2:463:463 [7] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:457:457 [1] NCCL INFO Trees [0] 10/-1/-1-&gt;9-&gt;8 [1] -1/-1/-1-&gt;9-&gt;8 [2] 10/16/-1-&gt;9-&gt;8 [3] -1/-1/-1-&gt;9-&gt;8<br>deepseek2:460:460 [4] NCCL INFO Trees [0] 13/-1/-1-&gt;12-&gt;11 [1] 13/-1/-1-&gt;12-&gt;11 [2] 13/-1/-1-&gt;12-&gt;11 [3] 13/-1/-1-&gt;12-&gt;11<br>deepseek2:461:461 [5] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:458:458 [2] NCCL INFO Trees [0] 11/-1/-1-&gt;10-&gt;9 [1] 11/-1/-1-&gt;10-&gt;19 [2] 11/-1/-1-&gt;10-&gt;9 [3] 11/6/-1-&gt;10-&gt;26<br>deepseek2:457:457 [1] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:459:459 [3] NCCL INFO Trees [0] 12/-1/-1-&gt;11-&gt;10 [1] 12/-1/-1-&gt;11-&gt;10 [2] 12/-1/-1-&gt;11-&gt;10 [3] 12/18/-1-&gt;11-&gt;10<br>deepseek2:458:458 [2] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:460:460 [4] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:459:459 [3] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:456:456 [0] NCCL INFO Trees [0] 9/-1/-1-&gt;8-&gt;17 [1] 9/-1/-1-&gt;8-&gt;15 [2] 9/2/-1-&gt;8-&gt;24 [3] 9/-1/-1-&gt;8-&gt;15<br>deepseek2:456:456 [0] NCCL INFO P2P Chunksize set to 131072<br>deepseek2:460:460 [4] NCCL INFO Channel 00/0 : 12[4] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 00/0 : 14[6] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 00/0 : 13[5] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 01/0 : 12[4] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 01/0 : 14[6] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 01/0 : 13[5] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 02/0 : 12[4] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 02/0 : 14[6] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 02/0 : 13[5] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 03/0 : 12[4] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 03/0 : 14[6] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 03/0 : 13[5] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 00/0 : 9[1] -&gt; 16[0] [send] via NET/IB/0/GDRDMA<br>deepseek2:459:459 [3] NCCL INFO Channel 01/0 : 11[3] -&gt; 18[2] [send] via NET/IB/1/GDRDMA<br>deepseek2:457:457 [1] NCCL INFO Channel 02/0 : 9[1] -&gt; 16[0] [send] via NET/IB/0/GDRDMA<br>deepseek2:459:459 [3] NCCL INFO Channel 03/0 : 11[3] -&gt; 18[2] [send] via NET/IB/1/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 00/0 : 3[3] -&gt; 8[0] [receive] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 01/0 : 7[7] -&gt; 10[2] [receive] via NET/IB/1/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 3[3] -&gt; 8[0] [receive] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 7[7] -&gt; 10[2] [receive] via NET/IB/1/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 00/0 : 8[0] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 01/0 : 8[0] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 8[0] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 00/0 : 10[2] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 03/0 : 8[0] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 00/0 : 11[3] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 01/0 : 10[2] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 01/0 : 9[1] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 02/0 : 11[3] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 00/0 : 15[7] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 03/0 : 9[1] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 02/0 : 10[2] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 01/0 : 15[7] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 10[2] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 02/0 : 15[7] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 03/0 : 15[7] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Connected all rings<br>deepseek2:459:459 [3] NCCL INFO Connected all rings<br>deepseek2:460:460 [4] NCCL INFO Connected all rings<br>deepseek2:458:458 [2] NCCL INFO Channel 00/0 : 10[2] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 01/0 : 10[2] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 02/0 : 10[2] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 00/0 : 11[3] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 10[2] -&gt; 11[3] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 00/0 : 12[4] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 01/0 : 11[3] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Connected all rings<br>deepseek2:457:457 [1] NCCL INFO Connected all rings<br>deepseek2:456:456 [0] NCCL INFO Channel 00/0 : 8[0] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 01/0 : 12[4] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 02/0 : 11[3] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 01/0 : 8[0] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 02/0 : 12[4] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 03/0 : 11[3] -&gt; 12[4] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 8[0] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:460:460 [4] NCCL INFO Channel 03/0 : 12[4] -&gt; 13[5] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 03/0 : 8[0] -&gt; 9[1] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 00/0 : 9[1] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 03/0 : 18[2] -&gt; 11[3] [receive] via NET/IB/1/GDRDMA<br>deepseek2:457:457 [1] NCCL INFO Channel 02/0 : 9[1] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 2[2] -&gt; 8[0] [receive] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 6[6] -&gt; 10[2] [receive] via NET/IB/1/GDRDMA<br>deepseek2:457:457 [1] NCCL INFO Channel 02/0 : 16[0] -&gt; 9[1] [receive] via NET/IB/0/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 00/0 : 8[0] -&gt; 17[1] [send] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 01/0 : 10[2] -&gt; 19[3] [send] via NET/IB/1/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 24[0] -&gt; 8[0] [receive] via NET/IB/0/GDRDMA<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 8[0] -&gt; 24[0] [send] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 26[2] -&gt; 10[2] [receive] via NET/IB/1/GDRDMA<br>deepseek2:461:461 [5] NCCL INFO Connected all rings<br>deepseek2:463:463 [7] NCCL INFO Connected all rings<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 10[2] -&gt; 26[2] [send] via NET/IB/1/GDRDMA<br>deepseek2:462:462 [6] NCCL INFO Connected all rings<br>deepseek2:456:456 [0] NCCL INFO Channel 00/0 : 17[1] -&gt; 8[0] [receive] via NET/IB/0/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 01/0 : 19[3] -&gt; 10[2] [receive] via NET/IB/1/GDRDMA<br>deepseek2:458:458 [2] NCCL INFO Channel 03/0 : 10[2] -&gt; 6[6] [send] via NET/IB/1/GDRDMA<br>deepseek2:459:459 [3] NCCL INFO Channel 01/0 : 11[3] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:459:459 [3] NCCL INFO Channel 03/0 : 11[3] -&gt; 10[2] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 00/0 : 9[1] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 00/0 : 13[5] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:457:457 [1] NCCL INFO Channel 02/0 : 9[1] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 01/0 : 13[5] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 00/0 : 14[6] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 02/0 : 13[5] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 01/0 : 14[6] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:461:461 [5] NCCL INFO Channel 03/0 : 13[5] -&gt; 14[6] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 02/0 : 14[6] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:462:462 [6] NCCL INFO Channel 03/0 : 14[6] -&gt; 15[7] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 01/0 : 15[7] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:463:463 [7] NCCL INFO Channel 03/0 : 15[7] -&gt; 8[0] via P2P/CUMEM/read<br>deepseek2:456:456 [0] NCCL INFO Channel 02/0 : 8[0] -&gt; 2[2] [send] via NET/IB/0/GDRDMA<br>deepseek2:462:462 [6] NCCL INFO Connected all trees<br>deepseek2:462:462 [6] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:462:462 [6] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:461:461 [5] NCCL INFO Connected all trees<br>deepseek2:461:461 [5] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:461:461 [5] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:460:460 [4] NCCL INFO Connected all trees<br>deepseek2:460:460 [4] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:460:460 [4] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:458:458 [2] NCCL INFO Connected all trees<br>deepseek2:459:459 [3] NCCL INFO Connected all trees<br>deepseek2:458:458 [2] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:458:458 [2] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:459:459 [3] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:459:459 [3] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:463:463 [7] NCCL INFO Connected all trees<br>deepseek2:463:463 [7] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:463:463 [7] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:457:457 [1] NCCL INFO Connected all trees<br>deepseek2:457:457 [1] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:457:457 [1] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:456:456 [0] NCCL INFO Connected all trees<br>deepseek2:456:456 [0] NCCL INFO threadThresholds 8/8/64 | 256/8/64 | 512 | 512<br>deepseek2:456:456 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 1 p2p channels per peer<br>deepseek2:457:457 [1] NCCL INFO ncclCommInitRank comm 0xc8103e0 rank 9 nranks 32 cudaDev 1 nvmlDev 1 busId 42000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:459:459 [3] NCCL INFO ncclCommInitRank comm 0xb0c19c0 rank 11 nranks 32 cudaDev 3 nvmlDev 3 busId 67000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:462:462 [6] NCCL INFO ncclCommInitRank comm 0xb794080 rank 14 nranks 32 cudaDev 6 nvmlDev 6 busId d0000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:461:461 [5] NCCL INFO ncclCommInitRank comm 0xc041a00 rank 13 nranks 32 cudaDev 5 nvmlDev 5 busId b1000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:458:458 [2] NCCL INFO ncclCommInitRank comm 0xb7b98b0 rank 10 nranks 32 cudaDev 2 nvmlDev 2 busId 61000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:463:463 [7] NCCL INFO ncclCommInitRank comm 0xc41ace0 rank 15 nranks 32 cudaDev 7 nvmlDev 7 busId d3000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:460:460 [4] NCCL INFO ncclCommInitRank comm 0xc1ff420 rank 12 nranks 32 cudaDev 4 nvmlDev 4 busId ad000 commId 0x8da567a0342af828 - Init COMPLETE<br>deepseek2:456:456 [0] NCCL INFO ncclCommInitRank comm 0xbd9b580 rank 8 nranks 32 cudaDev 0 nvmlDev 0 busId 3d000 commId 0x8da567a0342af828 - Init COMPLETE<br>vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!vLLM NCCL is successful!<br>vLLM NCCL is successful!<br>vLLM NCCL is successful!vLLM NCCL is successful!<br><br><br><br><br>vLLM NCCL is successful!<br>vLLM NCCL with cuda graph is successful!vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!vLLM NCCL with cuda graph is successful!<br>vLLM NCCL with cuda graph is successful!<br><br><br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek2:457:552 [1] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek2:461:549 [5] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 6<br>deepseek2:459:551 [3] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 6<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek2:463:547 [7] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 6<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 6<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 4<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 5<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 4<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 4<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 4<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek2:456:544 [0] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 1<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek2:458:548 [2] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 3<br>deepseek2:462:546 [6] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek2:460:550 [4] NCCL INFO [Service thread] Connection closed by localRank 7<br>deepseek2:456:660 [0] NCCL INFO comm 0x8a11620 rank 8 nranks 32 cudaDev 0 busId 3d000 - Abort COMPLETE<br>deepseek2:458:664 [2] NCCL INFO comm 0x8430430 rank 10 nranks 32 cudaDev 2 busId 61000 - Abort COMPLETE<br>deepseek2:462:658 [6] NCCL INFO comm 0x84085f0 rank 14 nranks 32 cudaDev 6 busId d0000 - Abort COMPLETE<br>deepseek2:460:661 [4] NCCL INFO comm 0x8e5a270 rank 12 nranks 32 cudaDev 4 busId ad000 - Abort COMPLETE<br>deepseek2:463:662 [7] NCCL INFO comm 0x9090570 rank 15 nranks 32 cudaDev 7 busId d3000 - Abort COMPLETE<br>deepseek2:461:657 [5] NCCL INFO comm 0x8cb26b0 rank 13 nranks 32 cudaDev 5 busId b1000 - Abort COMPLETE<br>deepseek2:457:659 [1] NCCL INFO comm 0x948a0f0 rank 9 nranks 32 cudaDev 1 busId 42000 - Abort COMPLETE<br>deepseek2:459:663 [3] NCCL INFO comm 0x7d3d650 rank 11 nranks 32 cudaDev 3 busId 67000 - Abort COMPLETE<br>deepseek2:460:636 [32679] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:462:632 [32661] NCCL INFO [Service thread] Connection closed by localRank 0<br>deepseek2:460:636 [32679] NCCL INFO [Service thread] Connection closed by localRank 2<br>deepseek2:460:636 [32679] NCCL INFO [Service thread] Connection closed by localRank 6<br></code></pre></td></tr></table></figure><h5 id="报错与处理-1">报错与处理</h5><h6id="问题1-提示超时torch.distributed.elastic.rendezvous.api.rendezvoustimeouterror">问题1-提示超时”torch.distributed.elastic.rendezvous.api.RendezvousTimeoutError“</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果只是在ray集群的主节点node容器中执行如下命令，则会报错，如下。</span><br>root@deepseek1:/vllm-workspace# NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --rdzv_backend=c10d --rdzv_endpoint=10.119.165.139 test.py<br>W0223 01:40:19.140000 1778 torch/distributed/run.py:793] <br>W0223 01:40:19.140000 1778 torch/distributed/run.py:793] *****************************************<br>W0223 01:40:19.140000 1778 torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. <br>W0223 01:40:19.140000 1778 torch/distributed/run.py:793] *****************************************<br>Traceback (most recent call last):<br>  File &quot;/usr/local/bin/torchrun&quot;, line 8, in &lt;module&gt;<br>    sys.exit(main())<br>             ^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py&quot;, line 355, in wrapper<br>    return f(*args, **kwargs)<br>           ^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/run.py&quot;, line 919, in main<br>    run(args)<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/run.py&quot;, line 910, in run<br>    elastic_launch(<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/launcher/api.py&quot;, line 138, in __call__<br>    return launch_agent(self._config, self._entrypoint, list(args))<br>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/launcher/api.py&quot;, line 260, in launch_agent<br>    result = agent.run()<br>             ^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/metrics/api.py&quot;, line 137, in wrapper<br>    result = f(*args, **kwargs)<br>             ^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/agent/server/api.py&quot;, line 696, in run<br>    result = self._invoke_run(role)<br>             ^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/agent/server/api.py&quot;, line 849, in _invoke_run<br>    self._initialize_workers(self._worker_group)<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/metrics/api.py&quot;, line 137, in wrapper<br>    result = f(*args, **kwargs)<br>             ^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/agent/server/api.py&quot;, line 668, in _initialize_workers<br>    self._rendezvous(worker_group)<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/metrics/api.py&quot;, line 137, in wrapper<br>    result = f(*args, **kwargs)<br>             ^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/agent/server/api.py&quot;, line 500, in _rendezvous<br>    rdzv_info = spec.rdzv_handler.next_rendezvous()<br>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/rendezvous/dynamic_rendezvous.py&quot;, line 1157, in next_rendezvous<br>    self._op_executor.run(join_op, deadline, self._get_deadline)<br>  File &quot;/usr/local/lib/python3.12/dist-packages/torch/distributed/elastic/rendezvous/dynamic_rendezvous.py&quot;, line 679, in run<br>    raise RendezvousTimeoutError<br>torch.distributed.elastic.rendezvous.api.RendezvousTimeoutError<br></code></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在4个服务器上的node容器中分别执行如下命令：</span><br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 0 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 1 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 2 --master_addr 10.119.85.141 test.py<br>NCCL_DEBUG=TRACE torchrun --nnodes 4 --nproc-per-node=8 --node-rank 3 --master_addr 10.119.85.141 test.py<br><span class="hljs-meta prompt_">#</span><span class="language-bash">必须等4个容器中的命令都执行起来后，测试程序才会往下执行与输出相关内容</span><br></code></pre></td></tr></table></figure><h3 id="启动推理引擎vllm进程">3.1.5 启动推理引擎vllm进程</h3><h4 id="执行启动">执行启动</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##启动vllm进程的命令如下（当然还可以添加其他参数。可使用“vllm serve --help”查看）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">vllm serve /path/to/the/model/in/the/container \</span><br><span class="language-bash"><span class="hljs-comment">#     --tensor-parallel-size 8 \</span></span><br><span class="language-bash"><span class="hljs-comment">#     --pipeline-parallel-size 2</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">这vllm官网说可以在集群中任何一个节点进入node容器并执行“vllm serve ...”，但在ray集群主节点即<span class="hljs-built_in">head</span>节点执行命令，会提示“No available node types can fulfill resource request”。所以笔者选择在ray集群副节点即worker节点执行</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">比如在deepseek2服务器上，再打开一个终端窗口并进入node容器（也可以继续使用“查看ray集群”步骤中打开的容器会话）</span><br>(base) deepseek@deepseek2:~$ sudo docker exec -it node /bin/bash<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在node容器中执行以下命令，启动vllm进程。将有很多输出内容，以下截取部分</span><br>root@deepseek2:/vllm-workspace# vllm serve /root/.cache/huggingface/hub/models/unsloth/DeepSeek-R1-BF16/ \<br>    --served-model-name DeepSeek-R1-671B \<br>    --enable-prefix-caching \<br>    --max-model-len 32768 \<br>    --gpu-memory-utilization 0.95 \<br>    --tensor-parallel-size 8 \<br>    --pipeline-parallel-size 4 \<br>    --enable-chunked-prefill \<br>    --max-num-batched-tokens 32768 \<br>    --trust-remote-code \<br>    --port 8000 \<br>    --dtype auto \<br>    --api-key zY0MrQwXV9Oo3g==<br><span class="hljs-meta prompt_">#</span><span class="language-bash">相关参数的意义，参考“vllm serve --<span class="hljs-built_in">help</span>”输出或“https://docs.vllm.ai/en/latest/serving/engine_args.html”。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中--tensor-parallel-size 是指每个节点上GPU个数，--pipeline-parallel-size 指节点个数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出内容很多，以下截取一部分（包括最后的输出内容）</span><br>...<br>Loading safetensors checkpoint shards:  96% Completed | 157/163 [00:33&lt;00:01,  3.41it/s]<br>Loading safetensors checkpoint shards:  97% Completed | 158/163 [00:33&lt;00:01,  3.86it/s]<br>Loading safetensors checkpoint shards: 100% Completed | 163/163 [00:33&lt;00:00,  4.85it/s]<br><br>INFO 02-24 04:45:42 model_runner.py:1115] Loading model weights took 35.4806 GB<br>(RayWorkerWrapper pid=1124) INFO 02-24 04:45:44 model_runner.py:1115] Loading model weights took 35.4806 GB<br>(RayWorkerWrapper pid=7564, ip=10.119.165.139) INFO 02-24 04:45:08 custom_all_reduce_utils.py:244] reading GPU P2P access cache from /root/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json [repeated 30x across cluster]<br>(RayWorkerWrapper pid=1138) INFO 02-24 04:45:08 cuda.py:161] Using Triton MLA backend. [repeated 31x across cluster]<br>(RayWorkerWrapper pid=976, ip=10.119.85.140) INFO 02-24 04:45:08 utils.py:950] Found nccl from library libnccl.so.2 [repeated 31x across cluster]<br>(RayWorkerWrapper pid=976, ip=10.119.85.140) INFO 02-24 04:45:08 pynccl.py:69] vLLM is using nccl==2.21.5 [repeated 31x across cluster]<br>(RayWorkerWrapper pid=1149) NCCL version 2.21.5+cuda12.4 [repeated 7x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO Channel 15/0 : 7[7] -&gt; 6[6] via P2P/IPC/read [repeated 43x across cluster]<br>(RayWorkerWrapper pid=1116)  09/0 : 3[3] -&gt; 2[2] via P2P/IPC/read [repeated 2x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO Connected all trees [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO threadThresholds 8/8/64 | 64/8/64 | 512 | 512 [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO 16 coll channels, 16 collnet channels, 0 nvls channels, 16 p2p channels, 16 p2p channels per peer [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO TUNER/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO TUNER/Plugin: Using internal tuner plugin. [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1149) deepseek2:1149:1149 [7] NCCL INFO ncclCommInitRank comm 0xd15faf0 rank 7 nranks 8 cudaDev 7 nvmlDev 7 busId d3000 commId 0x7f39c29d5bac68b4 - Init COMPLETE [repeated 6x across cluster]<br>(RayWorkerWrapper pid=1115) Channel 09/0 : 6[6] -&gt; 5[5] via P2P/IPC/read [repeated 2x across cluster]<br>(RayWorkerWrapper pid=973, ip=10.119.85.140) INFO 02-24 04:45:08 shm_broadcast.py:258] vLLM message queue communication handle: Handle(connect_ip=&#x27;127.0.0.1&#x27;, local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer_handle=(7, 4194304, 6, &#x27;psm_3a784ba1&#x27;), local_subscribe_port=56925, remote_subscribe_port=None) [repeated 2x across cluster]<br>(RayWorkerWrapper pid=976, ip=10.119.85.140) INFO 02-24 04:45:08 model_runner.py:1110] Starting to load model /root/.cache/huggingface/hub/models/unsloth/DeepSeek-R1-BF16/... [repeated 30x across cluster]<br>(RayWorkerWrapper pid=978, ip=10.119.85.140) INFO 02-24 04:46:17 model_runner.py:1115] Loading model weights took 42.8992 GB [repeated 7x across cluster]<br>...<br>...<br>...<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO P2P Chunksize set to 131072<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 00/0 : 2[1] -&gt; 3[1] [receive] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 01/0 : 2[1] -&gt; 3[1] [receive] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 00/0 : 3[1] -&gt; 0[1] [send] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 01/0 : 3[1] -&gt; 0[1] [send] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31505 [1] NCCL INFO NCCL_IB_GID_INDEX set by environment to 3.<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Connected all rings<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 01/0 : 1[1] -&gt; 3[1] [receive] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 01/0 : 3[1] -&gt; 1[1] [send] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Channel 00/0 : 3[1] -&gt; 2[1] [send] via NET/IB/1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO Connected all trees<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO 2 coll channels, 2 collnet channels, 0 nvls channels, 2 p2p channels, 2 p2p channels per peer<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:7565 [1] NCCL INFO ncclCommInitRank comm 0x1179c2d0 rank 3 nranks 4 cudaDev 1 nvmlDev 1 busId 42000 commId 0x8b115fa040bc44fc - Init COMPLETE<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Using non-device net plugin version 0<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Using network IB<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO ncclCommInitRank comm 0x30ca9860 rank 1 nranks 8 cudaDev 1 nvmlDev 1 busId 42000 commId 0xd37e8e722df3123f - Init START<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Setting affinity for GPU 1 to 0fffff,ff000000,0fffffff<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO NVLS multicast support is not available on dev 1<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO comm 0x30ca9860 rank 1 nRanks 8 nNodes 1 localRanks 8 localRank 1 MNNVL 0<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Trees [0] 2/-1/-1-&gt;1-&gt;0 [1] 2/-1/-1-&gt;1-&gt;0 [2] 2/-1/-1-&gt;1-&gt;0 [3] 2/-1/-1-&gt;1-&gt;0 [4] 2/-1/-1-&gt;1-&gt;0 [5] 2/-1/-1-&gt;1-&gt;0 [6] 2/-1/-1-&gt;1-&gt;0 [7] 2/-1/-1-&gt;1-&gt;0 [8] 2/-1/-1-&gt;1-&gt;0 [9] 2/-1/-1-&gt;1-&gt;0 [10] 2/-1/-1-&gt;1-&gt;0 [11] 2/-1/-1-&gt;1-&gt;0 [12] 2/-1/-1-&gt;1-&gt;0 [13] 2/-1/-1-&gt;1-&gt;0 [14] 2/-1/-1-&gt;1-&gt;0 [15] 2/-1/-1-&gt;1-&gt;0<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO P2P Chunksize set to 524288<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Channel 00/0 : 1[1] -&gt; 2[2] via P2P/IPC/read<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Channel 01/0 : 1[1] -&gt; 2[2] via P2P/IPC/read<br>(RayWorkerWrapper pid=7565, ip=10.119.165.139) deepseek1:7565:31563 [1] NCCL INFO Channel 02/0 : 1[<br>(RayWorkerWrapper pid=7587, ip=10.119.165.139) ] NCCL INFO Connected all rings<br>(RayWorkerWrapper pid=7591, ip=10.119.165.139)  Channel 09/0 : 7[7] -&gt; 6[6] via P2P/IPC/read<br>(RayWorkerWrapper pid=7580, ip=10.119.165.139) 4[4] -&gt; 3[3] via P2P/IPC/read<br>(RayWorkerWrapper pid=7580, ip=10.119.165.139) deepseek1:7580:31567 [4] NCCL I<br>(RayWorkerWrapper pid=7591, ip=10.119.165.139) <br>(RayWorkerWrapper pid=7591, ip=10.119.165.139) deepseek1:759<br>(RayWorkerWrapper pid=7580, ip=10.119.165.139) NFO Channel 02/0 : 4[4] -&gt; 5[5] via P2P/IPC/read<br>(RayWorkerWrapper pid=7580, ip=10.119.165.139) deepseek1:7580:31594 [4] NCCL INFO Channel 15<br>INFO 02-24 17:15:16 executor_base.py:110] # CUDA blocks: 68440, # CPU blocks: 13107<br>...<br>...<br>...<br>Capturing CUDA graph shapes:  43%|████████████████████████████████████████████████████████████▍                                                                                | 15/35 [00:06&lt;00:09,  2.18it/s]<br>Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:13&lt;00:01,  2.46it/s]<br>Capturing CUDA graph shapes:  46%|████████████████████████████████████████████████████████████████▍                                                                            | 16/35 [00:07&lt;00:08,  2.18it/s]<br>Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:13&lt;00:00,  2.46it/s]<br>Capturing CUDA graph shapes:  49%|████████████████████████████████████████████████████████████████████▍                                                                        | 17/35 [00:07&lt;00:08,  2.19it/s]<br>Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:13&lt;00:00,  2.47it/s]<br>Capturing CUDA graph shapes:  51%|████████████████████████████████████████████████████████████████████████▌                                                                    | 18/35 [00:08&lt;00:07,  2.13it/s]<br>Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:14&lt;00:00,  2.47it/s]<br>Capturing CUDA graph shapes:  63%|████████████████████████████████████████████████████████████████████████████████████████▋                                                    | 22/35 [00:10&lt;00:06,  2.07it/s]<br>Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:13&lt;00:01,  2.36it/s] [repeated 24x across cluster]<br>Capturing CUDA graph shapes:  66%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                | 23/35 [00:10&lt;00:05,  2.08it/s]<br>(RayWorkerWrapper pid=974, ip=10.119.85.140) INFO 02-24 04:48:08 model_runner.py:1562] Graph capturing finished in 64 secs, took 1.19 GiB<br>Capturing CUDA graph shapes:  71%|████████████████████████████████████████████████████████████████████████████████████████████████████▋                                        | 25/35 [00:11&lt;00:04,  2.04it/s]<br>(RayWorkerWrapper pid=7561, ip=10.119.165.139) INFO 02-24 04:48:09 custom_all_reduce.py:226] Registering 4480 cuda graph addresses [repeated 16x across cluster]<br>Capturing CUDA graph shapes: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 35/35 [00:15&lt;00:00,  2.19it/s]<br>INFO 02-24 04:48:13 custom_all_reduce.py:226] Registering 4340 cuda graph addresses<br>(RayWorkerWrapper pid=7564, ip=10.119.165.139) INFO 02-24 04:48:13 model_runner.py:1562] Graph capturing finished in 68 secs, took 1.19 GiB [repeated 23x across cluster]<br>(RayWorkerWrapper pid=1138) INFO 02-24 04:48:18 custom_all_reduce.py:226] Registering 4340 cuda graph addresses [repeated 14x across cluster]<br>INFO 02-24 04:48:18 model_runner.py:1562] Graph capturing finished in 73 secs, took 1.16 GiB<br>INFO 02-24 04:48:18 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 84.43 seconds<br>INFO 02-24 04:48:18 api_server.py:756] Using supplied chat template:<br>INFO 02-24 04:48:18 api_server.py:756] None<br>INFO 02-24 04:48:18 launcher.py:21] Available routes are:<br>INFO 02-24 04:48:18 launcher.py:29] Route: /openapi.json, Methods: HEAD, GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /docs, Methods: HEAD, GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /docs/oauth2-redirect, Methods: HEAD, GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /redoc, Methods: HEAD, GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /health, Methods: GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /ping, Methods: GET, POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /tokenize, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /detokenize, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/models, Methods: GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /version, Methods: GET<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/chat/completions, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/completions, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/embeddings, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /pooling, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /score, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/score, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /rerank, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v1/rerank, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /v2/rerank, Methods: POST<br>INFO 02-24 04:48:18 launcher.py:29] Route: /invocations, Methods: POST<br>INFO:     Started server process [12020]<br>INFO:     Waiting for application startup.<br>INFO:     Application startup complete.<br>INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/24/V8FOf1Q4Z6Ww9sg.png"alt="image-20250224205008780" /><figcaption aria-hidden="true">image-20250224205008780</figcaption></figure><h4 id="报错与处理-2">报错与处理</h4><h5id="问题1-执行vllm-serve提示error-executing-method-determine_num_available_blocks.-this-might-cause-deadlock-in-distributed-execution">问题1-执行"vllmserve"提示“Error executing method 'determine_num_available_blocks'. Thismight cause deadlock in distributed execution”</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行如下命令时报错，报错信息的部分如下：</span><br>root@deepseek1:/vllm-workspace# vllm serve /root/.cache/huggingface/hub/models/deepseek-ai/DeepSeek-R1 \<br>    --tensor-parallel-size 8 \<br>    --pipeline-parallel-size 4 \<br>    --trust-remote-code \<br>    --host 0.0.0.0 \<br>    --port 8000 \<br>    --enforce-eager<br>...<br>Loading safetensors checkpoint shards:  95% Completed | 155/163 [00:10&lt;00:00, 22.69it/s]<br>Loading safetensors checkpoint shards:  97% Completed | 158/163 [00:11&lt;00:00, 18.17it/s]<br>Loading safetensors checkpoint shards:  99% Completed | 161/163 [00:11&lt;00:00, 18.87it/s]<br>Loading safetensors checkpoint shards: 100% Completed | 163/163 [00:11&lt;00:00, 14.15it/s]<br><br>INFO 02-22 06:50:13 model_runner.py:1115] Loading model weights took 18.1361 GB<br>(RayWorkerWrapper pid=5507) INFO 02-22 06:50:18 model_runner.py:1115] Loading model weights took 18.1361 GB<br>(pid=1451, ip=10.119.165.141) INFO 02-22 06:49:57 __init__.py:190] Automatically detected platform cuda. [repeated 31x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)<br>(RayWorkerWrapper pid=1447, ip=10.119.165.138) INFO 02-22 06:50:01 cuda.py:161] Using Triton MLA backend. [repeated 61x across cluster]<br>(RayWorkerWrapper pid=1451, ip=10.119.165.141) WARNING 02-22 06:49:59 triton_decode_attention.py:44] The following error message &#x27;operation scheduled before its operands&#x27; can be ignored. [repeated 30x across cluster]<br>(RayWorkerWrapper pid=5486) INFO 02-22 06:50:01 utils.py:950] Found nccl from library libnccl.so.2 [repeated 61x across cluster]<br>(RayWorkerWrapper pid=5486) INFO 02-22 06:50:01 pynccl.py:69] vLLM is using nccl==2.21.5 [repeated 61x across cluster]<br>(RayWorkerWrapper pid=1447, ip=10.119.165.138) INFO 02-22 06:50:01 custom_all_reduce_utils.py:244] reading GPU P2P access cache from /root/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json [repeated 30x across cluster]<br>(RayWorkerWrapper pid=1444, ip=10.119.165.141) INFO 02-22 06:50:01 shm_broadcast.py:258] vLLM message queue communication handle: Handle(connect_ip=&#x27;127.0.0.1&#x27;, local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer_handle=(7, 4194304, 6, &#x27;psm_9dec0a20&#x27;), local_subscribe_port=44443, remote_subscribe_port=None) [repeated 2x across cluster]<br>(RayWorkerWrapper pid=1451, ip=10.119.165.141) INFO 02-22 06:50:01 model_runner.py:1110] Starting to load model /root/.cache/huggingface/hub/models/deepseek-ai/DeepSeek-R1... [repeated 30x across cluster]<br>(RayWorkerWrapper pid=1451, ip=10.119.165.141) WARNING 02-22 06:50:01 utils.py:159] The model class DeepseekV3ForCausalLM has not defined `packed_modules_mapping`, this may lead to incorrect mapping of quantized or ignored modules [repeated 30x across cluster]<br>(RayWorkerWrapper pid=1450, ip=10.119.165.141) INFO 02-22 06:50:23 model_runner.py:1115] Loading model weights took 23.1804 GB [repeated 23x across cluster]<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] Error executing method &#x27;determine_num_available_blocks&#x27;. This might cause deadlock in distributed execution.<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] Traceback (most recent call last):<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/language/core.py&quot;, line 35, in wrapper<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return fn(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/language/core.py&quot;, line 993, in to<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return semantic.cast(self, dtype, _builder, fp_downcast_rounding)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/language/semantic.py&quot;, line 759, in cast<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     assert builder.options.allow_fp8e4nv, &quot;fp8e4nv data type is not supported on CUDA arch &lt; 89&quot;<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] AssertionError: fp8e4nv data type is not supported on CUDA arch &lt; 89<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] <br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] The above exception was the direct cause of the following exception:<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] <br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] Traceback (most recent call last):<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/worker/worker_base.py&quot;, line 566, in execute_method<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return run_method(target, method, args, kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/utils.py&quot;, line 2220, in run_method<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return func(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/utils/_contextlib.py&quot;, line 116, in decorate_context<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return func(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/worker/worker.py&quot;, line 229, in determine_num_available_blocks<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     self.model_runner.profile_run()<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/utils/_contextlib.py&quot;, line 116, in decorate_context<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return func(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/worker/model_runner.py&quot;, line 1235, in profile_run<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     self._dummy_run(max_num_batched_tokens, max_num_seqs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/worker/model_runner.py&quot;, line 1346, in _dummy_run<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     self.execute_model(model_input, kv_caches, intermediate_tensors)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/utils/_contextlib.py&quot;, line 116, in decorate_context<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return func(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/worker/model_runner.py&quot;, line 1719, in execute_model<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     hidden_or_intermediate_states = model_executable(<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                                     ^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1736, in _wrapped_call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return self._call_impl(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1747, in _call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return forward_call(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/models/deepseek_v2.py&quot;, line 687, in forward<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     hidden_states = self.model(input_ids, positions, kv_caches,<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/compilation/decorators.py&quot;, line 172, in __call__<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return self.forward(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/models/deepseek_v2.py&quot;, line 643, in forward<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     hidden_states, residual = layer(positions, hidden_states,<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1736, in _wrapped_call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return self._call_impl(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1747, in _call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return forward_call(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/models/deepseek_v2.py&quot;, line 561, in forward<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     hidden_states = self.self_attn(<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                     ^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1736, in _wrapped_call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return self._call_impl(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1747, in _call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return forward_call(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/models/deepseek_v2.py&quot;, line 473, in forward<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     ckq = self.q_a_proj(hidden_states)[0]<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1736, in _wrapped_call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return self._call_impl(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/torch/nn/modules/module.py&quot;, line 1747, in _call_impl<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return forward_call(*args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/layers/linear.py&quot;, line 248, in forward<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     output = self.quant_method.apply(self, x, bias)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/layers/quantization/fp8.py&quot;, line 359, in apply<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return apply_w8a8_block_fp8_linear(<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/layers/quantization/utils/fp8_utils.py&quot;, line 70, in apply_w8a8_block_fp8_linear<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     q_input, x_scale = per_token_group_quant_fp8(input_2d,<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/vllm/model_executor/layers/quantization/utils/fp8_utils.py&quot;, line 307, in per_token_group_quant_fp8<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     _per_token_group_quant_fp8[(M, )](<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/runtime/jit.py&quot;, line 345, in &lt;lambda&gt;<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return lambda *args, **kwargs: self.run(grid=grid, warmup=False, *args, **kwargs)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/runtime/jit.py&quot;, line 662, in run<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     kernel = self.compile(<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]              ^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/compiler/compiler.py&quot;, line 276, in compile<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     module = src.make_ir(options, codegen_fns, context)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]   File &quot;/usr/local/lib/python3.12/dist-packages/triton/compiler/compiler.py&quot;, line 113, in make_ir<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     return ast_to_ttir(self.fn, self, context=context, options=options, codegen_fns=codegen_fns)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] triton.compiler.errors.CompilationError: at 32:10:<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y_ptr += g_id * group_size<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y_q_ptr += g_id * group_size<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y_s_ptr += g_id<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] <br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     cols = tl.arange(0, BLOCK)  # N &lt;= BLOCK<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     mask = cols &lt; group_size<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574] <br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y = tl.load(y_ptr + cols, mask=mask, other=0.0).to(tl.float32)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     # Quant<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     _absmax = tl.maximum(tl.max(tl.abs(y)), eps)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y_s = _absmax / fp8_max<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]     y_q = tl.clamp(y / y_s, fp8_min, fp8_max).to(y_q_ptr.dtype.element_ty)<br>(RayWorkerWrapper pid=1444, ip=10.119.165.140) ERROR 02-22 06:50:24 worker_base.py:574]           ^<br>ERROR 02-22 06:50:25 worker_base.py:574] Error executing method &#x27;determine_num_available_blocks&#x27;. This might cause deadlock in distributed execution.<br>...<br></code></pre></td></tr></table></figure><p>问题分析：</p><p>DeepSeek-R1:671B是fp8模型，需要在支持fp8数据类型的GPU上运行，但NVIDIAA800（A800跟A100设计上基本上是一样的，只是减配了）不支持fp8数据类型。https://github.com/vllm-project/vllm/issues/12581#issuecomment-2625310475、https://github.com/vllm-project/vllm/issues?q=fp8e4nv%20data%20type%20is%20not%20supported%20on%20CUDA%20arch%20%3C%2089、https://github.com/vllm-project/vllm/issues/12581</p><h3 id="再次查看ray集群状态">3.1.6 再次查看ray集群状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@deepseek1:/vllm-workspace# ray status<br>======== Autoscaler status: 2025-02-24 06:09:38.499412 ========<br>Node status<br>---------------------------------------------------------------<br>Active:<br> 1 node_78c610008905942ec65274e7c7ce990d1a554e9627512bf633c15c28<br> 1 node_0aee3e0efd8a7f95dfa4205cd692f7f08e7d665b779a0facf0d3201d<br> 1 node_8407508c22842dea6182c7accc2565b42daf4c7b051f1d37a4629258<br> 1 node_3ec95e5ee056a4484f0f81cc518716edd4d2bfd98ffa771b024edc27<br>Pending:<br> (no pending nodes)<br>Recent failures:<br> (no failures)<br><br>Resources<br>---------------------------------------------------------------<br>Usage:<br> 0.0/448.0 CPU<br> 32.0/32.0 GPU (32.0 used of 32.0 reserved in placement groups)<br> 0B/3.89TiB memory<br> 0B/38.91GiB object_store_memory<br><br>Demands:<br> (no resource demands)<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">32块GPU都处于使用状态了</span><br></code></pre></td></tr></table></figure><h3 id="production-metrics">3.1.7 Production Metrics</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek2:~$ curl http://10.119.85.138:8000/metrics<br>540    0     # TYPE python_gc_objects_collected_total counter<br>0  7756k   python_gc_objects_collected_total&#123;generation=&quot;0&quot;&#125; 37427.0<br>   0 --:python_gc_objects_collected_total&#123;generation=&quot;1&quot;&#125; 14232.0<br>--:-- --:--:-- python_gc_objects_collected_total&#123;generation=&quot;2&quot;&#125; 16818.0<br>--:--:-- 9615k<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP python_gc_objects_uncollectable_total Uncollectable objects found during GC</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE python_gc_objects_uncollectable_total counter</span><br>python_gc_objects_uncollectable_total&#123;generation=&quot;0&quot;&#125; 0.0<br>python_gc_objects_uncollectable_total&#123;generation=&quot;1&quot;&#125; 0.0<br>python_gc_objects_uncollectable_total&#123;generation=&quot;2&quot;&#125; 0.0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP python_gc_collections_total Number of <span class="hljs-built_in">times</span> this generation was collected</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE python_gc_collections_total counter</span><br>python_gc_collections_total&#123;generation=&quot;0&quot;&#125; 3033.0<br>python_gc_collections_total&#123;generation=&quot;1&quot;&#125; 267.0<br>python_gc_collections_total&#123;generation=&quot;2&quot;&#125; 315.0<br>...<br></code></pre></td></tr></table></figure><h3 id="openai-api接口测试">3.1.8 openai API接口测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 10.119.85.138 是deepseek2节点的IB网卡IP</span><br>(self-llm) deepseek@deepseek2:~$ curl 10.119.85.138:8000/v1/models -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot; | jq  <br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出内容如下</span><br><span class="hljs-meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100   523  100   523    0     0   105k      0 --:--:-- --:--:-- --:--:--  127k<br>&#123;<br>  &quot;object&quot;: &quot;list&quot;,<br>  &quot;data&quot;: [<br>    &#123;<br>      &quot;id&quot;: &quot;DeepSeek-R1-671B&quot;,<br>      &quot;object&quot;: &quot;model&quot;,<br>      &quot;created&quot;: 1740405511,<br>      &quot;owned_by&quot;: &quot;vllm&quot;,<br>      &quot;root&quot;: &quot;/root/.cache/huggingface/hub/models/unsloth/DeepSeek-R1-BF16/&quot;,<br>      &quot;parent&quot;: null,<br>      &quot;max_model_len&quot;: 32768,<br>      &quot;permission&quot;: [<br>        &#123;<br>          &quot;id&quot;: &quot;modelperm-ced685e8156b4618b593580109205165&quot;,<br>          &quot;object&quot;: &quot;model_permission&quot;,<br>          &quot;created&quot;: 1740405511,<br>          &quot;allow_create_engine&quot;: false,<br>          &quot;allow_sampling&quot;: true,<br>          &quot;allow_logprobs&quot;: true,<br>          &quot;allow_search_indices&quot;: false,<br>          &quot;allow_view&quot;: true,<br>          &quot;allow_fine_tuning&quot;: false,<br>          &quot;organization&quot;: &quot;*&quot;,<br>          &quot;group&quot;: null,<br>          &quot;is_blocking&quot;: false<br>        &#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>同时在vllm serve命令执行的窗口会看到如下输出内容</p><figure><img src="https://s2.loli.net/2025/02/24/F3td4gkAeSfwijK.png"alt="image-20250224215955409" /><figcaption aria-hidden="true">image-20250224215955409</figcaption></figure><h3 id="服务功能验证">3.1.9 服务功能验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek2:~$ curl -X POST &quot;http://10.119.85.138:8000/v1/chat/completions&quot; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot;  -d &#x27;&#123; &quot;model&quot;: &quot;DeepSeek-R1-671B&quot;, &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;你好&quot;&#125;]&#125;&#x27;<br>    <br>(self-llm) deepseek@deepseek2:~$ curl -X POST &quot;http://10.119.85.138:8000/v1/chat/completions&quot; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot;  -d &#x27;&#123; &quot;model&quot;: &quot;DeepSeek-R1-671B&quot;, &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;请证明勾股定理&quot;&#125;]&#125;&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">回答</span><br>&#123;&quot;id&quot;:&quot;chatcmpl-11ae1ddf321343af848b5c683e67b72d&quot;,&quot;object&quot;:&quot;chat.completion&quot;,&quot;created&quot;:1740411348,&quot;model&quot;:&quot;deepseek-r1&quot;,&quot;choices&quot;:[&#123;&quot;index&quot;:0,&quot;message&quot;:&#123;&quot;role&quot;:&quot;assistant&quot;,&quot;reasoning_content&quot;:null,&quot;content&quot;:&quot;&lt;think&gt;\n嗯，用户让我证明勾股定理。勾股定理是数学里非常基础但又重要的定理，肯定有很多不同的证明方法。先回忆一下，勾股定理是说在直角三角形中，斜边的平方等于两条直角边的平方和，也就是a² + b² = c²。现在得选一<br>种合适的证明方式，可能是几何的或者代数的。\n\n首先想到的是几何证明中的拼接法，通过将四个直角三角形拼成一个大的正方形，然后比较面积。我要不要试试这个方法？比如说，四个全等的直角三角形，设它们的直角边为a和b，<br>斜边为c，拼起来的话中间应该会形成一个边长为（a+b）的正方形，中间的空隙可能是小正方形，边长是c或者别的？\n\n不对，应该会形成一个边长为c的正方形，或者这个？等一下，可能得仔细画个图想象一下。假设我们把四个三角<br>形每个的直角边朝外，那斜边就会组成里面的一个正方形，这时候那个正方形的边长应该是a - b吗？或者可能是其他情况？\n\n另一个方法是代数证明，利用相似三角形或者欧几里得的证明方式。我记得欧几里得在《几何原本》里的证明比较复杂，可能不太直观，适合进阶的学生。但普通学生应该更容易接受面积拼接法，或者是利用代数展开。还有一种方法是总统证明法，据说是美国第20任总统加菲尔德想到的一种梯形面积法，对吗？\n\n比如说，画一个梯形，由<br>两个直角三角形和一个等腰直角三角形组成，计算面积两种方式。可能这个更简单。先复习一下这种方法的具体步骤。总面积的公式应该等于梯形的高乘以上底加下底的一半，对吗？\n\n或者回到基本的拼图方法。四个直角三角形，边<br>长为a和b，斜边c，将它们放在一个大正方形里面，这样有两种不同的拼法，分别形成边长为a + b的大正方形，一种是四个三角形围成一个边长为c的正方形，另一种则是中间留有边长为a和b的小正方形。\n\n这时候整个大正方形的面积有两种表达式，一种等于(a + b)²，另一种等于4个三角形的面积加上中间的正方形面积，也就是4*(1/2 ab) + c²。另一边，同一个大正方形的面积也可以通过另一种拼法得到，这时候中间可能是两个小正方形，边长分别是a和b，所以<br>总面积是4*(1/2 ab) + a² + b²。这样等式两边相等的话就能得到a² + b² = c²。这可能就是常见的拼图法证明。\n\n或者考虑用相似三角形的比例来推导。在直角三角形中，画一条高，由此产生两个小三角形，跟原来的大三角形相似<br>。根据相似三角形的边长比例，各个边的关系可以得出勾股定理。\n\n比如，设原三角形ABC，C为直角，从C向AB边作高，交于D点。这样，AD和DB分别是两个小三角形的边，之后利用比例关系得出AC² = AD * AB，BC² = DB * AB，相加<br>后得出AC² + BC² = AB²（AD + DB）= AB²，这样就得到结论。这可能是欧几里得的方法。\n\n不过，可能用户需要的是更直观的证明方法，比如面积法，可能适合更多人理解。像用四个直角三角形围成一个大的正方形，中间形成的部分是c²的面积，然后另外方式拼接得到a² + b²的总面积，两者相等。\n\n这个时候应该详细画出这个图形。但因为是文字描述，我需要解释清楚：将四个直角三角形以边长为a和b的直角边向外，组成一个大正方形，边长为a + b，中间的<br>区域则是一个边长为c的正方形。大正方形的面积等于四个三角形的面积再加上中间正方形的面积。也就是(a + b)² = 4*(1/2 ab) + c²。展开左边得到a² + 2ab + b² = 2ab + c²，两边减去2ab即得a² + b² = c²，得证。\n\n或者，换<br>一种方式拼凑，以直角边为排列方向，或许中间形成的区域会是两个小正方形，边长a和b，这可能导致同样的结论。但上述的证明应该更直接，步骤更简单。\n\n另一个可能是代数计算法，比如构造一个边长为c的正方形，分割成四个三角形和一个中间的小正方形，不过这可能需要不同的分割方式。这时同样是利用面积平衡去推导。\n\n确定之后，我觉得用四个三角形的方法，也就是所谓的“面积拼图法”应该是最直接的方式。这个方法的步骤比较清晰，而且代数运算<br>简单，只有几步展开，容易理解。\n\n另外，要注意用户的疑问可能是什么。这些证明方法是不是正确的？有没有逻辑漏洞？比如在拼接过程中，是否真能组成一个正方形？是否存在对应的几何条件是否符合，例如直角是否拼接正确，<br>边长是否确实a + b等等。\n\n所以需要在证明过程中详细说明图形是如何构造的，确保各个边对的长度相等，角度正确，这样才能保证中间区域是正方形。例如，四个直角三角形的直角边a和b交替排列，使得各外角都是直角，从而外框是一个边长为a + b的正方形。而中间的部分因为每个边都是斜边c，每个角都是原来的直角拼接后的角度，所以中间肯定是边长为c的正方形。\n\n这样的话，整个过程在几何上是严密的，可以放心使用。\n\n总结一下，我打算使用面积拼接法来证明勾股定理，详细描述如何将四个直角三角形拼成一个大正方形，然后通过两种不同的面积计算方式得到方程，从而解出a² + b² = c²。这种方法直观且步骤清晰，适合各种数学基础的用户理解。同时，提醒自己需要检查各<br>个步骤是否正确，例如正方形的构造是否正确，面积计算是否有误，代数推导是否严谨。\n&lt;/think&gt;\n\n勾股定理表明，在直角三角形中，斜边长（\\( c \\)）的平方等于两直角边（\\( a \\) 和 \\( b \\)）的平方和，即  \n\\[\na^2 + b^2 = c^2.\n\\]  \n**证明**（面积拼接法）：  \n\n1. **构造图形**：  \n   取四个全等的直角三角形，其直角边分别为 \\( a \\) 和 \\( b \\)，斜边为 \\( c \\)。将它们以直角相接的方式拼接成一个大正方形，如图1<br>所示。  \n   - 外框大正方形的边长为 \\( a + b \\)。  \n   - 中间空出的区域是一个边长为 \\( c \\) 的小正方形。  \n\n   ![图1：四个直角三角形构成边长为 \\( a + b \\) 的大正方形，中间空出边长为 \\( c \\) 的小正方形](https://i.imgur.com/yyNUyzB.png)  \n\n2. **计算总面积**：  \n   外框大正方形的面积可表示为：  \n   \\[\n   (a + b)^2 = a^2 + 2ab + b^2.\n   \\]  \n\n3. **另一种方式的总面积**：  \n   总面积也可以看作四个直角三角形的面积加上中间小正方形的面积：  \n   \\[\n   \\text&#123;总面积&#125; = 4 \\times \\left( \\frac&#123;1&#125;&#123;2&#125;ab \\right) + c^2 = 2ab + c^2.\n   \\]  \n\n4. **联立方程**：  \n   将两种表达式联立：  \n   \\[\n   a^2 + 2ab + b^2 = 2ab + c^2.\n   \\]  \n   两边减去 \\( 2ab \\)，得到：  \n   \\[\n   a^2 + b^2 = c^2.\n   \\]  \n\n**结论**：在直角三角形中，斜边的平方等于两直角边的平方和。此证法通过几何构造与代数运算的结合<br>，直观展示了勾股定理的必然性。&quot;,&quot;tool_calls&quot;:[]&#125;,&quot;logprobs&quot;:null,&quot;finish_reason&quot;:&quot;stop&quot;,&quot;stop_reason&quot;:null&#125;],&quot;usage&quot;:&#123;&quot;prompt_tokens&quot;:8,&quot;total_tokens&quot;:1606,&quot;completion_tokens&quot;:1598,&quot;prompt_tokens_details&quot;:null&#125;,&quot;prompt_logprobs&quot;:null&#125;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">回答问题的同时在vllm serve命令执行的窗口会看到如下，显示token平均生成吞吐率</span><br>INFO 02-24 17:21:12 metrics.py:455] Avg prompt throughput: 1.6 tokens/s, Avg generation throughput: 36.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.<br>INFO 02-24 17:21:17 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 37.2 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.<br>INFO 02-24 17:21:22 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 36.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.1%, CPU KV cache usage: 0.0%.<br>...<br><span class="hljs-meta prompt_">#</span><span class="language-bash">甚至更高速度</span><br>INFO 02-24 23:32:00 metrics.py:455] Avg prompt throughput: 442.9 tokens/s, Avg generation throughput: 38.8 tokens/s, Running: 3 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.4%, CPU KV cache usage: 0.0%.<br>INFO 02-24 23:32:05 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 102.4 tokens/s, Running: 3 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.4%, CPU KV cache usage: 0.0%.<br>INFO 02-24 23:32:07 async_llm_engine.py:179] Finished request chatcmpl-03add50cba264c84afe98fd6cce9907f.<br>INFO 02-24 23:32:10 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 79.4 tokens/s, Running: 2 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.3%, CPU KV cache usage: 0.0%.<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">apt install nvtop</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ nvtop<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如下是`nvtop`命令输出</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/24/iqRKSIfvJEY9sm4.png"alt="image-20250224233912301" /><figcaption aria-hidden="true">image-20250224233912301</figcaption></figure><h2 id="运行openwebui">3.2 运行OpenWebUI</h2><h3 id="下载镜像">3.2.1 下载镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载容器镜像</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">sudo</span> docker pull ghcr.io/open-webui/open-webui:v0.5.10</span><br>sudo docker pull ghcr.io/open-webui/open-webui:v0.5.16<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果无法下载或下载速度太慢，也可以使用如下镜像，它们是同步的（建议使用此镜像）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">sudo</span> docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.10</span><br>sudo docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.16<br></code></pre></td></tr></table></figure><h3 id="启动open-webui容器">3.2.2 启动open-webui容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek2:~$ sudo docker run -d --name open-webui \<br>--hostname=open-webui \<br>    --volume=open-webui:/app/backend/data \<br>    --workdir=/app/backend \<br>    -p 18080:8080 \<br>    --restart always \<br>--runtime=nvidia \<br>    --env=OPENAI_API_BASE_URL=http://10.119.85.138:8000/v1 \<br>    --env=OPENAI_API_KEY=zY0MrQwXV9Oo3g== \<br>    --env=ENABLE_OLLAMA_API=false \<br>    --env=ENABLE_SIGNUP=true \<br>    swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.16 \<br>    bash start.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中OPENAI_API_BASE_URL 指定了vllm暴露的openai API 服务地址</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">等待，直到open-webui容器状态更新为healthy</span><br>(self-llm) deepseek@deepseek2:~$ sudo watch docker ps -a<br><span class="hljs-meta prompt_">#</span><span class="language-bash">实时更新查看open-webui容器日志</span><br>(self-llm) deepseek@deepseek2:~$ sudo docker logs open-webui -f<br>Loading WEBUI_SECRET_KEY from file, not provided as an environment variable.<br>Generating WEBUI_SECRET_KEY<br>Loading WEBUI_SECRET_KEY from .webui_secret_key<br>/app/backend/open_webui<br>/app/backend<br>/app<br>Running migrations<br>INFO  [alembic.runtime.migration] Context impl SQLiteImpl.<br>INFO  [alembic.runtime.migration] Will assume non-transactional DDL.<br>INFO  [open_webui.env] &#x27;ENABLE_SIGNUP&#x27; loaded from the latest database entry<br>INFO  [open_webui.env] &#x27;DEFAULT_LOCALE&#x27; loaded from the latest database entry<br>INFO  [open_webui.env] &#x27;DEFAULT_PROMPT_SUGGESTIONS&#x27; loaded from the latest database entry<br>WARNI [open_webui.env] <br><br>WARNING: CORS_ALLOW_ORIGIN IS SET TO &#x27;*&#x27; - NOT RECOMMENDED FOR PRODUCTION DEPLOYMENTS.<br><br>INFO  [open_webui.env] Embedding model set: sentence-transformers/all-MiniLM-L6-v2<br>WARNI [langchain_community.utils.user_agent] USER_AGENT environment variable not set, consider setting it to identify your requests.<br>INFO:     Started server process [1]<br>INFO:     Waiting for application startup.<br>INFO:     Application startup complete.<br>INFO:     Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit)  #出现了日志内容就是可用了<br></code></pre></td></tr></table></figure><h3 id="访问open-webui界面">3.2.3 访问open-webui界面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 10.119.85.138 是deepseek2节点的IB网卡IP</span><br>(self-llm) deepseek@deepseek2:~$ curl http://10.119.85.138:18080<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或在浏览器中直接访问上述地址。第一个注册的用户，默认就是管理员。注册后登录、提问</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/25/u9lErBStzK3sULx.png"alt="image-20250225154520858" /><figcaption aria-hidden="true">image-20250225154520858</figcaption></figure><h2 id="备注说明">3.3 备注说明</h2><p>要学与做的东西很多，此笔记只是一个记录分享。</p><p>当然后续希望：</p><p>（1）以开源解决文案为基础，实现对模型服务的高可用与负载均衡配置，尽量实现高并发、多用户使用。</p><p>（2）以此模型服务为基础，开发RAG应用或agent，丰富此大模型的功能应用。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>部署满血版DeepSeek</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>KTransformers部署DeepSeek-R1-Q4_K_M</title>
    <link href="/2025/03/12/KTransformers%E9%83%A8%E7%BD%B2DeepSeek-R1-Q4-K-M/"/>
    <url>/2025/03/12/KTransformers%E9%83%A8%E7%BD%B2DeepSeek-R1-Q4-K-M/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文档与信息说明">一、参考文档与信息说明</h1><p>KTransformers 是由清华大学发起的一个项目，它利用 DeepSeek 模型的 MoE架构特性，将专家模型的权重加载到内存上，并分配 CPU 完成相关计算，同时将ML/KV Cache 加载到 GPU 上，从而实现 CPU+GPU混合推理。这种方法能够在最大化降低显存占用的同时，保持一定的推理速度。KTransformers项目旨在解决大模型本地部署难题，实现资源有限情况下大模型的高效本地部署，让更多人能够在自己的设备上运行曾经遥不可及的大型模型。</p><h2 id="参考文档">1.1 参考文档</h2><ul><li><p>参考文章：</p><ul><li><p>KT的github仓库：https://github.com/kvcache-ai/ktransformers/tree/v0.2.3post2</p></li><li><p>安装文档：Kt官方安装文档（https://kvcache-ai.github.io/ktransformers/en/install.html）</p></li><li><p>https://mp.weixin.qq.com/s/1keAGOQlkTf_dKrzWmCRZQ</p></li><li><p>https://mp.weixin.qq.com/s/C4aTsxzYGV7bFrKyx6juug</p></li><li><p>https://kq4b3vgg5b.feishu.cn/wiki/QJ5ywpjnvieTKZk5kPHcG3sLnkd</p></li></ul></li><li><p>模型下载页面：</p><ul><li>https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/files</li></ul></li><li><p>下载模型文件：</p><ul><li>https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/DeepSeek-R1-Q4_K_M/DeepSeek-R1-Q4_K_M-00001-of-00009.gguf</li></ul></li></ul><p>只下载DeepSeek-R1-Q4_K_M这个量化版本：https://www.modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/feedback/issueDetail/23220</p><h2 id="信息说明">1.2 信息说明</h2><p>第1次此次部署是在Centos8-x86_64物理服务器上部署，一直有报错，相关报错信息描述在第2章。是其他同学的服务器，后建议其在物理服务器上创建ubuntu2204容器进行操作。</p><p>第2次，准备在自己的ubuntu20.04LTS-x86_64物理服务器上进行操作，成功。</p><h1 id="二centos8上报错处理">二、Centos8上报错处理</h1><h2id="使用torch2.6.0时kt仓库根目录下执行pip-install-.报read-time-out">2.1使用torch2.6.0时，KT仓库根目录下执行"pip install ."报“Read timeout”</h2><figure><img src="https://s2.loli.net/2025/03/15/mMQ7nO9Uj8fohJI.png"alt="image-20250315204632081" /><figcaption aria-hidden="true">image-20250315204632081</figcaption></figure><p>#换成使用torch2.4.1</p><p><code>pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu124</code></p><p>#再指定pip安装源为清华源（因为KT就是清华主导的开源项目）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh install.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#pip install . -i https://pypi.tuna.tsinghua</span></span><br></code></pre></td></tr></table></figure><p>但报如下错误（报错时，安装的cuda版本是<strong><code>cuda_12.6.r12.6/compiler.34431801_0</code></strong>，torch版本是<strong><code>2.4.1+cu124</code></strong>）：</p><p>如下提示探查到的CUDA12.6小版本与用来编译当前使用PyTorch2.4.1所使用的CUDA版本（应该是12.4）不匹配，但大部分情况下这不是一个严重问题，所以只是一个警告信息。</p><p>第2行提示，不存在为CUDA12.6定义的g++版本边界。</p><figure><img src="https://s2.loli.net/2025/03/15/CaKZwxAcIYXeU5O.png"alt="image-20250315211142720" /><figcaption aria-hidden="true">image-20250315211142720</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/15/XVSxMlW8rKqpc2R.png"alt="image-20250315211246828" /><figcaption aria-hidden="true">image-20250315211246828</figcaption></figure><p>然后，安装<code>cuda12.4+torch2.4.1</code>，再执行<code>sh install.sh</code>，还有g++版本、cmake相关报错</p><figure><img src="https://s2.loli.net/2025/03/16/eKdXrGVz1RD48th.png"alt="image-20250316091400204" /><figcaption aria-hidden="true">image-20250316091400204</figcaption></figure><p>对于g++版本相关报错，可以考虑升级gcc与g++版本，然后再执行<code>sh install.sh</code>，再查看是否仍有报销</p><h1 id="三ubuntu20.04-上部署">三、Ubuntu20.04 上部署</h1><h2 id="升级cmake">3.0 升级cmake</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">升级cmake版本（从3.16.3到3.23.0）</span><br>root@ksp-registry:/opt/installPkgs# wget https://cmake.org/files/v3.23/cmake-3.23.0.tar.gz<br>root@ksp-registry:/opt/installPkgs# tar -zxvf cmake-3.23.0.tar.gz<br>root@ksp-registry:/opt/installPkgs# cp -rp cmake-3.23.0 /usr/share/cmake-3.23.0<br>root@ksp-registry:/opt/installPkgs# ln -sf /usr/share/cmake-3.23.0/bin/cmake /usr/bin/cmake  <br>root@ksp-registry:/opt/installPkgs# cmake --version<br>cmake version 3.23.0<br><br>CMake suite maintained and supported by Kitware (kitware.com/cmake).<br></code></pre></td></tr></table></figure><h2 id="下载deepseek-r1-q4_k_m">3.1 下载DeepSeek-R1-Q4_K_M</h2><h3 id="下载gguf文件">下载GGUF文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##下载方法1（推荐）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用conda创建python虚拟环境</span><br>root@ksp-registry:/opt/code_repos/AI_models# conda create -n self-llm python=3.12<br>root@ksp-registry:/opt/code_repos/AI_models# conda activate self-llm<br><br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models# mkdir DeepSeek-R1-Q4_K_M<br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models# cd DeepSeek-R1-Q4_K_M<br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-Q4_K_M# vi download-DeepSeek-R1-Q4_K_M.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br><br>for i in $(seq 1 9); do<br>  aria2c -s 16 -x 16 https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/DeepSeek-R1-Q4_K_M/DeepSeek-R1-Q4_K_M-0000$&#123;i&#125;-of-00009.gguf<br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有文件下载完成后，大概有600多G</span><br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-Q4_K_M# apt-get update &amp;&amp; apt -qy install aria2<br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-Q4_K_M# bash download-DeepSeek-R1-Q4_K_M.sh<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##下载方法2（会下载DeepSeek-R1-Zero-Q4_K_M-xxx文件，这些文件不需要）</span></span><br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models# pip install modelscope<br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models# vi download.py<br>from modelscope import snapshot_download<br>snapshot_download(<br>  repo_id = &quot;unsloth/DeepSeek-R1-GGUF&quot;,<br>  local_dir = &quot;DeepSeek-R1-GGUF&quot;,<br>  allow_patterns = [&quot;*Q4_K_M*&quot;], # Select quant type Q4_K_M<br>)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##此python脚本会将“https://www.modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/files/DeepSeek-R1-Q4_K_M”h目录下所有18个文件都下载下来，即除了“DeepSeek-R1-Q4_K_M-0000X-of-00009.gguf”，还有“DeepSeek-R1-Zero-Q4_K_M-0000X-of-00009.gguf”</span></span><br>(self-llm) root@ksp-registry:/opt/code_repos/AI_models# python download.py<br>Downloading Model to directory: /opt/code_repos/AI_models/DeepSeek-R1-GGUF<br>2025-03-17 10:50:41,631 - modelscope - INFO - Got 18 files, start to download ...<br>Processing 18 items:   0%|                                                                                                     | 0.00/18.0 [00:00&lt;?, ?it/s]<br>Downloading [DeepSeek-R1-Q4_K_M/DeepSeek-R1-Q4_K_M-00001-of-00009.gguf]:   1%|▎                                      | 322M/45.0G [01:05&lt;2:22:31, 5.61MB/s]<br></code></pre></td></tr></table></figure><h3 id="下载配置文件">下载配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-GGUF# wget https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/config.json<br><br>root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-GGUF# wget https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/.gitattributes<br><br>root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-GGUF# wget https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/configuration.json<br><br>root@ksp-registry:/opt/code_repos/AI_models/DeepSeek-R1-GGUF# wget https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/resolve/master/README.md<br></code></pre></td></tr></table></figure><h3 id="llama.cpp运行模型可选">llama.cpp运行模型(可选)</h3><p>参考：https://www.modelscope.cn/models/unsloth/DeepSeek-R1-GGUF</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###以下方法有风险(可能会覆盖原有的cmake-3.16.3)，暂未执行</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@ksp-registry:/opt/installPkgs# <span class="hljs-built_in">cd</span> cmake-3.23.0/</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">检查系统环境并生成 Makefile（--prefix=/path指定安装路径（默认为 /usr/local））</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@ksp-registry:/opt/installPkgs/cmake-3.23.0# ./configure</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">编译</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@ksp-registry:/opt/installPkgs/cmake-3.23.0# make -j8</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@ksp-registry:/opt/installPkgs/cmake-3.23.0# make install</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#建立软链接，使用安装的新版本的cmake</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">update-alternatives --install /usr/bin/cmake  cmake /usr/local/bin/cmake  1 –force</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get update<br>apt-get install build-essential curl libcurl4-openssl-dev -y<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##下面的步骤可选</span></span><br>(self-llm) root@ksp-registry:~# cd /opt/code_repos/<br>(self-llm) root@ksp-registry:~# git clone https://github.com/ggerganov/llama.cpp<br><br>cmake llama.cpp -B llama.cpp/build \<br>-DBUILD_SHARED_LIBS=OFF -DGGML_CUDA=ON -DLLAMA_CURL=ON<br>cmake --build llama.cpp/build --config Release -j --clean-first --target llama-quantize llama-cli llama-gguf-split<br><br>root@ksp-registry:/opt/code_repos# ll llama.cpp/build/bin/llama-*<br>-rwxr-xr-x 1 root root 451135880 Mar 17 11:13 llama.cpp/build/bin/llama-cli*<br>-rwxr-xr-x 1 root root 449090696 Mar 17 11:13 llama.cpp/build/bin/llama-gguf-split*<br>-rwxr-xr-x 1 root root 449629880 Mar 17 11:12 llama.cpp/build/bin/llama-quantize*<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将生成的3个文件复制到目录llama.cpp 下</span><br>cp llama.cpp/build/bin/llama-* llama.cpp<br><br></code></pre></td></tr></table></figure><h2 id="安装基础组件或依赖">3.2 安装基础组件或依赖</h2><h3 id="nvidia驱动与cuda">3.2.1 NVIDIA驱动与cuda</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">NVIDIA驱动已经安装好</span><br>(self-llm) root@ksp-registry:/opt/code_repos# nvidia-smi <br>Mon Mar 17 14:53:50 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A40                     Off |   00000000:C1:00.0 Off |                    0 |<br>|  0%   33C    P8             21W /  300W |       0MiB /  46068MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|  No running processes found                                                             |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装cuda12.4</span><br>(self-llm) root@ksp-registry:/opt/code_repos# ll /opt/nvidia-driver-cuda-for-A40/<br>total 4650004<br>drwxr-xr-x 2 root root       4096 Feb 14 14:31 ./<br>drwxr-xr-x 8 root root       4096 Mar 17 10:25 ../<br>-rw-r--r-- 1 root root 4454730420 Mar 29  2024 cuda_12.4.1_550.54.15_linux.run<br>-rwxrwxrwx 1 root root  306858135 May 17  2024 NVIDIA-Linux-x86_64-550.54.15.run*<br><span class="hljs-meta prompt_">#</span><span class="language-bash">也已经安装好</span><br>(self-llm) root@ksp-registry:/opt/code_repos# nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2024 NVIDIA Corporation<br>Built on Thu_Mar_28_02:18:24_PDT_2024<br>Cuda compilation tools, release 12.4, V12.4.131<br>Build cuda_12.4.r12.4/compiler.34097967_0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">编辑/root/.bashrc，添加如下内容</span><br>(self-llm) root@ksp-registry:/opt/code_repos# vi /root/.bashrc <br>export PATH=/usr/local/cuda-12.4/bin/:$PATH<br>export LD_LIBRARY_PATH=/usr/local/cuda-12.4/lib64:$LD_LIBRARY_PATH<br>export CUDA_PATH=/usr/local/cuda<br>(self-llm) root@ksp-registry:/opt/code_repos# source /root/.bashrc <br></code></pre></td></tr></table></figure><h3 id="安装编译组件">3.2.2 安装编译组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt-get update<br>apt-get install gcc g++ ninja-build<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看gcc版本</span><br>(self-llm) root@ksp-registry:/opt/code_repos# gcc --version<br>gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0<br>Copyright (C) 2019 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看g++版本</span><br>(self-llm) root@ksp-registry:/opt/code_repos# g++ --version<br>g++ (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0<br>Copyright (C) 2019 Free Software Foundation, Inc.<br>This is free software; see the source for copying conditions.  There is NO<br>warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看cmake版本</span><br>(self-llm) root@ksp-registry:/opt/code_repos# cmake --version<br>cmake version 3.23.0<br><br>CMake suite maintained and supported by Kitware (kitware.com/cmake).<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看ninja版本</span><br>(self-llm) root@ksp-registry:/opt/code_repos# ninja --version<br>1.10.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装基础组件</span><br>(self-llm) root@ksp-registry:/opt/code_repos# apt install build-essential curl libcurl4-openssl-dev -y<br></code></pre></td></tr></table></figure><h2 id="创建kt专用python虚拟环境">3.3 创建KT专用python虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda create --name kt python=3.11<br>conda activate kt<br></code></pre></td></tr></table></figure><h2 id="安装ktransformers">3.4 安装KTransformers</h2><p>KT的github仓库：https://github.com/kvcache-ai/ktransformers/tree/v0.2.3post2</p><p>安装文档：Kt官方安装文档（https://kvcache-ai.github.io/ktransformers/en/install.html）</p><h3 id="执行安装前准备">执行安装前准备</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">(kt) root@ksp-registry:/opt/code_repos# git clone -b v0.2.3post2 https://gitee.com/sy-jiang/ktransformers.git<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">保证此python虚拟环境使用的GNU C++标准库版本包括GLIBCXX-3.4.32</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">conda提供了一个名为libstdcxx-ng的包，它包含了新版本的libstdc++，其可以通过conda-forge进行安装</span><br>(kt) root@ksp-registry:/opt/code_repos# conda install -c conda-forge libstdcxx-ng<br>(kt) root@ksp-registry:/opt/code_repos# strings ~/anaconda3/envs/ktransformers/lib/libstdc++.so.6 | grep GLIBCXX<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装PyTorch, packaging, ninja 等</span><br>(kt) root@ksp-registry:/opt/code_repos# pip install torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1 --index-url https://download.pytorch.org/whl/cu124<br>(kt) root@ksp-registry:/opt/code_repos# pip install packaging ninja cpufeature numpy flash-attn <br></code></pre></td></tr></table></figure><h3 id="初始化源码">初始化源码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">init <span class="hljs-built_in">source</span> code</span><br>cd ktransformers<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# git submodule init<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# git submodule update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如下llama.cpp、pybind11 两个目录是刚刚新生成的</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# ll third_party/<br>total 20<br>drwxr-xr-x  5 root root 4096 Mar 18 10:41 ./<br>drwxr-xr-x  9 root root 4096 Mar 18 10:50 ../<br>drwxr-xr-x 24 root root 4096 Mar 18 10:58 llama.cpp/<br>drwxr-xr-x  2 root root 4096 Mar 18 10:41 llamafile/<br>drwxr-xr-x  8 root root 4096 Mar 18 10:58 pybind11/<br><br></code></pre></td></tr></table></figure><h3 id="编译kt-website">编译kt-website</h3><p>参考文档：https://kvcache-ai.github.io/ktransformers/en/api/server/website.html</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">要求Node.js&gt;=18.3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果已经通过ubuntu20默认安装源安装了nodejs，其版本太低，需要先卸载掉</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">apt-get remove nodejs npm -y &amp;&amp; <span class="hljs-built_in">sudo</span> apt-get autoremove -y</span><br>apt-get update -y &amp;&amp; apt-get install -y apt-transport-https ca-certificates curl gnupg<br><br>curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /usr/share/keyrings/nodesource.gpg<br><br>chmod 644 /usr/share/keyrings/nodesource.gpg<br><br>echo &quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_23.x nodistro main&quot; | sudo tee /etc/apt/sources.list.d/nodesource.list<br><br>apt-get update -y<br>apt-get install nodejs -y<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看nodejs与npm版本</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# node -v<br>v23.10.0<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# npm -v<br>10.9.2<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装Vue CLI</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers/ktransformers/website# npm install @vue/cli<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers/ktransformers/website# npm run build<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">暂时也可不执行，后续会有步骤执行此操作</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用website编译ktransformers</span> <br>(kt) root@ksp-registry:/opt/code_repos/ktransformers/ktransformers/website# cd ../../<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# pip install .<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看安装的kt信息</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# pip show ktransformers<br>Name: ktransformers<br>Version: 0.2.3.post2<br>Summary: KTransformers, pronounced as Quick Transformers, is designed to enhance your Transformers experience with advanced kernel optimizations and placement/parallelism strategies.<br>Home-page: https://kvcache.ai<br>Author: <br>Author-email: &quot;KVCache.AI&quot; &lt;zhang.mingxing@outlook.com&gt;<br>License: Apache License<br>...<br></code></pre></td></tr></table></figure><h3 id="安装kt">安装KT</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1）对于有双槽CPU和内存是模型文件两倍大小以上的服务器</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# apt install libnuma-dev<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##(kt) root@ksp-registry:/opt/code_repos/ktransformers# export USE_NUMA=1  #不要执行，笔者执行了后面启动模型服务时内存爆了</span></span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# bash install.sh   # or #make dev_install<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2）否则，直接执行如下命令</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# bash install.sh<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/18/sKoiTC7548E3rGN.png"alt="image-20250318155035637" /><figcaption aria-hidden="true">image-20250318155035637</figcaption></figure><p>如下查看安装成功的KTransformers：<code>pip show ktransformers</code></p><figure><img src="https://s2.loli.net/2025/03/18/w7XSJMEuI9yi8Om.png"alt="image-20250318155131355" /><figcaption aria-hidden="true">image-20250318155131355</figcaption></figure><h2 id="local-chat本地对话">3.5 Local Chat本地对话</h2><p>参考：https://github.com/kvcache-ai/ktransformers/blob/v0.2.3post2/doc/zh/DeepseekR1_V3_tutorial_zh.md#v02-%E5%B1%95%E7%A4%BA</p><p><img src="C:\Users\jiangsanyin\AppData\Roaming\Typora\typora-user-images\image-20250319160528821.png" alt="image-20250319160528821" style="zoom: 33%;" /></p><h3 id="启动本地对话">3.5.1 启动本地对话</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">(kt) root@ksp-registry:/opt/code_repos/ktransformers# cp ./ktransformers/models/configuration_deepseek.py /opt/code_repos/AI_models/DeepSeek-R1-GGUF<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# cp ./ktransformers/models/configuration_deepseek_v3.py /opt/code_repos/AI_models/DeepSeek-R1-GGUF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#在KT仓库根目录执行如下命令</span></span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# python ./ktransformers/local_chat.py --model_path deepseek-ai/DeepSeek-R1 \<br>  --gguf_path /opt/code_repos/AI_models/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M \<br>  --cpu_infer 36 --max_new_tokens 8192 --port 10002 --web True  <br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动过程上，可以看到进程使用了GPU</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/19/K4hIlFSWxVzQd3e.png"alt="image-20250319102718590" /><figcaption aria-hidden="true">image-20250319102718590</figcaption></figure><p>最终看到对话窗口：</p><figure><img src="https://s2.loli.net/2025/03/19/RV5CGyF3UTxajkH.png"alt="image-20250319174522477" /><figcaption aria-hidden="true">image-20250319174522477</figcaption></figure><p>加载过程中及完成后，占用的内存很少：</p><figure><img src="https://s2.loli.net/2025/03/19/AUjrnoeQc1gFstK.png"alt="image-20250319175945166" /><figcaption aria-hidden="true">image-20250319175945166</figcaption></figure><p>但GPU 显存占用较多，但远没满</p><figure><img src="https://s2.loli.net/2025/03/19/cNX6p1FGWhUC2gl.png"alt="image-20250319180135883" /><figcaption aria-hidden="true">image-20250319180135883</figcaption></figure><h3 id="报错与处理">3.5.2 报错与处理</h3><h4 id="couldnt-connect-to-httpshuggingface.co">3.5.2.1 couldn't connectto 'https://huggingface.co'</h4><p>第一次，笔者执行命令<code>python ./ktransformers/local_chat.py --model_path unsloth/DeepSeek-R1-GGUF --gguf_path /opt/code_repos/AI_models/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M --cpu_infer 36 --max_new_tokens 8192</code>时，提示</p><p>“OSError: We couldn't connect to 'https://huggingface.co' to loadthis file, couldn't find it in the cached files and it looks likeunsloth/DeepSeek-R1-GGUF is not the path to a directory containing afile named config.json.</p><p>Checkout your internet connection or see how to run the library inoffline mode at'https://huggingface.co/docs/transformers/installation#offline-mode'.”</p><p>具体如下：</p><figure><img src="https://s2.loli.net/2025/03/18/wcEQDdAToZ3MFUL.png"alt="image-20250318162546417" /><figcaption aria-hidden="true">image-20250318162546417</figcaption></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">参考https://github.com/huggingface/diffusers/issues/6223</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加变量</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# export HF_ENDPOINT=https://hf-mirror.com<br><span class="hljs-meta prompt_">#</span><span class="language-bash">再次执行</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# python ./ktransformers/local_chat.py --model_path unsloth/DeepSeek-R1-GGUF --gguf_path /opt/code_repos/AI_models/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M --cpu_infer 36 --max_new_tokens 8192<br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时还是报错，但报错内容不一样。如下“OSError: unsloth/DeepSeek-R1-GGUF does not appear to have a file named configuration_deepseek.py. Checkout <span class="hljs-string">&#x27;https://huggingface.co/unsloth/DeepSeek-R1-GGUF/tree/main&#x27;</span> <span class="hljs-keyword">for</span> available files.”</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/19/R51KPNGjdcb8E6H.png"alt="image-20250319101437770" /><figcaption aria-hidden="true">image-20250319101437770</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">笔者先前在“https://modelscope.cn/models/unsloth/DeepSeek-R1-GGUF/files”下载的<span class="hljs-string">&quot;DeepSeek-R1-Q4_K_M&quot;</span>相关文件，但此链接下并没有上述报错中提到的（启动对话过程中需要用到的）configuration_deepseek.py 文件，根据KT官网的示例，需要指定“--model_path deepseek-ai/DeepSeek-R1”，此时再执行就会正常下载configuration_deepseek.py 文件并继续往后执行了</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# python ./ktransformers/local_chat.py --model_path deepseek-ai/DeepSeek-R1 \<br>  --gguf_path /opt/code_repos/AI_models/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M \<br>  --cpu_infer 36 --max_new_tokens 8192<br></code></pre></td></tr></table></figure><h4 id="内存不够被-killed">3.5.2.2 内存不够，被 killed</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">(kt) root@ksp-registry:/opt/code_repos/ktransformers# export USE_NUMA=1<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# bash install.sh   # or #make dev_install<br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# python ./ktransformers/local_chat.py --model_path deepseek-ai/DeepSeek-R1 \<br>  --gguf_path /opt/code_repos/AI_models_/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M \<br>  --cpu_infer 32 --max_new_tokens 8192<br></code></pre></td></tr></table></figure><p>同时可以看到可用内存急剧下降。</p><p>此服务器只有503G总内存，加载块的过程中因为内存不足，进程最终被自动杀死：</p><p><img src="https://s2.loli.net/2025/03/19/mr3EcPARvQbqIxk.png" alt="image-20250319103756422" style="zoom:67%;" /></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建 800GB 的 Swap 文件（因为笔者此服务器安装操作系统的系统盘就是SSD盘，所以直接从系统盘中划分出300G）</span><br>(kt) root@ksp-registry:/# fallocate -l 800G /opt/code_repos/test_swap/swapfile<br>(kt) root@ksp-registry:/# chmod 600 /opt/code_repos/test_swap/swapfile<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将文件或分区初始化为交换空间</span><br>(kt) root@ksp-registry:/# mkswap /opt/code_repos/test_swap/swapfile<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启用交换文件</span><br>(kt) root@ksp-registry:/# swapon /opt/code_repos/test_swap/swapfile<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看物理内存与交换内存</span><br>root@ksp-registry:~# free -h<br>              total        used        free      shared  buff/cache   available<br>Mem:          503Gi       4.7Gi       226Gi       8.0Mi       272Gi       496Gi<br>Swap:         799Gi          0B       799Gi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除交换空间</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">swapoff /swapfile</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">rm</span> /swapfile</span> <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#在KT仓库根目录执行如下命令，使用“--web True”website会一起启动，“--port 10002”指定web访问端口</span></span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# python ./ktransformers/local_chat.py --model_path deepseek-ai/DeepSeek-R1 \<br>  --gguf_path /opt/code_repos/AI_models_/DeepSeek-R1-GGUF/DeepSeek-R1-Q4_K_M \<br>  --cpu_infer 32 --max_new_tokens 8192 --port 10002 --web True<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##我的实验结果还是失败，加载到28层就被killed，缺内存</span></span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/03/19/3PVtvs7umwoqbzI.png" alt="image-20250319164809383" style="zoom:50%;" /></p><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">此步骤很关键</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# unset USE_NUMA<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新安装KTransformers</span><br>(kt) root@ksp-registry:/opt/code_repos/ktransformers# bash install.sh   # or #make dev_install<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/19/RV5CGyF3UTxajkH.png"alt="image-20250319174522477" /><figcaption aria-hidden="true">image-20250319174522477</figcaption></figure><h4 id="安装flashinfer可选">3.5.2.3 安装flashinfer(可选)</h4><p>每次启动模型服务时，都会提示<code>flashinfer not found, use triton for linux using custom modeling_xxx.py.</code></p><p>flashinfer是一个用于加速大型语言模型（LLM）部署的核库。它通过提供高效的内存带宽共享前缀批处理解码技术，显著提升了自注意力机制的性能。FlashInfer支持多种 GPU 架构，包括 sm80、sm86、sm89 和 sm90，并且正在开发对 sm75 和sm70 的支持。</p><p>其在github上的代码仓库地址：https://github.com/flashinfer-ai/flashinfer.git</p><p>官方安装文档：https://docs.flashinfer.ai/installation.html</p><h5 id="通过pip安装">通过pip安装</h5><figure><img src="https://s2.loli.net/2025/03/19/NpZwmkMroBP2WLt.png"alt="image-20250319215515077" /><figcaption aria-hidden="true">image-20250319215515077</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install flashinfer -i https://flashinfer.ai/whl/cu124/torch2.4/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或</span><br>wget https://github.com/flashinfer-ai/flashinfer/releases/download/v0.2.0.post1/flashinfer-0.2.0.post1+cu124torch2.4-cp311-cp311-linux_x86_64.whl<br>pip install flashinfer-0.2.0.post1+cu124torch2.4-cp311-cp311-linux_x86_64.whl<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##但此时会提示flashinfer do not have attribute mla，看到如下处理方法（https://github.com/kvcache-ai/ktransformers/issues/792）：</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">replace pip install flashinfer -i https://flashinfer.ai/whl/cu121/torch2.3 with:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">install JIT version:</span><br>pip install flashinfer-python<br>conda install cuda-nvcc -c nvidia<br>export CUDA_HOME=$CONDA_PREFIX<br>export TORCH_CUDA_ARCH_LIST=&quot;8.0+PTX&quot;<br></code></pre></td></tr></table></figure><h5 id="通过源码安装">通过源码安装</h5><p>参考官方文档：https://docs.flashinfer.ai/installation.html#install-from-source</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone -b v0.2.1.post1 https://github.com/flashinfer-ai/flashinfer.git --recursive<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>KTransformers</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>跟随《大语言模型-赵鑫教授团队》入门大语言模型</title>
    <link href="/2025/03/11/Datawhale%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E8%AF%BE%E7%A8%8B%E5%88%86%E7%BB%84%E5%AD%A6%E4%B9%A0/"/>
    <url>/2025/03/11/Datawhale%E5%A4%A7%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B%E8%AF%BE%E7%A8%8B%E5%88%86%E7%BB%84%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="一课程学习内容与打卡要求">一、课程学习内容与打卡要求</h1><p>https://www.datawhale.cn/learn/summary/107</p><h1 id="二正式课程内容">二、正式课程内容</h1><h2 id="第一课-初识大模型">2.1 第一课 初识大模型</h2><h3 id="语言模型的发展">2.1.1 语言模型的发展</h3><p>ChatPGT于2022年11月底上线，引爆全球关注。</p><figure><img src="https://s2.loli.net/2025/03/11/Fn16rH4y5GEv3ie.png"alt="image-20250311222953477" /><figcaption aria-hidden="true">image-20250311222953477</figcaption></figure><hr /><ul><li>语言模型通常是指能够建模自然语言文本生成概率的模型</li><li>从语言建模到任务求解，这是科学思维的一次重要跃升</li></ul><figure><img src="https://s2.loli.net/2025/03/11/9LwhDs5Cx3vAaQu.png"alt="image-20250311223332799" /><figcaption aria-hidden="true">image-20250311223332799</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/Eq7eFtaM4wvsAx8.png"alt="image-20250311223517477" /><figcaption aria-hidden="true">image-20250311223517477</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/TZCMtVE8QB9OrfW.png"alt="image-20250311223536000" /><figcaption aria-hidden="true">image-20250311223536000</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/uK6kTPyD4fFZd1i.png"alt="image-20250311224233248" /><figcaption aria-hidden="true">image-20250311224233248</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/8deSsAUWn4PuNcD.png"alt="image-20250311224538485" /><figcaption aria-hidden="true">image-20250311224538485</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/CYwQx3bRq9Hoz2L.png"alt="image-20250311224606930" /><figcaption aria-hidden="true">image-20250311224606930</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/VsWJOKqiD7ac4Zk.png"alt="image-20250311225240822" /><figcaption aria-hidden="true">image-20250311225240822</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/LE5ToHOftRIy4N2.png"alt="image-20250311225357961" /><figcaption aria-hidden="true">image-20250311225357961</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/xep3Ss69PtOaKGZ.png"alt="image-20250311225457744" /><figcaption aria-hidden="true">image-20250311225457744</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/11/whv59DG763xdMXP.png"alt="image-20250311225848903" /><figcaption aria-hidden="true">image-20250311225848903</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/11/9lCOsNR617KBzpi.png"alt="image-20250311225901215" /><figcaption aria-hidden="true">image-20250311225901215</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/11/TXJofI6LqzmtNAR.png"alt="image-20250311225912743" /><figcaption aria-hidden="true">image-20250311225912743</figcaption></figure><hr /><figure><img src="https://s2.loli.net/2025/03/11/q89iT2NkcfrBtuo.png"alt="image-20250311225956786" /><figcaption aria-hidden="true">image-20250311225956786</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/11/35ZkbDROoeSzdG7.png"alt="image-20250311230014329" /><figcaption aria-hidden="true">image-20250311230014329</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/11/F2sIqAYz1cupiEe.png"alt="image-20250311230023897" /><figcaption aria-hidden="true">image-20250311230023897</figcaption></figure><h3 id="大模型技术基础">2.1.2 大模型技术基础</h3><p>大模型：通常是指具有超大规模参数的预训练语言模型。构架上一般使用Transformer解码器构架。其训练包括预训练pre-training（生成basemodel）与后训练post-training（生成instruct model）</p><figure><img src="https://s2.loli.net/2025/03/12/ALJPrZtbTjchway.png"alt="image-20250312164208455" /><figcaption aria-hidden="true">image-20250312164208455</figcaption></figure><p>预训练与后训练的主要区别如下：</p><figure><img src="https://s2.loli.net/2025/03/12/Fd5HcJgkEx63KAC.png"alt="image-20250312164245159" /><figcaption aria-hidden="true">image-20250312164245159</figcaption></figure><h4 id="大语言模型构建概览">大语言模型构建概览</h4><p>预训练： 使用与下游任务无关的规模数据进行模型参数的初始训练。</p><figure><img src="https://s2.loli.net/2025/03/12/CvDBGi2fxbkRlHz.png"alt="image-20250312163951715" /><figcaption aria-hidden="true">image-20250312163951715</figcaption></figure><p>后训练采用的方法一般是指令微调（Instrcution Tuning）：</p><ul><li>指令微调：使用输入与输出配对的指令数据对模型进行微调，提升模型通过问答形式进行任务求解的能力。</li></ul><figure><img src="https://s2.loli.net/2025/03/12/NgrFTHPKdieut3w.png"alt="image-20250312164710415" /><figcaption aria-hidden="true">image-20250312164710415</figcaption></figure><ul><li>人类对齐：将大语言模型与人类期望、需求以及价值观对齐，基于人类反馈的强化学习对齐方法RLHF（ReinforcementLearning from Human Feedback，人类反馈强化学习）</li></ul><figure><img src="https://s2.loli.net/2025/03/12/y42W1QeFCdT5hNx.png"alt="image-20250312164952125" /><figcaption aria-hidden="true">image-20250312164952125</figcaption></figure><p>大模型的研发已经已经成为一项系统工程。</p><h4 id="扩展定律">扩展定律</h4><ul><li><p>KM扩展定律</p><ul><li>OpenAI团队建立了神经语言模型性能与参数规模（N）、数据规模（D）和计算规模（C）之间的幂等关系，如下所示</li></ul><figure><img src="https://s2.loli.net/2025/03/12/2ioV7IMQXzwn8lZ.png"alt="image-20250312172611713" /><figcaption aria-hidden="true">image-20250312172611713</figcaption></figure></li></ul><p><img src="https://s2.loli.net/2025/03/12/nlyBq39cO7uo4QI.png" alt="image-20250312172731883" style="zoom: 25%;" /></p><p><strong>数据规模越大，损失越小。相同的数据规模，参数规模越大，损失越小。</strong></p><figure><img src="https://s2.loli.net/2025/03/12/2Nof3kXcxeS7b6g.png"alt="image-20250312172103891" /><figcaption aria-hidden="true">image-20250312172103891</figcaption></figure><ul><li><p>Chinachilla扩展定律</p><ul><li>DeepMind团队于2022年提出了另一种形式的扩展定律，旨在指导大语言模型充分利用给定的算力资源优化训练</li></ul><figure><img src="https://s2.loli.net/2025/03/12/pvunfPB51hldmSq.png"alt="image-20250312205041971" /><figcaption aria-hidden="true">image-20250312205041971</figcaption></figure></li><li><p>深入讨论</p></li></ul><figure><img src="https://s2.loli.net/2025/03/12/Ugl158MZIXScDyd.png"alt="image-20250312205447907" /><figcaption aria-hidden="true">image-20250312205447907</figcaption></figure><hr /><h4 id="涌现能力">涌现能力</h4><ul><li>什么是涌现能力<ul><li>原始论文定义：“在小型模型中不存在、但在大模型中出现的能力”</li><li>模型扩展到一定规模时，特定任务性能突然出现显著跃升趋势，远超随机水平</li></ul></li></ul><figure><img src="https://s2.loli.net/2025/03/12/ewPFyAO8ski5lHd.png"alt="image-20250312205725105" /><figcaption aria-hidden="true">image-20250312205725105</figcaption></figure><p>从上图可以看出，将模型参数规模扩展某个量级时，模型性能出现显著提升。</p><ul><li>涌现能力可能部分归因于评测设置<ul><li>本课程定义其为“代表性能力”，并不区分是否在小模型中存在</li></ul></li></ul><figure><img src="https://s2.loli.net/2025/03/12/FhLoOyrIdipJ8uC.png"alt="image-20250312210030812" /><figcaption aria-hidden="true">image-20250312210030812</figcaption></figure><ul><li>代表性能力<ul><li>指令遵循(Instruction Following)<ul><li>大语言模型能够按照自然语言指令来执行对应的任务<imgsrc="https://s2.loli.net/2025/03/12/UFqktmcT7bf3QYl.png"alt="image-20250312210223980" /></li></ul></li><li>上下文学习（In-context Learning)<ul><li>在提示中为语言模型提供自然语言指令和任务示例，无需显式梯度更新就能为测试样本生成预期输出</li><li><figure><img src="https://s2.loli.net/2025/03/12/9PCBlt3vJgTZNKw.png"alt="image-20250312210612103" /><figcaption aria-hidden="true">image-20250312210612103</figcaption></figure></li></ul></li><li>逐步推理（Step-by-step Reasoning）<ul><li>在提示中引入任务相关的中间推理步骤来加强复杂任务的求解，从而获得更可靠的答案</li><li><figure><img src="https://s2.loli.net/2025/03/12/ZIivOFJsp6HAzYL.png"alt="image-20250312211052574" /><figcaption aria-hidden="true">image-20250312211052574</figcaption></figure></li></ul></li></ul></li></ul><hr /><ul><li>涌现能力与扩展定律的关系<ul><li>涌现能力和扩展定律是两种描述规模效应的度量方法</li><li><figure><img src="https://s2.loli.net/2025/03/12/rIGiwfZjsDmT4K1.png"alt="image-20250312211500851" /><figcaption aria-hidden="true">image-20250312211500851</figcaption></figure></li></ul></li></ul><h4 id="总结">总结</h4><ul><li>大模型核心技术<ul><li>规模扩展：扩展定律奠定了早期大模型的技术路线，产生了巨大的性能提升</li><li>数据工程：数据数量、数据质量以及配制方法极其关键</li><li>高效预训练：需要建立可预测、可扩展的大规模训练架构</li><li>能力激发：预训练后可以通过微调、对齐、提示工程等技术进行能力激活</li><li>人类对齐：需要设计对齐技术减少模型使用风险，并进一步提升模型性能</li><li>工具使用：使用外部工具加强模型的优势，拓展其能力范围</li></ul></li></ul><h3 id="gpt与deepseek模型介绍">2.1.3 GPT与DeepSeek模型介绍</h3><h4 id="gpt系列模型并非偶然出现">GPT系列模型并非偶然出现</h4><ul><li>GPT系列模型成体系推进</li></ul><p><img src="https://s2.loli.net/2025/03/17/PJASs6mOhpIVg9f.png" alt="image-20250317221338373" style="zoom: 50%;" /></p><h4 id="gpt系列模型的技术演变">GPT系列模型的技术演变</h4><ul><li><p>GPT系列模型发展历程</p><blockquote><p>小模型：GPT-1，GPT-2</p><p>大模型：GPT-3，CodeX，GPT-3.5，GPT-4</p><p>推理大模型：o-series</p></blockquote></li></ul><figure><img src="https://s2.loli.net/2025/03/17/LRacptvoCbD6MuE.png"alt="image-20250317221704657" /><figcaption aria-hidden="true">image-20250317221704657</figcaption></figure><ul><li>GPT-1（1.1亿参数）</li></ul><blockquote><p>纯代码Transformer架构</p><p>预训练后针对特定任务微调</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/iCAZn64xmN9Tjf2.png"alt="image-20250317225508584" /><figcaption aria-hidden="true">image-20250317225508584</figcaption></figure><ul><li>GPT-2（15亿参数）</li></ul><blockquote><p>将任务形式统一为单词预测：<code>Pr(output|input, task)</code></p><p>预训练与下游任务一致</p><p>使用提示进行无监督任务求解</p><p>初步尝试了规模扩展</p></blockquote><p><img src="https://s2.loli.net/2025/03/17/TNBAE73DKCSFxWX.png" alt="image-20250317225817141" style="zoom:50%;" /></p><ul><li>GPT-3</li></ul><blockquote><p>模型规模达到1750亿参数 涌现出上下文学习能力</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/IYl867iek2sZBoz.png"alt="image-20250317230019971" /><figcaption aria-hidden="true">image-20250317230019971</figcaption></figure><ul><li>CodeX</li></ul><blockquote><p>代码数据训练 推理与代码合成能力</p></blockquote><ul><li>WebGPT</li></ul><blockquote><p>大语言模型使用浏览器</p></blockquote><ul><li>InstructGPT</li></ul><blockquote><p>大语言模型与人类价值观对齐 提出RLHF算法</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/Gr9UugqC8X1M5ld.png"alt="image-20250317230232820" /><figcaption aria-hidden="true">image-20250317230232820</figcaption></figure><ul><li>ChatGPT</li></ul><blockquote><p>基于 InstructGPT相似技术开发，面向对话进行优化</p></blockquote><ul><li>GPT-4</li></ul><blockquote><p>推理能力显著提升，建立可预测的训练框架</p><p>可支持多模态信息的大语言模型</p></blockquote><ul><li>GPT-4o</li></ul><blockquote><p>原生多模态模型，综合模态能力显著提升</p><p>支持统一处理和输出文本、音频、图片、视频信息</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/wX46PuzsDHLaip5.png"alt="image-20250317230416878" /><figcaption aria-hidden="true">image-20250317230416878</figcaption></figure><ul><li>o系列模型（应该是指GPT-4o）</li></ul><blockquote><p>推理任务上能力大幅提升</p><p>长思维链推理能力</p></blockquote><ul><li>o-series（应该是指GPT-o1/GPT-o3）</li></ul><blockquote><p>类似人类的“慢思考”过程</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/iJLpdKaj4S2negN.png"alt="image-20250317230602781" /><figcaption aria-hidden="true">image-20250317230602781</figcaption></figure><h4 id="deepseek系列模型技术演变">DeepSeek系列模型技术演变</h4><ul><li>DeepSeek系列模型发展历程</li></ul><blockquote><p>训练框架：HAI-LLM 语言大模型：DeepSeekLLM/V2/V3、Coder/Coder-V2、Math多模态大模型：DeepSeek-VI 推理大模型：DeepSeek-R1</p></blockquote><figure><img src="https://s2.loli.net/2025/03/17/WHny4riedRTO8GY.png"alt="image-20250317230747411" /><figcaption aria-hidden="true">image-20250317230747411</figcaption></figure><ul><li><p>DeepSeek实现了较好的训练框架与数据准备</p><ul><li>训练框架HAI-LLM(发布于2023年6月)</li></ul><blockquote><p>大规模深度学习训练框架，支持多种并行策略</p><p>三代主力模型均基于该框架训练完成</p></blockquote><ul><li>数据采集</li></ul><blockquote><p>V1和Math的报告表明清洗了大规模的CommonCrawl，具备超大规模数据处理能力</p><p>Coder的技术报告表明收集了大量的代码数据</p><p>Math的技术报告表明清洗收集了大量的数学数据</p><p>VL的技术报告表明清洗收集了大量多模态、图片数据</p></blockquote></li><li><p>DeepSeek进行了重要的网络架构、训练算法、性能优化探索</p></li></ul><blockquote><p>V1探索了scaling law分析(考虑了数据质量影响)，用于预估超参数性能</p><p>V2提出了MLA高效注意力机制，提升推理性能</p><p>V2、V3都针对MoE架构提出了相关稳定性训练策略</p><p>V3使用了MTP(多token预测)训练</p><p>Math 提出了PPO的改进算法GRPO</p><p>V3详细介绍Infrastructure的搭建方法，并提出了高效FP8训练方法</p></blockquote><ul><li>DeepSeek-V3</li></ul><blockquote><p>671B参数(37B激活)，14.8T训练数据</p><p>基于V2的MoE架构，引入了MTP和新的复杂均衡损失</p><p>对于训练效率进行了极致优化，共使用2.788MH800GPU时</p></blockquote><ul><li>DeepSeek-R1</li></ul><figure><img src="https://s2.loli.net/2025/03/17/zBbRT96l5ODKCsw.png"alt="image-20250317231150805" /><figcaption aria-hidden="true">image-20250317231150805</figcaption></figure><ul><li>DeepSeek-V3和DeepSeek-R1均达到了同期闭源模型的最好效果</li></ul><blockquote><p>开源模型实现了重要突破</p></blockquote><ul><li>为什么 DeepSeek会引起世界关注</li></ul><blockquote><p>打破了OpenAI闭源产品的领先时效性（国内追赶GPT-4的时间很长，然而复现o1模型的时间大大缩短）</p><p>达到了与OpenAI现有API性能可比的水平</p></blockquote><ul><li>为什么 DeepSeek 会引起世界关注</li></ul><blockquote><p>中国具备实现世界最前沿大模型的核心技术</p><p>模型开源、技术开放</p></blockquote><h2 id="第二课-模型构架">2.2 第二课 模型构架</h2><p>PPT看了一遍，但看得有点云里雾里，暂时也没有截图或做PPT相关的笔记了。只能又再去看书中相关章节，阅读过程中看到一些概念，忘记了或不知道，复习或学习记录在此。</p><hr /><h3 id="transformer模型介绍">Transformer模型(介绍)</h3><p>以下主要学习Transformer模型的构架。</p><p>已有的大语言模型主要是基于Transformer模型进行设计与开发的。</p><p>Transformer是由含有多头注意力和前馈网络的子模块堆叠而成的神经网络模型。其主要包含输入编码层、多头注意力层和前馈网络层。</p><figure><img src="https://s2.loli.net/2025/03/23/SjeqPf6HpwsX4lz.png"alt="image-20250323121544540" /><figcaption aria-hidden="true">image-20250323121544540</figcaption></figure><h4 id="输入编码层">输入编码层</h4><p>在Transformer模型中，输入的词元序列 <span class="math display">\[𝒖 = [𝑢_1, 𝑢_2, . . . , 𝑢_𝑇]\]</span> （词元（词元与词向量的概念，参考 <ahref="https://jiangsanyin.github.io/2025/03/22/Transformer%E6%9E%84%E6%9E%B6%E4%B8%AD%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D/">Transformer构架中专业名词</a>）序列，即由多个词元组成的序列。）经过一个输入嵌入模块（input embeddingmodule）转化为向量序列。为了建模词汇本身的语义信息，每个词元在输入嵌入模块中被映射为一个可用于计算与学习的词向量v<sub>t</sub>。另外，为了表示建模序列中元素的位置信息，Transformer引入了位置编码（positionemdedding，PE)。给定一个词元u<sub>t</sub>，位置编码根据其在输入中的绝对位置分配一个对应的位置向量p<sub>t</sub>，将词向量与对应的位置向量直接相加，就可以得到一个输入嵌入表示序列：<span class="math display">\[𝑿 = [𝒙_1, . . . , 𝒙_𝑇]，其中 𝒙_𝑡 = 𝒗_𝑡 + 𝒑_𝑡\]</span> 这样，就将一个自然语言输入序列（如“I loveNLP.”）示成一个输入嵌入表示序列<strong><imgsrc="https://s2.loli.net/2025/03/23/oCw9SGvu31LZ5Dr.png"alt="image-20250323124415128" /></strong>。</p><p>Transformer框架可以使用位置编码p<sub>t</sub>建模不同词元的位置信息。因为这种位置编码仅由词元对应的位置决定，因此也被称为绝对位置编码，绝对位置编码方法限制了Transformer模型处理其长文本的能力。</p><h4 id="多头注意力层">多头注意力层</h4><p>多头注意力机制是Transformer模型的核心技术，能够直接建模任意距离之间的交互关系。相比之下，CNN是迭代地利用前一个时刻的状态更新当前时刻的状态，所以在处理长序列时，可能会出现梯度爆炸或梯度消失的问题；而RNN中，只有位于同一个卷积核内的词元可以直接进行交互，需要通过堆叠卷积层来实现远距离的信息交换。</p><p>一个多头注意力通常由多个注意力模块组成。每个注意力模块中，会将输入的嵌入序列映射成为相应的查询（query，Q）、键（key，K）、值（value，V）三个矩阵。之后每个查询与所有键进行点积运算，并使用softmax函数计算注意力分数。再然后，这些分数将用于计算值向量的加权线性组合，以得到最终输出。其一致过程如下：<span class="math display">\[\begin{aligned}Q = XW^Q\qquad\qquad\qquad(5.2)\\K = XW^K\qquad\qquad\qquad(5.3)\\V = XW^V\quad\quad\quad\quad\quad\quad(5.4)\\attention(\mathbf{Q,K,V}) =softmax(\frac{QK^T}{\sqrt{D}})V\quad\quad\quad\quad\quad\quad(5.5)\\公式（5.5）中，通过除以\sqrt{D}进行数值缩放，其中D是键对应的向量维度。\end{aligned}\]</span>多头注意力层由多个注意力模块组成。每个注意力模块都有不同的映射参数，即多头注意力机制引入了N组结构相同但映射参数不同的注意力模块（注意力头，attentionhead）。在每个注意力头中，输入序列被映射为一组查询、键、值，通过使用上述公式独立计算并输出。然后不同的注意力头的输出被拼接在一起，并通过一个权重矩阵W<sup>O</sup>映射为最终输出： <span class="math display">\[\begin{aligned}MHA=Concat(head_1,head_2,...,head_N)W^O\quad\quad\quad\quad\quad\quad(5.6)\\head_n=Attention(\mathbf{Q,K,V})=Attention(XW^Q_n,XW^K_n,XW^V_n)\quad\quad\quad\quad\quad\quad(5.7)\end{aligned}\]</span>注意力机制能够直接建模序列中任意两个位置之间的关系，比传统神经网络具有更强的长序列建模能力。此外，因为注意力的计算过程中是矩阵的相关运算，对硬件的并行计算具有较好的适配性，比如NVIDIAGPU这类加速卡设备就能高效地支持大规模Transformer模型的参数优化。</p><hr /><figure><img src="https://s2.loli.net/2025/03/20/LVtlwJcjiYOnryF.png"alt="image-20250320231453980" /><figcaption aria-hidden="true">image-20250320231453980</figcaption></figure><hr /><p><strong>点积：</strong> <span class="math display">\[\begin{aligned}对于向量&amp;a与向量b（要求两向量的维度一样）：\\&amp;a=[a_1,a_2,...,a_n]\quad\quad b=[b_1,b_2,...b_n]\\&amp;a和b的点积公式为：a•b=a_1b_1+a_2b_2+...+a_nb_n\end{aligned}\]</span></p><hr /><p>softmax函数：https://zhuanlan.zhihu.com/p/105722023、https://zh.wikipedia.org/zh-cn/Softmax%E5%87%BD%E6%95%B0</p><p>该函数的形式通常按下面的式子给出： <span class="math display">\[{\displaystyle \sigma (\mathbf {z} )_{j}={\frac {e^{z_{j}}}{\sum_{k=1}^{K}e^{z_{k}}}}}    for j = 1, …, K.\]</span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#下面是使用Python进行函数计算的示例代码：</span><br><span class="hljs-keyword">import</span> math<br>z = [<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>]<br>z_exp = [math.exp(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> z]  <br><span class="hljs-built_in">print</span>(z_exp)  <span class="hljs-comment"># Result: [2.72, 7.39, 20.09, 54.6, 2.72, 7.39, 20.09] </span><br>sum_z_exp = <span class="hljs-built_in">sum</span>(z_exp)  <br><span class="hljs-built_in">print</span>(sum_z_exp)  <span class="hljs-comment"># Result: 114.98 </span><br>softmax = [<span class="hljs-built_in">round</span>(i / sum_z_exp, <span class="hljs-number">3</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> z_exp]<br><span class="hljs-built_in">print</span>(softmax)  <span class="hljs-comment"># Result: [0.024, 0.064, 0.175, 0.475, 0.024, 0.064, 0.175]</span><br><br><span class="hljs-comment">#Python使用numpy计算的示例代码:</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>z = np.array([<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>, <span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>])<br><span class="hljs-built_in">print</span>(np.exp(z)/<span class="hljs-built_in">sum</span>(np.exp(z)))<br></code></pre></td></tr></table></figure><h4 id="前馈网络层">前馈网络层</h4><p>为了学习复杂的函数映射关系，Transformer引入了前馈网络层（feed forwardnetwork，FFN），对嵌入序列（就是输入编码层得到的嵌入表示序列）进行非线性变换。详细地说，给定输入<strong>X</strong>，Transformer模型中的前馈神经层由两个线性变换和一个非线性变换函数组成： <span class="math display">\[\begin{aligned}FFN(\mathbf{X})=σ(\mathbf{XW^U} + \mathbf{b_1})\mathbf{W^D} +\mathbf{b_2}\qquad\qquad\qquad(5.8)\\其中W^U∈R^{H×H^′} 和 W^D∈R^{H^′×H}分别是第一层和第二层的线性变换权重矩阵，b_1∈R^{H^′}和b_2∈R^{H}是偏置项，σ是激活函数\end{aligned}\]</span>在原始的Transformer模型中，采用了ReLU作为激活函数。前馈网络层通过激活函数引入了非线性变换，提升了模型的表达能力，从而能够更好地建模复杂的交互关系。</p><hr /><p><strong>为什么通过引入非线性变换，能够模型的表达能力？</strong></p><hr /><p><strong>线性变换与非线性变换：</strong></p><p>可参考：https://blog.csdn.net/qq_35468747/article/details/122005322、https://www.zhihu.com/question/298320067<span class="math display">\[\begin{aligned}如果一个变换满足以下条件，则为线性变换：\\T是某函数，它使得映射V → W 成立，并且满足以下条件：\\T(x+y) =T(x)+T(y)\\T(ax) =aT(x)\\其中x , y ∈ V ，a ∈ R\end{aligned}\]</span> 识别给定函数f ( x )f(x)f(x)是否为线性变换非常简单，只需要查看f ( x)中的每一项是否都是x与一个数的乘积，如果是，f 则是线性变换。</p><p><strong>f</strong>(x,y,z)=(3x−y,3z,0,z−2x)此函数是一个线性变换（可以写成矩阵相乘的形式进行查看）</p><p><strong>g</strong>(x,y,z)=(3x−y,3z+2,0,z−2x)，此函数则不是一个线性变换。因为在函数g 中，第二个分量为3 z + 2，2是一个常数，并不包含输入向量( x , y , z )中的任何分量</p><ul><li><p>在几何直观上，线性变换有如下性质：</p><ul><li><p>变换前是直线，变换后仍是直线</p></li><li><p>原点保持固定不动</p></li></ul></li></ul><h4 id="编码器">编码器</h4><p>Transformer模型中，编码器的大致构架如下图左侧部分所示内容：</p><figure><img src="https://s2.loli.net/2025/03/23/SjeqPf6HpwsX4lz.png"alt="image-20250323121544540" /><figcaption aria-hidden="true">image-20250323121544540</figcaption></figure><p>编码器的作用是将每个输入词元都编码成一个上下文语义相关的表示向量。编码器结构由多个相同的层堆叠而成，其中每一层都包含<strong>多头自注意力模块</strong>和<strong>前馈网络模块</strong>。在注意力和前馈网络后，模型使用<strong>层归一化</strong>和<strong>残差连接</strong>来加强模型的训练稳定度。</p><p>其中，残差连接将输入与该层的输出（比如对于多头注意力层而言，这是多头注意力层的输入与输出）相加，<strong>实现了信息在不同层的直接传递，从而缓解梯度爆炸或梯度消失的问题</strong>。</p><p>而层归一化，则是对每个模块的的输出进行重新缩放，<strong>提升模型的训练稳定性</strong>。</p><p>编码器接受经过位置编码层的词嵌入序列 𝑿作为输入，通过多个堆叠的编码器层来建模上下文信息，进而生成整个输入序列的编码表示。</p><p>由于输入数据是完全可见的，编码器中的注意力模块通常采用双向注意力，每个位置的词元表示能够有效融合来自上下文的语义信息。</p><p>在编码器-解码器构架中，编码器的输出将作为解码器的输入，进行后续计算。用公式表示如下，第l（是L的小写）层编码器的数据处理过程如下所示：<span class="math display">\[\begin{aligned}&amp;𝑿^′_𝑙 = LayerNorm(MHA(𝑿_{𝑙−1}) + 𝑿_{𝑙−1}) \\&amp;𝑿_𝑙 = LayerNorm(FFN(𝑿^′_𝑙) +𝑿^′_𝑙)\quad\quad\quad\quad\quad\quad(5.9) \\\end{aligned}\]</span></p><p><span class="math display">\[\begin{aligned}其中𝑿_{𝑙−1}和𝑿_{𝑙}分别表示该Transformer层的输入与输出，\\𝑿^′_𝑙 是经过多头注意力模块后的中间表示，LayerNorm表示层归一化\end{aligned}\]</span></p><hr /><p>架构图解析：</p><ul><li><strong>输入词嵌入</strong>：将输入文本转换为向量表示。</li><li><strong>位置编码</strong>：为每个输入添加位置信息，以便模型能够区分不同位置的词。</li><li><strong>多头注意力层</strong>：用于捕捉输入序列中不同位置之间的依赖关系。</li><li><strong>前馈网络层</strong>：用于对输入进行非线性变换。</li><li><strong>相加和层归一化</strong>：用于稳定训练过程。</li><li><strong>输出概率</strong>：最终输出的概率分布，用于预测下一个词或分类任务。</li></ul><h4 id="解码器">解码器</h4><p>Transformer模型中，解码器的大致构架如下图右侧部分所示内容：</p><figure><img src="https://s2.loli.net/2025/03/23/SjeqPf6HpwsX4lz.png"alt="image-20250323121544540" /><figcaption aria-hidden="true">image-20250323121544540</figcaption></figure><p>Transformer架构中的解码器基于来自编码器编码后的最后一层的输出表示以及已经由模型生成的词元序列，进行后续内容的生成。与编码器类似，解码器也是由多个相同的层堆叠而成，每个层都包含相同类型的组件。</p><p>与编码器不同的是，解码器需要在计算注意力时引入掩码操作，以保证生成目标序列时不依赖于未来信息（防止当前位置看到未来的输出）。</p><p>解码器还引入了交叉注意力（crossattention）来关注编码器输出的中间状态<strong>X</strong><sub>L</sub>（用于捕捉解码器和编码器之间的依赖关系）。</p><p>与编码器类似，解码器的每个模也采用了层归一化与残差连接（残差连接有助于梯度传播，层归一化则用于稳定训练过程）。</p><p>在经过解码器之后，模型会通过一个全连接层将输出映射到大小为 𝑉的目标词汇表的概率分布，并基于相应的解码策略生成预测词元。</p><p>训练过程中，编码器可以对输入目标进行并行训练；而在生成过程中，解码器需要通过<strong>自回归的方式</strong>逐步生成完整的目标序列。解码器的数据处理流程如下公式所示：<span class="math display">\[\begin{aligned}&amp;𝒀^′_𝑙 = LayerNorm(MaskedMHA(𝒀_{𝑙−1}) + 𝒀_{𝑙−1}),\\&amp;𝒀^{′′}_𝑙 = LayerNorm(CrossMHA(𝒀^′_𝑙, 𝑿_𝐿) + 𝒀^′_𝑙),\\&amp;𝒀_𝑙 = LayerNorm(FFN(𝒀^{′′}_𝑙) +𝒀^{′′}_𝑙)\quad\quad\quad\quad\quad\quad(5.10)\end{aligned}\]</span></p><p><span class="math display">\[\begin{aligned}其中，𝒀_{𝑙−1} 和 𝒀_{𝑙} 分别是该 Transformer 层的输入和输出，𝒀^′_𝑙 和𝒀^{′′}_𝑙 是该层中输入\\经过掩码多头注意力 MaskedMHA 和交叉多头注意力 CrossMHA模块后的中间表示,\\LayerNorm 表示层归一化。然后将最后一层的输出 𝒀_𝐿 映射到词表的维度上：\\𝑶 = softmax(𝒀_𝐿𝑾^𝐿)\quad\quad\quad\quad\quad\quad(5.11)\\\\其中，𝑶∈R^{T×V}是模型的最终输出（V是词汇表大小），代表下一个词元在词表上的概率分布，\\W^L∈R^{H×V}是将输出映射到词表维度的参数矩阵，而𝒀_𝐿𝑾^𝐿是softmax函数的输入，通常称为logits\end{aligned}\]</span></p><h3 id="模型详细配置">(模型)详细配置</h3><p>Transformer模型的四个核心模块包括：归一化（归一化方法与归一化配置）、激活函数、位置编码、注意力机制。</p><h4 id="归一化方法">归一化方法</h4><p>为了缓解训练损失不稳定的问题，归一化方法被提出。原始的Transformer模型主要使用层归一化方法（layernormolization，LN），后续出现了其他一些改进的变种归一化方法，如均方根归一化（rootmean square layer normolization，RMS-Norm）和DeepNorm。</p><hr /><p>LayerNorm，在早期，批次归一化（batchnormolization，BN）被广泛使用，但此归一化方法不能有效<strong>处理可变长度的序列数据和小批次数据</strong>。针对此问题，层归一化技术被提出，它针对数据进行逐层归一化，也就是说它会计算每一层量激活值的均值μ 和方差 σ ，重新调整激活值的中心，并通过参数 γ 和 β 进行缩放： <spanclass="math display">\[\begin{aligned}LayerNorm(x)=\frac{x-μ}{σ}·γ + β\quad\quad\quad\quad(5.12)\\μ=\frac{1}{H}{\sum _{i=1}^Hx_i },\quad\quadσ=\sqrt{\frac{1}{H}{\sum_{i=1}^H(x_i-μ)^2 }}\quad\quad\quad\quad(5.13)\\\end{aligned}\]</span></p><hr /><p>RMS-Norm。为了<strong>提升归一化的训练速度</strong>，RMS-Norm只使用激活值总和的均方根RMS(·)对激活值进行缩放。使用RMS-Norm的Transformer模型相比使用LayerNorm训练的模型在训练速度与性能上均具有一定优势。比如Gopher与Chinchilla模型都采用了RMS-Norm，其计算分工如下： <spanclass="math display">\[\begin{aligned}RMSNorm(x)=\frac{x}{RMS(x)}·γ \quad\quad\quad\quad(5.14)\\RMS(x)=\sqrt{\frac{1}{H}{\sum _{i=1}^H(x_i)^2}}\quad\quad\quad\quad(5.15)\\\end{aligned}\]</span></p><hr /><p>DeepNorm。为了<strong>进一步稳定深层Transformer的训练</strong>，DeepNorm在LayerNorm的基础上，在残差连接中对之前的激活值x按照一定比例α 进行缩放，能更新地支持层数扩展。其计算公式如下： <spanclass="math display">\[DeepNorm(x)=LayerNorm(α·x + Sublayer(x))\quad\quad\quad\quad(5.16)\\\]</span>其中Sublayer表示Transformer层中的前馈神经网络或注意力模块。比如GLM-130B就采用了DeepNorm作为归一化技术。</p><h4 id="归一化模块位置">归一化模块位置</h4><p>不仅归一化方法对训练稳定性有影响，归一化模块的位置对于训练稳定性也具有重要影响。</p><p>归一化模块的位置通常有三种选择，分别是层后归一化（post-layernormolization，Post-Norm）、层前归一化（pre-layernormolization，Pre-Norm）和夹心归一化（sandwich-layernormolization，Sandwich-Norm）。它们相对于注意力层与残差连接层的位置分别如下所示：</p><figure><img src="https://s2.loli.net/2025/04/08/bmvYqEWk39e2PSG.png"alt="image-20250408211348006" /><figcaption aria-hidden="true">image-20250408211348006</figcaption></figure><hr /><p>Post-Norm。原始的Transformer模型就是使用Post-Norm归一化技术，即将归一化模块放置在残差连接之后，公式表达如下：<span class="math display">\[Post﹣Norm(x)=Norm(x+Sublayer(x))\quad\quad\quad\quad(5.17)\\\]</span>其中Norm代表任意一种具体的归一化方法。Post-Norm具有诸多优势：（1）有助于加快神经网络的收敛速度，防止模型出现梯度爆炸或梯度消失的问题，从而减少训练时间。（2）可以降低神经网络对于超参数（初始化参数、学习率等）的敏感性，使得神经网络更容易进行调优。</p><p>但是由于输入层附近的梯度可能较大，Post-Norm有时会引发训练不稳定的现象。因此一般不单独使用，而是跟其他策略结合使用。</p><hr /><p>Pre-Norm。此归一化方法将归一化模块放置在每个子层之前。公式表示如下：<span class="math display">\[Pre﹣Norm(x)=x+ Sublayer(Norm(x))\quad\quad\quad\quad(5.18)\\\]</span>同样地，Norm也是表示任意一种归一化方法。通过在每个子层之前添加了一个归一化模块，针对每个模块的输入进行归一化，<strong>可以缓解梯度爆炸或梯度消失的问题</strong>。此外，Pre-Norm在最后一个Transformer层之后还额外添加了一个LayerNorm。</p><p>相对于Post-Norm来说，Pre-Norm虽然在性能上略有逊色，但<strong>增加了训练过程中的稳定性</strong>，因为很多主流的大模型都采用了Pre-Norm。</p><hr /><p>Sandwich-Norm。在Pre-Norm的基础上，Sandwich-Norm在残差连接之前增加了额外的LayerNorm，主要还是为了避免层输出数值爆炸的情况。公式表示如下：<span class="math display">\[Sandwich﹣Norm(x)=x+Norm(Sublayer(Norm(x)))\quad\quad\quad\quad(5.19)\\\]</span>在某种程度上，Sandwich-Norm可以看作是Post-Norm与Pre-Norm两种方法的组合。虽然从理论上分析好像会得到两种方法的优势即取得更好的归一化效果，但实际情况表明它有时仍然无法保证LLM的训练稳定性，甚至会引发训练崩溃的问题。</p><h4 id="激活函数">激活函数</h4><h4 id="位置编码">位置编码</h4><h4 id="注意力机制">注意力机制</h4><h4 id="混合专家模型">混合专家模型</h4><h4 id="llama的详细配置">LLaMA的详细配置</h4>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大语言模型课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>构建问答系统之更新知识库与微调二者比较</title>
    <link href="/2025/03/10/%E6%9E%84%E5%BB%BA%E9%97%AE%E7%AD%94%E7%B3%BB%E7%BB%9F%E4%B9%8B%E6%9B%B4%E6%96%B0%E7%9F%A5%E8%AF%86%E5%BA%93%E4%B8%8E%E5%BE%AE%E8%B0%83%E4%BA%8C%E8%80%85%E6%AF%94%E8%BE%83/"/>
    <url>/2025/03/10/%E6%9E%84%E5%BB%BA%E9%97%AE%E7%AD%94%E7%B3%BB%E7%BB%9F%E4%B9%8B%E6%9B%B4%E6%96%B0%E7%9F%A5%E8%AF%86%E5%BA%93%E4%B8%8E%E5%BE%AE%E8%B0%83%E4%BA%8C%E8%80%85%E6%AF%94%E8%BE%83/</url>
    
    <content type="html"><![CDATA[<h1 id="一参考文章">一、参考文章</h1><p>（1）<a href="https://www.53ai.com/news/qianyanjishu/201.html">RAG&amp; 微调，我们应该如何选择？</a></p><h1id="二什么时候需要使用rag什么时候使用微调">二、什么时候需要使用RAG，什么时候使用微调</h1><table><thead><tr><th>要求/使用对象</th><th>RAG</th><th>微调</th></tr></thead><tbody><tr><td>（1）要构建一个需要访问外部数据源的 LLM 应用程序</td><td>Y</td><td></td></tr><tr><td>（2）应用程序需要专门的<strong>写作与回答风格（如客服）</strong>或<strong>与特定领域的语言和惯例深度一致</strong></td><td></td><td>Y</td></tr><tr><td>（3）抑制幻觉</td><td>Y</td><td></td></tr><tr><td>（4）数据集有限时，微调效果有限，但RAG仍能保持一定知情度与准确度</td><td>Y</td><td></td></tr><tr><td>（5）如果我们正在应对快速发展的数据环境，RAG提供的敏捷性是传统微调难以比拟的。</td><td>Y</td><td></td></tr><tr><td>（6）LLM 应用程序需要透明/可解释，RAG可以增强用户对其输出的信任和理解。</td><td>Y</td><td></td></tr><tr><td>（7）快速集成领域知识如法律、数学与特定公司产品等，提高专业问答能力、成为当前领域内的专家</td><td></td><td>Y</td></tr><tr><td>（8）可扩展性（不断给增加数据源知识量）</td><td>Y</td><td></td></tr><tr><td>（9）延迟和实时要求（RAG涉及在生成响应之前检索数据，可能会引入更多延迟）</td><td></td><td>Y</td></tr><tr><td>（10）维护与支持（RAG需要维护知识库与检索机制，而微调需要反复的再训练流程）</td><td>Y</td><td></td></tr><tr><td>（11）成本（微调需要反复微调动作，需要持续投入；RAG则主要在初期需要一定成本，用来集成相关应用等，但还需要考虑定期维护外部知识库，成本相对较低）</td><td>Y</td><td></td></tr><tr><td>（12）复杂度</td><td>Y</td><td></td></tr></tbody></table><p>RAG英文全称是“Retrieval-AugmentedGeneration”，中文翻译为“检索增强生成”，它将检索（或搜索）的能力集成到LLM 的文本生成中。它结合了一个检索系统和一个LLM，前者从大型语料库中获取与用户查询最相关的文档，后者使用这些被检索到的文档中的信息生成答案。本质上，RAG帮助模型“查找”外部信息以改进其响应。</p><p>ModelFine-tuning，中文翻译为“模型微调”，是在较小的特定数据集上进一步训练预训练过的LLM，以使其适应特定任务或提高其性能。通过微调，我们根据数据调整模型的权重，使其更适合我们应用程序的独特需求。</p><p>那么到底什么时候应该使用RAG，什么时候应该使用模型微调呢？下面从多个角度来进行分析说明。</p><hr /><p>（1）<strong>是否需要访问外部数据源？</strong></p><p>LLM本身的知识储备是有一个自身缺陷或限制的，主要来自两个方面：第一，LLM被训练时所使用的训练数据集是有一个收集时间界线的，在这个时间界线之后的产生的新知识是LLM无法知晓的。第二，收集训练数据集时无法收集到那么不公开的数据，这样的数据也是LLM无法知晓的。</p><p>如果我们要构建一个需要访问外部数据源的 LLM应用程序，那么我们就应该选择 RAG。因为 RAG 会通过在 LLM生成响应之前从外部数据源中检索与当前用户查询最相关的信息来增强 LLM的能力。相比之下，虽然我们可以对LLM进行微调以学习一些外部知识，但这样做需要目标领域内的大量带标签的问答数据集，且该数据集必须随着基础数据的变化不断变化更新，这在基础数据频繁更新时是不切实际的。微调过程也没有明确地对查询外部知识所涉及的检索和推理步骤进行建模，这使得开发人员与用户对这两个步骤的执行存在较大不确定性。</p><p>因此总而言之，如果我们的应用程序需要使用外部数据源，那么使用 RAG系统可能比尝试仅通过微调“融入”所需的知识更有效且可扩展。</p><p>（2）<strong>是否需要修改模型的行为、写作风格或特定领域的知识？</strong></p><p>微调的优势在于能够使 LLM的行为适应特定领域的语气或术语。比如我们希望模型的回答更像一个法律专家，那么对法律领域的数据集进行微调可以达到这个目的。</p><p>而与之相对地，RAG虽然能够检索外部数据源并提供给LLM进行利用与整合，但其侧重点仍在于信息检索，并不会根据检索到的文件与信息修改LLM的语气与措词风格。</p><p>因此，如果我们的应用程序需要专门的回复风格或与特定领域的语言惯例和气质保持一致，那么就需要使用微调。</p><p>（3）<strong>抑制幻觉</strong></p><p>LLM的一个明显的缺点就是容易产生幻觉，即对于未掌握的知识或不熟悉的知识，LLM也会尝试编造没有现实依据或现成数据的事情与细节，生成回复。人类看到之后，可能感觉“有理有据，头头是道”，但其实可能是LLM在“一本正经地胡说八道”。如果用户遵照这类回复进行操作，可能造成不可确认的结果甚至重大破坏性问题。</p><p>如果在特定领域的训练数据上对LLM进行微调，可以在一定程度上减少LLM出现幻觉的可能性。但只是一定程度上减少这种可能性，即当LLM面对不熟悉的问题时，LLM仍可能会“一本正经地胡说八道”，导致LLM幻觉现象的出现。</p><p>相对地，如果使用RAG则不太容易产生幻觉，因为它的每个响应都基于从指定数据源中检索到的信息。在LLM输出答案之前，检索器从外部数据源（我们当然应该尽量保证此外部数据源中数据的准确严谨性）中检索到相关文件与信息，这个过程其实就是相当于是对LLM的大致回复内容进行了事实检查操作，极大地减少了LLM“一本正经地胡说八道”的可能性。LLM也被限制根据检索到的上下文信息合成响应。</p><p>（4）<strong>可用的已标记训练数据量大小是一个重要因素</strong></p><p>可用已标记数据的质量与数量是决定采用模型微调还是RAG的一个重要因素。即如果可用已标记数据量大且质量都不错，那么这些训练数据可以帮助模型深入理解特定领域的细微差别、复杂性与独特模式，从而生成准确的、与上下文相关的回复；反过来，如果我们的训练数据数据与质量无法达到上述标准，事实上微调能够带来的改进效果是非常有限的，如果训练数据集不足还有可能导致出现过拟合现象。</p><p>相比之下，即使没有大量的可用已标记数据，RAG独立于训练数据，仍能够从提供的外部知识源中检索用户提问的相关信息，然后由LLM通过访问与整合来自外部数据源的信息生成最终回复。检索和生成的结合确保系统即使在特定领域的训练数据稀疏的情况下也能保持知情。</p><p>所以说，如果我们拥有大量的可用标记数据以覆盖当前领域内问题的复杂性与广度，模型微调可以提供定制化的、准确完善的模型行为。反之，我们则应该采用RAG文案，确保应用程序通过其检索功能保持数据知情与上下文感知。</p><p>（5）<strong>数据动静态程度如何</strong></p><p>在特定数据集上微调LLM意味着LLM本身的知识储备就是微调时所用数据集的一个静态快照。很显然，如果模型所需要使用的数据集频繁更新，为了使用LLM本身的知识储备能够跟这些更新保持同步，就需要对模型频繁进行微调，这不仅需要频繁地准备数据集与格式化它们，还需要频繁地执行微调指令，这门将是一个耗时又占用资源的过程。与此同时，为了确保更新后的模型在不同场景下能够使用更新后的知识做出准确恰当的回答，还需要对其进行测试与仔细监控。</p><p>而RAG在类似的场景下则拥有与身俱来的优势。它们本来就是使用检索机制在外部知识源查询与用户提问最相关的文档与信息，更新了外部知识源其实对它来说几乎是透明的，它们仍能从更新后的外部知识源检索并提取最新的知识。</p><p>总之，如果我们数据环境是快速迭代更新的，RAG为我们提供的敏捷性、便捷性、高效性是传统微调难以比拟的。</p><p>（6）<strong>LLM 应用程序需要有多透明/可解释？</strong></p><p>经过微调后的LLM虽然很强大，但其背后的运作与推理逻辑对人类来说就是一个黑盒子，不透明且不可感知其中某个关键细节过程。对于某些用户或某些需要验证LLM输出结果准确性的应用程序来说，确定LLM输出的内容并知晓其背后的原因与参考内容也是很重要的。遗憾的是，微调并不能实现此功能。</p><p>相反，RAG却可以轻松地实现此功能。由于RAG的两步性质即”检索与生成“，且能将中间的检索结果中与生成内容相关的内容最终以参考文档的形式呈现给使用者，这为使用者溯源输出内容提供了切实的证据与参考线索。</p><p>所以，如果使用者要求对LLM输出的内容进行溯源，以找到切实的证据与参考线索，那么RAG将是首选。</p><p>（12）<strong>复杂度</strong></p><p>虽然许多提供商现在提供一键式微调，我们只需要提供训练数据，但跟踪模型版本并确保新模型仍然全面运行是一项挑战。另一方面，RAG也可能很快变得复杂。有多个组件的设置，确保数据库保持最新，并确保各个部分（例如检索和生成）正确地组合在一起。</p><hr /><h1 id="三总结">三、总结</h1><p>显然，我们在决定选择微调还是RAG前，需要先对LLM的独特需要、优先事项与自身条件进行综合评估。</p><p>没有一种万能的解决方案，成功在于使优化方法与任务的具体要求保持一致。通过评估关键标准（外部数据的需求、调整模型行为、训练数据可用性、数据动态、结果透明度等），我们就可以用最佳前进路径做出明智的决策。在某些情况下，同时利用RAG 和微调的混合方法可能是最佳选择。</p><figure><img src="https://s2.loli.net/2025/03/11/JqMdIaOznpjgTFm.png"alt="image-20250311162729369" /><figcaption aria-hidden="true">image-20250311162729369</figcaption></figure><p>（1）如果要使用微调，目前在我看来将存在以下缺点或待解决问题：</p><ul><li>微调需要将我们公司现有各种文档如使用手册、产品说明书、白皮书等，转换成可用于微调的数据集。而这些文档的格式可能是多种多样的如pdf、pptx、docx等，需要继续研究这种转换工作可用方法与成本。</li><li>后期基础数据关键内容更新一次可能就需要进行一次微调，将增加成本。且微调一次其实会生成一个新模型，需要重新部署，将临时中断模型对外提供服务（目前这对于我们公司来说，可能不是最关键的缺点）</li></ul><p>（2）如果使用RAG（这里直接以“fastGPT这类知识库问答系统”来搭建客服系统为例），则存在以下缺点：</p><ul><li>客服的回复语气与风格，可能不够委婉。但能实现会话且保证回复的答案能够溯源且相对准确</li><li>不管微调还是RAG，如果需要联网搜索，就需要配置联网搜索引擎（有收费搜索引擎，但增加了成本；也有免费的，但服务可能不够稳定、效果不如收费版本好）</li></ul><hr /><p><strong>最后，我给出自己的建议供参考</strong>：</p><p>如果需要马上搭建出这样的客服系统，可以先使用fastGPT来搭建RAG应用程序，完成知识库与相关功能配置，先体验下效果。</p><p>如果后续有需要且技术完善、时间充裕，可以将公司相关资料文档转换成可用标记数据集，进行微调。最好能将“微调与RAG结合起来使用”、”单独使用微调“进行比较评估，并确定后续动作。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>更新知识库 微调</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeepSeek的用法整理(持续更新)</title>
    <link href="/2025/03/08/DeepSeek%E7%9A%84%E7%94%A8%E6%B3%95%E6%95%B4%E7%90%86-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/"/>
    <url>/2025/03/08/DeepSeek%E7%9A%84%E7%94%A8%E6%B3%95%E6%95%B4%E7%90%86-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<p>以下列举出了DeepSeek相关的、暂时需要较专业命令或专业操作的相关描述。常用的如文生普通的文字、图生成，不再列举。</p><p>其他的如文生视频、视频生文、视频生视频等自己暂时还未接触到，后续知道再补充。</p><h1 id="一文生思维导图">一、文生思维导图</h1><h2 id="访问deepseek生成mk格式内容">1.1 访问DeepSeek生成mk格式内容</h2><figure><img src="https://s2.loli.net/2025/03/08/lWnDYmjcG6v4ThZ.png"alt="image-20250308181858148" /><figcaption aria-hidden="true">image-20250308181858148</figcaption></figure><h2 id="创建一个.txt文件">1.2 创建一个.txt文件</h2><figure><img src="https://s2.loli.net/2025/03/08/EiunedakHrjAVKD.png"alt="image-20250308182114534" /><figcaption aria-hidden="true">image-20250308182114534</figcaption></figure><p>将上述生成的内容复制到此.txt文件中</p><figure><img src="https://s2.loli.net/2025/03/08/2FkqL7Yh9pdeogO.png"alt="image-20250308182303618" /><figcaption aria-hidden="true">image-20250308182303618</figcaption></figure><h2 id="将.txt修改为.md">1.3 将.txt修改为.md</h2><figure><img src="https://s2.loli.net/2025/03/08/lbdavqm2JDKPCLR.png"alt="image-20250308182535657" /><figcaption aria-hidden="true">image-20250308182535657</figcaption></figure><p>将上述.txt文件的后缀修改后.md</p><figure><img src="https://s2.loli.net/2025/03/08/cLGjfbvr8JZ9kPM.png"alt="image-20250308182616175" /><figcaption aria-hidden="true">image-20250308182616175</figcaption></figure><h2 id="使用xmind打开.md文件">1.4 使用Xmind打开.md文件</h2><p>此处要使用高版本的Xmind软件，低版本的Xmind无法直接导入.md格式文件。笔者此处使用的版本是“25.01.01061”。下载地址参考：<ahref="https://xmind.app/download/">Xmind安装包官方下载链接</a></p><p>新建导图：</p><figure><img src="https://s2.loli.net/2025/03/08/YNouhbfHTD8MPcL.png"alt="image-20250308193125792" /><figcaption aria-hidden="true">image-20250308193125792</figcaption></figure><p>模板选择“思维导图”：</p><figure><img src="https://s2.loli.net/2025/03/08/MnyZIEc17JpfNiO.png"alt="image-20250308193212122" /><figcaption aria-hidden="true">image-20250308193212122</figcaption></figure><p>执行“文件-&gt;导入-&gt;Markdown”，选中上面的“提炼.md”文件打开，可以看到如下效果：</p><figure><img src="https://s2.loli.net/2025/03/08/vYx8eRfNW3Xrp1a.png"alt="image-20250308193446243" /><figcaption aria-hidden="true">image-20250308193446243</figcaption></figure><h2 id="保存思维导图">1.5 保存思维导图</h2><p>之后，就可以将此思维导图保存为“.xmind”格式文件，后面直接使用Xmind打开。</p><figure><img src="https://s2.loli.net/2025/03/08/pbBk7T1ANjn3qYh.png"alt="image-20250308193653869" /><figcaption aria-hidden="true">image-20250308193653869</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/08/JlITGLPvBEWYUt7.png"alt="image-20250308193724651" /><figcaption aria-hidden="true">image-20250308193724651</figcaption></figure><h1 id="二文生图">二、文生图</h1><p>在DeepSeek对话界面的提示词输入框中输入以下内容，注意“INPUT=”后接的就是“待生成图片的描述”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">INPUT=&#123;focus&#125;OUTPUT= (description&#125;\n![MG](https:// image.pollinations.ai/prompt/ &#123;description)) &#123;description&#125; =&#123;focusDetailed&#125;,%20&#123;adjective1&#125; %20&#123;adjective2&#125;,%20&#123;visu&#125; %20&#123;visualStyle3&#125; %20&#123;artistReference&#125; INPUT＝一个正在跳舞的香蕉<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/03/08/1sfjue2CpKhz4PU.png"alt="image-20250308203609169" /><figcaption aria-hidden="true">image-20250308203609169</figcaption></figure><p>在浏览器地址栏中输入上述访问链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">https://image.pollinations.ai/prompt/一个正在跳舞的香蕉,%20滑稽的%20活泼的,%20卡通风格%20明亮色彩%20皮克斯风格<br></code></pre></td></tr></table></figure><p>然后看到如下图（但有水印）：</p><figure><img src="https://s2.loli.net/2025/03/08/KPQDpImH98JV3wo.png"alt="image-20250308203658219" /><figcaption aria-hidden="true">image-20250308203658219</figcaption></figure><h1 id="三50个超实deepseek阶提词">三、50个超实⽤DeepSeek⾼阶提⽰词</h1><p>以下内容来自《小白入门DeepSeek必备的50个高阶提示词.pdf》</p><h2 id="程序员开挂篇">3.1 程序员开挂篇</h2><ol type="1"><li><p>代码注释⽣成器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“为以下Python代码⽣成详细注释，解释算法逻辑并标注潜在⻛险”<br></code></pre></td></tr></table></figure><p>再复杂的代码也能秒变团队友好型！</p></li><li><p>BUG终结者指令</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“分析这段报错代码，给出3种修复⽅案并按优先级排序”<br></code></pre></td></tr></table></figure><p>从此告别凌晨3点加班修BUG！</p></li><li><p>算法优化秘籍</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">“将当前<span class="hljs-built_in">O</span>(n²)复杂度的排序算法优化⾄<span class="hljs-built_in">O</span>(nlogn)，并提供复杂度对”<br></code></pre></td></tr></table></figure><p>⾯试⼿撕代码环节惊艳全场！</p></li><li><p>技术⽂档神器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“为以下API接⼝⽣成开发⽂档，包含请求⽰例、响应参数和错误码说明”<br></code></pre></td></tr></table></figure><p>连PM都夸你⽂档写得⽐官⽅还好！</p></li><li><p>SQL防背锅指南</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">“审查以下<span class="hljs-keyword">SQL</span>语句，找出<span class="hljs-number">3</span>个性能隐患并给出优化⽅案”<br></code></pre></td></tr></table></figure><p>从此数据库再也不崩！</p></li></ol><h2 id="媒体爆款创作篇">3.2 ⾃媒体爆款创作篇</h2><ol start="6" type="1"><li>10W+标题⽣成器</li></ol><p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“⽣成<span class="hljs-number">20</span>个关于<span class="hljs-selector-attr">[主题]</span>的爆款标题，要求含数字、反转剧情和情绪关键词”<br></code></pre></td></tr></table></figure></p><p>⼩红书/公众号标题没灵感？⽤这个提⽰词⽣成“⼀看就想点”的标题库！ 7.⼩红书图⽂模板</p><p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“以‘<span class="hljs-number">3</span>个技巧+<span class="hljs-number">1</span>个避坑指南’结构，写⼀篇<span class="hljs-selector-attr">[主题]</span>的⼩红书爆款图⽂笔记”<br></code></pre></td></tr></table></figure></p><p>直接套⽤模板⽣成带Emoji的笔记，新⼿也能做出千赞爆款！ 8.短视频神脚本</p><p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“⽣成⼀个30秒短视频脚本：前3秒冲突+中间反转+结尾留悬念引导点赞”<br></code></pre></td></tr></table></figure></p><p>抖⾳/视频号流量密码get！脚本结构照着⽤，播放量轻松破10万！ 9.直播话术宝典</p><p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计⼀场2⼩时带货直播脚本，包含暖场话术、产品对⽐、限时逼单环节”<br></code></pre></td></tr></table></figure></p><p>直播冷场？⽤这个提⽰词⽣成互动话术，转化率提升50%！ 10.公众号⾦句⽣成</p><pre><code class="hljs"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[主题]</span>⽂章⽣成<span class="hljs-number">10</span>个扎⼼⾦句，要求结合热点事件和年轻⼈痛点”<br></code></pre></td></tr></table></figure>⽂章没记忆点？插⼊这些⾦句，读者疯狂截图转发！</code></pre><h2 id="电商搞钱实战篇">3.3 电商搞钱实战篇</h2><ol start="11" type="1"><li><p>亚⻢逊爆款⽂案</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[产品]</span>写英⽂版亚⻢逊Listing，包含<span class="hljs-number">5</span>点产品特性+<span class="hljs-number">3</span>个使⽤场景故事”<br></code></pre></td></tr></table></figure><p>⽼外看了直接加购！跨境卖家必备的流量收割神器！</p></li><li><p>详情⻚转化神器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计淘宝详情⻚⽂案结构：痛点场景+对⽐实验+售后保障+⽤⼾证⾔”<br></code></pre></td></tr></table></figure><p>照着模板⽣成，详情⻚转化率从1%飙升到5%！</p></li><li><p>私域引流话术</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计朋友圈裂变话术：限时福利+⾝份认同+⼆维码引导，每天3条不发愁”<br></code></pre></td></tr></table></figure><p>微商⼩⽩也能⽤的引流模板，7天加满5000好友！</p></li><li><p>⼩红书素⼈种草</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“⽣成<span class="hljs-number">10</span>条<span class="hljs-selector-attr">[产品]</span>素⼈种草⽂案，⽤‘闺蜜安利’语⽓突出<span class="hljs-number">3</span>个使⽤场景”<br></code></pre></td></tr></table></figure><p>零⼴告痕迹的软植⼊，让⽤⼾主动求链接！</p></li><li><p>客服话术⼤全</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“针对‘质量差要退货’等5种售后问题，⽣成⾼情商回复话术”<br></code></pre></td></tr></table></figure><p>差评率直降90%！维护店铺评分就靠它！</p></li></ol><h2 id="学党逆袭篇">3.4 学⽣党逆袭篇</h2><ol start="16" type="1"><li><p>论⽂开题神器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[专业⽅向]</span>⽣成<span class="hljs-number">10</span>个创新型论⽂选题，包含理论基础+现实意义”<br></code></pre></td></tr></table></figure><p>导师眼前⼀亮！开题报告⼀次过！</p></li><li><p>⽂献综述速成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“总结近<span class="hljs-number">3</span>年<span class="hljs-selector-attr">[主题]</span>领域<span class="hljs-number">10</span>篇核⼼⽂献，对⽐研究⽅法和结论差异”<br></code></pre></td></tr></table></figure><p>3⼩时搞定⼀周⼯作量，卷王舍我其谁！</p></li><li><p>考试押题宝典</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“根据<span class="hljs-selector-attr">[科⽬]</span>近<span class="hljs-number">5</span>年真题，预测今年可能出现的<span class="hljs-number">10</span>个⾼频考点”<br></code></pre></td></tr></table></figure><p>复习直接划重点，GPA4.0不是梦！</p></li><li><p>课堂笔记优化</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit">“将以下杂乱笔记整理成康奈尔笔记格式，提取3个核⼼概念<span class="hljs-string">+2</span>个实践案例”<br></code></pre></td></tr></table></figure><p>学渣秒变学霸的秘密武器！</p></li><li><p>PPT速成模板</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“以‘问题-⽅案-价值’结构，设计10⻚学术汇报PPT⼤纲，每⻚标注视觉化技巧”<br></code></pre></td></tr></table></figure><p>答辩现场直接被夸“专业度满分”！</p></li></ol><h2 id="职场打篇">3.5 职场打⼯⼈篇</h2><ol start="21" type="1"><li><p>会议纪要秒整理</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“将以下会议录⾳整理成结构化纪要，包含议题、决策、待办事项和负责⼈”<br></code></pre></td></tr></table></figure><p>再也不⽤边听录⾳边抓狂，⼀键⽣成清晰版会议记录，会后跟进效率提升300%！</p></li><li><p>周报⽣成神器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“根据本周⼯作内容，⽣成⼀份逻辑清晰的周报，包含成果数据、问题分析和下周计划”<br></code></pre></td></tr></table></figure><p>5分钟搞定周报，还能让领导看到你的“结构化思维”，升职加薪就差这⼀步！</p></li><li><p>简历优化⿊科技</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“优化以下简历，突出<span class="hljs-number">3</span>个与<span class="hljs-selector-attr">[岗位]</span>匹配的核⼼能⼒，并⽤数据量化成果”<br></code></pre></td></tr></table></figure><p>投简历⽯沉⼤海？⽤这个提⽰词⽣成HR⼀眼看中的简历，⾯试邀约接到⼿软！</p></li><li><p>⾼情商邮件模板</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“写⼀封主题为<span class="hljs-selector-attr">[XXX]</span>的正式邮件，需包含委婉拒绝、替代⽅案和后续跟进计划”<br></code></pre></td></tr></table></figure><p>职场沟通难题⼀键破解，从此告别“已读不回”的尴尬！</p></li><li><p>项⽬管理拆解术</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“将<span class="hljs-selector-attr">[⼤型项⽬]</span>拆解为<span class="hljs-number">7</span>个执⾏步骤，每个步骤标注⻛险点和所需资源”<br></code></pre></td></tr></table></figure><p>复杂项⽬瞬间变清晰⽢特图，团队协作效率直接拉满！</p></li></ol><h2 id="副业赚钱秘籍篇">3.6 副业赚钱秘籍篇</h2><ol start="26" type="1"><li><p>⼩红书起号神器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“为新⼿设计‘30天涨粉1万’的⼩红书运营计划，包含内容选题、发布时间和爆款结构”<br></code></pre></td></tr></table></figure><p>从0到1冷启动？⽤这个提⽰词⽣成保姆级攻略，素⼈也能变⾝万粉博主！</p></li><li><p>闲⻥卖货话术库</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“⽣成10条⾼转化闲⻥商品⽂案，突出‘闲置好物+限时⽩菜价’紧迫感”<br></code></pre></td></tr></table></figure><p>兼职卖货⽉⼊5000+的秘密武器！直接复制粘贴就能出单！</p></li><li><p>抖⾳书单号脚本</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“⽣成7个书单号短视频脚本，包含书籍⾦句+痛点场景+购买链接引导”<br></code></pre></td></tr></table></figure><p>0成本副业⾸选！照着脚本拍，⽇引流100+精准读者！</p></li><li><p>知乎好物带货⽂</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“以‘亲测避坑’⻆度写⼀篇知乎好物推荐⻓⽂，植⼊3个产品链接和对⽐表格”<br></code></pre></td></tr></table></figure><p>躺赚佣⾦的神器！知乎盐值蹭蹭涨，带货成交率提升80%！</p></li><li><p>公众号流量主攻略</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计10个诱导点击⼴告位的推⽂标题，要求结合热点且不违规”<br></code></pre></td></tr></table></figure><p>粉丝不多也能赚⼴告费！点击率提升3倍的标题套路！</p></li></ol><h2 id="个成开挂篇">3.7 个⼈成⻓开挂篇</h2><ol start="31" type="1"><li><p>知识体系搭建术</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[领域]</span>设计知识图谱，包含核⼼概念、关联案例和实践⽅法论”<br></code></pre></td></tr></table></figure><p>碎⽚化学习终结者！⽤AI构建专属知识库，学习效率秒杀同龄⼈！</p></li><li><p>演讲逐字稿⽣成</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“以‘故事+数据+⾦句’结构，⽣成10分钟演讲逐字稿，每段标注情绪“<br></code></pre></td></tr></table></figure><p>上台紧张忘词？AI写的逐字稿让你秒变TED演讲⾼⼿！</p></li><li><p>读书变现神器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“将《XXX》书籍内容拆解为20条短视频⽂案，每条突出⼀个颠覆认知的观点”<br></code></pre></td></tr></table></figure><p>读完书就变现！知识博主都在⽤的吸粉秘籍！</p></li><li><p>⼈脉管理模板</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计社交资产记录表，包含联系⼈价值标签、沟通频率和资源互换⽅案”<br></code></pre></td></tr></table></figure><p>微信5000好友不再浪费！⽤AI帮你把联系⼈变“钱脉”！</p></li><li><p>情绪管理指南</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“针对焦虑/拖延场景，⽣成5个⽴即⽣效的⼼理学应对策略+执⾏清单”<br></code></pre></td></tr></table></figure><p>内耗⾃救指南！⽤科学⽅法实现情绪⾃由！</p></li></ol><h2 id="效率具组合拳">3.8 效率⼯具组合拳</h2><ol start="36" type="1"><li><p>Excel公式⽣成器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[数据分析需求]</span>⽣成对应Excel公式，并解释每个参数的使⽤场景”<br></code></pre></td></tr></table></figure><p>函数记不住？⽤这个提⽰词秒变表格⼤神！</p></li><li><p>PPT设计助⼿</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“将以下⽂字内容转化为10⻚视觉化PPT，每⻚标注图标使⽤和动画建议”<br></code></pre></td></tr></table></figure><p>从此告别⼟味PPT！AI⽣成的设计让同事以为你偷偷报了万元课程！</p></li><li><p>思维导图⽣成术</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“将<span class="hljs-selector-attr">[复杂概念]</span>转化为三级思维导图，每个节点附带记忆⼝诀”<br></code></pre></td></tr></table></figure><p>背书困难⼾福⾳！⽤图像记忆法效率提升10倍！</p></li><li><p>⽇历管理神器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“根据<span class="hljs-selector-attr">[⽬标]</span>⽣成百⽇计划表，每⽇任务精确到⼩时，预留弹性时间”<br></code></pre></td></tr></table></figure><p>拖延症克星！AI排班让你每天⾼效12⼩时！</p></li><li><p>外语学习加速器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计30天英语突破计划，包含情景对话、语法陷阱和⺟语者表达习惯”<br></code></pre></td></tr></table></figure><p>外语开挂模式启动！⽤AI私教实现⽆障碍交流！</p></li></ol><h2 id="科技玩法篇">3.9 ⿊科技玩法篇</h2><ol start="41" type="1"><li><p>AI模拟⾯试官</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“扮演字节跳动HR，提出10个⾼频压⼒⾯试题并给出满分回答模板”<br></code></pre></td></tr></table></figure><p>⾯试前必练！⽤AI提前预判所有刁钻问题！</p></li><li><p>虚拟创业顾问</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[创业项⽬]</span>设计商业模式画布，包含成本结构、收⼊来源和关键指标”<br></code></pre></td></tr></table></figure><p>0成本验证商业创意！⽤AI避开百万级试错坑！</p></li><li><p>法律⽂书⽣成器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“⽣成<span class="hljs-selector-attr">[合作类型]</span>标准合同模板，标注常⻅⻛险条款和修改建议”<br></code></pre></td></tr></table></figure><p>省下万元律师费！⼩⽩也能写出专业合同！</p></li><li><p>元宇宙营销⽅案</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">“为品牌设计虚拟<span class="hljs-built_in">IP</span>运营策略，包含⼈设、互动形式和NFT发⾏计划”<br></code></pre></td></tr></table></figure><p>抓住下⼀个⻛⼝！⽤AI抢占元宇宙流量！</p></li><li><p>AI算命师指令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">“结合星座和MBTI⼈格，⽣成<span class="hljs-number">2024</span>年运势报告，包含事业<span class="hljs-regexp">/爱情/</span>健康建议”<br></code></pre></td></tr></table></figure><p>年轻⼈最爱！⽤⽞学引流⽇涨粉1000+！</p></li></ol><h2 id="神私藏篇">3.10 ⼤神私藏篇</h2><ol start="46" type="1"><li><p>提⽰词优化术</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“诊断以下提⽰词问题，给出3个优化⽅向并重写⽰例”<br></code></pre></td></tr></table></figure><p>从此告别⽆效提问！掌握这个指令，你也能写出价值万元的提⽰词！</p></li><li><p>多AI联合作战</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“设计DeepSeek+Midjourney⼯作流，实现‘⽂案+设计’全⾃动<br></code></pre></td></tr></table></figure><p>⼀个⼈就是⼀家公司！AI流⽔线⽇更百条内容！</p></li><li><p>私域SOP⽣成器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">“为<span class="hljs-selector-attr">[⾏业]</span>设计全年私域运营SOP，包含节⽇营销、复购激活和流失<br></code></pre></td></tr></table></figure><p>⽼板跪求的运营宝典！跳槽谈薪直接涨50%！</p></li><li><p>AI指令变现术</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“包装10个⾼需求提⽰词，设计成199元知识付费产品并撰写销售⻚”<br></code></pre></td></tr></table></figure><p>⽤AI赚AI的钱！副业⽉⼊3万的新⻛⼝！</p></li><li><p>未来技能预测</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">“列出2025年最值钱的10项AI相关技能，附带学习路径和资源清单”<br></code></pre></td></tr></table></figure><p>提前布局未来5年！⽤这个指令永远快⼈⼀步！</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>DeepSeek使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>什么是模型微调</title>
    <link href="/2025/03/07/%E4%BB%80%E4%B9%88%E6%98%AF%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/"/>
    <url>/2025/03/07/%E4%BB%80%E4%B9%88%E6%98%AF%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/</url>
    
    <content type="html"><![CDATA[<h1 id="一-微调本质">一、 微调本质</h1><p>模型微调是从英文翻译过来的词语，原英文是”Fine-tuning“。</p><p>模型微调就是：<strong>通过特定领域数据对预训练模型进行针对性优化，以提升其在特定任务上的性能</strong>。</p><p>用通俗比方解释就是就是，如果预训练模型是一个厨艺不错的厨师，它已经有了大量的烹饪经验，掌握了很多知识和技能，但可能并不擅长做某个菜系（如湘菜）的菜，而只是会一些普通的家常菜。此时我们这个厨师提供了专门做湘菜的教程与训练（一些特定任务的数据），让它针对性地学习做湘菜（调整它处理信息的方式）。经过这样的训练之后，它就成为了湘菜大厨，做出非常地道美味的湘菜（让它更擅长完成我们需要的任务）。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>模型微调</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>纯CPU本地微调DeepSeek-R1-1.5b模型(还在完善中)</title>
    <link href="/2025/03/06/%E7%BA%AFCPU%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83DeepSeek-R1-1.5b%E6%A8%A1%E5%9E%8B/"/>
    <url>/2025/03/06/%E7%BA%AFCPU%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83DeepSeek-R1-1.5b%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一文档说明与服务器准备">一、文档说明与服务器准备</h1><h2 id="文档说明">1.1 文档说明</h2><p>这是一篇保姆级别的"微调DeepSeek-R1-Distill-Llama-8B模型"的操作文章，只要稍微懂点计算机软件知识就可以成功复现此文章中所述内容。</p><p>此文档中尝试微调DeepSeek-R1蒸馏模型比如1.5B，它仅靠CPU就能运行。</p><h2 id="服务器与gpu准备">1.2 服务器与GPU准备</h2><p>此次使用的服务器是一个x86_64构架的Hygon C865380物理服务器，具体信息如下：</p><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>controller01</td><td>172.20.0.21</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>32c64g+960G</td><td>NVIDIA A40*1</td><td></td></tr></tbody></table><p>相关重要软件版本（后面3个是python库的版本，建议使用conda创建一个虚拟环境并安装此版本。在其他软件版本固定的情况下，unsloth使用2025.2.5之外的版本就报错）：</p><ul><li><p>GPU驱动版本：550.54.15</p></li><li><p>Cuda版本：V12.4.131</p></li><li><p>torch版本：2.6.0</p></li><li><p>transformers版本：4.48.3</p></li><li><p>unsloth版本：2025.2.5</p></li></ul><h2 id="大模型微调定义">1.3 大模型微调定义</h2><p>利用特定领域的数据集对已预训练的大模型进行进一步训练的过程。它旨在优化模型在特定任务上的性能，使模型能够更好地适应和完成特定领域的任务。其中最重要的是超参数（如学习率、批次大小和训练轮次）调整优化。转成大白话就是调整大模型中一些参数的值，使其在特定数据集上表现更优秀。</p><h1 id="二相关文件下载">二、相关文件下载</h1><h2 id="模型文件下载">2.1 模型文件下载</h2><p>本来是想去huggingface上下载相关模型文件与数据集，由于huggingface需要梯子才能访问，不便操作。所以此文档中是在国内网络可正常访问魔搭平台上下载模型与数据集。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">访问魔搭：https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B/files</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">不指定--local_dir 参数，文件将被保存在用户根目录下的.cache子目录下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">模型总大小在3.3G左右</span><br>(py312) D:\00_code_repos\AI_models&gt;modelscope download --model deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B --local_dir ./deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B<br></code></pre></td></tr></table></figure><h2 id="训练数据集文件下载">2.2 训练数据集文件下载</h2><p>访问魔搭，搜索“medical-o1-reasoning-SFT”数据集并下载（此处会有两个同名数据集，但上传者不同，我选择了下载量更大的https://modelscope.cn/datasets/AI-ModelScope/medical-o1-reasoning-SFT）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py312) D:\00_code_repos\AI_datasets&gt;modelscope download --dataset AI-ModelScope/medical-o1-reasoning-SFT --local_dir ./AI-ModelScope/medical-o1-reasoning-SFT<br></code></pre></td></tr></table></figure><h1 id="三其他准备步骤">三、其他准备步骤</h1><h2 id="wandb-token准备">3.1 wandb token准备</h2><p>去<ahref="https://wandb.ai/">wandb官网</a>注册一个账号、申请一个token，并记录此token，后续要用。</p><p>注：</p><ul><li><p>wandb的意思是”weights andbiases“，网上没有找到现成的翻译，我直译为权重与偏差。</p></li><li><p><ahref="https://wandb.ai/wandb_fc/chinese/reports/-Weights-Biases---Vmlldzo4MDEwNzM">关于W&amp;B的介绍</a>：W&amp;B是一个平台，可帮助数据科学家跟踪他们的模型、数据集、系统信息等。只需几行代码，就可以开始跟踪有关这些功能的所有内容。它是免费供个人使用的。团队使用通常是付费的，但用于学术目的的团队是免费的。 可以将 W&amp;B与自己喜欢的框架一起使用，例如TensorFlow、Keras、PyTorch、SKlearn、fastai 等。</p><p>所有跟踪信息都发送到 W&amp;B UI上的专用项目页面，可以在其中打开高质量的可视化、汇总信息并比较模型或参数。</p></li></ul><h3 id="wandb官网账号注册">3.1.1 wandb官网账号注册</h3><p>如下使用我自己的github账号进行注册。当然也可以使用手动邮箱与密码进行注册（如下图最下部分所示）</p><figure><img src="https://s2.loli.net/2025/02/13/jBqpIiDF5t48Axc.png"alt="image-20250213162023573" /><figcaption aria-hidden="true">image-20250213162023573</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/13/ZJYaFVol2H1vsej.png"alt="image-20250213162111736" /><figcaption aria-hidden="true">image-20250213162111736</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/21/prnxAkaSZcHGPdE.png"alt="image-20250221230552719" /><figcaption aria-hidden="true">image-20250221230552719</figcaption></figure><h3 id="获取token">3.1.2 获取token</h3><p>进入wandb官网中自己账号的主页，可以看到如下内容。在如下位置复制自己的wandbtoken</p><figure><img src="https://s2.loli.net/2025/02/13/4gxCbyk1P95sULh.png"alt="image-20250213162624545" /><figcaption aria-hidden="true">image-20250213162624545</figcaption></figure><h2 id="准备jupyter环境">3.2 准备jupyter环境</h2><p>以下以在Ubuntu 20.04.3 LTS-amd64上安装jupyter环境为例，说明安装jupyter环境的步骤。</p><h3 id="安装conda">3.2.1 安装conda</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs# mkdir /root/.pip<br>root@controller01:/opt/installPkgs# cat &gt; /root/.pip/pip.conf  &lt;&lt;EOF<br>[global]<br>trusted-host = mirrors.aliyun.com<br>index-url = https://mirrors.aliyun.com/pypi/simple<br>EOF<br><br>root@controller01:/opt/installPkgs# wget --user-agent=“Mozilla” + https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh<br><br>root@controller01:/opt/installPkgs# bash Anaconda3-2024.06-1-Linux-x86_64.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##安装过程中，会询问相关问题，保持默认配置直接回车或输入YES再回车（整个安装过程可能需要耗时几分钟）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##conda的默认安装目录是/root/anaconda3</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##安装过程中最几行如下</span></span><br>....<br>You can undo this by running `conda init --reverse $SHELL`? [yes|no]<br>[no] &gt;&gt;&gt; yes             #此处输入yes并回车<br>no change     /root/anaconda3/condabin/conda<br>no change     /root/anaconda3/bin/conda<br>no change     /root/anaconda3/bin/conda-env<br>no change     /root/anaconda3/bin/activate<br>no change     /root/anaconda3/bin/deactivate<br>no change     /root/anaconda3/etc/profile.d/conda.sh<br>no change     /root/anaconda3/etc/fish/conf.d/conda.fish<br>no change     /root/anaconda3/shell/condabin/Conda.psm1<br>no change     /root/anaconda3/shell/condabin/conda-hook.ps1<br>no change     /root/anaconda3/lib/python3.12/site-packages/xontrib/conda.xsh<br>no change     /root/anaconda3/etc/profile.d/conda.csh<br>modified      /root/.bashrc<br><br>==&gt; For changes to take effect, close and re-open your current shell. &lt;==<br><br>Thank you for installing Anaconda3!<br>root@controller01:/opt/installPkgs# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载环境变量，并启用默认的base conda环境</span><br>root@controller01:/opt/installPkgs# source ~/.bashrc<br>(base) root@controller01:/opt/installPkgs# which python<br>/root/anaconda3/bin/python<br>(base) root@controller01:/opt/installPkgs# which pip<br>/root/anaconda3/bin/pip<br>(base) root@controller01:/opt/installPkgs# python -V<br>Python 3.12.4<br>(base) root@controller01:/opt/installPkgs# pip -V<br>pip 24.0 from /root/anaconda3/lib/python3.12/site-packages/pip (python 3.12)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>(base) root@controller01:/opt/installPkgs# conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                  *  /root/anaconda3</span><br><br>(base) root@controller01:/opt/installPkgs# <br></code></pre></td></tr></table></figure><h3 id="创建self-llm虚拟python环境">3.2.2创建self-llm虚拟python环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">更新软件列表</span><br>(base) root@controller01:/opt/installPkgs# apt-get update<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">准备好python3环境与pip3（使用上述conda创建虚拟python3、pip3环境）</span><br>(base) root@controller01:/opt/installPkgs# conda create -n self-llm python=3.12<br>...<br>The following NEW packages will be INSTALLED:<br><br>  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main <br>  _openmp_mutex      pkgs/main/linux-64::_openmp_mutex-5.1-1_gnu <br>  bzip2              pkgs/main/linux-64::bzip2-1.0.8-h5eee18b_6 <br>  ca-certificates    pkgs/main/linux-64::ca-certificates-2024.12.31-h06a4308_0 <br>  expat              pkgs/main/linux-64::expat-2.6.4-h6a678d5_0 <br>  ld_impl_linux-64   pkgs/main/linux-64::ld_impl_linux-64-2.40-h12ee557_0 <br>  libffi             pkgs/main/linux-64::libffi-3.4.4-h6a678d5_1 <br>  libgcc-ng          pkgs/main/linux-64::libgcc-ng-11.2.0-h1234567_1 <br>  libgomp            pkgs/main/linux-64::libgomp-11.2.0-h1234567_1 <br>  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-11.2.0-h1234567_1 <br>  libuuid            pkgs/main/linux-64::libuuid-1.41.5-h5eee18b_0 <br>  ncurses            pkgs/main/linux-64::ncurses-6.4-h6a678d5_0 <br>  openssl            pkgs/main/linux-64::openssl-3.0.15-h5eee18b_0 <br>  pip                pkgs/main/linux-64::pip-25.0-py312h06a4308_0 <br>  python             pkgs/main/linux-64::python-3.12.9-h5148396_0 <br>  readline           pkgs/main/linux-64::readline-8.2-h5eee18b_0 <br>  setuptools         pkgs/main/linux-64::setuptools-75.8.0-py312h06a4308_0 <br>  sqlite             pkgs/main/linux-64::sqlite-3.45.3-h5eee18b_0 <br>  tk                 pkgs/main/linux-64::tk-8.6.14-h39e8969_0 <br>  tzdata             pkgs/main/noarch::tzdata-2025a-h04d1e81_0 <br>  wheel              pkgs/main/linux-64::wheel-0.45.1-py312h06a4308_0 <br>  xz                 pkgs/main/linux-64::xz-5.6.4-h5eee18b_1 <br>  zlib               pkgs/main/linux-64::zlib-1.2.13-h5eee18b_1 <br><br><br>Proceed ([y]/n)? Y         #此处输入y并回车<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##然后等待下载与解压提取相关python安装文件与python模块。安装过程的最后几行输出如下</span></span><br>...<br><span class="hljs-meta prompt_"># </span><span class="language-bash">To activate this environment, use</span>                                                                         <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#     $ conda activate self-llm</span></span>                                                                             <br><span class="hljs-meta prompt_"># </span><span class="language-bash">To deactivate an active environment, use</span>                                                                   <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#     $ conda deactivate</span></span><br>(base) root@controller01:/opt/installPkgs# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>(base) root@controller01:/opt/installPkgs# conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                     /root/anaconda3</span><br>self-llm              *  /root/anaconda3/envs/self-llm<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活self-llm 这个虚拟python环境，并在其中执行相关命令</span><br>(base) root@controller01:/opt/installPkgs# conda activate self-llm <br>(self-llm) root@controller01:/opt/installPkgs# python -V<br>Python 3.12.9<br>(self-llm) root@controller01:/opt/installPkgs# pip -V<br>pip 25.0 from /root/anaconda3/envs/self-llm/lib/python3.12/site-packages/pip (python 3.12)<br>(self-llm) root@controller01:/opt/installPkgs# <br></code></pre></td></tr></table></figure><h3 id="安装jupyter环境">3.2.3 安装jupyter环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 IPython 交互式 shell</span><br>(self-llm) root@controller01:/opt/installPkgs# pip install ipython<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">正式安装jupyter</span><br>(self-llm) root@controller01:/opt/installPkgs# apt install jupyter-core jupyter-notebook -qy<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建目录</span><br>(self-llm) root@controller01:/opt/installPkgs# mkdir finetunning-bigmodles<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动jupyter notebook</span><br>(self-llm) root@controller01:/opt/installPkgs# jupyter notebook --allow-root --ip=0.0.0.0<br>[I 01:29:38.744 NotebookApp] Serving notebooks from local directory: /opt/installPkgs<br>[I 01:29:38.744 NotebookApp] The Jupyter Notebook is running at:<br>[I 01:29:38.744 NotebookApp] http://a10:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:38.744 NotebookApp]  or http://127.0.0.1:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:38.744 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).<br>[W 01:29:38.755 NotebookApp] No web browser found: could not locate runnable browser.<br>[C 01:29:38.756 NotebookApp] <br>    <br>    To access the notebook, open this file in a browser:<br>        file:///root/.local/share/jupyter/runtime/nbserver-41207-open.html<br>    Or copy and paste one of these URLs:<br>        http://a10:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>     or http://127.0.0.1:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:53.755 NotebookApp] 302 GET /?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba (192.168.254.84) 2.07ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将以下url中的127.0.0.1换成服务器IP，即可访问上述创建的jupyter环境，比如当前安装jupyter环境的服务器IP是172.20.0.21，则URL是如下</span><br>http://172.20.0.21:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br><span class="hljs-meta prompt_">#</span><span class="language-bash">最后的参数token类似于访问的密码。访问成功后界面如下，jupyter环境根目录就是执行“jupyter notebook --allow-root --ip=0.0.0.0”命令的所在目录/opt/installPkgs，以下显示了所在目录/opt/installPkgs下的所有文件及文件夹</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/17/pacKOlYbVuzrJqQ.png"alt="image-20250217093519584" /><figcaption aria-hidden="true">image-20250217093519584</figcaption></figure><p>如果要自定义jupyter的家目录及其他配置，可以修改它的配置文件（默认已经创建：/root/.jupyter/jupyter_notebook_config.py），以后每次启动时，它都是优先使用这个配置文件中的配置项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# vi /root/.jupyter/jupyter_notebook_config.py<br>...<br>931 # c.ServerApp.notebook_dir = &#x27;&#x27;<br>932 c.ServerApp.notebook_dir = &#x27;/opt/installPkgs/finetunning-bigmodles/&#x27;<br>...<br></code></pre></td></tr></table></figure><p>修改上述文件后，需要重新启动jupyter进程，才会生效。</p><h3 id="报错处理">3.2.4 报错处理</h3><h4id="启动jupyter-notebook时报fail-to-get-yarn-configuration">启动jupyternotebook时报“Fail to get yarn configuration”</h4><p>但此错误并未不影响jupyter notebook的使用</p><figure><img src="https://s2.loli.net/2025/02/14/qQlTesIb7oC1YNW.png"alt="image-20250214175252854" /><figcaption aria-hidden="true">image-20250214175252854</figcaption></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">方法1：此报错不影响jupyter notebook的使用，暂时不予理会</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方法2：需要升级Node版本（先前是v10.19.6，升级到v12.22.6即可）。参考：https://discourse.jupyter.org/t/jupyter-lab-4-0-6-error-on-startup-about-yarn-configuration-and-worker-threads/21859</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用nvm升级nodejs版本：</span><br>nvm install 12.22.6<br></code></pre></td></tr></table></figure><h1 id="四在.ipynb中进行微调">四、在.ipynb中进行微调</h1><h2 id="打开一个已经存在的.ipynb文件">4.1打开一个已经存在的.ipynb文件</h2><p>比如下载<ahref="https://github.com/jiangsanyin/unsloth-DeepSeek-R1-Distill-Llama-8B/blob/main/deepseekr1_8b%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83.ipynb">deepseekr1_8b本地微调.ipynb</a>，保存到<code>/opt/installPkgs/finetunning-bigmodles</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/finetunning-bigmodles# ll<br>total 104<br>drwxr-xr-x  2 root root  4096 Feb 17 10:02 ./<br>drwxr-xr-x 12 root root  4096 Feb 17 09:48 ../<br>-rw-r--r--  1 root root 95152 Feb 17 09:46 deepseekr1_8b本地微调.ipynb<br><br></code></pre></td></tr></table></figure><p>然后按照如下方式，在jupyter图形界面找到上述文件并使用"Notebook"打开：</p><figure><img src="https://s2.loli.net/2025/02/17/ACp5NZeaJiPuqFQ.png"alt="image-20250217100452758" /><figcaption aria-hidden="true">image-20250217100452758</figcaption></figure><p>打开后界面如下：</p><figure><img src="https://s2.loli.net/2025/02/17/KDAFQO4sftwLU7H.png"alt="image-20250217100932951" /><figcaption aria-hidden="true">image-20250217100932951</figcaption></figure><h3 id="设置此.ipynb文件可信">4.1.1 设置此.ipynb文件可信</h3><figure><img src="https://s2.loli.net/2025/02/17/JKr4Pjd3HSI2RXy.png"alt="image-20250217101948104" /><figcaption aria-hidden="true">image-20250217101948104</figcaption></figure><h3 id="为.ipynb文件选择kernel">4.1.2 为.ipynb文件选择kernel</h3><figure><img src="https://s2.loli.net/2025/02/17/nA4xkQ1DazvZSUW.png"alt="image-20250217110822311" /><figcaption aria-hidden="true">image-20250217110822311</figcaption></figure><h3 id="运行此.ipynb文件">4.1.3 运行此.ipynb文件</h3><p>上述文件<code>deepseekr1_8b本地微调.ipynb</code>从网上下载下来后，有些地方需要修改下，否则在未翻墙的服务器上运行会失败或执行速度很慢。</p><p>以下未列举出来的cell，不需要修改，直接执行即可。</p><h4id="第1个cell-安装unsloth"><strong>第1个cell</strong>-安装unsloth</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">%capture</span><br>!pip install unsloth==2025.2.5 -i https://mirrors.aliyun.com/pypi/simple<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Also get the latest nightly Unsloth!</span><br>!pip install --force-reinstall --no-cache-dir --no-deps git+https://gitee.com/sy-jiang/unsloth.git -i https://mirrors.aliyun.com/pypi/simple<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令中又会安装最新的unsloth 2025.2.12（后续使用中会有问题），所以重新安装nsloth 2025.2.12</span><br>!pip install unsloth==2025.2.5 -i https://mirrors.aliyun.com/pypi/simple<br></code></pre></td></tr></table></figure><p>然后光标选中此cell，使用组合键“shift+ener”或点击如下按钮，即可执行选中的cell</p><figure><img src="https://s2.loli.net/2025/02/17/HvOjDMkZ4KG7FAS.png"alt="image-20250217110958036" /><figcaption aria-hidden="true">image-20250217110958036</figcaption></figure><p>第一个cell执行所需要的时间较长，因为安装的python库较大。cell执行未结果时，前面会一直有个"*"</p><figure><img src="https://s2.loli.net/2025/02/17/9XLU8GbwDToWsmr.png"alt="image-20250217111048204" /><figcaption aria-hidden="true">image-20250217111048204</figcaption></figure><p>当前cell执行结束后，会在当面所有执行cell次数的基础加1，结果显示在cell左上角。如下图，这是这个页面此cell第一次执行，所以执行结束后，显示1</p><figure><img src="https://s2.loli.net/2025/02/17/1pZPTJlGaed78XB.png"alt="image-20250217111458869" /><figcaption aria-hidden="true">image-20250217111458869</figcaption></figure><h4 id="第3个cell-安装wandb"><strong>第3个cell</strong>-安装wandb</h4><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs d"><span class="hljs-meta">#!pip install wandb</span><br>#修改成如下以使用国内pip安装源<br>!pip install wandb -i https:<span class="hljs-comment">//mirrors.aliyun.com/pypi/simple</span><br></code></pre></td></tr></table></figure><h4 id="第4个cell-初始化wandb">第4个cell-初始化wandb</h4><p>如下配置的key就是在wandb官网申请后获取的token，请修改成自己的tokenwanbtoken</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 这里不使用环境变量，直接填入wandb的token,如果没有token可以去官网下载一个</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 为了安全，我此处只粘贴了自己token的前部分内容</span></span><br>import wandb<br><br>wandb.login(key=&quot;b11f575fd0f6c8cae0cb016b24&quot;)<br>run = wandb.init(<br>    project=&#x27;my fint-tune on deepseek r1 with medical data&#x27;,<br>    job_type=&quot;training&quot;,<br>    anonymous=&quot;allow&quot;<br>)<br></code></pre></td></tr></table></figure><p>如果上述cell内容运行不成功，则采用如下方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1)首先在self-llm这个虚拟机python环境登录到wandb.ai，成功后会将相关信息保存在/root/.netrc</span><br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# wandb login --relogin<br>wandb: Logging into wandb.ai. (Learn how to deploy a W&amp;B server locally: https://wandb.me/wandb-server)<br>wandb: You can find your API key in your browser here: https://wandb.ai/authorize<br>wandb: Paste an API key from your profile and hit enter, or press ctrl+c to quit: <br>wandb: Appending key for api.wandb.ai to your netrc file: /root/.netrc<br>wandb: W&amp;B API key is configured. Use `wandb login --relogin` to force relogin<br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# vi /root/.netrc <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# cat /root/.netrc   <br>machine api.wandb.ai<br>  login user<br>  password b11f575fd0f6c8cae0cb016b24<br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2)修改上述cell内容为如下，然后重新执行此cell</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 这里不使用环境变量，直接填入wandb的token,如果没有token可以去官网下载一个</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 同时wandb.init时默认超时时间是90s，因为网站是国外网站可能经常出现init超过90s的现象，所以增加超时时间为300s</span></span><br>import wandb<br>import os<br><span class="hljs-meta prompt_">#</span><span class="language-bash">os.environ[<span class="hljs-string">&quot;WANDB_API_KEY&quot;</span>] = <span class="hljs-string">&#x27;b11f575fd0f6c8cae0cb016b24&#x27;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#os.environ[&quot;WANDB_MODE&quot;] = &quot;offline&quot;</span></span><br>os.environ[&#x27;WANDB_INIT_TIMEOUT&#x27;] = &#x27;1200&#x27;  #Increase timeout settings<br>os.environ[&#x27;WANDB_DEBUG&#x27;] = &quot;true&quot;           #Enable debugging<br><span class="hljs-meta prompt_">#</span><span class="language-bash">wandb.login(key=<span class="hljs-string">&quot;b11f575fd0f6c8cae0cb016b24&quot;</span>)</span><br>run = wandb.init(<br>    project=&#x27;my fint-tune on deepseek r1 with medical data&#x27;,<br>    job_type=&quot;training&quot;,<br>    anonymous=&quot;allow&quot;,<br>    settings=wandb.Settings(init_timeout=1200)<br>)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3)执行成功时，输出如下</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/gac186mtlIDJnZu.png"alt="image-20250218100844293" /><figcaption aria-hidden="true">image-20250218100844293</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">4)之后按照上述输出的内容，查看wandb.ai网站中自己的主页，看到如下类似内容。之后往后执行下一个cell</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/TCQhspmOINxR2ri.png"alt="image-20250218101102349" /><figcaption aria-hidden="true">image-20250218101102349</figcaption></figure><h4id="第5个cell-加载模型文件创建model实例">第5个cell-加载模型文件/创建model实例</h4><p>此cell需要保证你的服务器上有NVIDIA GPU。如下所示，我使用的是NVIDIAA40，它有44G左右显存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">model, tokenizer = FastLanguageModel.from_pretrained(<br>    model_name = &quot;/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B&quot;, # 这里改成你本地模型，以我的为例，我已经huggingface上的模型文件下载到本地。<br>    max_seq_length = max_seq_length,<br>    dtype = dtype,<br>    load_in_4bit = load_in_4bit,<br>)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/17/z2x8lfMR4iL75X6.png"alt="image-20250217152019243" /><figcaption aria-hidden="true">image-20250217152019243</figcaption></figure><h4id="第6与第7个cell-微调前执行推理">第6与第7个cell-微调前执行推理</h4><p>第6个cell提供中英文两种形式的问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 61-year-old woman with a long history of involuntary urine loss during activities like coughing or sneezing but no leakage at night undergoes a gynecological exam and Q-tip test. Based on these findings, what would cystometry most likely reveal about her residual volume and detrusor contractions?&quot;</span></span><br>question = &quot;一名61岁女性，长期在咳嗽或打喷嚏等活动时不自觉排尿，但夜间无漏尿，现接受妇科检查和Q-tip检查。基于这些发现，膀胱造瘘术最有可能揭示她的残余容量和逼尿肌收缩情况？&quot;<br><br><br>FastLanguageModel.for_inference(model)  # Unsloth has 2x faster inference!<br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>执行时，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/17/oyNrqQCiWLxwVBA.png"alt="image-20250217170314515" /><figcaption aria-hidden="true">image-20250217170314515</figcaption></figure><h4 id="第8个cell-创建框架model实例">第8个cell-创建框架model实例</h4><p>这个cell的内容无需修改。它使用的lora框架中低秩矩阵的方法对模型进行快速有效微调。（需要对lora框架知识进行学习）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">model = FastLanguageModel.get_peft_model(<br>    model,<br>    r=16,<br>    target_modules=[<br>        &quot;q_proj&quot;,<br>        &quot;k_proj&quot;,<br>        &quot;v_proj&quot;,<br>        &quot;o_proj&quot;,<br>        &quot;gate_proj&quot;,<br>        &quot;up_proj&quot;,<br>        &quot;down_proj&quot;,<br>    ],<br>    lora_alpha=16,<br>    lora_dropout=0,<br>    bias=&quot;none&quot;,<br>    use_gradient_checkpointing=&quot;unsloth&quot;,  # True or &quot;unsloth&quot; for very long context<br>    random_state=3407,<br>    use_rslora=False,<br>    loftq_config=None,<br>)<br></code></pre></td></tr></table></figure><h4id="第9与第10个cell-数据集规整化准备">第9与第10个cell-数据集规整化准备</h4><p>预处理数据集，对数据集进行规整。规整成第9个cell中样式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">train_prompt_style = &quot;&quot;&quot;Below is an instruction that describes a task, paired with an input that provides further context.<br>Write a response that appropriately completes the request.<br>Before answering, think carefully about the question and create a step-by-step chain of thoughts to ensure a logical and accurate response.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Instruction:</span></span><br>You are a medical expert with advanced knowledge in clinical reasoning, diagnostics, and treatment planning.<br>Please answer the following medical question.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Question:</span></span><br>&#123;&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Response:</span></span><br>&lt;think&gt;<br>&#123;&#125;<br>&lt;/think&gt;<br>&#123;&#125;&quot;&quot;&quot;<br></code></pre></td></tr></table></figure><p>利用如下第10个cell中如下函数对数据集进行规整，将问题、思维链与回答填充到上述prompt中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">EOS_TOKEN = tokenizer.eos_token  # Must add EOS_TOKEN<br><br><br>def formatting_prompts_func(examples):<br>    inputs = examples[&quot;Question&quot;]<br>    cots = examples[&quot;Complex_CoT&quot;]<br>    outputs = examples[&quot;Response&quot;]<br>    texts = []<br>    for input, cot, output in zip(inputs, cots, outputs):<br>        text = train_prompt_style.format(input, cot, output) + EOS_TOKEN<br>        texts.append(text)<br>    return &#123;<br>        &quot;text&quot;: texts,<br>    &#125;<br><br></code></pre></td></tr></table></figure><h4 id="第11个cell-加载dataset">第11个cell-加载dataset</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">from datasets import load_dataset<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">load_dataset方法调用的第1个参数（数据集目录）、第2个参数（使用数据集中哪种语言.cn表示英文，zh表示中文）。其余不变（第3个参数表示使用前500条数据）</span><br>dataset = load_dataset(&quot;/opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT&quot;, &quot;zh&quot;,split = &quot;train[0:500]&quot;) # 这里同样去huggingface上面下载数据集，然后放到本地<br>dataset = dataset.map(formatting_prompts_func, batched = True,)<br>dataset[&quot;text&quot;][0]<br></code></pre></td></tr></table></figure><p>执行上述cell前，还需要做如下操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">备份unsloth-DeepSeek-R1-Distill-Llama-8B的README.md文件</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# mv README.md unsloth-DeepSeek-R1-Distill-Llama-8B---README.md <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将数据集AI-ModelScope---medical-o1-reasoning-SFT下面*.json与README.md文件复制到上述目录下</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# cp -p /opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT/*.json ./<br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# cp -p /opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT/README.md ./<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时所有文件</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# ls -alh<br>total 16G<br>drwxr-xr-x 3 root root 4.0K Feb 17 16:21 .<br>drwxr-xr-x 6 root root 4.0K Feb 14 10:49 ..<br>-rw-r--r-- 1 root root  959 Feb 13 17:59 config.json<br>-rw-r--r-- 1 root root   73 Feb 13 17:59 configuration.json<br>-rw-r--r-- 1 root root  236 Feb 13 17:59 generation_config.json<br>-rw-r--r-- 1 root root  62M Feb 13 21:36 medical_o1_sft_Chinese.json<br>-rw-r--r-- 1 root root  71M Feb 13 21:36 medical_o1_sft.json<br>-rw-r--r-- 1 root root 4.7G Feb 13 19:11 model-00001-of-00004.safetensors<br>-rw-r--r-- 1 root root 4.7G Feb 13 19:02 model-00002-of-00004.safetensors<br>-rw-r--r-- 1 root root 4.6G Feb 13 19:10 model-00003-of-00004.safetensors<br>-rw-r--r-- 1 root root 1.1G Feb 13 18:17 model-00004-of-00004.safetensors<br>-rw-r--r-- 1 root root  24K Feb 13 17:59 model.safetensors.index.json<br>-rw------- 1 root root  952 Feb 13 19:11 .msc<br>-rw-r--r-- 1 root root   36 Feb 13 19:11 .mv<br>-rw-r--r-- 1 root root 1.3K Feb 13 21:36 README.md<br>-rw-r--r-- 1 root root  483 Feb 13 17:59 special_tokens_map.json<br>drwxr-xr-x 2 root root 4.0K Feb 13 19:11 ._____temp<br>-rw-r--r-- 1 root root  52K Feb 13 17:59 tokenizer_config.json<br>-rw-r--r-- 1 root root  17M Feb 13 18:00 tokenizer.json<br>-rw-r--r-- 1 root root  16K Feb 13 17:59 unsloth-DeepSeek-R1-Distill-Llama-8B---README.md<br></code></pre></td></tr></table></figure><p>执行上述cell，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/17/TSfnkEKOji5szyl.png"alt="image-20250217162802449" /><figcaption aria-hidden="true">image-20250217162802449</figcaption></figure><h4id="第12个cell-创建sfttrainer实例">第12个cell-创建SFTTrainer实例</h4><p>使用trl这个python库来进行训练（微调）。</p><p>TrainingArguments(...)中有很多参数，它们是训练（此处是深度学习）时用到的参数。其中最后一个参数output_dir定义输出的checkpoint的输出目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">from trl import SFTTrainer<br>from transformers import TrainingArguments<br>from unsloth import is_bfloat16_supported<br><br>trainer = SFTTrainer(<br>    model=model,<br>    tokenizer=tokenizer,<br>    train_dataset=dataset,<br>    dataset_text_field=&quot;text&quot;,<br>    max_seq_length=max_seq_length,<br>    dataset_num_proc=2,<br>    args=TrainingArguments(<br>        per_device_train_batch_size=2,<br>        gradient_accumulation_steps=4,<br>        # Use num_train_epochs = 1, warmup_ratio for full training runs!<br>        warmup_steps=5,<br>        max_steps=60,<br>        learning_rate=2e-4,<br>        fp16=not is_bfloat16_supported(),<br>        bf16=is_bfloat16_supported(),<br>        logging_steps=10,<br>        optim=&quot;adamw_8bit&quot;,<br>        weight_decay=0.01,<br>        lr_scheduler_type=&quot;linear&quot;,<br>        seed=3407,<br>        output_dir=&quot;outputs&quot;,<br>    ),<br>)<br></code></pre></td></tr></table></figure><h4 id="第13个cell-model-training">第13个cell-Model training</h4><p>此cell偶尔会出现运行失败的问题，提示【failed to upsert bucket:returned error 401 Unauthorized: {"errors":[{"message":"user is notlogged in"...】这样的信息，重复运行试试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">trainer_stats = trainer.train()<br></code></pre></td></tr></table></figure><p>此cell正常运行过程中输出如下：</p><figure><img src="https://s2.loli.net/2025/02/18/mXcTxGyh8iYzQHS.png"alt="image-20250218101724006" /><figcaption aria-hidden="true">image-20250218101724006</figcaption></figure><p>此cell正常结束如下：</p><figure><img src="https://s2.loli.net/2025/02/18/LnV3JCvGxXrD6se.png"alt="image-20250218102147794" /><figcaption aria-hidden="true">image-20250218102147794</figcaption></figure><h4 id="第14个cell-保存微调模型">第14个cell-保存微调模型</h4><p>cell内容无需修改。执行后，输出如果如下。</p><figure><img src="https://s2.loli.net/2025/02/18/fp8cOs7QYrxCVz3.png"alt="image-20250218102321298" /><figcaption aria-hidden="true">image-20250218102321298</figcaption></figure><p>此时在wandb.ai网站中查看对应project的运行情况，发现状态已经是Finished：</p><figure><img src="https://s2.loli.net/2025/02/18/SEr27bQL3MVWYDd.png"alt="image-20250218102558319" /><figcaption aria-hidden="true">image-20250218102558319</figcaption></figure><p>点击project名字，可以看到如下详细信息：</p><figure><img src="https://s2.loli.net/2025/02/18/SJ1XaUf2Gecx4Im.png"alt="image-20250218102633733" /><figcaption aria-hidden="true">image-20250218102633733</figcaption></figure><h4 id="第15个cell-微调后执行推理">第15个cell-微调后执行推理</h4><p>仅仅将问题从英文形式换成中文形式。其余内容不变</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 61-year-old woman with a long history of involuntary urine loss during activities like coughing or sneezing but no leakage at night undergoes a gynecological exam and Q-tip test. Based on these findings, what would cystometry most likely reveal about her residual volume and detrusor contractions?&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##仅仅将问题从英文形式换成中文形式。其余内容不变</span></span><br>question = &quot;一名61岁女性，长期在咳嗽或打喷嚏等活动时不自觉排尿，但夜间无漏尿，现接受妇科检查和Q-tip检查。基于这些发现，膀胱造瘘术最有可能揭示她的残余容量和逼尿肌收缩情况？&quot;<br><br>FastLanguageModel.for_inference(model)  # Unsloth has 2x faster inference!<br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>执行后，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/18/KdSrm9CYI7xTJcg.png"alt="image-20250218103431363" /><figcaption aria-hidden="true">image-20250218103431363</figcaption></figure><p>以下是微调前后推理的思维链与结果比较（可以看到微调后结果精简准确一些）：</p><figure><img src="https://s2.loli.net/2025/02/18/oECSlrJxPam3RGV.png"alt="image-20250218103525077" /><figcaption aria-hidden="true">image-20250218103525077</figcaption></figure><h4id="第16个cell-微调后其他问题推理">第16个cell-微调后其他问题推理</h4><p>第6个cell提供中英文两种形式的问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 59-year-old man presents with a fever, chills, night sweats, and generalized fatigue, and is found to have a 12 mm vegetation on the aortic valve. Blood cultures indicate gram-positive, catalase-negative, gamma-hemolytic cocci in chains that do not grow in a 6.5% NaCl medium. What is the most likely predisposing factor for this patient&#x27;s condition?&quot;</span></span><br>question = &quot;59岁男性，发热，寒颤，盗汗，全身疲劳，主动脉瓣上有12毫米的赘生物。血液培养显示革兰氏阳性，过氧化氢酶阴性，γ -溶血性球菌链，不能在6.5%的NaCl培养基中生长。这个病人的病情最有可能的诱发因素是什么？&quot;<br><br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>输出结果如下：</p><figure><img src="https://s2.loli.net/2025/02/18/OAoxhREBX45DvHi.png"alt="image-20250218104828178" /><figcaption aria-hidden="true">image-20250218104828178</figcaption></figure><h4id="第17个cell-保存模型权重文件等到本地">第17个cell-保存模型权重文件等到本地</h4><p>cell内容无需修改，直接执行。输出如下图</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">new_model_online = <span class="hljs-string">&quot;kingabzpro/DeepSeek-R1-Medical-COT&quot;</span></span><br>new_model_local = &quot;DeepSeek-R1-Medical-COT&quot;<br>model.save_pretrained(new_model_local) # Local saving<br>tokenizer.save_pretrained(new_model_local)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/jR7BLXGMQWYw5fb.png"alt="image-20250218105536427" /><figcaption aria-hidden="true">image-20250218105536427</figcaption></figure><p>同时会在jupyter根目录下创建一个”DeepSeek-R1-Medical-COT“目录，其中内容如下：</p><figure><img src="https://s2.loli.net/2025/02/18/l8cP9d3pRemtzQT.png"alt="image-20250218105707008" /><figcaption aria-hidden="true">image-20250218105707008</figcaption></figure><h4id="第18与第19个cell-把模型发布到huggingface">第18与第19个cell-把模型发布到huggingface</h4><p>huggingface需要翻墙访问，省略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">model.push_to_hub(new_model_online) # Online saving<br>tokenizer.push_to_hub(new_model_online) # Online saving<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">----------------</span><br>model.save_pretrained_merged(new_model_local, tokenizer, save_method = &quot;merged_16bit&quot;,)<br>model.push_to_hub_merged(new_model_online, tokenizer, save_method = &quot;merged_16bit&quot;)<br></code></pre></td></tr></table></figure><h2 id="创建一个新的.ipynb文件">4.2 创建一个新的.ipynb文件</h2><figure><img src="https://s2.loli.net/2025/02/17/ltvbC9sAd4gLKwx.png"alt="image-20250217093919718" /><figcaption aria-hidden="true">image-20250217093919718</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/17/TGyioRtsJHe9wm7.png"alt="image-20250217094028950" /><figcaption aria-hidden="true">image-20250217094028950</figcaption></figure><p>重命名：</p><figure><img src="https://s2.loli.net/2025/02/18/qcfBh1Jbox2kjev.png"alt="image-20250218110117175" /><figcaption aria-hidden="true">image-20250218110117175</figcaption></figure><h2 id="查看快捷键">4.3 查看快捷键</h2><figure><img src="https://s2.loli.net/2025/02/18/Hgx4iydTONfpkbv.png"alt="image-20250218110248372" /><figcaption aria-hidden="true">image-20250218110248372</figcaption></figure><h1 id="五参考资料">五、参考资料</h1><p>参考教学视频：<ahref="https://www.bilibili.com/video/BV1rSNmekEa7?spm_id_from=333.788.videopod.sections&amp;vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2">如何在本地微调DeepSeek-R1-8b模型</a></p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微调</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2025年3月2日长沙市望月公园随拍</title>
    <link href="/2025/03/02/2025%E5%B9%B43%E6%9C%882%E6%97%A5%E9%95%BF%E6%B2%99%E5%B8%82%E6%9C%9B%E6%9C%88%E5%85%AC%E5%9B%AD%E9%9A%8F%E6%8B%8D/"/>
    <url>/2025/03/02/2025%E5%B9%B43%E6%9C%882%E6%97%A5%E9%95%BF%E6%B2%99%E5%B8%82%E6%9C%9B%E6%9C%88%E5%85%AC%E5%9B%AD%E9%9A%8F%E6%8B%8D/</url>
    
    <content type="html"><![CDATA[<p>2025年3月2日，今天白天天气不错。今天发点不一样的，因为这几天学习已经快抑郁了，趁着天气好出去放放风。前两天就听说长沙市几个地方的樱花已经盛开，比如望月公园。下午4点左右赶到望月公园，人流量挺大的。几乎所有人手里都着手机在拍照，拍摄对象主要是拍樱花与美女，拍摄方式有商拍、随拍、自拍。</p><p>很多人拿着相机在拍照，特别是随拍的美女，很多人直接就拍上了，看到被拍乐意被拍，我也成为拍摄对方中的一员。其中两个被拍的美女，还添加了微信把照片发给她。以下除了两个小女孩是被商拍的、然后我蹭拍了一下，其他都是随拍的人物或风景。相关照片上传也已尽量征得对方同意，没有联系方式与确定的，侵删。</p><p>图片有些大，不想占用自己图床的空间，直接上传到微信公众号了。</p><p>文章链接：https://mp.weixin.qq.com/s/UBtgR9X6jI_F_fZh_v9lfQ</p>]]></content>
    
    
    
    <tags>
      
      <tag>望月公园随拍</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PyTorch框架基础实践</title>
    <link href="/2025/03/01/PyTorch%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5/"/>
    <url>/2025/03/01/PyTorch%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一pytorch简介">一、PyTorch简介</h1><h2 id="pytorch是什么">1.1 PyTorch是什么</h2><p>Ø 开源的机器学习/深度学习框架（ https://pytorch.org/ ）</p><p>Ø 2017年1月，FAIR(Facebook AI Research)发布了PyTorch 0.1</p><p>Ø 它强调易用性和灵活性，并允许用深度学习领域惯用的 Python来表示深度学习模型</p><p>Ø PyTorch 提供了一个核心数据结构—张量（Tensor）</p><p>Ø 类似的框架还有TensorFlow、PaddlePaddle、MindSpore等</p><h2 id="环境搭建">1.2 环境搭建</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">• 详见官网： https://pytorch.org/</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">• 快速安装：pip install torch</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">• 课程代码运行环境：Python 3.9.x 、PyTorch 1.13.0</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">搭建环境参考：https://pytorch.org/get-started/previous-versions/#v1130</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##Linux and Windows platform</span></span><br>root@ksp-registry:~# conda create -n py3.9 python=3.9<br>conda activate py3.9<br><span class="hljs-meta prompt_">#</span><span class="language-bash">python -V</span><br>Python 3.9.21<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CPU only</span><br>pip install torch==1.13.0+cpu torchvision==0.14.0+cpu torchaudio==0.13.0 --extra-index-url https://download.pytorch.org/whl/cpu<br>pip install NumPy==1.24.0<br>pip install matplotlib==3.9.4   #画图的python库<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果有GPU，CUDA 11.7</span><br>pip install torch==1.13.0+cu117 torchvision==0.14.0+cu117 torchaudio==0.13.0 --extra-index-url https://download.pytorch.org/whl/cu117<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/26/wueNz19vr5QFSq3.png"alt="image-20250226173613976" /><figcaption aria-hidden="true">image-20250226173613976</figcaption></figure><h1 id="二tensor操作">二、Tensor操作</h1><p>张量（Tensor）：PyTorch网络运算中的基本数据结构（类似ndarray ）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###张量（Tensor）：PyTorch网络运算中的基本数据结构（类似ndarray ）</span><br><span class="hljs-comment">###创建张量</span><br><span class="hljs-keyword">import</span> torch<br>a = torch.tensor(<span class="hljs-number">0.1</span>)<br>b = torch.tensor(<span class="hljs-number">0.3</span>, dtype=torch.float64)<br><span class="hljs-comment">#执行运算</span><br>result = a + b<br><span class="hljs-built_in">print</span>(result)<br><br><br><span class="hljs-comment">###创建特定的张量</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-comment"># 全1张量</span><br>ones = torch.ones((<span class="hljs-number">3</span>, <span class="hljs-number">2</span>))                  <br><span class="hljs-comment"># 等差序列张量</span><br>range_tensor = torch.arange(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>, <span class="hljs-number">1</span>)      <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;ones:&#x27;</span>, ones, <span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;range_tensor:&#x27;</span>, range_tensor)<br><br><br><span class="hljs-comment">###tensor与ndarray相互转化</span><br><span class="hljs-keyword">import</span> torch<br>output = torch.zeros((<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), dtype=torch.float32)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1---&gt;&quot;</span>, output)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2---&gt;output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(output)))<br>n_output = output.numpy()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3---&gt;n_output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(n_output)))<br>t_output = torch.from_numpy(n_output)    <span class="hljs-comment"># 将ndarray转为tensor</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;4---&gt;t_output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(t_output)))<br><br><br><span class="hljs-comment">###PyTorch常用数据类型</span><br><span class="hljs-comment">#官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-comment">#官方API文档： https://pytorch.org/docs/stable/index.html</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/27/taWTeV3Lb2ivHmg.png"alt="image-20250227101746078" /><figcaption aria-hidden="true">image-20250227101746078</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>data = [[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],[<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br>x_data = torch.tensor(data) <span class="hljs-comment">#直接从数据创建一个tensor，数据类型可以被自动推断出来</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1---&gt;x_data:&quot;</span>, x_data)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_data type:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(x_data)))<br>np_array = np.array(data) <span class="hljs-comment">#直接从数据创建一个numpy变量</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2---&gt;np_array&quot;</span>, np_array)<br>x_np = torch.from_numpy(np_array) <span class="hljs-comment">#从numpy变量创建一个tensor</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3---&gt;x_np&quot;</span>, x_np)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_np type:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(x_np)))<br>x_ones = torch.ones_like(x_data)   <span class="hljs-comment"># 根据x_data的创建一个新tensor，新tensor的属性（此处因为没有指定数据类型，所以新tensor数据类型跟x_data也一样。其他属性也是类似规律）跟x_data一样，但数值可以指定为全是1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Ones Tensor: \n <span class="hljs-subst">&#123;x_ones&#125;</span> \n&quot;</span>)<br>x_rand = torch.rand_like(x_data, dtype=torch.<span class="hljs-built_in">float</span>) <span class="hljs-comment"># 根据x_data的创建一个新tensor，形状与原tensor一样，但指定了新的数据类型为torch.float、且它的元素值都是一些随机生成的数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Random Tensor: \n <span class="hljs-subst">&#123;x_rand&#125;</span> \n&quot;</span>)<br><br><span class="hljs-comment">###-------------------------------------------------------</span><br><span class="hljs-comment">############输出如下：</span><br><span class="hljs-number">1</span>---&gt;x_data: tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],<br>        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]])<br>x_data <span class="hljs-built_in">type</span>:&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;torch.Tensor&#x27;</span>&gt;<br><span class="hljs-number">2</span>---&gt;np_array [[<span class="hljs-number">1</span> <span class="hljs-number">2</span>]<br> [<span class="hljs-number">3</span> <span class="hljs-number">4</span>]]<br><span class="hljs-number">3</span>---&gt;x_np tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],<br>        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]], dtype=torch.int32)<br>x_np <span class="hljs-built_in">type</span>:&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;torch.Tensor&#x27;</span>&gt;<br>Ones Tensor: <br> tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>],<br>        [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>]]) <br><br>Random Tensor: <br> tensor([[<span class="hljs-number">0.1867</span>, <span class="hljs-number">0.2627</span>],<br>        [<span class="hljs-number">0.4514</span>, <span class="hljs-number">0.6730</span>]])<br><br><br><span class="hljs-comment">###官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-comment">#With random or constant values</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>shape = (<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,)<br>rand_tensor = torch.rand(shape)<br>ones_tensor = torch.ones(shape)<br>zeros_tensor = torch.zeros(shape)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Random Tensor: \n <span class="hljs-subst">&#123;rand_tensor&#125;</span> \n&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Ones Tensor: \n <span class="hljs-subst">&#123;ones_tensor&#125;</span> \n&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Zeros Tensor: \n <span class="hljs-subst">&#123;zeros_tensor&#125;</span>&quot;</span>)<br><span class="hljs-comment">###-------------------------------------------------------</span><br><span class="hljs-comment">############输出如下：</span><br>Random Tensor:<br> tensor([[<span class="hljs-number">0.3904</span>, <span class="hljs-number">0.6009</span>, <span class="hljs-number">0.2566</span>],<br>        [<span class="hljs-number">0.7936</span>, <span class="hljs-number">0.9408</span>, <span class="hljs-number">0.1332</span>]])<br><br>Ones Tensor:<br> tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],<br>        [<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>]])<br><br>Zeros Tensor:<br> tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],<br>        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>]])<br><br><br><span class="hljs-comment">###官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-comment">##Attributes of a Tensor,Tensor attributes describe their shape, datatype, and the device on which they are stored.</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>tensor = torch.rand(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Shape of tensor: <span class="hljs-subst">&#123;tensor.shape&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Datatype of tensor: <span class="hljs-subst">&#123;tensor.dtype&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Device tensor is stored on: <span class="hljs-subst">&#123;tensor.device&#125;</span>&quot;</span>)<br><span class="hljs-comment">###-------------------------------------------------------</span><br><span class="hljs-comment">############输出如下：</span><br>Shape of tensor: torch.Size([<span class="hljs-number">3</span>, <span class="hljs-number">4</span>])<br>Datatype of tensor: torch.float32<br>Device tensor <span class="hljs-keyword">is</span> stored on: cpu<br><br><span class="hljs-comment">#Operations on Tensors</span><br><span class="hljs-comment">#Over 1200 tensor operations, including arithmetic, linear algebra, matrix manipulation (transposing, indexing, slicing), sampling and more are comprehensively described here(https://pytorch.org/docs/stable/torch.html).</span><br><span class="hljs-comment">#Try out some of the operations from the list. If you’re familiar with the NumPy API, you’ll find the Tensor API a breeze to use.</span><br><span class="hljs-comment">#Standard numpy-like indexing and slicing:</span><br>tensor = torch.ones(<span class="hljs-number">4</span>, <span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;First row: <span class="hljs-subst">&#123;tensor[<span class="hljs-number">0</span>]&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;First column: <span class="hljs-subst">&#123;tensor[:, <span class="hljs-number">0</span>]&#125;</span>&quot;</span>) <span class="hljs-comment">#也可以指定为其他列</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Last column: <span class="hljs-subst">&#123;tensor[..., -<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br>tensor[:,<span class="hljs-number">1</span>] = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(tensor)<br><span class="hljs-comment">###-------------------------------------------------------</span><br><span class="hljs-comment">############输出如下：</span><br>First row: tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>])<br>First column: tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>])<br>Last column: tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>])<br>tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],<br>        [<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],<br>        [<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],<br>        [<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>]])<br></code></pre></td></tr></table></figure><h1 id="三构建一个线性模型">三、构建一个线性模型</h1><p>任务描述</p><p><img src="C:\Users\jiangsanyin\AppData\Roaming\Typora\typora-user-images\image-20250227112224067.png" alt="image-20250227112224067" style="zoom: 33%;" /></p><p><img src="https://s2.loli.net/2025/02/27/UACk1egv35q9jLZ.png" alt="image-20250227112605556" style="zoom: 33%;" /></p><hr /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment">#1. 读取数据</span><br>data = pd.read_csv(<span class="hljs-string">&#x27;line_fit_data.csv&#x27;</span>).values    <span class="hljs-comment"># 将数据读取后存储为ndarray格式(类似于数组形式)</span><br>X = torch.tensor(data[:, <span class="hljs-number">0</span>], dtype=torch.float32) <span class="hljs-comment"># 样本自变量</span><br>y = torch.tensor(data[:, <span class="hljs-number">1</span>], dtype=torch.float32) <span class="hljs-comment"># 目标变量</span><br><span class="hljs-comment">#print(data)</span><br>W = torch.tensor(-<span class="hljs-number">10.0</span>, requires_grad=<span class="hljs-literal">True</span>)  <span class="hljs-comment">#初始权值。requires_grad=True的作用是让 backward 可以追踪这个参数并且计算它的梯度。</span><br>b = torch.tensor(<span class="hljs-number">7.0</span>, requires_grad=<span class="hljs-literal">True</span>) <span class="hljs-comment">#初始阈值</span><br><span class="hljs-comment">#关于参数 requires_grad 的详细解释：https://blog.csdn.net/weixin_42572656/article/details/116117780</span><br>learning_rate = <span class="hljs-number">0.35</span>    <span class="hljs-comment">#学习速速率，或叫步长</span><br><br><span class="hljs-comment">#2. 构造一个线性模型</span><br><span class="hljs-comment"># 构造一个线性模型</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">linear_model</span>(<span class="hljs-params">W, X, b</span>):<br>    <span class="hljs-keyword">return</span> W * X + b<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">loss_fn</span>(<span class="hljs-params">y_pre, y_true</span>):<br>    <span class="hljs-keyword">return</span> ((y_pre - y_true) ** <span class="hljs-number">2</span>).mean()  <span class="hljs-comment"># mean() 方法 用于计算张量中所有元素的平均值</span><br>y_pre = linear_model(W, X, b)  <span class="hljs-comment"># 前向传播</span><br>loss = loss_fn(y_pre, y)  <span class="hljs-comment"># 模型损失值</span><br>loss.backward()  <span class="hljs-comment"># 误差反向传播</span><br>W.data = W.data - W.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新权值</span><br>b.data = b.data - b.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新阈值</span><br>W.grad.zero_()  <span class="hljs-comment"># 将权值的梯度清零</span><br>b.grad.zero_()  <span class="hljs-comment"># 将阈值的梯度清零</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Epoch: &quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;Loss:&quot;</span>, loss.item(), <span class="hljs-string">&quot;W:&quot;</span>, W.item(), <span class="hljs-string">&quot;b:&quot;</span>, b.item())<br><br><br><span class="hljs-comment">####3. 构造优化器</span><br><span class="hljs-comment">####输出y_pre，可以看到y_pre与y是有很大差异的，原因在我们的W与b是随便取的</span><br><span class="hljs-comment">###y_pre = linear_model(W, X, b)    #前向传播</span><br><span class="hljs-comment">###loss = loss_fn(y_pre, y)             #模型损失值</span><br><span class="hljs-comment">###loss.backward()                      #误差反向传播</span><br><span class="hljs-comment">###print(W.grad)               #W的梯度，其实就是loss 关于W的偏导数</span><br><span class="hljs-comment">###print(b.grad)               #b的梯度，其实就是loss 关于b的偏导数</span><br><span class="hljs-comment">####有了W与b的梯度后，就可以在训练过程中不断更新W与b的取值了，最终实现loss的减小</span><br><span class="hljs-comment">###</span><br><span class="hljs-comment">####4. 最小化方差（训练）</span><br><span class="hljs-comment">###W</span><br><span class="hljs-comment">###b</span><br><span class="hljs-comment">###W.data = W.data - W.grad * learning_rate  #沿着梯度的反方向更新权值</span><br><span class="hljs-comment">###b.data = b.data - b.grad * learning_rate  #沿着梯度的反方向更新阈值</span><br><span class="hljs-comment">####查看更新后的W与b</span><br><span class="hljs-comment">###W</span><br><span class="hljs-comment">###b</span><br><span class="hljs-comment">####默认情况下变量的梯度是会累积的（有些场景需要）。此场景不需要梯度累积，更新对应变量后需要将变量梯度置零</span><br><span class="hljs-comment">###W.grad.zero_()  #将权值的梯度清零</span><br><span class="hljs-comment">###b.grad.zero_()  #将阈值的梯度清零</span><br><span class="hljs-comment">###</span><br><span class="hljs-comment">####5. 性能评估</span><br><span class="hljs-comment">###y_pre = linear_model(W, X, b)    #前向传播</span><br><span class="hljs-comment">###loss = loss_fn(y_pre, y)             #模型损失值</span><br><span class="hljs-comment">###loss</span><br><br>y_pre = linear_model(W, X, b)  <span class="hljs-comment"># 前向传播</span><br>loss = loss_fn(y_pre, y)  <span class="hljs-comment"># 模型损失值</span><br>loss.backward()  <span class="hljs-comment"># 误差反向传播</span><br>W.data = W.data - W.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新权值</span><br>b.data = b.data - b.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新阈值</span><br>W.grad.zero_()  <span class="hljs-comment"># 将权值的梯度清零</span><br>b.grad.zero_()  <span class="hljs-comment"># 将阈值的梯度清零</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Epoch: &quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;Loss:&quot;</span>, loss.item(), <span class="hljs-string">&quot;W:&quot;</span>, W.item(), <span class="hljs-string">&quot;b:&quot;</span>, b.item())<br><br>plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">5</span>))      <span class="hljs-comment">#设置画布大小</span><br>plt.axis([-<span class="hljs-number">0.01</span>, <span class="hljs-number">1</span>, -<span class="hljs-number">3</span>, <span class="hljs-number">10</span>])     <span class="hljs-comment">#指定坐标轴的取值范围</span><br>plt.scatter(X, y, color=<span class="hljs-string">&quot;blue&quot;</span>)  <span class="hljs-comment">#绘制样本实际分布图</span><br>plt.plot(X, linear_model(W, X, b).data, color=<span class="hljs-string">&quot;red&quot;</span>)   <span class="hljs-comment">#绘制模型预测结果分布图</span><br><span class="hljs-comment">#plt.legend([&#x27;target_y&#x27;, &#x27;predict_y&#x27;])    #标示图例</span><br><span class="hljs-comment">#plt.show()                               #展示画布，不执行看不到弹窗与画布</span><br><br><span class="hljs-comment">#以下for循环演示，执行多轮权值与阈值的更新，尽量实现线性模型对原数据的拟合</span><br><span class="hljs-comment">#def linear_model_train(W, X, b, y_true, range_):</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>):<br>    y_pre = linear_model(W, X, b)  <span class="hljs-comment"># 前向传播</span><br>    loss = loss_fn(y_pre, y)  <span class="hljs-comment"># 模型损失值</span><br>    loss.backward()  <span class="hljs-comment"># 误差反向传播</span><br><br>    W.data = W.data - W.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新权值</span><br>    b.data = b.data - b.grad * learning_rate  <span class="hljs-comment"># 沿着梯度的反方向更新阈值</span><br>    W.grad.zero_()  <span class="hljs-comment"># 将权值的梯度清零</span><br>    b.grad.zero_()  <span class="hljs-comment"># 将阈值的梯度清零</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Epoch: &quot;</span>, epoch, <span class="hljs-string">&quot;Loss:&quot;</span>, loss.item(), <span class="hljs-string">&quot;W:&quot;</span>, W.item(), <span class="hljs-string">&quot;b:&quot;</span>, b.item())<br>    plt.plot(X, y_pre.data, color=<span class="hljs-string">&quot;red&quot;</span>, alpha=<span class="hljs-number">0.2</span>)  <span class="hljs-comment"># 绘制模型预测结果分布图</span><br><span class="hljs-comment">#linear_model_train(W, X, b, y, 10)</span><br><br>plt.show()<br><span class="hljs-comment">#下图是此程序的实际执行结果（跟那些蓝色点基本重合的那条模拟直线就是最后的回归方程对应的直线）</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/27/bcxfpJgAYdB2MGz.png"alt="image-20250227221735425" /><figcaption aria-hidden="true">image-20250227221735425</figcaption></figure><h1 id="四识别手写数字">四、识别手写数字</h1><h2 id="案例流程">案例流程</h2><p><img src="https://s2.loli.net/2025/02/27/XiUlT2bjKnDFEZ4.png" alt="image-20250227230342049" style="zoom: 67%;" /></p><p><img src="https://s2.loli.net/2025/02/27/RTrD9z3Js4YlHcS.png" alt="image-20250227230359444" style="zoom:67%;" /></p><p><img src="https://s2.loli.net/2025/02/27/iQckg79paIPwv48.png" alt="image-20250227230429605" style="zoom:67%;" /></p><hr /><h2 id="各个步骤与代码片段">各个步骤与代码片段</h2><figure><img src="https://s2.loli.net/2025/03/01/mCvXah1eiBLVK4J.png"alt="image-20250301114431359" /><figcaption aria-hidden="true">image-20250301114431359</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/2TRWV57AFKmfEct.png"alt="image-20250301114511908" /><figcaption aria-hidden="true">image-20250301114511908</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/uURyVjaHInEWN1A.png"alt="image-20250301114752851" /><figcaption aria-hidden="true">image-20250301114752851</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/rAOZwiVTY5Ss96n.png"alt="image-20250301114850257" /><figcaption aria-hidden="true">image-20250301114850257</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/mpfv58o9eMPiKyB.png"alt="image-20250301114908341" /><figcaption aria-hidden="true">image-20250301114908341</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/we9QAmPXczfRZHr.png"alt="image-20250301114926605" /><figcaption aria-hidden="true">image-20250301114926605</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/68CItmDUg4xT5Nb.png"alt="image-20250301115050517" /><figcaption aria-hidden="true">image-20250301115050517</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/IF659ZbtTuQsO8y.png"alt="image-20250301115106097" /><figcaption aria-hidden="true">image-20250301115106097</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/aUeZ1RfYCkIJl3x.png"alt="image-20250301115114458" /><figcaption aria-hidden="true">image-20250301115114458</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/Z6UVRGQivYcPrCM.png"alt="image-20250301115123276" /><figcaption aria-hidden="true">image-20250301115123276</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/BmAegGxs8l74vqp.png"alt="image-20250301115133657" /><figcaption aria-hidden="true">image-20250301115133657</figcaption></figure><figure><img src="https://s2.loli.net/2025/03/01/rIRQC3yp2DtNPfh.png"alt="image-20250301115142324" /><figcaption aria-hidden="true">image-20250301115142324</figcaption></figure><hr /><h2 id="具体可执行代码">具体可执行代码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">相关代码与文件已经保存在阿里云盘（由于阿里云盘不支持分享.zip，故将分享为自释放程序文件即.exe格式，下载双击即可解压）</span><br>https://www.alipan.com/s/QdEhU2t9E1H<br>提取码: o49e<br></code></pre></td></tr></table></figure><p>（1）文件“识别手写数字2.py”内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> mnist_net_work2 <span class="hljs-keyword">import</span> Network2<br><br><span class="hljs-comment">#1. 加载数据</span><br><span class="hljs-comment">#读取支持读取和保存numpy数组，其中.npz是numpy中使用的特定的数据类型</span><br><span class="hljs-comment">#指定allow_pickle参数来设置是否允许使用pickle序列化，默认值是False，意味着 numpy.load() 函数不能加载包含 Python 对象（例如 None）的数组</span><br>data = numpy.load(<span class="hljs-string">&#x27;mnist.npz&#x27;</span>, allow_pickle=<span class="hljs-literal">True</span>)<br><span class="hljs-comment">#4个变量分别代表训练集样本自变量、训练集样本标签、测试集样本自变量、测试集样本标签</span><br>X_train, y_train, X_test, y_test = data[<span class="hljs-string">&#x27;x_train&#x27;</span>], data[<span class="hljs-string">&#x27;y_train&#x27;</span>], data[<span class="hljs-string">&#x27;x_test&#x27;</span>], data[<span class="hljs-string">&#x27;y_test&#x27;</span>]<br><br><br><span class="hljs-comment">#2. 数据加工</span><br>X_train_tensor = torch.tensor(X_train/<span class="hljs-number">255</span>, dtype=torch.float32)   <span class="hljs-comment">#将训练集样本自变量转变为tensor类型</span><br>y_train_tensor = torch.tensor(y_train, dtype=torch.int64)   <span class="hljs-comment">#将训练集样本标签转变为tensor类型</span><br>X_test_tensor = torch.tensor(X_test/<span class="hljs-number">255</span>, dtype=torch.float32)   <span class="hljs-comment">#将测试集样本自变量转变为tensor类型</span><br><span class="hljs-comment">#测试集样本标签，在此处不需要其tensor类型、直接使用其numpy数组类型即可，故无须转换</span><br>train_ds = torch.utils.data.TensorDataset(X_train_tensor, y_train_tensor)  <span class="hljs-comment">#将训练集样本自变量、标签整理成成对数据集</span><br>train_dl = torch.utils.data.DataLoader(train_ds, batch_size=<span class="hljs-number">32</span>, shuffle=<span class="hljs-literal">True</span>) <span class="hljs-comment">#训练集样本整理成对后，再转变成可迭代的格式、迭代前会打乱、每轮迭代取32个数据为一批</span><br><br><span class="hljs-comment">#3. 构建模型（搭建网络）</span><br>network = Network2()   <span class="hljs-comment">#实例化得到一个网络模型</span><br><br><span class="hljs-comment">#4. 模型配置</span><br><span class="hljs-comment">#损失函数</span><br>loss_fn = torch.nn.CrossEntropyLoss()   <span class="hljs-comment">#使用torch默认存在的交叉熵函数</span><br><span class="hljs-comment">#优化器。用来在多次训练中使用梯度修改相关参数值的，此处使用随机梯度下降方法SGD，其中第一个参数是代表着要训练过程中需要不断修改的模型参数、第2个参数是学习率</span><br>optimizer = torch.optim.SGD(network.parameters(), lr=<span class="hljs-number">0.01</span>)<br><br><span class="hljs-comment">#5. 模型训练与保存</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">20</span>):<br>    <span class="hljs-keyword">for</span> image, label <span class="hljs-keyword">in</span> train_dl:<br>        y_pre = network(image)            <span class="hljs-comment"># 前向传播</span><br>        loss = loss_fn(y_pre, label)      <span class="hljs-comment"># 计算模型损失值</span><br>        network.zero_grad()               <span class="hljs-comment"># 将网络中所有参数的梯度进行清零</span><br>        loss.backward()                   <span class="hljs-comment"># 计算梯度</span><br>        optimizer.step()                  <span class="hljs-comment"># 对网络参数（权值和阈值）进行优化</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第 &#123;&#125; 轮训练的最后一批样本的训练损失值为：&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(epoch, loss.item()))  <span class="hljs-comment"># 打印训练误差</span><br><br><span class="hljs-comment">#6. 模型应用</span><br>predict = network.forward(X_test_tensor)     <span class="hljs-comment">#调用已经训练好的模型对测试集样本进行预测</span><br>result = predict.data.numpy().argmax(axis=<span class="hljs-number">1</span>) <span class="hljs-comment"># 模型对测试样本的预测标签</span><br>acc_test = (result == y_test).mean()                    <span class="hljs-comment">#测试准确度</span><br><br>torch.save(network.state_dict(), <span class="hljs-string">&#x27;mnist_net_work2.pt&#x27;</span>)  <span class="hljs-comment">#保存已经训练好的模型（此处只保存参数）</span><br></code></pre></td></tr></table></figure><p>（2）网络（模型）定义文件“mnist_net_work2.py”如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> torch.nn <span class="hljs-keyword">import</span> Module<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Network2</span>(<span class="hljs-title class_ inherited__">Module</span>):<br>    <span class="hljs-comment"># __init__方法中，定义神经网络用到的层及函数</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(Network2, <span class="hljs-variable language_">self</span>).__init__()<br>        <span class="hljs-variable language_">self</span>.flatten = torch.nn.Flatten() <span class="hljs-comment">#展平层</span><br><br>        <span class="hljs-variable language_">self</span>.fc1 = torch.nn.Linear(<span class="hljs-number">784</span>, <span class="hljs-number">128</span>)  <span class="hljs-comment">#全连接（隐藏层）</span><br>        <span class="hljs-comment"># 定义一个简单的线性层，输入维度为784,输出维度为128</span><br><br>        <span class="hljs-variable language_">self</span>.fc2 = torch.nn.Linear(<span class="hljs-number">128</span>, <span class="hljs-number">10</span>)   <span class="hljs-comment">#全连接（输出层）</span><br>        <span class="hljs-comment"># 定义一个简单的线性层，输入维度为128,输出维度为10</span><br><br>        <span class="hljs-variable language_">self</span>.relu = torch.nn.ReLU()                                <span class="hljs-comment">#激活函数</span><br>        <span class="hljs-comment"># ReLU(Rectified Linear Unit)是一种常用的激活函数，全称为修正线性单元。</span><br>        <span class="hljs-comment"># 它的主要作用是将输入值限制在一个非负的范围内，即当输入值小于0时，输出值为0;当输入值大于等于0时，输出值等于输入值本身。ReLU函数的表达式为：f(x) = max(0, x)。</span><br>        <span class="hljs-comment"># https://blog.csdn.net/u011775793/article/details/135422687</span><br><br>    <span class="hljs-comment">#前向传播函数</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-comment">#print(&quot;x: &quot;, x)</span><br>        <span class="hljs-comment"># 初始化函数中定义的各个函数的调用</span><br>        x = <span class="hljs-variable language_">self</span>.flatten(x)<br>        <span class="hljs-comment">#print(&quot;after flatten: &quot;, x)</span><br>        x = <span class="hljs-variable language_">self</span>.fc1(x)<br>        <span class="hljs-comment">#print(&quot;after fc1: &quot;, x)</span><br>        x = <span class="hljs-variable language_">self</span>.relu(x)<br>        <span class="hljs-comment">#print(&quot;after relu: &quot;, x)</span><br>        x = <span class="hljs-variable language_">self</span>.fc2(x)<br>        <span class="hljs-comment">#print(&quot;after fc2: &quot;, x)</span><br>        <span class="hljs-keyword">return</span> x<br><br></code></pre></td></tr></table></figure><p>（3）模型应用即模型效果的验证，对应的文件“predict2.py”如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#import torch</span><br><span class="hljs-comment">#from mnist_net_work import NetWork</span><br><span class="hljs-comment">#import matplotlib.pyplot as plt</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#model = NetWork()                               # 实例化得到一个网络模型</span><br><span class="hljs-comment">#model_state_dict = torch.load(&#x27;mnist_1.pt&#x27;)     # 加载已保存好的模型（参数）</span><br><span class="hljs-comment">#model.load_state_dict(model_state_dict)         # 将加载进来的参数导入网络中</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#image = plt.imread(&#x27;test_images/&#123;&#125;.jpg&#x27;.format(0))       # 读取照片</span><br><span class="hljs-comment">#plt.imshow(image)</span><br><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> mnist_net_work2 <span class="hljs-keyword">import</span> Network2<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br>model = Network2()                  <span class="hljs-comment">#实例化得到一个网络模型</span><br>model_state_dict = torch.load(<span class="hljs-string">&#x27;mnist_net_work2.pt&#x27;</span>)   <span class="hljs-comment">#加载模型参数</span><br>model.load_state_dict(model_state_dict)   <span class="hljs-comment">#将加载进来的模型参数导入到网络（模型）中</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>):<br>    image = plt.imread(<span class="hljs-string">&#x27;test_images/&#123;&#125;.jpg&#x27;</span>.<span class="hljs-built_in">format</span>(i))   <span class="hljs-comment">#读取照片。image的类型是 numpy.ndarray</span><br>    image = torch.tensor(image/<span class="hljs-number">255</span>, dtype=torch.float32)           <span class="hljs-comment">#转换成tensor类型</span><br>    image = image.view(<span class="hljs-number">1</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>)       <span class="hljs-comment">#数据结构由二维转成三维</span><br>    y_pre = model(image)                       <span class="hljs-comment">#执行预测</span><br>    result = y_pre.data.numpy().argmax(axis=<span class="hljs-number">1</span>)          <span class="hljs-comment">#处理预测返回数据，获取预测到的数字</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;预测照片&#123;&#125;.jpg 的数字是：&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i, result))<br></code></pre></td></tr></table></figure><table><thead><tr><th>ID</th><th>Name</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>enqueue</td><td>Y</td><td>判断集群中的空闲资源是否能满足作业调度的基本需求，如果能，则将作业的podgroup设置为inqueue状态，否则保持podgroup为pending状态。</td></tr><tr><td>2</td><td>allocate</td><td>Y</td><td>尝试为inqueue状态的podgroup作业分配资源。</td></tr><tr><td>3</td><td>backfill</td><td>N</td><td>尝试为未指明pod资源申请量的作业分配资源。</td></tr><tr><td>4</td><td>preempt</td><td>N</td><td>识别高优先级的调度作业。尝试驱逐低优先级的Pod，并为高优先级作业分配资源。</td></tr><tr><td>5</td><td>reclaim</td><td>N</td><td>选择资源被其他queue占用的queue，并回收相应资源。</td></tr><tr><td>6</td><td>shuffle</td><td>N</td><td>将任务队列中的任务顺序随机化，提高资源利用率、优化调度性能</td></tr></tbody></table><table style="width:100%;"><thead><tr><th>ID</th><th>Name</th><th>Arguments</th><th>Registered Functions</th><th>Description</th></tr></thead><tbody><tr><td>1</td><td>binpack</td><td>* binpack.weight <br />* binpack.cpu <br />* binpack.memory <br />*binpack.resources</td><td>* nodeOrderFn</td><td>尽量将Pod绑定到资源利用率高的节点上， 以减少碎片化。</td></tr><tr><td>2</td><td>conformance</td><td>/</td><td>* preemptableFn <br />* reclaimableFn</td><td>跳过关键Pod，而不是驱逐它们。</td></tr><tr><td>3</td><td>drf</td><td>/</td><td>* preemptableFn <br />* queueOrderFn <br />* reclaimFn <br />*jobOrderFn <br />* namespaceOrderFn</td><td>为所有队列提供公平的资源共享。</td></tr><tr><td><strong>ID</strong></td><td><strong>Name</strong></td><td><strong>Arguments</strong></td><td><strong>Registered Functions</strong></td><td><strong>Description</strong></td></tr><tr><td>4</td><td>extender</td><td>* extender.urlPrefix <br />* extender.httpTimeout <br />*extender.onSessionOpenVerb <br />* extender.onSessionCloseVerb <br />*extender.predicateVerb <br />* extender.prioritizeVerb <br />*extender.preemptableVerb <br />* extender.reclaimableVerb <br />*extender.queueOverusedVerb <br />* extender.jobEnqueueableVerb <br />*extender.ignorable</td><td>* predicateFn <br />* batchNodeOrderFn <br />* preemptableFn <br />*reclaimableFn <br />* jobEnqueueableFn <br />* overusedFn</td><td>添加外部http server，用 以执行自定义action。</td></tr><tr><td>5</td><td>gang</td><td>/</td><td>* jobValidFn <br />* reclaimableFn <br />* preemptableFn <br />*jobOrderFn <br />* JobReadyFn <br />* jobPipelineFn <br />*jobStarvingFn</td><td>为作业分配资源时，重点 考虑作业的最低资源需求 和pod最小运行数量，执行“All or nothing”的调度 策略。</td></tr><tr><td>6</td><td>nodeorder</td><td>* nodeaffinity.weight <br />* podaffinity.weight <br />*leastrequested.weight <br />* balancedresource.weight <br />*mostrequested.weight <br />* tainttoleration.weight <br />*imagelocality.weight</td><td>* nodeOrderFn <br />* batchNodeOrderFn</td><td>以自定义的方式对所有节点 进行排序。</td></tr><tr><td><strong>ID</strong></td><td><strong>Name</strong></td><td><strong>Arguments</strong></td><td><strong>Registered Functions</strong></td><td><strong>Description</strong></td></tr><tr><td>7</td><td>numaaware</td><td>* weight</td><td>* predicateFn <br />* batchNodeOrderFn</td><td>在将pod绑定到node节点时， 重点考虑CPU Numa因素。</td></tr><tr><td>8</td><td>overcommit</td><td>* overcommit-factor</td><td>* jobEnqueueableFn <br />* jobEnqueuedFn</td><td>将可用资源设置为群集整体 资源的指定倍数。</td></tr><tr><td>9</td><td>predicate</td><td>* predicate.GPUSharingEnable <br />* predicate.CacheEnable <br />*predicate.ProportionalEnable <br />* predicate.resources <br />*predicate.resources.nvidia.com/gpu.cpu <br />*predicate.resources.nvidia.com/gpu.memory</td><td>* predicateFn</td><td>添加关于如何为pod调度过滤 node的自定义函数。</td></tr><tr><td>10</td><td>priority</td><td>/</td><td>* taskOrderFn <br />* jobOrderFn <br />* preemptableFn <br />*jobStarvingFn</td><td>定义调度作业的优先级。</td></tr><tr><td>11</td><td>proportion</td><td>/</td><td>* queueOrderFn <br />* reclaimableFn <br />* overusedFn <br />*allocatableFn <br />* jobEnqueueableFn</td><td>根据queue的配置，将集群的整 个资源按比例划分到所有的 queue。</td></tr><tr><td><strong>ID</strong></td><td><strong>Name</strong></td><td><strong>Arguments</strong></td><td><strong>Registered Functions</strong></td><td><strong>Description</strong></td></tr><tr><td>12</td><td>sla</td><td>* sla-waiting-time</td><td>* jobOrderFn <br />* jobEnqueueableFn <br />* JobPipelinedFn</td><td>根据SLA设置对工作负载进行排序。</td></tr><tr><td>13</td><td>task-topology</td><td>/</td><td>* taskOrderFn <br />* nodeOrderFn</td><td>根据给定策略，将不同角色的Pod绑定到节点上。</td></tr><tr><td>14</td><td>tdm</td><td>* tdm.revocable-zone.rz1 <br />* tdm.revocable-zone.rz2 <br />*tdm.evict.period</td><td>* predicateFn <br />* nodeOrderFn <br />* preemptableFn <br />*victimTasksFn <br />* jobOrderFn <br />* jobPipelinedFn <br />*jobStarvingFn</td><td>在不同的时间段内，允许部分节点承接K8s和其他 集群的作业调度。</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PyTorch框架基础实践</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大模型与AIGC概述</title>
    <link href="/2025/03/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8EAIGC%E6%A6%82%E8%BF%B0/"/>
    <url>/2025/03/01/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8EAIGC%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="一大模型是什么">一、大模型是什么</h1><p>将以国产大模型阿里巴巴公司推出的“<ahref="https://tongyi.aliyun.com/">通义千问</a>”为例子进行演示。它需要提前注册账号（其实用支付宝或淘宝账号也能登录）比如用手机号进行注册登录。</p><figure><img src="https://s2.loli.net/2025/02/25/l7fN8wIWLJeOPaz.png"alt="image-20250225120223430" /><figcaption aria-hidden="true">image-20250225120223430</figcaption></figure><h2 id="大模型的定义">1.1 大模型的定义</h2><p>起源：大语言模型（Large languageModels，LLMs），围绕自然语言处理任务而创建的一系列模型。</p><p>发展：基础模型（FoundationModels），可以处理多模态数据，不局限于自然语言。</p><p>下图粗略地概括了工人智能、机器学习、深度学习、大模型之间的关系。</p><figure><img src="https://s2.loli.net/2025/02/25/6BRsMmWC4eXpoGi.png"alt="image-20250225205847972" /><figcaption aria-hidden="true">image-20250225205847972</figcaption></figure><h3 id="定义">定义</h3><p>定义1：是一种由包含数百亿以上参数的深度神经网络构建的语言模型，通常使用<strong>自监督学习</strong>方法，通过大量<strong>无标注文本</strong>进行训练。---出自书籍《大规模语言模型从理论到实践》</p><p>定义2：任意的在大规模数据上训练并且可以适配（例如微调）广泛下游任务的模型。---出自论文《Onthe Opportunities and Risks of Foundation Models》</p><h3 id="发散思考与学习内容">发散思考与学习内容</h3><ul><li>自监督学习</li></ul><p><strong>自监督学习</strong>是一种<strong>机器学习范式</strong>，它不依赖人工标注的数据，而是通过数据自身提供的<strong>内在结构</strong>或<strong>隐藏信息</strong>来生成监督信号，从而进行模型训练。它可以被看作是一种特殊的<strong>无监督学习</strong>，因为它不需要人工标签，但它的训练方式类似于监督学习。</p><ul><li>无标注文本</li></ul><p>无标注文本（UnlabeledText）指的是<strong>没有附加人工标注信息</strong>的文本数据，通常只是<strong>原始的自然语言数据</strong>，不包含类别标签、情感评分、实体标注等额外信息。</p><p>无标注文本在<strong>自然语言处理（NLP）</strong>任务中被广泛使用，尤其在<strong>自监督学习（Self-SupervisedLearning）</strong>和<strong>无监督学习（UnsupervisedLearning）</strong>中，它们用于预训练语言模型，帮助模型学习语言结构和语义信息，而无需人工标注数据。</p><h2 id="大模型的特性">1.2 大模型的特性</h2><h3 id="基本特点">基本特点</h3><p>1.大规模参数量，超过百亿参数规模的神经网络模型。</p><p>2.大规模训练数据，通过海量数据进行自监督预训练。</p><p>3.涌现能力，表现出了人类才会有的智能（上下文学习、思维链）。</p><p>4.多模态数据多领域适应性（通用人工智能，AGI，artificial generalintelligence），经适当微调或提示，能应用于不同领域，且效果显著。</p><p>5.超长上下文感知，基于Transformers的注意力机制（<ahref="https://arxiv.org/abs/1706.03762">Google的论文《Attention is AllYou Need》</a>）保证其能充分理解信息，并做出合理推断。</p><p>6.不是搜索引擎，无法感知实时数据。（这个不足可以能过联网搜索来加以弥补，但不是大模型本身的推理能力即离开了互联网大模型将缺失这种能力）</p><h3 id="其他特点">其他特点</h3><p>1.模型同质化。当前大模型都是以Transformer为基础衍生而来的</p><p>2.大力出奇迹。<strong>参数规模</strong>与<strong>预训练语料量级</strong>是模型性能的关键影响因素。例如与GPT-2的15亿参数相比，GPT-3有1750亿个参数，从而在性能方面有关质的提升。</p><p>3.从开源走向闭源。某些模型根本不会对外发布或只对少数提供API访问权限（如openai的模型），甚至一些数据集（如GPT-2）也没有公开发布</p><p>4.头部垄断。由于数据资源与算力制约，中小型企业基本无法与头部科技公司竞争。</p><h3 id="典型代表国外">典型代表（国外）</h3><ol type="1"><li>GPT系列：https://chat.openai.com/</li><li>谷歌gemini：https://gemini.google.com/</li><li>微软Copilot：https://www.bing.com/chat</li><li>Meta的Llama：https://llama.meta.com/llama2</li><li>Claude系列：https://claude.ai</li><li>XAI的grok：https://x.ai、https://grok.com/</li><li>MistralAI：https://mistralai7b.com/</li></ol><h3 id="典型代表国内">典型代表（国内）</h3><ol type="1"><li>通义千问：https://tongyi.aliyun.com/qianwen/</li><li>文心一言：https://yiyan.baidu.com/welcome</li><li>智谱清言：https://chatglm.cn/main/detail</li><li>百川大模型：https://www.baichuan-ai.com/home</li><li>豆包：https://www.doubao.com/</li><li>讯飞星火：https://xinghuo.xfyun.cn/</li><li>天工：https://www.tiangong.cn/</li><li>商汤商量：https://chat.sensetime.com/wb/login</li><li>腾讯混元大模型：https://hunyuan.tencent.com/?ref=feizhuke.com</li><li>Kimi：https://kimi.moonshot.cn/</li><li>华为盘古大模型（需提前申请）：https://www.huaweicloud.com/product/pangu.html</li><li>360智脑：https://chat.360.com/?src=ai_360_com</li><li>深度求索DeepSeek：https://chat.deepseek.com/</li></ol><h2 id="大模型能做什么">1.3 大模型能做什么</h2><ol type="1"><li>文本生成：问题回答、文稿撰写、代码生成、数学解题。</li><li>智能客服：包括通用聊天机器人和基于RAG技术的垂直领域机器人。</li><li>机器翻译：生成目标语言的高质量译文。</li><li>文本摘要：对于长篇文章或报告，模型可以提炼关键信息生成简洁的摘要。</li><li>情感分析：分析文本中的情感色彩，判断作者的态度是正面、负面还是中立。</li><li>视觉任务：文生图、文生视频、看图说话等</li></ol><h2 id="大模型应用">1.4 大模型应用</h2><ol type="1"><li><p>医疗保健和生物医学《On the Opportunities and Risks of FoundationModels》</p></li><li><p>法律《On the Opportunities and Risks of Foundation Models》</p><p>民事案件各个步骤的示例以及基础模型可能有帮助的地方</p></li><li><p>教育《On the Opportunities and Risks of FoundationModels》</p></li></ol><h1 id="二大模型的前世今生">二、大模型的前世今生</h1><h2 id="从神经网络到大模型">2.1 从神经网络到大模型</h2><ol type="1"><li>单层感知机（解决线性可分问题，20世纪40年代）</li><li>BP传播算法（解决线性不可分问题，20世纪80年代）</li><li>深度神经网络（海量图片分类，2010年左右）</li><li>大模型/基础模型（通用人工智能，2020年左右）</li></ol><h2 id="大模型发展大事件">2.2 大模型发展大事件</h2><ol type="1"><li>2017年谷歌发表论文《Attention Is All YouNeed》，正式提出Transformer网络，革<strong>RNN</strong>（循环神经网络，RecurrentNeural Network）/<strong>CNN</strong>（卷积神经网络，ConvolutionalNeural Network）的命。</li><li>2018年OPENAI发表论文《Improving Language Understanding by GenerativePre-Training》即“通过生成式预训练提高语言理解能力”，GPT诞生。</li><li>2018年Google发布BERT，该模型在诸多自然语言处理任务中展现了卓越的性能，激发了大量以预训练语言模型为基础的自然语言处理研究。</li><li>2020年6月，OpenAI发布了 GPT-3模型。</li><li>2022年11月，ChatGPT（就是GPT-3.5-turbo）的问世引爆全球关注。</li><li>2023年初至今，各大科技公司纷纷推出自己的大模型，“万模大战”开始。</li><li>2024年12月下旬与2025年1月下旬，DeepSeek相继发布 DeepSeek-V3模型、DeepSeek-R1模型，创新的架构与训练方法、低训练成本、优惠的API调用价格与强大高效的语言处理能力，使其迅速火遍全球、登顶中美应用下载榜首，成为中国骄傲与争相学习、推广的对象、以美国为首的西方大模型强国研究的对象。</li></ol><figure><img src="https://s2.loli.net/2025/02/25/lYWvqCp64LOV2wG.png"alt="image-20250225225633082" /><figcaption aria-hidden="true">image-20250225225633082</figcaption></figure><h2 id="大语言模型的三个发展阶段">2.3 大语言模型的三个发展阶段</h2><p>来自复旦大学张奇等人编写书籍《大规模语言模型从理论到实践》</p><ol type="1"><li><strong>基础模型阶段</strong>，主要集中在2018年至2021年期间，期间发布了一系列代表性的大语言模型，如BERT、GPT、百度ERNIE、华为盘古-α、Palm等。这些模型的发布为大语言模型的研究打下了基础。</li><li><strong>能力探索阶段</strong>，主要发生在2019年至2022年期间。研究人员开始尝试指令微调（InstructionTuning）方案，将各种类型的任务统一为<em>生成式自然语言理解框架</em>，并使用<em>构造的训练语料</em>对模型进行微调。</li><li><strong>突破发展阶段</strong>，以2022年11月ChatGPT的发布为起点。ChatGPT通过一个简单的对话框，利用一个大语言模型就能够实现问题回答、文稿撰写、代码生成、数学解题等多种任务</li></ol><h1 id="三大模型爆火的原因">三、大模型爆火的原因</h1><h2 id="原因一-能通过图灵测试">3.1 原因一 能通过图灵测试</h2><p><strong>让人们看到了通用人工智能乃至强人工智能的希望</strong></p><p>➢ 功能极其强大，（ChatGPT）远超同期其他模型</p><p>➢ 可以完成跨领域、跨模态任务</p><p>在ChatGPT之前，还没有大模型能通过图灵测试。它不仅可以进行日常对话，还能够完成复杂任务，如撰写文章、回答问题等。令人惊讶的是，所有这些任务都由一个模型完成。在许多任务上，ChatGPT的性能甚至超过了针对单一任务进行训练的有监督算法。这对于人工智能领 域具有重大意义。</p><hr /><p><strong>注：什么是图灵测试？</strong></p><ul><li>测试者(人)与被测试者(机器)隔开</li><li>测试者通过一些装置(如键盘)向被测试者随意提问</li><li>测试者根据所接受回答判定对方是人或机器</li><li>多次测试后平均每个测试者做出超过30%的误判(将机器判定成人)</li><li>这台机器就被认为具有人类智能</li></ul><h2 id="原因二-极具争议的ai觉醒">3.2 原因二 极具争议的AI觉醒</h2><ul><li>“ChatGPT是我一生中见到的两项最具革命性技术之一”——比尔盖茨</li><li>“AI将是人类未来文明的最大风险之一”——埃隆·马斯克</li><li>“AI是谷歌正在开发的最深奥的技术”——谷歌CEO桑达尔•皮查伊</li><li>“AI将颠覆社会”——巴菲特</li></ul><h2 id="原因三-使用方式极其简单">3.3 原因三 使用方式极其简单</h2><p>在对话框中提出你的需求即可，ChatGPT活跃用户数一个月内就破亿。</p><figure><img src="https://s2.loli.net/2025/02/25/fRtx65YhjZW7HmE.png"alt="image-20250225232920381" /><figcaption aria-hidden="true">image-20250225232920381</figcaption></figure><h1 id="四大模型原理介绍">四、大模型原理介绍</h1><h2 id="gpt生成式模型的工作过程单字接龙">4.1GPT(生成式模型)的工作过程:单字接龙</h2><p>GPT是英文“Generative Pre-trainedTransformer”的缩写，它的中文全称是生成式预训练变换器，是一种生成式模型。</p><hr /><p>模型输入：我们</p><p>模型输出：发明了一个新的和简单的模型</p><hr /><figure><img src="https://s2.loli.net/2025/02/26/X1KgpxbFoIjB84E.png"alt="image-20250226101327422" /><figcaption aria-hidden="true">image-20250226101327422</figcaption></figure><p>文本生成的过程本质就是单字接龙。</p><p>那么单字接龙为什么可以产生这么大的威力？</p><h2 id="chatgpt构建流程">4.2 ChatGPT构建流程</h2><p>ChatGPT构建主要包含四个阶段：<strong>预训练</strong>、<strong>有监督微调</strong>、<strong>奖励建模</strong>、<strong>强化学习</strong>。这四个阶段都需要不同规模<em>数据集合</em> 以及不同类型的 <em>算法</em> ，会产出不同类型的<em>模型</em> ，同时所需要的 <em>计算资源</em> 也有非常大的差别。</p><figure><img src="https://s2.loli.net/2025/02/26/d6hUSRkp57N4Mgl.png"alt="image-20250226104450061" /><figcaption aria-hidden="true">image-20250226104450061</figcaption></figure><p>通过上图，我们也较容易归纳出“<strong>人工智能发展的三大因素：<em>数据</em>（上图中的数据集合）、<em>算法</em>（上图中的算法）和<em>算力</em>（上图中的资源需求）</strong>”。上图中还有一个内容“模型”，它其实是数据集合与算法的产物。</p><p>上图中相关专业术语解释：</p><ul><li><em>SFT模型</em>：Supervised Fine-Tuning Model，即监督微调模型</li><li>RM模型：Reward Model，即奖励模型</li><li>RL模型：Reinforcement Learning Model，即强化学习模型</li></ul><hr /><figure><img src="https://s2.loli.net/2025/02/26/OHu8BJzQC3UsqnA.png"alt="image-20250226113420068" /><figcaption aria-hidden="true">image-20250226113420068</figcaption></figure><h2 id="阶段一-自监督预训练">4.3 阶段一 自监督预训练</h2><p>自监督预训练，英文全称”Unsupervised pre-training“</p><hr /><p>核心思路：利用前k个词（token）预测第k+1个词。</p><p>设有语料<code>𝑈=&#123;𝑢1,…,𝑢𝑛&#125;</code>，其中 <code>𝑢𝑖</code>表示语料中的第<code>i</code>个词（token）。</p><p>预训练的目标是最大化以下 <em>对数似然函数</em> ：</p><p><img src="https://s2.loli.net/2025/02/26/Bj7uIfTNmEkGO4X.png" alt="image-20250226113732162" style="zoom:50%;" /></p><p>其中，<code>P(ui∣ui−k,...,ui−1;θ)</code>表示在给定前 <code>k</code>个词 <code>ui−k,...,ui−1</code> 的条件下，模型预测下一个词是<code>ui</code>的概率。<code>𝜃</code>表 示模型中的可变参数。</p><hr /><p>概括性地说，上述内容描述一种通过利用前 <code>k</code>个词来预测下一个词的语言模型预训练方法，并通过最大化对数似然函数来优化模型参数。</p><hr /><figure><img src="https://s2.loli.net/2025/02/26/YO7gGNp8KHhRont.png"alt="image-20250226113810162" /><figcaption aria-hidden="true">image-20250226113810162</figcaption></figure><hr /><p>海量训练数据包括互联网网页、维基百科、书籍、GitHub、论文、问答网站等，构建包含数千亿甚至数万亿单词的具有多样性的内容。</p><p>基础大模型构建了 <em>长文本建模能力</em> ，隐含的构建了包括<em>事实性知识</em> 和 <em>常识知识</em> 在内的 <em>世界知识</em>，根据输入的提示 词（Prompt），模型可以 <em>生成文本补全句子</em> 。</p><figure><img src="https://s2.loli.net/2025/02/26/W8wXGeNgiq5uad9.png"alt="image-20250226145843606" /><figcaption aria-hidden="true">image-20250226145843606</figcaption></figure><h2 id="阶段二-有监督微调指令微调">4.4 阶段二 有监督微调/指令微调</h2><p>有监督微调/指令微调。英文全称Supervised Fine-tuning / InstructionTuning。</p><hr /><p>有监督微调（Supervised Fine-tuning，SFT）也称为指令微调（InstructionTuning），在阶段一的模型上继续训练。训练数据为高质量数据集合，包含用户输入的提示词（Prompt）和对应的理想输出结果。用户输入包括问题、闲聊对话、任务指令等多种形式和任务。</p><figure><img src="https://s2.loli.net/2025/02/26/d6hUSRkp57N4Mgl.png"alt="image-20250226104450061" /><figcaption aria-hidden="true">image-20250226104450061</figcaption></figure><hr /><p>提示词（Prompt）：复旦大学有几个校区？</p><p>理想输出：复旦大学现有4个校区，分别是邯郸校区、新江湾校区、枫林校区和张江校区。其中邯郸校区是复旦大学的主校区，邯郸校区与新江湾校区都位于杨浦区，枫林校区位于徐汇区，张江校区位于浦东新区。</p><figure><img src="https://s2.loli.net/2025/02/26/W8wXGeNgiq5uad9.png"alt="image-20250226145843606" /><figcaption aria-hidden="true">image-20250226145843606</figcaption></figure><hr /><p>经过微调后的有监督微调（SFT）模型具备了初步的指令和上下文理解能力，能够完成开放领域问题、阅读理解、翻译、生成代码等能力，也具备了一定的对未知任务的泛化能力。</p><h2 id="阶段三-奖励建模">4.5 阶段三 奖励建模</h2><p>奖励建模，英文全称”Reward Modeling“。</p><hr /><p>奖励建模（Reward Modeling）阶段的目标是构建一个文本质量评估模型。</p><p>奖励建模（Reward Modeling）用来对SFT模型的输出文本进行质量评估。</p><p>为训练得到奖励模型，须人工标注百万量级的样本库，奖励模型的训练过程独立于GPT模型。</p><hr /><p>奖励建模（RewardModeling）阶段的目标是构建一个<strong>文本质量评估模型</strong>。</p><p>把同一个提示词多次传入SFT模型，会得到多个不同输出结果，奖励模型可以对这些结果的质量进行排序。</p><figure><img src="https://s2.loli.net/2025/02/26/f7GXjwoECgRqvxn.png"alt="image-20250226151237593" /><figcaption aria-hidden="true">image-20250226151237593</figcaption></figure><h2 id="阶段四-强化学习">4.6 阶段四 强化学习</h2><p>强化学习。英文全称是”Reinforcement Learning“。</p><hr /><p>强化学习（ReinforcementLearning）阶段是对指令微调（SFT）模型的进一步训练。</p><p>根据数十万用户给出的提示词，SFT模型生成相应输出，然后再利用奖励模型（RM）对这些输出进行质量评估。结合评估结果再对SFT模型 <em>进一步调整</em> ，最终得到ChatGPT。</p><figure><img src="https://s2.loli.net/2025/02/26/W8wXGeNgiq5uad9.png"alt="image-20250226145843606" /><figcaption aria-hidden="true">image-20250226145843606</figcaption></figure><h2 id="chatgpt构建流程回顾">4.7 ChatGPT构建流程回顾</h2><figure><img src="https://s2.loli.net/2025/02/25/GgVRSJF5PAIoWMj.png"alt="image-20250225231419832" /><figcaption aria-hidden="true">image-20250225231419832</figcaption></figure><h2 id="token是什么">4.8 token是什么</h2><p>在模型中被处理的数据单元并不是单词/词语，而是token。</p><hr /><p>token是文本处理过程中的基本单元，通常是指一个单词、标点符号或者是由空格分隔的文本片段。</p><p>token是大模型世界中的“单词”，所有文本都可以由token组合而来。</p><figure><img src="https://s2.loli.net/2025/02/26/MagVuHTK3L1nZWS.png"alt="image-20250226153311380" /><figcaption aria-hidden="true">image-20250226153311380</figcaption></figure><hr /><p>英文语料中1个token约有4个英文字母，100个token约等于75个单词的长度（平均起来大概5.3个英文字母对应一个英文单词）。</p><p>中文里1个token绝大部分情况对应1~2个字，1个字居多。</p><p>大模型的token字典一般跨语种，字典中token数量为十万量级。</p><hr /><p>token从海量语料中统计而来，有不同的统计方法，其一般由高频词和低频词的子词组成。</p><p>token要保留原始文本中单词间的语义关系。</p><p>尽可能避免出现未登录词（即不在训练数据中的词。英文全称Out-Of-Vocabulary，简称OOV），但字典又不能太大。</p><h1 id="五aigc简介">五、AIGC简介</h1><h2 id="aigc是什么">5.1 AIGC是什么</h2><p>AIGC（Artificial Intelligence GeneratedContent）是指利用人工智能技术来生成<strong>全新的</strong>、<strong>逼真的</strong>、<strong>有用的</strong>数据，如文本、图像、音频和视频等，可以在一定程度上模仿人类的创造力和写作风格。</p><p>在此之前的内容生成方式主要为：</p><ol type="1"><li>PGC（Professional GeneratedContent），专家生产内容，如图书、报纸、期刊等。</li><li>UGC（User GeneratedContent），用户生产内容，如微博、公众号、自媒体等。</li></ol><h2 id="aigc作品展示">5.2 AIGC作品展示</h2><figure><img src="https://s2.loli.net/2025/02/26/BdS52EkqgOvDYno.png"alt="image-20250226154138094" /><figcaption aria-hidden="true">image-20250226154138094</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/26/GxhFHbdUPAV6p34.png"alt="image-20250226154301432" /><figcaption aria-hidden="true">image-20250226154301432</figcaption></figure><p>Sora文生视频：https://www.bilibili.com/video/BV1m4421F7Yc/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2</p><h2 id="aigc与大模型的关系">5.3 AIGC与大模型的关系</h2><figure><img src="https://s2.loli.net/2025/02/26/YEwbFnqWCkGMhUV.png"alt="image-20250226154709925" /><figcaption aria-hidden="true">image-20250226154709925</figcaption></figure><ol type="1"><li>大模型为AIGC提供了强大的生成能力：由于大模型具有强大的学习能力和理解能力，因此可以生成更加<strong>丰富</strong>、<strong>多样</strong>和<strong>高质量</strong>的内容，从而推动AIGC的发展。</li><li>AIGC为大模型提供了丰富的应用场景：大模型在AIGC领域的应用非常广泛，包括<strong>文本生成</strong>、<strong>图像生成</strong>、<strong>音乐创作</strong>等。这些应用场景不仅展示了大模型的强大能力，也为大模型的研究和发展提供了实际的需求和动力。</li><li>AIGC与大模型协同进化：随着AIGC应用的不断深入，对大模型的需求也在不断提高，这将推动大模型不断进行技术优化和创新。同时，大模型的进步也将进一步推动AIGC的发展，两者形成了一种协同进化的关系。</li></ol><h2 id="aigc技术特点">5.4 AIGC技术特点</h2><ol type="1"><li>高效自动化。AIGC具有出色的自动化处理能力，能够迅速分析和处理大量数据，并自动生成所需内容，极大地提升了工作效率，减少了人工干预的需求，使得内容生成过程更加快速、准确。</li><li>个性化定制。AIGC具备深度学习和分析用户行为的能力，能够根据用户的个性化需求和偏好，生成定制化的内容，能够更好地满足用户的期望，提升用户体验。</li><li>多媒体形态。与传统的人工智能生成内容主要以文本形式为主不同，AIGC能够生成包括图像、音频、视频等多种形式的多媒体内容，使得AIGC在内容创作上更加灵活多样，能够更好地适应不同的传播渠道和用户需求。</li><li>准确性高。在处理和分析数据时，AIGC展现出了极高的准确性，它能够精确提取关键信息，生成可靠的结论或建议，使得AIGC在决策支持、数据分析等领域具有广泛的应用价值。</li><li>存在误导性。误导性与准确并行，AIGC基于算法和模型进行工作，底层大多是生成式的概率模型，其内容生成具有随机性，并不完全依赖于客观事实，故可能会产生误解、误判或生成不准确的内容。</li></ol><h2 id="中国aigc产业图谱">5.5 中国AIGC产业图谱</h2><p>“2023年中国AIGC产业图谱”即下图，由艾瑞咨询整理，发布于2023年8月。</p><figure><img src="https://s2.loli.net/2025/02/26/BoDrb3Eu6Wtp2dj.png"alt="image-20250226164956303" /><figcaption aria-hidden="true">image-20250226164956303</figcaption></figure><hr /><p>“2024年中国AIGC产业图谱V4.1”即下图，由非凡产研整理，发布于2024年6月4日</p><figure><img src="https://s2.loli.net/2025/02/26/FoLf4GXNTAJO3xR.png"alt="image-20250226164358224" /><figcaption aria-hidden="true">image-20250226164358224</figcaption></figure><h2 id="小结">5.6 小结</h2><ol type="1"><li>AIGC是指利用人工智能技术来生成全新的、逼真的、有用的数据。</li><li>大模型为AIGC提供了强大的生成能力，AIGC为大模型提供了丰富的应用场景。</li><li>AIGC技术具有高效自动化、个性化定制、多媒体形态、准确性高、创新性强、可扩展性好等特点，但并不是万能的，也可能生成具有误导性的内容。</li><li>AIGC技术的前景广阔，随着技术的突破与跨界融合的深入，未来将广泛应用于各行各业。</li></ol>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型与AIGC概述</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>torch1.13.0+cpu中tensor的常用属性与方法</title>
    <link href="/2025/02/28/torch1-13-0-cpu%E4%B8%ADtensor%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%E4%B8%8E%E6%96%B9%E6%B3%95/"/>
    <url>/2025/02/28/torch1-13-0-cpu%E4%B8%ADtensor%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7%E4%B8%8E%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="一构建tensor">一、构建tensor</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#一、构建tensor</span><br><span class="hljs-comment">###PyTorch常用数据类型</span><br><span class="hljs-comment">#官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-comment">#官方API文档： https://pytorch.org/docs/stable/index.html</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###张量（Tensor）：PyTorch网络运算中的基本数据结构（类似ndarray ）</span><br><span class="hljs-comment">###创建张量</span><br><span class="hljs-keyword">import</span> torch<br>a = torch.tensor(<span class="hljs-number">0.1</span>)  <span class="hljs-comment">#此张量只有一个标量元素0.1</span><br>b = torch.tensor(<span class="hljs-number">0.3</span>, dtype=torch.float64)<br><span class="hljs-comment">#执行运算</span><br>result = a + b<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><pre><code class="hljs">tensor(0.4000, dtype=torch.float64)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###创建特定的张量</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-comment"># 全1张量</span><br>ones = torch.ones((<span class="hljs-number">3</span>, <span class="hljs-number">2</span>))                  <br><span class="hljs-comment"># 等差序列张量</span><br>range_tensor = torch.arange(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>, <span class="hljs-number">1</span>)      <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;ones:&#x27;</span>, ones, <span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;range_tensor:&#x27;</span>, range_tensor)<br></code></pre></td></tr></table></figure><pre><code class="hljs">ones: tensor([[1., 1.],        [1., 1.],        [1., 1.]])  range_tensor: tensor([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###tensor与ndarray相互转化</span><br><span class="hljs-keyword">import</span> torch<br>output = torch.zeros((<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), dtype=torch.float32)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1---&gt;&quot;</span>, output)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2---&gt;output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(output)))<br><br>n_output = output.numpy()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3---&gt;n_output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(n_output)))<br><br>t_output = torch.from_numpy(n_output)    <span class="hljs-comment"># 将ndarray转为tensor</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;4---&gt;t_output: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(t_output)))<br></code></pre></td></tr></table></figure><pre><code class="hljs">1---&gt; tensor([[0., 0.],        [0., 0.]])2---&gt;output: &lt;class &#39;torch.Tensor&#39;&gt;3---&gt;n_output: &lt;class &#39;numpy.ndarray&#39;&gt;4---&gt;t_output: &lt;class &#39;torch.Tensor&#39;&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#从变量继承属性创建张量、从numpy创建张量</span><br><span class="hljs-comment">###官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>data = [[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],[<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]]<br>x_data = torch.tensor(data) <span class="hljs-comment">#直接从数据创建一个tensor，数据类型可以被自动推断出来</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1---&gt;x_data:&quot;</span>, x_data)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_data type:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(x_data)))<br>np_array = np.array(data) <span class="hljs-comment">#直接从数据创建一个numpy变量</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;2---&gt;np_array&quot;</span>, np_array)<br>x_np = torch.from_numpy(np_array) <span class="hljs-comment">#从numpy变量创建一个tensor</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;3---&gt;x_np&quot;</span>, x_np)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_np type:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">type</span>(x_np)))<br><br>x_ones = torch.ones_like(x_data)   <span class="hljs-comment"># 根据x_data的创建一个新tensor，新tensor的属性（此处因为没有指定数据类型，所以新tensor数据类型跟x_data也一样。其他属性也是类似规律）跟x_data一样，但数值可以指定为全是1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Ones Tensor: \n <span class="hljs-subst">&#123;x_ones&#125;</span> \n&quot;</span>)<br>x_rand = torch.rand_like(x_data, dtype=torch.<span class="hljs-built_in">float</span>) <span class="hljs-comment"># 根据x_data的创建一个新tensor，形状与原tensor一样，但指定了新的数据类型为torch.float、且它的元素值都是一些随机生成的数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Random Tensor: \n <span class="hljs-subst">&#123;x_rand&#125;</span> \n&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">1---&gt;x_data: tensor([[1, 2],        [3, 4]])x_data type:&lt;class &#39;torch.Tensor&#39;&gt;2---&gt;np_array [[1 2] [3 4]]3---&gt;x_np tensor([[1, 2],        [3, 4]], dtype=torch.int32)x_np type:&lt;class &#39;torch.Tensor&#39;&gt;Ones Tensor:  tensor([[1, 1],        [1, 1]]) Random Tensor:  tensor([[0.0282, 0.8095],        [0.2707, 0.1938]]) </code></pre><p>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#创建随机数张量</span><br><span class="hljs-comment">###官方教程： https://pytorch.org/tutorials/beginner/basics/tensorqs_tutorial.html</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>tensor = torch.rand(<span class="hljs-number">4</span>, <span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;First row: <span class="hljs-subst">&#123;tensor[<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;First column: <span class="hljs-subst">&#123;tensor[:, <span class="hljs-number">0</span>]&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Last column: <span class="hljs-subst">&#123;tensor[..., -<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br>tensor[:,<span class="hljs-number">1</span>] = <span class="hljs-number">0</span><br><span class="hljs-built_in">print</span>(tensor)<br></code></pre></td></tr></table></figure><pre><code class="hljs">First row: tensor([0.1094, 0.4258, 0.9837, 0.3118])First column: tensor([0.3335, 0.1094, 0.4532, 0.2374])Last column: tensor([0.7949, 0.3118, 0.5406, 0.5577])tensor([[0.3335, 0.0000, 0.1649, 0.7949],        [0.1094, 0.0000, 0.9837, 0.3118],        [0.4532, 0.0000, 0.6070, 0.5406],        [0.2374, 0.0000, 0.7951, 0.5577]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#二、tensor属性</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#tensor.data用法</span><br><span class="hljs-keyword">import</span> torch<br>t = torch.tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]], dtype=torch.float32)<br><span class="hljs-built_in">print</span>(t)<br><span class="hljs-built_in">print</span>(t.data) <span class="hljs-comment">#在 PyTorch 中，torch.tensor.data 是一个 属性，用于访问张量的底层数据（即存储张量值的实际内存）。它返回一个与原始张量共享相同存储的新张量，但 不参与自动求导（即不跟踪计算历史）。</span><br><span class="hljs-built_in">print</span>(t.data.numpy())  <span class="hljs-comment">#numpy() 方法将 PyTorch 张量转换为 NumPy 数组。转换后的 NumPy 数组与原始张量共享存储，因此修改 NumPy 数组会影响原始张量。</span><br><span class="hljs-built_in">print</span>(t.data.numpy().argmax(axis=<span class="hljs-number">1</span>))  <span class="hljs-comment">#argmax() 是 NumPy 数组的方法，用于返回沿指定轴的最大值的索引。axis=1 表示沿着第 1 轴（即行方向）查找最大值的索引。</span><br><br>x = torch.tensor([<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>], requires_grad=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(x)<br><span class="hljs-built_in">print</span>(x.data)<br></code></pre></td></tr></table></figure><pre><code class="hljs">tensor([[1., 2.],        [3., 4.]])tensor([[1., 2.],        [3., 4.]])[[1. 2.] [3. 4.]][1 1]tensor([1., 2., 3.], requires_grad=True)tensor([1., 2., 3.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#三、tensor方法 </span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#在 PyTorch 中，torch.tensor.mean() 是一个用于计算张量中所有元素平均值的方法。它可以沿着指定的维度计算平均值，也可以计算整个张量的平均值。</span><br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>tensor = torch.tensor([[<span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">7</span>]], dtype=torch.float64)<br><span class="hljs-built_in">print</span>(tensor)<br>tensor.mean()<br></code></pre></td></tr></table></figure><pre><code class="hljs">tensor([[2., 3.],        [4., 5.],        [6., 7.]], dtype=torch.float64)tensor(4.5000, dtype=torch.float64)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><h1 id="section"></h1>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tensor的常用属性与方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>已成功部署满血版DeepSeek-R1-671B,可承接咨询或部署业务</title>
    <link href="/2025/02/26/%E5%B7%B2%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2%E6%BB%A1%E8%A1%80%E7%89%88DeepSeek-R1-671B-%E5%8F%AF%E6%89%BF%E6%8E%A5%E5%92%A8%E8%AF%A2%E6%88%96%E9%83%A8%E7%BD%B2%E4%B8%9A%E5%8A%A1/"/>
    <url>/2025/02/26/%E5%B7%B2%E6%88%90%E5%8A%9F%E9%83%A8%E7%BD%B2%E6%BB%A1%E8%A1%80%E7%89%88DeepSeek-R1-671B-%E5%8F%AF%E6%89%BF%E6%8E%A5%E5%92%A8%E8%AF%A2%E6%88%96%E9%83%A8%E7%BD%B2%E4%B8%9A%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一可承接咨询或部署业务">一、可承接咨询或部署业务</h1><h2 id="声明">声明</h2><p>本人成功在4台服务器成功部署满血版DeepSeek-R1-671B，相关信息简介如下，现可承接咨询指导或部署业务订单，部署过程正在逐步优化完善，大家可相互一起学习。以下有部署成功后的相关内容展示。</p><h2id="满血版deepseek-r1-671b内容展示">满血版DeepSeek-R1-671B内容展示</h2><h3 id="ray集群状态">Ray集群状态</h3><figure><img src="https://s2.loli.net/2025/02/26/bsPtS84kB67Gdvr.png"alt="image-20250226093654893" /><figcaption aria-hidden="true">image-20250226093654893</figcaption></figure><h3 id="production-metrics">Production Metrics</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek2:~$ curl http://10.119.85.138:8000/metrics<br>...<br>540    0     # TYPE python_gc_objects_collected_total counter<br>0  7756k   python_gc_objects_collected_total&#123;generation=&quot;0&quot;&#125; 37427.0<br>   0 --:python_gc_objects_collected_total&#123;generation=&quot;1&quot;&#125; 14232.0<br>--:-- --:--:-- python_gc_objects_collected_total&#123;generation=&quot;2&quot;&#125; 16818.0<br>--:--:-- 9615k<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP python_gc_objects_uncollectable_total Uncollectable objects found during GC</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE python_gc_objects_uncollectable_total counter</span><br>python_gc_objects_uncollectable_total&#123;generation=&quot;0&quot;&#125; 0.0<br>python_gc_objects_uncollectable_total&#123;generation=&quot;1&quot;&#125; 0.0<br>python_gc_objects_uncollectable_total&#123;generation=&quot;2&quot;&#125; 0.0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP python_gc_collections_total Number of <span class="hljs-built_in">times</span> this generation was collected</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE python_gc_collections_total counter</span><br>python_gc_collections_total&#123;generation=&quot;0&quot;&#125; 3033.0<br>python_gc_collections_total&#123;generation=&quot;1&quot;&#125; 267.0<br>python_gc_collections_total&#123;generation=&quot;2&quot;&#125; 315.0<br>...<br></code></pre></td></tr></table></figure><h3 id="openai-api接口测试">openai API接口测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 10.119.85.138 是deepseek2节点的IB网卡IP</span><br>(self-llm) deepseek@deepseek2:~$ curl 10.119.85.138:8000/v1/models -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot; | jq  <br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出内容如下</span><br><span class="hljs-meta prompt_">  % </span><span class="language-bash">Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br>                                 Dload  Upload   Total   Spent    Left  Speed<br>100   523  100   523    0     0   105k      0 --:--:-- --:--:-- --:--:--  127k<br>&#123;<br>  &quot;object&quot;: &quot;list&quot;,<br>  &quot;data&quot;: [<br>    &#123;<br>      &quot;id&quot;: &quot;DeepSeek-R1-671B&quot;,<br>      &quot;object&quot;: &quot;model&quot;,<br>      &quot;created&quot;: 1740405511,<br>      &quot;owned_by&quot;: &quot;vllm&quot;,<br>      &quot;root&quot;: &quot;/root/.cache/huggingface/hub/models/unsloth/DeepSeek-R1-BF16/&quot;,<br>      &quot;parent&quot;: null,<br>      &quot;max_model_len&quot;: 32768,<br>      &quot;permission&quot;: [<br>        &#123;<br>          &quot;id&quot;: &quot;modelperm-ced685e8156b4618b593580109205165&quot;,<br>          &quot;object&quot;: &quot;model_permission&quot;,<br>          &quot;created&quot;: 1740405511,<br>          &quot;allow_create_engine&quot;: false,<br>          &quot;allow_sampling&quot;: true,<br>          &quot;allow_logprobs&quot;: true,<br>          &quot;allow_search_indices&quot;: false,<br>          &quot;allow_view&quot;: true,<br>          &quot;allow_fine_tuning&quot;: false,<br>          &quot;organization&quot;: &quot;*&quot;,<br>          &quot;group&quot;: null,<br>          &quot;is_blocking&quot;: false<br>        &#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>同时在vllm serve命令执行的窗口会看到如下输出内容</p><figure><img src="https://s2.loli.net/2025/02/24/F3td4gkAeSfwijK.png"alt="image-20250224215955409" /><figcaption aria-hidden="true">image-20250224215955409</figcaption></figure><h3 id="服务功能验证">服务功能验证</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) deepseek@deepseek2:~$ curl -X POST &quot;http://10.119.85.138:8000/v1/chat/completions&quot; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot;  -d &#x27;&#123; &quot;model&quot;: &quot;DeepSeek-R1-671B&quot;, &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;你好&quot;&#125;]&#125;&#x27;<br>    <br>(self-llm) deepseek@deepseek2:~$ curl -X POST &quot;http://10.119.85.138:8000/v1/chat/completions&quot; -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: Bearer zY0MrQwXV9Oo3g==&quot;  -d &#x27;&#123; &quot;model&quot;: &quot;DeepSeek-R1-671B&quot;, &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;请证明勾股定理&quot;&#125;]&#125;&#x27;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">回答</span><br>&#123;&quot;id&quot;:&quot;chatcmpl-11ae1ddf321343af848b5c683e67b72d&quot;,&quot;object&quot;:&quot;chat.completion&quot;,&quot;created&quot;:1740411348,&quot;model&quot;:&quot;deepseek-r1&quot;,&quot;choices&quot;:[&#123;&quot;index&quot;:0,&quot;message&quot;:&#123;&quot;role&quot;:&quot;assistant&quot;,&quot;reasoning_content&quot;:null,&quot;content&quot;:&quot;&lt;think&gt;\n嗯，用户让我证明勾股定理。勾股定理是数学里非常基础但又重要的定理，肯定有很多不同的证明方法。先回忆一下，勾股定理是说在直角三角形中，斜边的平方等于两条直角边的平方和，也就是a² + b² = c²。现在得选一<br>种合适的证明方式，可能是几何的或者代数的。\n\n首先想到的是几何证明中的拼接法，通过将四个直角三角形拼成一个大的正方形，然后比较面积。我要不要试试这个方法？比如说，四个全等的直角三角形，设它们的直角边为a和b，<br>斜边为c，拼起来的话中间应该会形成一个边长为（a+b）的正方形，中间的空隙可能是小正方形，边长是c或者别的？\n\n不对，应该会形成一个边长为c的正方形，或者这个？等一下，可能得仔细画个图想象一下。假设我们把四个三角<br>形每个的直角边朝外，那斜边就会组成里面的一个正方形，这时候<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">回答问题的同时在vllm serve命令执行的窗口会看到如下，显示token平均生成吞吐率</span><br>INFO 02-24 17:21:12 metrics.py:455] Avg prompt throughput: 1.6 tokens/s, Avg generation throughput: 36.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.<br>INFO 02-24 17:21:17 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 37.2 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.<br>INFO 02-24 17:21:22 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 36.5 tokens/s, Running: 1 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.1%, CPU KV cache usage: 0.0%.<br>...<br><span class="hljs-meta prompt_">#</span><span class="language-bash">甚至更高速度</span><br>INFO 02-24 23:32:00 metrics.py:455] Avg prompt throughput: 442.9 tokens/s, Avg generation throughput: 38.8 tokens/s, Running: 3 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.4%, CPU KV cache usage: 0.0%.<br>INFO 02-24 23:32:05 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 102.4 tokens/s, Running: 3 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.4%, CPU KV cache usage: 0.0%.<br>INFO 02-24 23:32:07 async_llm_engine.py:179] Finished request chatcmpl-03add50cba264c84afe98fd6cce9907f.<br>INFO 02-24 23:32:10 metrics.py:455] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 79.4 tokens/s, Running: 2 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.3%, CPU KV cache usage: 0.0%.<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">apt install nvtop</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ nvtop<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如下是`nvtop`命令输出</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/26/Z5zyE3Opj8dUtxl.png"alt="image-20250226093914412" /><figcaption aria-hidden="true">image-20250226093914412</figcaption></figure><h3 id="open-webui会话界面">open-webui会话界面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 10.119.85.138 是deepseek2节点的IB网卡IP</span><br>(self-llm) deepseek@deepseek2:~$ curl http://10.119.85.138:18080<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或在浏览器中直接访问上述地址。第一个注册的用户，默认就是管理员。注册后登录、提问</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/25/u9lErBStzK3sULx.png"alt="image-20250225154520858" /><figcaption aria-hidden="true">image-20250225154520858</figcaption></figure><h1 id="二成功部署所用硬软件">二、成功部署所用硬软件</h1><h2 id="服务器信息">服务器信息</h2><figure><img src="https://s2.loli.net/2025/02/26/fw78TozsM5AijvF.png"alt="image-20250226093523439" /><figcaption aria-hidden="true">image-20250226093523439</figcaption></figure><p>注：</p><p>（1）其中的万兆网卡部署过程中没有用到。</p><p>（2）NVIDIA A800的信息如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs shell">deepseek@deepseek1:~$ nvidia-smi <br>Fri Feb 21 09:25:35 2025       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA A800-SXM4-80GB          On  |   00000000:3D:00.0 Off |                    0 |<br>| N/A   33C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   1  NVIDIA A800-SXM4-80GB          On  |   00000000:42:00.0 Off |                    0 |<br>| N/A   29C    P0             58W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   2  NVIDIA A800-SXM4-80GB          On  |   00000000:61:00.0 Off |                    0 |<br>| N/A   30C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   3  NVIDIA A800-SXM4-80GB          On  |   00000000:67:00.0 Off |                    0 |<br>| N/A   33C    P0             64W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   4  NVIDIA A800-SXM4-80GB          On  |   00000000:AD:00.0 Off |                    0 |<br>| N/A   32C    P0             57W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   5  NVIDIA A800-SXM4-80GB          On  |   00000000:B1:00.0 Off |                    0 |<br>| N/A   29C    P0             61W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   6  NVIDIA A800-SXM4-80GB          On  |   00000000:D0:00.0 Off |                    0 |<br>| N/A   30C    P0             62W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>|   7  NVIDIA A800-SXM4-80GB          On  |   00000000:D3:00.0 Off |                    0 |<br>| N/A   32C    P0             60W /  400W |       1MiB /  81920MiB |      0%      Default |<br>|                                         |                        |             Disabled |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|  No running processes found                                                             |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><h2 id="软件信息">软件信息</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">物理服务器操作系统：Ubuntu</span> <span class="hljs-number">22.04</span><span class="hljs-number">.4</span> <span class="hljs-string">LTS-x86_64</span><br><span class="hljs-attr">Nvidia driver version:</span> <span class="hljs-number">550.90</span><span class="hljs-number">.07</span><br><span class="hljs-attr">CUDA runtime version:</span> <span class="hljs-number">12.1</span><span class="hljs-number">.105</span><span class="hljs-string">(node容器内)、V12.4.99(物理服务器上)</span><br><span class="hljs-string">nvidia-fabricmanager版本：550.90.07</span><br><span class="hljs-string">nvlink：3.0</span><br><span class="hljs-string">nvswitch：2.0</span><br><br><span class="hljs-attr">PyTorch version:</span> <span class="hljs-number">2.5</span><span class="hljs-number">.1</span><span class="hljs-string">+cu124</span><br><span class="hljs-attr">CUDA used to build PyTorch:</span> <span class="hljs-number">12.4</span><br><span class="hljs-attr">OS:</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-number">22.04</span><span class="hljs-number">.3</span> <span class="hljs-string">LTS</span> <span class="hljs-string">(x86_64)</span><br><span class="hljs-attr">GCC version:</span> <span class="hljs-string">(Ubuntu</span> <span class="hljs-number">11.4</span><span class="hljs-number">.0</span><span class="hljs-string">-1ubuntu1~22.04)</span> <span class="hljs-number">11.4</span><span class="hljs-number">.0</span><br><span class="hljs-attr">CMake version:</span> <span class="hljs-string">version</span> <span class="hljs-number">3.31</span><span class="hljs-number">.4</span><br><span class="hljs-attr">Libc version:</span> <span class="hljs-string">glibc-2.35</span><br><span class="hljs-attr">Python version:</span> <span class="hljs-number">3.12</span><span class="hljs-number">.9</span> <span class="hljs-string">(main,</span> <span class="hljs-string">Feb</span>  <span class="hljs-number">5</span> <span class="hljs-number">2025</span><span class="hljs-string">,</span> <span class="hljs-number">08</span><span class="hljs-string">:49:00)</span> [<span class="hljs-string">GCC</span> <span class="hljs-number">11.4</span><span class="hljs-number">.0</span>] <span class="hljs-string">(64-bit</span> <span class="hljs-string">runtime)</span><br><span class="hljs-attr">Python platform:</span> <span class="hljs-string">Linux-5.15.0-113-generic-x86_64-with-glibc2.35</span><br><span class="hljs-attr">Is CUDA available:</span> <span class="hljs-literal">True</span><br><br><span class="hljs-attr">CUDA_MODULE_LOADING set to:</span> <span class="hljs-string">LAZY</span><br><span class="hljs-attr">Is XNNPACK available:</span> <span class="hljs-literal">True</span><br><span class="hljs-attr">CPU:</span> <span class="hljs-string">Intel(R)</span> <span class="hljs-string">Xeon(R)</span> <span class="hljs-string">Gold</span> <span class="hljs-number">6348 </span><span class="hljs-string">CPU</span> <span class="hljs-string">@</span> <span class="hljs-number">2.</span><span class="hljs-string">60GHz,</span> <span class="hljs-number">112</span><span class="hljs-string">核心</span><br><span class="hljs-string">numpy==1.26.4</span><br><span class="hljs-string">torch==2.5.1</span><br><span class="hljs-string">torchaudio==2.5.1</span><br><span class="hljs-string">torchvision==0.20.1</span><br><span class="hljs-string">triton==3.1.0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>满血版DeepSeek-R1-671B</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu2204LTS-x86_64安装Cuda12.4</title>
    <link href="/2025/02/21/Ubuntu2204LTS-x86-64%E5%AE%89%E8%A3%85Cuda12-4/"/>
    <url>/2025/02/21/Ubuntu2204LTS-x86-64%E5%AE%89%E8%A3%85Cuda12-4/</url>
    
    <content type="html"><![CDATA[<p>安装Cuda之前需要保证NVIDIA驱动安装好。Cuda安装可参考NVIDIA官方文档：<ahref="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#ubuntu">cuda-installation-guide-linux</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">服务器拿到手时，发现已经安装了Cuda11.5.119</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##如果要使用apt安装nvcc（此方式在Ubuntu22.04LTS上安装的是Cuda11.5.119）：sudo apt install nvidia-cuda-toolkit</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有nvcc版本</span><br>deepseek@deepseek1:~/installPkgs$ nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2021 NVIDIA Corporation<br>Built on Thu_Nov_18_09:45:30_PST_2021<br>Cuda compilation tools, release 11.5, V11.5.119<br>Build cuda_11.5.r11.5/compiler.30672275_0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##卸载现有的Cuda11.5.119：</span></span><br>deepseek@deepseek1:~/installPkgs$ sudo apt remove nvidia-cuda-toolkit<br></code></pre></td></tr></table></figure><p>我想改成使用Cuda12.4。访问<ahref="https://developer.nvidia.com/cuda-12-4-0-download-archive">NVIDIA官网cuda安装文件下载网页</a>，依次选择如下选项找到下载与安装命令：</p><figure><img src="https://s2.loli.net/2025/02/21/iv6oBq75Rr8EzDO.png"alt="image-20250221172033572" /><figcaption aria-hidden="true">image-20250221172033572</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载安装文件</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ wget https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.run<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行安装</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo sh cuda_12.4.0_550.54.14_linux.run<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在弹出对话中输入“accept”接受条款，然后如下选择</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2025/02/21/i8vKNVPkExZjD65.png" alt="image-20250221173309528" style="zoom:50%;" /></p><figure><img src="https://s2.loli.net/2025/02/22/s8wCKUVEL2Sphna.png"alt="image-20250222162736130" /><figcaption aria-hidden="true">image-20250222162736130</figcaption></figure><p>安装进程完成后，输出如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">===========<br>= Summary =<br>===========<br><br>Driver:   Not Selected<br>Toolkit:  Installed in /usr/local/cuda-12.4/<br><br>Please make sure that<br> -   PATH includes /usr/local/cuda-12.4/bin<br> -   LD_LIBRARY_PATH includes /usr/local/cuda-12.4/lib64, or, add /usr/local/cuda-12.4/lib64 to /etc/ld.so.conf and run ldconfig as root<br><br>To uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-12.4/bin<br>***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 550.00 is required for CUDA 12.4 functionality to work.<br>To install the driver using this installer, run the following command, replacing &lt;CudaInstaller&gt; with the name of this run file:<br>    sudo &lt;CudaInstaller&gt;.run --silent --driver<br><br>Logfile is /var/log/cuda-installer.log<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">发现系统已经创建软链接/usr/local/cuda，指向/usr/local/cuda-12.4/。后续使用此软链接</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ ls -al /usr/local/cuda<br>lrwxrwxrwx 1 root root 21 Feb 21 17:55 /usr/local/cuda -&gt; /usr/local/cuda-12.4/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">按照提示修改系统环境变量PATH、LD_LIBRARY_PATH</span><br>(self-llm) deepseek@deepseek1:~/installPkgs$ sudo vi /etc/profile<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##在最后添加如下内容</span></span><br>export PATH=$PATH:/usr/local/cuda/bin/<br>export LD_LIBRARY_PATH=/usr/local/cuda/lib64/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新打一个终端会话窗口或重新加载上述文件以启用上述两个修改或添加的系统环境变量</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载上述文件的方法：<span class="hljs-built_in">source</span> /etc/profile</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下以重新打一个终端会话窗口为例继续后续操作</span><br>(base) deepseek@deepseek1:~$ conda activate self-llm<br>(self-llm) deepseek@deepseek1:~$ echo $PATH<br>/home/deepseek/anaconda3/envs/self-llm/bin:/home/deepseek/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/cuda/bin<br>(self-llm) deepseek@deepseek1:~$ echo $LD_LIBRARY_PATH  <br>/usr/local/cuda/lib64/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到当前使用的Cuda版本已经是V12.4.99</span><br>(self-llm) deepseek@deepseek1:~$ nvcc -V<br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2024 NVIDIA Corporation<br>Built on Tue_Feb_27_16:19:38_PST_2024<br>Cuda compilation tools, release 12.4, V12.4.99<br>Build cuda_12.4.r12.4/compiler.33961263_0<br>(self-llm) deepseek@deepseek1:~$ <br></code></pre></td></tr></table></figure><h2 id="section"></h2>]]></content>
    
    
    <categories>
      
      <category>NVIDIA生态</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安装Cuda12.4</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>试用腾讯云应用快速部署DeepSeek服务</title>
    <link href="/2025/02/19/%E8%AF%95%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2DeepSeek%E6%9C%8D%E5%8A%A1/"/>
    <url>/2025/02/19/%E8%AF%95%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2DeepSeek%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="一产品说明与计费">一、产品说明与计费</h1><h2 id="产品说明">1.1 产品说明</h2><p>腾讯云提供高性能应用服务（HAI）和云服务器（CVM）两种类型算力以应用部署的形式来部署算力，但上面腾讯也同时提供了使用此算力其他应用，可以在上面使用云服务器部署自己DeepSeek服务、使用用算力进行软件研发等，算是SaaS产品。</p><p>目前，腾讯云已提供CloudStudio、云原生构建、HAI、API接口、知识引擎等多种接入方式。本着体验高速稳定DeepSeek的初衷，自己对此产品的简单试用了下，下面是试用记录。</p><h2 id="软件计费说明">1.2 软件计费说明</h2><p>软件免费，云资源按消耗收费。云资源费用按运行软件产生的消耗进行收取，资源定价可在应用安装页查看详情。</p><ul><li>高性能应用服务 HAI 单价，参考<ahref="https://buy.cloud.tencent.com/hai">高性能应用服务 HAI单价</a></li><li>高性能应用服务详细计费说明，请参考高性能应用<ahref="https://cloud.tencent.com/document/product/1721/101029">服务计费</a>概述文档</li><li>云服务器（CVM）单价，参考<ahref="https://buy.cloud.tencent.com/price/cvm/calculator">价格计算器</a></li></ul><h1 id="二产品体验与使用步骤">二、产品体验与使用步骤</h1><h2 id="进入腾讯云deepseek-的商品页面">2.1 进入腾讯云DeepSeek的商品页面</h2><p>进入 <ahref="https://app.cloud.tencent.com/detail/SPU_BHDIEHIJCA8003">腾讯云DeepSeek的商品页面</a> ，使用微信扫码或直接用账号登录腾讯云网页。</p><figure><img src="https://s2.loli.net/2025/02/19/6ezhUc3LfTtxAbI.png"alt="image-20250219213654060" /><figcaption aria-hidden="true">image-20250219213654060</figcaption></figure><h2 id="进入安装页面">2.2 进入安装页面</h2><p>单击上图中的“安装应用”按钮，进入安装页面</p><figure><img src="https://s2.loli.net/2025/02/19/AHeYN1piyJzTQbn.png"alt="image-20250219214019256" /><figcaption aria-hidden="true">image-20250219214019256</figcaption></figure><p>（1）应用名称可自定义。此处使用默认</p><p>（2）选择算力类型。关于上图中算力类型的说明如下，两种算力类型提供的DeepSeek 服务有所差异，对比如下：</p><table style="width:100%;"><thead><tr><th>对比项</th><th>高性能应用服务（HAI）</th><th>云服务器（CVM）</th></tr></thead><tbody><tr><td>库存</td><td>提供机型调度能力，指定算力匹配机型，在库存紧张的情况下调度成功概率更高。</td><td>用户自主选择机型，库存紧张时，需要在不同的可用区和机型之间重试。</td></tr><tr><td>模型</td><td><strong>内置模型版本：</strong><br/>deepseek-r1:1.5b<br/>deepseek-r1:7b<br/>deepseek-r1:8b<br/>deepseek-r1:14b<br/>deepseek-r1:32b</td><td><strong>内置模型版本：</strong><br/>deepseek-r1:7b<br/>deepseek-r1:32b<br/>deepseek-r1:70b</td></tr><tr><td>组件</td><td><strong>内置组件：</strong><br/>Open WebUI（6699 端口）<br/>ChatbotUI（6889 端口）<br/>Jupyter Lab（6888 端口）</td><td><strong>内置组件：</strong><br/>Open WebUI (8080 端口)<br/>OllamaAPI (11434 端口，内网访问)</td></tr><tr><td>网络</td><td>公网访问：支持（含学术加速）。<br />内网访问：走云联网打通。</td><td>公网访问：支持<br />内网访问：支持，VPC 内互访。</td></tr><tr><td>登录</td><td><strong>登录到容器进程，支持的登录方式：</strong><br />CloudStudio（类似 VSCode 体验）<br />OrcaTerm(密码登录)<br />SSH（密码登录）</td><td><strong>登录到云服务器，支持的登录方式：</strong><br />OrcaTerm(免密登录)<br />SSH (密码或密钥登录)</td></tr></tbody></table><p>（3）选择部署地域，此处选择广州</p><p>（4）选择算力方案。笔者看到有3种类型可选，配置越高，单价越高。此处试用选择GPU基础型，单价1.2元/小时</p><figure><img src="https://s2.loli.net/2025/02/19/AdCLzgV4BarxToj.png"alt="image-20250219214600666" /><figcaption aria-hidden="true">image-20250219214600666</figcaption></figure><p>（5）角色授权，我使用是个人实名账户登录，只有一个可选。</p><p>（6）最后点击“下一步：确认资源”按钮，进入资源确认页面，确认后续资源消耗清单</p><h2 id="确认订单信息">2.3 确认订单信息</h2><figure><img src="https://s2.loli.net/2025/02/19/TrWsnklZG9L4iPz.png"alt="image-20250219215339506" /><figcaption aria-hidden="true">image-20250219215339506</figcaption></figure><p>（1）“授权”单选框中尝试选中，在弹出窗口中选择“同意授权”</p><p>（2）然后点击“下一步：安装应用”按钮，以安装部署应用。</p><h2 id="等待应用安装部署完成">2.4 等待应用安装部署完成</h2><p>接下来进入如下“安装部署应用”页面，等待应用安装部署完成。</p><figure><img src="https://s2.loli.net/2025/02/19/JriRuN8f1UMAFQp.png"alt="image-20250219215652012" /><figcaption aria-hidden="true">image-20250219215652012</figcaption></figure><h2 id="应用概览界面">2.5 应用概览界面</h2><p>应用部署完成后进入应用概览界面，看到如图界面内容。</p><figure><img src="https://s2.loli.net/2025/02/19/h2TbeCHQ81Fa9cu.png"alt="image-20250219220841011" /><figcaption aria-hidden="true">image-20250219220841011</figcaption></figure><h2 id="打开应用-模型会话界面">2.6 打开应用-模型会话界面</h2><p>点击上图右上角的“打开应用”按钮，跳转到 Web 界面跟模型对话</p><figure><img src="https://s2.loli.net/2025/02/19/4fTIKUuyA9EqdbG.png"alt="image-20250219221053479" /><figcaption aria-hidden="true">image-20250219221053479</figcaption></figure><p>点击上图底部的“开始使用”按钮，将跳转到“Open WebUI”认证页面</p><h2 id="openwebui认证页面注册">2.7 OpenWebUI认证页面注册</h2><p>在“Open WebUI”认证页面，输入用户名、邮箱与密码进行注册。</p><figure><img src="https://s2.loli.net/2025/02/19/gis7IqDYaLHcCr3.png"alt="image-20250219221335773" /><figcaption aria-hidden="true">image-20250219221335773</figcaption></figure><p>注册成功（根据提示，此注册信息只会保存在本地托管的服务器上）后，将跳转到会话界面。</p><h2 id="选择模型进行会话">2.8 选择模型进行会话</h2><p>在模型会话界面，选择模型并进行会话</p><figure><img src="https://s2.loli.net/2025/02/19/86nFk3fJUwNZ5ct.png"alt="image-20250219221746434" /><figcaption aria-hidden="true">image-20250219221746434</figcaption></figure><p>（1）可以看到，有DeepSeek-R1模型的多个参数版本可供选择，最高参数版本是32B</p><h2 id="openwebui界面会话效果">2.9 OpenWebUI界面会话效果</h2><figure><img src="https://s2.loli.net/2025/02/19/dbSNrxtHqDypom4.png"alt="image-20250219222312804" /><figcaption aria-hidden="true">image-20250219222312804</figcaption></figure><p>回答问题速度不错，体验还行。</p><h2 id="应用管理与应用资源">2.10 应用管理与应用资源</h2><p>在第2.5步的应用概览界面，可以查看“应用资源”信息</p><figure><img src="https://s2.loli.net/2025/02/19/axrbZHqP8SlEMjN.png"alt="image-20250219222439742" /><figcaption aria-hidden="true">image-20250219222439742</figcaption></figure><p>还可以查看“应用信息”信息</p><figure><img src="https://s2.loli.net/2025/02/19/i1vfNhcjBwXK2bU.png"alt="image-20250219222633420" /><figcaption aria-hidden="true">image-20250219222633420</figcaption></figure><p>（1）“应用信息”页面底部，有多个功能使用说明，如“在内网使用 Ollama API使用 DeepSeek 模型”、“开启 API 鉴权”、“更改 WebUI 端口”</p><p>（2）点击“CloudStudio”对应的链接，将进入<strong>CloudStudio</strong>使用界面，看界面跟VScode很像</p><figure><img src="https://s2.loli.net/2025/02/19/wPvSKLpmFgxGlBq.png"alt="image-20250219222919680" /><figcaption aria-hidden="true">image-20250219222919680</figcaption></figure><p>（3）点击“HAI 控制台”对应链接，将进入HAI 控制台界面，如下：</p><p>可以对服务器进行管理：</p><figure><img src="https://s2.loli.net/2025/02/19/CZIbXDOB4w83U5t.png"alt="image-20250219223202794" /><figcaption aria-hidden="true">image-20250219223202794</figcaption></figure><p>还有算力连接的便捷打开方式：</p><figure><img src="https://s2.loli.net/2025/02/19/8SbiOajVBAKJNXE.png"alt="image-20250219223252830" /><figcaption aria-hidden="true">image-20250219223252830</figcaption></figure><p>（3）点击“DeepSeek 对话”对应的链接，就跳转到第6步中的“OpenWebUI模型会话界面”</p><p>（4）点击“ChatbotUI”对应的链接，将跳转到“ChatbotUI模型会话界面”，如下：</p><figure><img src="https://s2.loli.net/2025/02/19/fwhnUSA2IOM1vHl.png"alt="image-20250219222145222" /><figcaption aria-hidden="true">image-20250219222145222</figcaption></figure><h2 id="关机">2.11 关机</h2><p>关机后计算资源不计费，只收取少量磁盘费用。</p><figure><img src="https://s2.loli.net/2025/02/19/rTROD1sxEm2QHZ3.png"alt="image-20250219223719727" /><figcaption aria-hidden="true">image-20250219223719727</figcaption></figure><h2 id="销毁应用">2.12 销毁应用</h2><p>如果确定不需要了，可以销毁应用</p><figure><img src="https://s2.loli.net/2025/02/19/K1W65NSFZvL2RYk.png"alt="image-20250219225109895" /><figcaption aria-hidden="true">image-20250219225109895</figcaption></figure><h2 id="试用期间产生的费用">2.13 试用期间产生的费用</h2><p>笔者创建应用后使用了半个小时左右，期间使用OpenWebUI与Chatbox提了四五个简单问题均得到正常回复，然后关机。最后被收取的费用是0.78元。由于自己的腾讯云账户内没有充值，19日晚上大概22点左右创建的应用服务，20日提示欠费并警告未支付将释放应用服务，21日中午由于未支付所以此应用服务最终被释放。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>腾讯云应用快速部署DeepSeek服务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地微调DeepSeek-R1-8b模型</title>
    <link href="/2025/02/13/%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83DeepSeek-R1-8b%E6%A8%A1%E5%9E%8B/"/>
    <url>/2025/02/13/%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83DeepSeek-R1-8b%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一文档说明与服务器准备">一、文档说明与服务器准备</h1><h2 id="文档说明">1.1 文档说明</h2><p>本文已经将相关问题如下载模型大文件、操作过程中相关python库版本问题、wandb认证问题等解决，并记录在此文档中。</p><p>这是一篇保姆级别的"微调DeepSeek-R1-Distill-Llama-8B模型"的操作文章，只要稍微懂点计算机软件知识就可以成功复现此文章中所述内容。</p><p>此文档中使用到了NVIDIAA40，如果GPU显存或算力更低，可以尝试使用更少参数版本DeepSeek-R1蒸馏模型比如1.5B，它仅靠CPU就可以运行。</p><h2 id="服务器与gpu准备">1.2 服务器与GPU准备</h2><p>此次使用的服务器是一个x86_64构架的Hygon C865380物理服务器，具体信息如下：</p><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>controller01</td><td>172.20.0.21</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>32c64g+960G</td><td>NVIDIA A40*1</td><td></td></tr></tbody></table><p>相关重要软件版本（后面3个是python库的版本，建议使用conda创建一个虚拟环境并安装此版本。在其他软件版本固定的情况下，unsloth使用2025.2.5之外的版本就报错）：</p><ul><li><p>GPU驱动版本：550.54.15</p></li><li><p>Cuda版本：V12.4.131</p></li><li><p>torch版本：2.6.0</p></li><li><p>transformers版本：4.48.3</p></li><li><p>unsloth版本：2025.2.5</p></li></ul><h2 id="大模型微调定义">1.3 大模型微调定义</h2><p>利用特定领域的数据集对已预训练的大模型进行进一步训练的过程。它旨在优化模型在特定任务上的性能，使模型能够更好地适应和完成特定领域的任务。其中最重要的是超参数（如学习率、批次大小和训练轮次）调整优化。转成大白话就是调整大模型中一些参数的值，使其在特定数据集上表现更优秀。</p><h1 id="二相关文件下载">二、相关文件下载</h1><h2 id="模型文件下载">2.1 模型文件下载</h2><p>本来是想去huggingface上下载相关模型文件与数据集，由于huggingface需要梯子才能访问，不便操作。所以此文档中是在国内网络可正常访问魔搭平台上下载模型与数据集。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">访问魔搭：https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Llama-8B/files</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">不指定--local_dir 参数，文件将被保存在用户根目录下的.cache子目录下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">模型总大小在16G左右</span><br>root@t1-gpu:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# modelscope download --model unsloth/DeepSeek-R1-Distill-Llama-8B --local_dir ./<br></code></pre></td></tr></table></figure><h2 id="训练数据集文件下载">2.2 训练数据集文件下载</h2><p>访问魔搭，搜索“medical-o1-reasoning-SFT”数据集并下载（此处会有两个同名数据集，但上传者不同，我选择了下载量更大的https://modelscope.cn/datasets/AI-ModelScope/medical-o1-reasoning-SFT）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@t1-gpu:/opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT# modelscope download --dataset AI-ModelScope/medical-o1-reasoning-SFT --local_dir ./<br></code></pre></td></tr></table></figure><h1 id="三其他准备步骤">三、其他准备步骤</h1><h2 id="wandb-token准备">3.1 wandb token准备</h2><p>去<ahref="https://wandb.ai/">wandb官网</a>注册一个账号、申请一个token，并记录此token，后续要用。</p><p>注：</p><ul><li><p>wandb的意思是”weights andbiases“，网上没有找到现成的翻译，我直译为权重与偏差。</p></li><li><p><ahref="https://wandb.ai/wandb_fc/chinese/reports/-Weights-Biases---Vmlldzo4MDEwNzM">关于W&amp;B的介绍</a>：W&amp;B是一个平台，可帮助数据科学家跟踪他们的模型、数据集、系统信息等。只需几行代码，就可以开始跟踪有关这些功能的所有内容。它是免费供个人使用的。团队使用通常是付费的，但用于学术目的的团队是免费的。 可以将 W&amp;B与自己喜欢的框架一起使用，例如TensorFlow、Keras、PyTorch、SKlearn、fastai 等。</p><p>所有跟踪信息都发送到 W&amp;B UI上的专用项目页面，可以在其中打开高质量的可视化、汇总信息并比较模型或参数。</p></li></ul><h3 id="wandb官网账号注册">3.1.1 wandb官网账号注册</h3><p>如下使用我自己的github账号进行注册。当然也可以使用手动邮箱与密码进行注册（如下图最下部分所示）</p><figure><img src="https://s2.loli.net/2025/02/13/jBqpIiDF5t48Axc.png"alt="image-20250213162023573" /><figcaption aria-hidden="true">image-20250213162023573</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/13/ZJYaFVol2H1vsej.png"alt="image-20250213162111736" /><figcaption aria-hidden="true">image-20250213162111736</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/21/prnxAkaSZcHGPdE.png"alt="image-20250221230552719" /><figcaption aria-hidden="true">image-20250221230552719</figcaption></figure><h3 id="获取token">3.1.2 获取token</h3><p>进入wandb官网中自己账号的主页，可以看到如下内容。在如下位置复制自己的wandbtoken</p><figure><img src="https://s2.loli.net/2025/02/13/4gxCbyk1P95sULh.png"alt="image-20250213162624545" /><figcaption aria-hidden="true">image-20250213162624545</figcaption></figure><h2 id="准备jupyter环境">3.2 准备jupyter环境</h2><p>以下以在Ubuntu 20.04.3 LTS-amd64上安装jupyter环境为例，说明安装jupyter环境的步骤。</p><h3 id="安装conda">3.2.1 安装conda</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs# mkdir /root/.pip<br>root@controller01:/opt/installPkgs# cat &gt; /root/.pip/pip.conf  &lt;&lt;EOF<br>[global]<br>trusted-host = mirrors.aliyun.com<br>index-url = https://mirrors.aliyun.com/pypi/simple<br>EOF<br><br>root@controller01:/opt/installPkgs# wget --user-agent=“Mozilla” + https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-2024.06-1-Linux-x86_64.sh<br><br>root@controller01:/opt/installPkgs# bash Anaconda3-2024.06-1-Linux-x86_64.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##安装过程中，会询问相关问题，保持默认配置直接回车或输入YES再回车（整个安装过程可能需要耗时几分钟）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##conda的默认安装目录是/root/anaconda3</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##安装过程中最几行如下</span></span><br>....<br>You can undo this by running `conda init --reverse $SHELL`? [yes|no]<br>[no] &gt;&gt;&gt; yes             #此处输入yes并回车<br>no change     /root/anaconda3/condabin/conda<br>no change     /root/anaconda3/bin/conda<br>no change     /root/anaconda3/bin/conda-env<br>no change     /root/anaconda3/bin/activate<br>no change     /root/anaconda3/bin/deactivate<br>no change     /root/anaconda3/etc/profile.d/conda.sh<br>no change     /root/anaconda3/etc/fish/conf.d/conda.fish<br>no change     /root/anaconda3/shell/condabin/Conda.psm1<br>no change     /root/anaconda3/shell/condabin/conda-hook.ps1<br>no change     /root/anaconda3/lib/python3.12/site-packages/xontrib/conda.xsh<br>no change     /root/anaconda3/etc/profile.d/conda.csh<br>modified      /root/.bashrc<br><br>==&gt; For changes to take effect, close and re-open your current shell. &lt;==<br><br>Thank you for installing Anaconda3!<br>root@controller01:/opt/installPkgs# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新加载环境变量，并启用默认的base conda环境</span><br>root@controller01:/opt/installPkgs# source ~/.bashrc<br>(base) root@controller01:/opt/installPkgs# which python<br>/root/anaconda3/bin/python<br>(base) root@controller01:/opt/installPkgs# which pip<br>/root/anaconda3/bin/pip<br>(base) root@controller01:/opt/installPkgs# python -V<br>Python 3.12.4<br>(base) root@controller01:/opt/installPkgs# pip -V<br>pip 24.0 from /root/anaconda3/lib/python3.12/site-packages/pip (python 3.12)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>(base) root@controller01:/opt/installPkgs# conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                  *  /root/anaconda3</span><br><br>(base) root@controller01:/opt/installPkgs# <br></code></pre></td></tr></table></figure><h3 id="创建self-llm虚拟python环境">3.2.2创建self-llm虚拟python环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">更新软件列表</span><br>(base) root@controller01:/opt/installPkgs# apt-get update<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">准备好python3环境与pip3（使用上述conda创建虚拟python3、pip3环境）</span><br>(base) root@controller01:/opt/installPkgs# conda create -n self-llm python=3.12<br>...<br>The following NEW packages will be INSTALLED:<br><br>  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main <br>  _openmp_mutex      pkgs/main/linux-64::_openmp_mutex-5.1-1_gnu <br>  bzip2              pkgs/main/linux-64::bzip2-1.0.8-h5eee18b_6 <br>  ca-certificates    pkgs/main/linux-64::ca-certificates-2024.12.31-h06a4308_0 <br>  expat              pkgs/main/linux-64::expat-2.6.4-h6a678d5_0 <br>  ld_impl_linux-64   pkgs/main/linux-64::ld_impl_linux-64-2.40-h12ee557_0 <br>  libffi             pkgs/main/linux-64::libffi-3.4.4-h6a678d5_1 <br>  libgcc-ng          pkgs/main/linux-64::libgcc-ng-11.2.0-h1234567_1 <br>  libgomp            pkgs/main/linux-64::libgomp-11.2.0-h1234567_1 <br>  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-11.2.0-h1234567_1 <br>  libuuid            pkgs/main/linux-64::libuuid-1.41.5-h5eee18b_0 <br>  ncurses            pkgs/main/linux-64::ncurses-6.4-h6a678d5_0 <br>  openssl            pkgs/main/linux-64::openssl-3.0.15-h5eee18b_0 <br>  pip                pkgs/main/linux-64::pip-25.0-py312h06a4308_0 <br>  python             pkgs/main/linux-64::python-3.12.9-h5148396_0 <br>  readline           pkgs/main/linux-64::readline-8.2-h5eee18b_0 <br>  setuptools         pkgs/main/linux-64::setuptools-75.8.0-py312h06a4308_0 <br>  sqlite             pkgs/main/linux-64::sqlite-3.45.3-h5eee18b_0 <br>  tk                 pkgs/main/linux-64::tk-8.6.14-h39e8969_0 <br>  tzdata             pkgs/main/noarch::tzdata-2025a-h04d1e81_0 <br>  wheel              pkgs/main/linux-64::wheel-0.45.1-py312h06a4308_0 <br>  xz                 pkgs/main/linux-64::xz-5.6.4-h5eee18b_1 <br>  zlib               pkgs/main/linux-64::zlib-1.2.13-h5eee18b_1 <br><br><br>Proceed ([y]/n)? Y         #此处输入y并回车<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##然后等待下载与解压提取相关python安装文件与python模块。安装过程的最后几行输出如下</span></span><br>...<br><span class="hljs-meta prompt_"># </span><span class="language-bash">To activate this environment, use</span>                                                                         <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#     $ conda activate self-llm</span></span>                                                                             <br><span class="hljs-meta prompt_"># </span><span class="language-bash">To deactivate an active environment, use</span>                                                                   <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#     $ conda deactivate</span></span><br>(base) root@controller01:/opt/installPkgs# <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看现有的conda管理的所有虚拟python环境</span><br>(base) root@controller01:/opt/installPkgs# conda env list<br><span class="hljs-meta prompt_"># </span><span class="language-bash">conda environments:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">base                     /root/anaconda3</span><br>self-llm              *  /root/anaconda3/envs/self-llm<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">激活self-llm 这个虚拟python环境，并在其中执行相关命令</span><br>(base) root@controller01:/opt/installPkgs# conda activate self-llm <br>(self-llm) root@controller01:/opt/installPkgs# python -V<br>Python 3.12.9<br>(self-llm) root@controller01:/opt/installPkgs# pip -V<br>pip 25.0 from /root/anaconda3/envs/self-llm/lib/python3.12/site-packages/pip (python 3.12)<br>(self-llm) root@controller01:/opt/installPkgs# <br></code></pre></td></tr></table></figure><h3 id="安装jupyter环境">3.2.3 安装jupyter环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装 IPython 交互式 shell</span><br>(self-llm) root@controller01:/opt/installPkgs# pip install ipython<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">正式安装jupyter</span><br>(self-llm) root@controller01:/opt/installPkgs# apt install jupyter-core jupyter-notebook -qy<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建目录</span><br>(self-llm) root@controller01:/opt/installPkgs# mkdir finetunning-bigmodles<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动jupyter notebook</span><br>(self-llm) root@controller01:/opt/installPkgs# jupyter notebook --allow-root --ip=0.0.0.0 --no-browser<br>[I 01:29:38.744 NotebookApp] Serving notebooks from local directory: /opt/installPkgs<br>[I 01:29:38.744 NotebookApp] The Jupyter Notebook is running at:<br>[I 01:29:38.744 NotebookApp] http://a10:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:38.744 NotebookApp]  or http://127.0.0.1:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:38.744 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).<br>[W 01:29:38.755 NotebookApp] No web browser found: could not locate runnable browser.<br>[C 01:29:38.756 NotebookApp] <br>    <br>    To access the notebook, open this file in a browser:<br>        file:///root/.local/share/jupyter/runtime/nbserver-41207-open.html<br>    Or copy and paste one of these URLs:<br>        http://a10:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>     or http://127.0.0.1:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br>[I 01:29:53.755 NotebookApp] 302 GET /?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba (192.168.254.84) 2.07ms<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将以下url中的127.0.0.1换成服务器IP，即可访问上述创建的jupyter环境，比如当前安装jupyter环境的服务器IP是172.20.0.21，则URL是如下</span><br>http://172.20.0.21:8888/?token=96f565e66d149b1803474ff3bf7c15e43fbaf9cc59c192ba<br><span class="hljs-meta prompt_">#</span><span class="language-bash">最后的参数token类似于访问的密码。访问成功后界面如下，jupyter环境根目录就是执行“jupyter notebook --allow-root --ip=0.0.0.0”命令的所在目录/opt/installPkgs，以下显示了所在目录/opt/installPkgs下的所有文件及文件夹</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/17/pacKOlYbVuzrJqQ.png"alt="image-20250217093519584" /><figcaption aria-hidden="true">image-20250217093519584</figcaption></figure><p>如果要自定义jupyter的家目录及其他配置，可以修改它的配置文件（默认已经创建：/root/.jupyter/jupyter_notebook_config.py），以后每次启动时，它都是优先使用这个配置文件中的配置项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# vi /root/.jupyter/jupyter_notebook_config.py<br>...<br>931 # c.ServerApp.notebook_dir = &#x27;&#x27;<br>932 c.ServerApp.notebook_dir = &#x27;/opt/installPkgs/finetunning-bigmodles/&#x27;<br>...<br></code></pre></td></tr></table></figure><p>修改上述文件后，需要重新启动jupyter进程，才会生效。</p><h3 id="报错处理">3.2.4 报错处理</h3><h4id="启动jupyter-notebook时报fail-to-get-yarn-configuration">启动jupyternotebook时报“Fail to get yarn configuration”</h4><p>但此错误并未不影响jupyter notebook的使用</p><figure><img src="https://s2.loli.net/2025/02/14/qQlTesIb7oC1YNW.png"alt="image-20250214175252854" /><figcaption aria-hidden="true">image-20250214175252854</figcaption></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">方法1：此报错不影响jupyter notebook的使用，暂时不予理会</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方法2：需要升级Node版本（先前是v10.19.6，升级到v12.22.6即可）。参考：https://discourse.jupyter.org/t/jupyter-lab-4-0-6-error-on-startup-about-yarn-configuration-and-worker-threads/21859</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用nvm升级nodejs版本：</span><br>nvm install 12.22.6<br></code></pre></td></tr></table></figure><h1 id="四在.ipynb中进行微调">四、在.ipynb中进行微调</h1><h2 id="打开一个已经存在的.ipynb文件">4.1打开一个已经存在的.ipynb文件</h2><p>比如下载<ahref="https://github.com/jiangsanyin/unsloth-DeepSeek-R1-Distill-Llama-8B/blob/main/deepseekr1_8b%E6%9C%AC%E5%9C%B0%E5%BE%AE%E8%B0%83.ipynb">deepseekr1_8b本地微调.ipynb</a>，保存到<code>/opt/installPkgs/finetunning-bigmodles</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/finetunning-bigmodles# ll<br>total 104<br>drwxr-xr-x  2 root root  4096 Feb 17 10:02 ./<br>drwxr-xr-x 12 root root  4096 Feb 17 09:48 ../<br>-rw-r--r--  1 root root 95152 Feb 17 09:46 deepseekr1_8b本地微调.ipynb<br><br></code></pre></td></tr></table></figure><p>然后按照如下方式，在jupyter图形界面找到上述文件并使用"Notebook"打开：</p><figure><img src="https://s2.loli.net/2025/02/17/ACp5NZeaJiPuqFQ.png"alt="image-20250217100452758" /><figcaption aria-hidden="true">image-20250217100452758</figcaption></figure><p>打开后界面如下：</p><figure><img src="https://s2.loli.net/2025/02/17/KDAFQO4sftwLU7H.png"alt="image-20250217100932951" /><figcaption aria-hidden="true">image-20250217100932951</figcaption></figure><h3 id="设置此.ipynb文件可信">4.1.1 设置此.ipynb文件可信</h3><figure><img src="https://s2.loli.net/2025/02/17/JKr4Pjd3HSI2RXy.png"alt="image-20250217101948104" /><figcaption aria-hidden="true">image-20250217101948104</figcaption></figure><h3 id="为.ipynb文件选择kernel">4.1.2 为.ipynb文件选择kernel</h3><figure><img src="https://s2.loli.net/2025/02/17/nA4xkQ1DazvZSUW.png"alt="image-20250217110822311" /><figcaption aria-hidden="true">image-20250217110822311</figcaption></figure><h3 id="运行此.ipynb文件">4.1.3 运行此.ipynb文件</h3><p>上述文件<code>deepseekr1_8b本地微调.ipynb</code>从网上下载下来后，有些地方需要修改下，否则在未翻墙的服务器上运行会失败或执行速度很慢。</p><p>以下未列举出来的cell，不需要修改，直接执行即可。</p><h4id="第1个cell-安装unsloth"><strong>第1个cell</strong>-安装unsloth</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">%capture</span><br>!pip install unsloth==2025.2.5 -i https://mirrors.aliyun.com/pypi/simple<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Also get the latest nightly Unsloth!</span><br>!pip install --force-reinstall --no-cache-dir --no-deps git+https://gitee.com/sy-jiang/unsloth.git -i https://mirrors.aliyun.com/pypi/simple<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令中又会安装最新的unsloth 2025.2.12（后续使用中会有问题），所以重新安装nsloth 2025.2.12</span><br>!pip install unsloth==2025.2.5 -i https://mirrors.aliyun.com/pypi/simple<br></code></pre></td></tr></table></figure><p>然后光标选中此cell，使用组合键“shift+ener”或点击如下按钮，即可执行选中的cell</p><figure><img src="https://s2.loli.net/2025/02/17/HvOjDMkZ4KG7FAS.png"alt="image-20250217110958036" /><figcaption aria-hidden="true">image-20250217110958036</figcaption></figure><p>第一个cell执行所需要的时间较长，因为安装的python库较大。cell执行未结果时，前面会一直有个"*"</p><figure><img src="https://s2.loli.net/2025/02/17/9XLU8GbwDToWsmr.png"alt="image-20250217111048204" /><figcaption aria-hidden="true">image-20250217111048204</figcaption></figure><p>当前cell执行结束后，会在当面所有执行cell次数的基础加1，结果显示在cell左上角。如下图，这是这个页面此cell第一次执行，所以执行结束后，显示1</p><figure><img src="https://s2.loli.net/2025/02/17/1pZPTJlGaed78XB.png"alt="image-20250217111458869" /><figcaption aria-hidden="true">image-20250217111458869</figcaption></figure><h4 id="第3个cell-安装wandb"><strong>第3个cell</strong>-安装wandb</h4><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs d"><span class="hljs-meta">#!pip install wandb</span><br>#修改成如下以使用国内pip安装源<br>!pip install wandb -i https:<span class="hljs-comment">//mirrors.aliyun.com/pypi/simple</span><br></code></pre></td></tr></table></figure><h4 id="第4个cell-初始化wandb">第4个cell-初始化wandb</h4><p>如下配置的key就是在wandb官网申请后获取的token，请修改成自己的tokenwanbtoken</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 这里不使用环境变量，直接填入wandb的token,如果没有token可以去官网下载一个</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 为了安全，我此处只粘贴了自己token的前部分内容</span></span><br>import wandb<br><br>wandb.login(key=&quot;b11f575fd0f6c8cae0cb016b24&quot;)<br>run = wandb.init(<br>    project=&#x27;my fint-tune on deepseek r1 with medical data&#x27;,<br>    job_type=&quot;training&quot;,<br>    anonymous=&quot;allow&quot;<br>)<br></code></pre></td></tr></table></figure><p>如果上述cell内容运行不成功，则采用如下方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1)首先在self-llm这个虚拟机python环境登录到wandb.ai，成功后会将相关信息保存在/root/.netrc</span><br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# wandb login --relogin<br>wandb: Logging into wandb.ai. (Learn how to deploy a W&amp;B server locally: https://wandb.me/wandb-server)<br>wandb: You can find your API key in your browser here: https://wandb.ai/authorize<br>wandb: Paste an API key from your profile and hit enter, or press ctrl+c to quit: <br>wandb: Appending key for api.wandb.ai to your netrc file: /root/.netrc<br>wandb: W&amp;B API key is configured. Use `wandb login --relogin` to force relogin<br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# vi /root/.netrc <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# <br>(self-llm) root@controller01:/opt/installPkgs/finetunning-bigmodles# cat /root/.netrc   <br>machine api.wandb.ai<br>  login user<br>  password b11f575fd0f6c8cae0cb016b24<br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2)修改上述cell内容为如下，然后重新执行此cell</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 这里不使用环境变量，直接填入wandb的token,如果没有token可以去官网下载一个</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 同时wandb.init时默认超时时间是90s，因为网站是国外网站可能经常出现init超过90s的现象，所以增加超时时间为300s</span></span><br>import wandb<br>import os<br><span class="hljs-meta prompt_">#</span><span class="language-bash">os.environ[<span class="hljs-string">&quot;WANDB_API_KEY&quot;</span>] = <span class="hljs-string">&#x27;b11f575fd0f6c8cae0cb016b24&#x27;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#os.environ[&quot;WANDB_MODE&quot;] = &quot;offline&quot;</span></span><br>os.environ[&#x27;WANDB_INIT_TIMEOUT&#x27;] = &#x27;1200&#x27;  #Increase timeout settings<br>os.environ[&#x27;WANDB_DEBUG&#x27;] = &quot;true&quot;           #Enable debugging<br><span class="hljs-meta prompt_">#</span><span class="language-bash">wandb.login(key=<span class="hljs-string">&quot;b11f575fd0f6c8cae0cb016b24&quot;</span>)</span><br>run = wandb.init(<br>    project=&#x27;my fint-tune on deepseek r1 with medical data&#x27;,<br>    job_type=&quot;training&quot;,<br>    anonymous=&quot;allow&quot;,<br>    settings=wandb.Settings(init_timeout=1200)<br>)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3)执行成功时，输出如下</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/gac186mtlIDJnZu.png"alt="image-20250218100844293" /><figcaption aria-hidden="true">image-20250218100844293</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">4)之后按照上述输出的内容，查看wandb.ai网站中自己的主页，看到如下类似内容。之后往后执行下一个cell</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/TCQhspmOINxR2ri.png"alt="image-20250218101102349" /><figcaption aria-hidden="true">image-20250218101102349</figcaption></figure><h4id="第5个cell-加载模型文件创建model实例">第5个cell-加载模型文件/创建model实例</h4><p>此cell需要保证你的服务器上有NVIDIA GPU。如下所示，我使用的是NVIDIAA40，它有44G左右显存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">model, tokenizer = FastLanguageModel.from_pretrained(<br>    model_name = &quot;/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B&quot;, # 这里改成你本地模型，以我的为例，我已经huggingface上的模型文件下载到本地。<br>    max_seq_length = max_seq_length,<br>    dtype = dtype,<br>    load_in_4bit = load_in_4bit,<br>)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/17/z2x8lfMR4iL75X6.png"alt="image-20250217152019243" /><figcaption aria-hidden="true">image-20250217152019243</figcaption></figure><h4id="第6与第7个cell-微调前执行推理">第6与第7个cell-微调前执行推理</h4><p>第6个cell提供中英文两种形式的问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 61-year-old woman with a long history of involuntary urine loss during activities like coughing or sneezing but no leakage at night undergoes a gynecological exam and Q-tip test. Based on these findings, what would cystometry most likely reveal about her residual volume and detrusor contractions?&quot;</span></span><br>question = &quot;一名61岁女性，长期在咳嗽或打喷嚏等活动时不自觉排尿，但夜间无漏尿，现接受妇科检查和Q-tip检查。基于这些发现，膀胱造瘘术最有可能揭示她的残余容量和逼尿肌收缩情况？&quot;<br><br><br>FastLanguageModel.for_inference(model)  # Unsloth has 2x faster inference!<br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>执行时，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/17/oyNrqQCiWLxwVBA.png"alt="image-20250217170314515" /><figcaption aria-hidden="true">image-20250217170314515</figcaption></figure><h4 id="第8个cell-创建框架model实例">第8个cell-创建框架model实例</h4><p>这个cell的内容无需修改。它使用的lora框架中低秩矩阵的方法对模型进行快速有效微调。（需要对lora框架知识进行学习）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">model = FastLanguageModel.get_peft_model(<br>    model,<br>    r=16,<br>    target_modules=[<br>        &quot;q_proj&quot;,<br>        &quot;k_proj&quot;,<br>        &quot;v_proj&quot;,<br>        &quot;o_proj&quot;,<br>        &quot;gate_proj&quot;,<br>        &quot;up_proj&quot;,<br>        &quot;down_proj&quot;,<br>    ],<br>    lora_alpha=16,<br>    lora_dropout=0,<br>    bias=&quot;none&quot;,<br>    use_gradient_checkpointing=&quot;unsloth&quot;,  # True or &quot;unsloth&quot; for very long context<br>    random_state=3407,<br>    use_rslora=False,<br>    loftq_config=None,<br>)<br></code></pre></td></tr></table></figure><h4id="第9与第10个cell-数据集规整化准备">第9与第10个cell-数据集规整化准备</h4><p>预处理数据集，对数据集进行规整。规整成第9个cell中样式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">train_prompt_style = &quot;&quot;&quot;Below is an instruction that describes a task, paired with an input that provides further context.<br>Write a response that appropriately completes the request.<br>Before answering, think carefully about the question and create a step-by-step chain of thoughts to ensure a logical and accurate response.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Instruction:</span></span><br>You are a medical expert with advanced knowledge in clinical reasoning, diagnostics, and treatment planning.<br>Please answer the following medical question.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Question:</span></span><br>&#123;&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## Response:</span></span><br>&lt;think&gt;<br>&#123;&#125;<br>&lt;/think&gt;<br>&#123;&#125;&quot;&quot;&quot;<br></code></pre></td></tr></table></figure><p>利用如下第10个cell中如下函数对数据集进行规整，将问题、思维链与回答填充到上述prompt中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">EOS_TOKEN = tokenizer.eos_token  # Must add EOS_TOKEN<br><br><br>def formatting_prompts_func(examples):<br>    inputs = examples[&quot;Question&quot;]<br>    cots = examples[&quot;Complex_CoT&quot;]<br>    outputs = examples[&quot;Response&quot;]<br>    texts = []<br>    for input, cot, output in zip(inputs, cots, outputs):<br>        text = train_prompt_style.format(input, cot, output) + EOS_TOKEN<br>        texts.append(text)<br>    return &#123;<br>        &quot;text&quot;: texts,<br>    &#125;<br><br></code></pre></td></tr></table></figure><h4 id="第11个cell-加载dataset">第11个cell-加载dataset</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">from datasets import load_dataset<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">load_dataset方法调用的第1个参数（数据集目录）、第2个参数（使用数据集中哪种语言.cn表示英文，zh表示中文）。其余不变（第3个参数表示使用前500条数据）</span><br>dataset = load_dataset(&quot;/opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT&quot;, &quot;zh&quot;,split = &quot;train[0:500]&quot;) # 这里同样去huggingface上面下载数据集，然后放到本地<br>dataset = dataset.map(formatting_prompts_func, batched = True,)<br>dataset[&quot;text&quot;][0]<br></code></pre></td></tr></table></figure><p>执行上述cell前，还需要做如下操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">备份unsloth-DeepSeek-R1-Distill-Llama-8B的README.md文件</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# mv README.md unsloth-DeepSeek-R1-Distill-Llama-8B---README.md <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将数据集AI-ModelScope---medical-o1-reasoning-SFT下面*.json与README.md文件复制到上述目录下</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# cp -p /opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT/*.json ./<br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# cp -p /opt/code_repos/AI_datasets/AI-ModelScope---medical-o1-reasoning-SFT/README.md ./<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时所有文件</span><br>root@controller01:/opt/code_repos/AI_models/unsloth-DeepSeek-R1-Distill-Llama-8B# ls -alh<br>total 16G<br>drwxr-xr-x 3 root root 4.0K Feb 17 16:21 .<br>drwxr-xr-x 6 root root 4.0K Feb 14 10:49 ..<br>-rw-r--r-- 1 root root  959 Feb 13 17:59 config.json<br>-rw-r--r-- 1 root root   73 Feb 13 17:59 configuration.json<br>-rw-r--r-- 1 root root  236 Feb 13 17:59 generation_config.json<br>-rw-r--r-- 1 root root  62M Feb 13 21:36 medical_o1_sft_Chinese.json<br>-rw-r--r-- 1 root root  71M Feb 13 21:36 medical_o1_sft.json<br>-rw-r--r-- 1 root root 4.7G Feb 13 19:11 model-00001-of-00004.safetensors<br>-rw-r--r-- 1 root root 4.7G Feb 13 19:02 model-00002-of-00004.safetensors<br>-rw-r--r-- 1 root root 4.6G Feb 13 19:10 model-00003-of-00004.safetensors<br>-rw-r--r-- 1 root root 1.1G Feb 13 18:17 model-00004-of-00004.safetensors<br>-rw-r--r-- 1 root root  24K Feb 13 17:59 model.safetensors.index.json<br>-rw------- 1 root root  952 Feb 13 19:11 .msc<br>-rw-r--r-- 1 root root   36 Feb 13 19:11 .mv<br>-rw-r--r-- 1 root root 1.3K Feb 13 21:36 README.md<br>-rw-r--r-- 1 root root  483 Feb 13 17:59 special_tokens_map.json<br>drwxr-xr-x 2 root root 4.0K Feb 13 19:11 ._____temp<br>-rw-r--r-- 1 root root  52K Feb 13 17:59 tokenizer_config.json<br>-rw-r--r-- 1 root root  17M Feb 13 18:00 tokenizer.json<br>-rw-r--r-- 1 root root  16K Feb 13 17:59 unsloth-DeepSeek-R1-Distill-Llama-8B---README.md<br></code></pre></td></tr></table></figure><p>执行上述cell，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/17/TSfnkEKOji5szyl.png"alt="image-20250217162802449" /><figcaption aria-hidden="true">image-20250217162802449</figcaption></figure><h4id="第12个cell-创建sfttrainer实例">第12个cell-创建SFTTrainer实例</h4><p>使用trl这个python库来进行训练（微调）。</p><p>TrainingArguments(...)中有很多参数，它们是训练（此处是深度学习）时用到的参数。其中最后一个参数output_dir定义输出的checkpoint的输出目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell">from trl import SFTTrainer<br>from transformers import TrainingArguments<br>from unsloth import is_bfloat16_supported<br><br>trainer = SFTTrainer(<br>    model=model,<br>    tokenizer=tokenizer,<br>    train_dataset=dataset,<br>    dataset_text_field=&quot;text&quot;,<br>    max_seq_length=max_seq_length,<br>    dataset_num_proc=2,<br>    args=TrainingArguments(<br>        per_device_train_batch_size=2,<br>        gradient_accumulation_steps=4,<br>        # Use num_train_epochs = 1, warmup_ratio for full training runs!<br>        warmup_steps=5,<br>        max_steps=60,<br>        learning_rate=2e-4,<br>        fp16=not is_bfloat16_supported(),<br>        bf16=is_bfloat16_supported(),<br>        logging_steps=10,<br>        optim=&quot;adamw_8bit&quot;,<br>        weight_decay=0.01,<br>        lr_scheduler_type=&quot;linear&quot;,<br>        seed=3407,<br>        output_dir=&quot;outputs&quot;,<br>    ),<br>)<br></code></pre></td></tr></table></figure><h4 id="第13个cell-model-training">第13个cell-Model training</h4><p>此cell偶尔会出现运行失败的问题，提示【failed to upsert bucket:returned error 401 Unauthorized: {"errors":[{"message":"user is notlogged in"...】这样的信息，重复运行试试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">trainer_stats = trainer.train()<br></code></pre></td></tr></table></figure><p>此cell正常运行过程中输出如下：</p><figure><img src="https://s2.loli.net/2025/02/18/mXcTxGyh8iYzQHS.png"alt="image-20250218101724006" /><figcaption aria-hidden="true">image-20250218101724006</figcaption></figure><p>此cell正常结束如下：</p><figure><img src="https://s2.loli.net/2025/02/18/LnV3JCvGxXrD6se.png"alt="image-20250218102147794" /><figcaption aria-hidden="true">image-20250218102147794</figcaption></figure><h4 id="第14个cell-保存微调模型">第14个cell-保存微调模型</h4><p>cell内容无需修改。执行后，输出如果如下。</p><figure><img src="https://s2.loli.net/2025/02/18/fp8cOs7QYrxCVz3.png"alt="image-20250218102321298" /><figcaption aria-hidden="true">image-20250218102321298</figcaption></figure><p>此时在wandb.ai网站中查看对应project的运行情况，发现状态已经是Finished：</p><figure><img src="https://s2.loli.net/2025/02/18/SEr27bQL3MVWYDd.png"alt="image-20250218102558319" /><figcaption aria-hidden="true">image-20250218102558319</figcaption></figure><p>点击project名字，可以看到如下详细信息：</p><figure><img src="https://s2.loli.net/2025/02/18/SJ1XaUf2Gecx4Im.png"alt="image-20250218102633733" /><figcaption aria-hidden="true">image-20250218102633733</figcaption></figure><h4 id="第15个cell-微调后执行推理">第15个cell-微调后执行推理</h4><p>仅仅将问题从英文形式换成中文形式。其余内容不变</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 61-year-old woman with a long history of involuntary urine loss during activities like coughing or sneezing but no leakage at night undergoes a gynecological exam and Q-tip test. Based on these findings, what would cystometry most likely reveal about her residual volume and detrusor contractions?&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##仅仅将问题从英文形式换成中文形式。其余内容不变</span></span><br>question = &quot;一名61岁女性，长期在咳嗽或打喷嚏等活动时不自觉排尿，但夜间无漏尿，现接受妇科检查和Q-tip检查。基于这些发现，膀胱造瘘术最有可能揭示她的残余容量和逼尿肌收缩情况？&quot;<br><br>FastLanguageModel.for_inference(model)  # Unsloth has 2x faster inference!<br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>执行后，输出内容如下：</p><figure><img src="https://s2.loli.net/2025/02/18/KdSrm9CYI7xTJcg.png"alt="image-20250218103431363" /><figcaption aria-hidden="true">image-20250218103431363</figcaption></figure><p>以下是微调前后推理的思维链与结果比较（可以看到微调后结果精简准确一些）：</p><figure><img src="https://s2.loli.net/2025/02/18/oECSlrJxPam3RGV.png"alt="image-20250218103525077" /><figcaption aria-hidden="true">image-20250218103525077</figcaption></figure><h4id="第16个cell-微调后其他问题推理">第16个cell-微调后其他问题推理</h4><p>第6个cell提供中英文两种形式的问题：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">question = <span class="hljs-string">&quot;A 59-year-old man presents with a fever, chills, night sweats, and generalized fatigue, and is found to have a 12 mm vegetation on the aortic valve. Blood cultures indicate gram-positive, catalase-negative, gamma-hemolytic cocci in chains that do not grow in a 6.5% NaCl medium. What is the most likely predisposing factor for this patient&#x27;s condition?&quot;</span></span><br>question = &quot;59岁男性，发热，寒颤，盗汗，全身疲劳，主动脉瓣上有12毫米的赘生物。血液培养显示革兰氏阳性，过氧化氢酶阴性，γ -溶血性球菌链，不能在6.5%的NaCl培养基中生长。这个病人的病情最有可能的诱发因素是什么？&quot;<br><br>inputs = tokenizer([prompt_style.format(question, &quot;&quot;)], return_tensors=&quot;pt&quot;).to(&quot;cuda&quot;)<br><br>outputs = model.generate(<br>    input_ids=inputs.input_ids,<br>    attention_mask=inputs.attention_mask,<br>    max_new_tokens=1200,<br>    use_cache=True,<br>)<br>response = tokenizer.batch_decode(outputs)<br>print(response[0].split(&quot;### Response:&quot;)[1])<br></code></pre></td></tr></table></figure><p>输出结果如下：</p><figure><img src="https://s2.loli.net/2025/02/18/OAoxhREBX45DvHi.png"alt="image-20250218104828178" /><figcaption aria-hidden="true">image-20250218104828178</figcaption></figure><h4id="第17个cell-保存模型权重文件等到本地">第17个cell-保存模型权重文件等到本地</h4><p>cell内容无需修改，直接执行。输出如下图</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">new_model_online = <span class="hljs-string">&quot;kingabzpro/DeepSeek-R1-Medical-COT&quot;</span></span><br>new_model_local = &quot;DeepSeek-R1-Medical-COT&quot;<br>model.save_pretrained(new_model_local) # Local saving<br>tokenizer.save_pretrained(new_model_local)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/18/jR7BLXGMQWYw5fb.png"alt="image-20250218105536427" /><figcaption aria-hidden="true">image-20250218105536427</figcaption></figure><p>同时会在jupyter根目录下创建一个”DeepSeek-R1-Medical-COT“目录，其中内容如下：</p><figure><img src="https://s2.loli.net/2025/02/18/l8cP9d3pRemtzQT.png"alt="image-20250218105707008" /><figcaption aria-hidden="true">image-20250218105707008</figcaption></figure><h4id="第18与第19个cell-把模型发布到huggingface">第18与第19个cell-把模型发布到huggingface</h4><p>huggingface需要翻墙访问，省略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">model.push_to_hub(new_model_online) # Online saving<br>tokenizer.push_to_hub(new_model_online) # Online saving<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">----------------</span><br>model.save_pretrained_merged(new_model_local, tokenizer, save_method = &quot;merged_16bit&quot;,)<br>model.push_to_hub_merged(new_model_online, tokenizer, save_method = &quot;merged_16bit&quot;)<br></code></pre></td></tr></table></figure><h2 id="创建一个新的.ipynb文件">4.2 创建一个新的.ipynb文件</h2><figure><img src="https://s2.loli.net/2025/02/17/ltvbC9sAd4gLKwx.png"alt="image-20250217093919718" /><figcaption aria-hidden="true">image-20250217093919718</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/17/TGyioRtsJHe9wm7.png"alt="image-20250217094028950" /><figcaption aria-hidden="true">image-20250217094028950</figcaption></figure><p>重命名：</p><figure><img src="https://s2.loli.net/2025/02/18/qcfBh1Jbox2kjev.png"alt="image-20250218110117175" /><figcaption aria-hidden="true">image-20250218110117175</figcaption></figure><h2 id="查看快捷键">4.3 查看快捷键</h2><figure><img src="https://s2.loli.net/2025/02/18/Hgx4iydTONfpkbv.png"alt="image-20250218110248372" /><figcaption aria-hidden="true">image-20250218110248372</figcaption></figure><h1 id="五参考资料">五、参考资料</h1><p>参考教学视频：<ahref="https://www.bilibili.com/video/BV1rSNmekEa7?spm_id_from=333.788.videopod.sections&amp;vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2">如何在本地微调DeepSeek-R1-8b模型</a></p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>本地微调 DeepSeek-R1-8b</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微调DeepSeek-R1-8B模型与可视化训练过程</title>
    <link href="/2025/02/13/%E5%BE%AE%E8%B0%83DeepSeek-R1-8B%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E8%AE%AD%E7%BB%83%E8%BF%87%E7%A8%8B/"/>
    <url>/2025/02/13/%E5%BE%AE%E8%B0%83DeepSeek-R1-8B%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96%E8%AE%AD%E7%BB%83%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="参考资料">参考资料</h1><p>参考英文文档：<ahref="https://www.datacamp.com/tutorial/fine-tuning-deepseek-r1-reasoning-model">Fine-TuningDeepSeek R1 (Reasoning Model)</a></p><p>参考教学视频：<ahref="https://www.bilibili.com/video/BV13ZPdejE1K/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2">如何快速微调DeepSeek-R1-8b模型，并且可视化训练过程，赶紧行动起来。</a></p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DeepSeek</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeepSeek-R1本地部署配置要求</title>
    <link href="/2025/02/13/DeepSeek-R1%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82/"/>
    <url>/2025/02/13/DeepSeek-R1%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%E8%A6%81%E6%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="一前言">一、前言</h1><p>随着DeepSeek-V3与R1的持续爆火，国内各个厂商掀起了一场接入或适配DeepSeek模型的浪潮，这无疑是一件好事。同时，也有越来越多的用户或公司想要在本地部署DeepSeek模型，体验其带来的便捷功能或二次开发，但DeepSeek模型部署时对硬件有一定要不，以下这DeepSeek-R1的基础模型及蒸馏模型的部署硬件要求进行整理汇总。</p><h1id="二deepseek-r1基础模型本地部署配置要求">二、DeepSeek-R1基础模型本地部署配置要求</h1><table><thead><tr><th>模型|要求</th><th>CPU</th><th>内存</th><th>硬盘</th><th>显卡</th><th>场景</th></tr></thead><tbody><tr><td><strong>DeepSeek-R1-1.5B</strong></td><td>最低 4 核（推荐 Intel/AMD 多核处理器）</td><td>8GB+</td><td>3GB+ 存储空间（模型文件约 1.5-2GB）</td><td>非必需（纯 CPU 推理），若 GPU 加速可选 4GB+ 显存（如 GTX 1650）</td><td>低资源设备部署（如树莓派、旧款笔记本）实时文本生成（聊天机器人、简单问答） 嵌入式系统或物联网设备</td></tr><tr><td><strong>DeepSeek-R1-7B</strong></td><td>8 核以上（推荐现代多核 CPU）</td><td>16GB+</td><td>8GB+（模型文件约 4-5GB）</td><td>推荐 8GB+ 显存（如 RTX 3070/4060）</td><td>本地开发测试（中小型企业） 中等复杂度 NLP 任务（文本摘要、翻译）轻量级多轮对话系统</td></tr><tr><td><strong>DeepSeek-R1-8B</strong></td><td>与 7B 相近</td><td>与 7B 相近，略高 10-20%</td><td>与 7B 相近，略高 10-20%</td><td>与 7B 相近</td><td>需更高精度的轻量级任务（如代码生成、逻辑推理）</td></tr><tr><td><strong>DeepSeek-R1-14B</strong></td><td>12 核以上</td><td>32GB+</td><td>15GB+</td><td>16GB+ 显存（如 RTX 4090 或 A5000）</td><td>企业级复杂任务（合同分析、报告生成）长文本理解与生成（书籍/论文辅助写作）</td></tr><tr><td><strong>DeepSeek-R1-32B</strong></td><td>16 核以上（如 AMD Ryzen 9 或 Intel i9）</td><td>64GB+</td><td>30GB+</td><td>24GB+ 显存（如 A100 40GB 或双卡 RTX 3090）</td><td>高精度专业领域任务（医疗/法律咨询）多模态任务预处理（需结合其他框架）</td></tr><tr><td><strong>DeepSeek-R1-70B</strong></td><td>32 核以上（服务器级 CPU）</td><td>128GB+</td><td>70GB+</td><td>多卡并行（如 2x A100 80GB 或 4x RTX 4090）</td><td>科研机构/大型企业（金融预测、大规模数据分析）高复杂度生成任务（创意写作、算法设计）</td></tr><tr><td><strong>DeepSeek-R1-671B</strong></td><td>64 核以上（服务器集群）</td><td>512GB+</td><td>300GB+</td><td>多节点分布式训练（如 8x A100/H100）</td><td>国家级/超大规模 AI 研究（如气候建模、基因组分析）通用人工智能（AGI）探索</td></tr></tbody></table><figure><img src="https://s2.loli.net/2025/02/13/Iz3B64UwqTaYHXl.png"alt="image-20250213142425088" /><figcaption aria-hidden="true">image-20250213142425088</figcaption></figure><p><strong>针对DeepSeek-R1模型本地部署与使用的通用建议</strong></p><ul><li><p><strong>量化优化</strong>：使用 4-bit/8-bit 量化可降低显存占用30-50%。</p></li><li><p><strong>推理框架</strong>：搭配 vLLM、TensorRT等加速库提升效率。</p></li><li><p><strong>云部署</strong>：70B/671B建议优先考虑云服务以弹性扩展资源。</p></li><li><p><strong>能耗注意</strong>：32B+模型需高功率电源（1000W+）和散热系统。</p></li></ul><h1id="三deepseek-r1蒸馏模型及其量化版本本地部署配置要求">三、DeepSeek-R1蒸馏模型及其量化版本本地部署配置要求</h1><figure><img src="https://s2.loli.net/2025/02/13/mFkuPELIxc7Z4yX.png"alt="image-20250213102615401" /><figcaption aria-hidden="true">image-20250213102615401</figcaption></figure><p>使用蒸馏模型时，CPU配置应该尽量跟同等参数规模的DeepSeek-R1模型靠近或略低。本人在本地使用一个NVIDIAA40也成功部署了DeepSeek-R1-Distill-Llama-70B，试用着直接使用ollama或使用python程序向其提问，其回答问题的速度与准确性（只针对所提普通问题而言）还能接受。</p><p>另外，在部署与使用AI模型过程中，我们应该根据自己的需求从较小的模型开始部署进行试用，如有需要再升级至更高参数规模的模型，在满足需求的同时也可以避免资源的浪费。</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s在线部署-kubeadm部署amd64单机版k8s1.23.17</title>
    <link href="/2025/02/12/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-kubeadm%E9%83%A8%E7%BD%B2amd64%E5%8D%95%E6%9C%BA%E7%89%88k8s1.23.17/"/>
    <url>/2025/02/12/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-kubeadm%E9%83%A8%E7%BD%B2amd64%E5%8D%95%E6%9C%BA%E7%89%88k8s1.23.17/</url>
    
    <content type="html"><![CDATA[<h1 id="部署环境准备">1 部署环境准备</h1><h2 id="节点规划">1.1 节点规划</h2><table style="width:100%;"><thead><tr><th>主机名</th><th>用途</th><th>IP</th><th>root用户密码</th><th>规格</th><th>系统盘</th><th>OS</th><th>备注</th></tr></thead><tbody><tr><td>controller01</td><td>master + worker</td><td>172.20.0.21</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu 20.04.3 LTS-amd64</td><td>联网</td></tr></tbody></table><p>目前只准备这一个amd64构架服务器，上面安装了Ubuntu 20.04.3LTS操作系统，用于搭建一个单节点K8S1.23.17集群。</p><h2 id="服务器基础准备">1.2 服务器基础准备</h2><h3 id="修改各节点主机名">1.2.1 修改各节点主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">controller01</span><br></code></pre></td></tr></table></figure><h3 id="配置主机名与ip映射所有节点">1.2.2配置主机名与ip映射（所有节点）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# cat /etc/hosts<br>...<br>172.20.0.21 controller01<br></code></pre></td></tr></table></figure><h3 id="配置从master01到所有节点的ssh免密登录">1.2.3配置从master01到所有节点的ssh免密登录</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby">root<span class="hljs-variable">@controller01</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># ssh-keygen -P &quot;&quot; -t rsa</span><br>root<span class="hljs-variable">@controller01</span><span class="hljs-symbol">:~</span><span class="hljs-comment"># ssh-copy-id root<span class="hljs-doctag">@controller</span>01</span><br></code></pre></td></tr></table></figure><h3 id="关闭防火墙等设置与安装一些常用的工具组件">1.2.4关闭防火墙等设置与安装一些常用的工具组件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">关闭防火墙</span><br>systemctl status ufw<br>systemctl stop ufw<br>systemctl disable ufw<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置时区为亚洲上海</span><br>timedatectl set-timezone Asia/Shanghai<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装常用工具组件</span><br>apt-get update &amp;&amp; apt install -y tmux wget<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装k8s相关服务依赖组件</span><br>apt install -y socat conntrack ebtables ipset chrony;systemctl enable chronyd.service &amp;&amp; systemctl restart chronyd.service &amp;&amp; systemctl status chronyd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看时间同步情况</span><br>chronyc sources<br></code></pre></td></tr></table></figure><h3 id="swap分区禁用及内核参数调整">1.2.5Swap分区禁用及内核参数调整</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">临时禁用swap分区</span><br>swapoff -a<br><span class="hljs-meta prompt_">#</span><span class="language-bash">注释swap配置行，永久禁用swap分区</span><br>sed -i &#x27;s/.*swap.*/#&amp;/&#x27; /etc/fstab<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">调整内核参数</span><br>echo &#x27;vm.swappiness=0&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>sysctl -p /etc/sysctl.d/k8s.conf<br></code></pre></td></tr></table></figure><h3 id="转发ipv4并让iptables看到桥接流量">1.2.6转发IPv4并让iptables看到桥接流量</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">设置OS启动时的加载模块</span><br>echo &#x27;overlay&#x27; &gt;&gt; /etc/modules-load.d/k8s.conf;echo &#x27;br_netfilter&#x27; &gt;&gt; /etc/modules-load.d/k8s.conf<br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载overlay与br_netfilter模块</span><br>modprobe overlay &amp;&amp; modprobe br_netfilter<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置内核参数(重启依然生效)</span><br>echo &#x27;net.bridge.bridge-nf-call-iptables  = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>echo &#x27;net.bridge.bridge-nf-call-ip6tables = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br>echo &#x27;net.ipv4.ip_forward                 = 1&#x27; &gt;&gt; /etc/sysctl.d/k8s.conf<br><span class="hljs-meta prompt_">#</span><span class="language-bash">bridge-nf</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">bridge-nf 使得 netfilter 可以对 Linux 网桥上的 IPv4/ARP/IPv6 包过滤。比如，设置net.bridge.bridge-nf-call-iptables＝1后，二层的网桥在转发包时也会被 <span class="hljs-comment">#iptables的 FORWARD 规则所过滤。常用的选项包括：</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-arptables：是否在 arptables 的 FORWARD 中过滤网桥的 ARP 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-ip6tables：是否在 ip6tables 链中过滤 IPv6 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-call-iptables：是否在 iptables 链中过滤 IPv4 包</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">net.bridge.bridge-nf-filter-vlan-tagged：是否在 iptables/arptables 中过滤打了 vlan 标签的包。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">防火墙是保护服务器和基础设施安全的重要工具。在 Linux 生态系统中，iptables 是使 用很广泛的防火墙工具之一，它基于内核的包过滤框架（packet filtering <span class="hljs-comment">#framework） netfilter。</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Linux 上最常用的防火墙工具是 iptables。iptables 与协议栈内有包过滤功能的 hook 交 互来完成工作。这些内核 hook 构成了 netfilter 框架。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">每个进入网络系统的包（接收或发送）在经过协议栈时都会触发这些 hook，程序 可以通过注册 hook 函数的方式在一些关键路径上处理网络流量。iptables 相关的内核模 <span class="hljs-comment">#块在这些 hook 点注册了处理函数，因此可以通过配置 iptables 规则来使得网络流量符合 防火墙规则。</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">不需要重启使内核参数生效，然后查看当前生效的相关内核参数</span><br>sysctl --system<br>sysctl net.bridge.bridge-nf-call-iptables <br>sysctl net.bridge.bridge-nf-call-ip6tables <br>sysctl net.ipv4.ip_forward<br></code></pre></td></tr></table></figure><h2 id="docker环境准备">1.3 Docker环境准备</h2><p>安装docker engine，安装步骤如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">更新安装源索引</span><br>sudo apt-get update<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装依赖包，用于通过HTTPS来获取仓库</span><br>sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加 Docker 的官方 GPG 密钥</span><br>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置稳定版仓库(添加到/etc/apt/sources.list中)</span><br>sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;<br><br>gpg --keyserver keyserver.ubuntu.com --recv 7EA0A9C3F273FCD8<br>gpg --export --armor 7EA0A9C3F273FCD8 |apt-key add -<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查询可安装docker-ce版本</span><br>apt-get update<br>sudo apt-cache policy docker-ce<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装指定版本</span><br>sudo apt-get install docker-ce=5:20.10.24~3-0~ubuntu-focal<br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证安装是否成功</span><br>docker --version<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改docker守护进程配置文件，更新 cgroupdriver 为systemd</span><br>tee /etc/docker/daemon.json &lt;&lt;EOF<br>&#123;<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://hub.rat.dev&quot;,<br>    &quot;https://registry.aliyuncs.com&quot;,<br>    &quot;https://registry.docker-cn.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.nju.edu.cn&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ],<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]<br>&#125;<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重载配置文件，重启docker服务</span><br>systemctl daemon-reload<br>systemctl restart docker<br>systemctl status docker<br></code></pre></td></tr></table></figure><h1 id="集群部署">2 集群部署</h1><h2 id="组件安装源准备">2.1 组件安装源准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装组件</span><br>apt-get update<br>apt install -y apt-transport-https ca-certificates curl<br><span class="hljs-meta prompt_">#</span><span class="language-bash">添加GPG 密钥</span><br>curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -<br><br>tee /etc/apt/sources.list.d/kubernetes.list &lt;&lt; EOF<br>deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main<br>EOF<br></code></pre></td></tr></table></figure><h2 id="集群基础组件安装">2.2 集群基础组件安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装kubelet kubeadm kubectl</span><br>apt-get update<br>apt-get install -y kubelet=1.23.17-00 kubeadm=1.23.17-00 kubectl=1.23.17-00<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置组件不自动更新</span><br>apt-mark hold kubelet kubeadm kubectl<br></code></pre></td></tr></table></figure><h2 id="集群镜像准备">2.3 集群镜像准备</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载镜像并上传到harbor</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果没有harbor服务器或不知道它是什么，就直接使用 registry.aliyuncs.com/google_containers/xxx</span><br>k8s_ver=&quot;1.23.17&quot;<br>kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;<br>images=$(kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;)<br>for i in $&#123;images&#125;; <br>    do echo $i; <br>    docker pull registry.aliyuncs.com/google_containers/$i; <br>done<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有harbor服务器</span><br>k8s_ver=&quot;1.23.17&quot;<br>harbor_url=&quot;175.6.40.93:8196&quot;<br>kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;<br>images=$(kubeadm config images list --kubernetes-version=$&#123;k8s_ver&#125; | awk -F &quot;/&quot; &#x27;&#123;print $NF&#125;&#x27;)<br>for i in $&#123;images&#125;; <br>    do echo $i; <br>    docker pull registry.aliyuncs.com/google_containers/$i; <br>    docker tag registry.aliyuncs.com/google_containers/$i $&#123;harbor_url&#125;/google_containers/$i; <br>    docker push $&#123;harbor_url&#125;/google_containers/$i; <br>    docker rmi registry.aliyuncs.com/google_containers/$i; <br>done<br></code></pre></td></tr></table></figure><h2 id="集群初始化">2.4 集群初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果没有harbor服务器或不知道它是什么</span><br>kubeadm init \<br> --image-repository=registry.aliyuncs.com/google_containers \<br> --kubernetes-version=1.23.17 \<br> --pod-network-cidr=&quot;10.250.0.0/16&quot; \<br> --apiserver-advertise-address=172.20.0.21 \<br> --service-cidr=&quot;10.96.0.0/12&quot; \<br> --ignore-preflight-errors strings=Swap<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有harbor服务器</span><br>kubeadm init \<br> --image-repository=175.6.40.93:8196/google_containers \<br> --kubernetes-version=1.23.17 \<br> --pod-network-cidr=&quot;10.250.0.0/16&quot; \<br> --apiserver-advertise-address=172.20.0.21 \<br> --service-cidr=&quot;10.96.0.0/12&quot; \<br> --ignore-preflight-errors strings=Swap<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">--image-repository harbor服务器长域名+仓库名</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--kubernetes-version 上面的<span class="hljs-variable">$&#123;k8s_ver&#125;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--pod-network-cidr k8s集群的pod网段，可自定义</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--apiserver-advertise-address master节点的管理ip</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--service-cidr k8s集群的svc网段，可自定义</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">--ignore-preflight-errors strings=Swap 值只能是一个列表的子集，详情查看kubeadm init --<span class="hljs-built_in">help</span></span><br></code></pre></td></tr></table></figure><h2 id="工作节点添加删除master节点污点">2.5工作节点添加（删除master节点污点）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置kube config文件</span><br>mkdir -p $HOME/.kube<br>cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>chown $(id -u):$(id -g) $HOME/.kube/config<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">因为我们现在是搭建单节点k8s集群，所以master节点既是控制节点也是工作节点</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">但K8S中默认master节点是不能调度任何pod的，因为此处是单节点k8s集群，所以需要将控制节点污点去除</span><br>kubectl taint nodes --all node-role.kubernetes.io/master-<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">搭建好单节点k8s集群后，在此基础上添加工作节点，参考“3 添加节点”章节</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使能kubectl 命令补全</span><br>cat &gt;&gt; /root/.bashrc &lt;&lt;EOF<br>source &lt;(kubectl completion bash)<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">加载此文件</span><br>source /root/.bashrc <br></code></pre></td></tr></table></figure><h2 id="集群网络配置">2.6 集群网络配置</h2><p>此处使用的k8s集群网络解决方案是calico，以下是安装网络插件(calico)的步骤。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">Flannel、Calico、kubeovn、华为的Canal、Weave Net 等，大家有兴趣可以自己去研究下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">容器镜像同步网站：https://docker.aityp.com/</span><br><br>mkdir -p /data/kubernetes/network/calico &amp;&amp; cd /data/kubernetes/network/calico<br>wget https://docs.projectcalico.org/manifests/calico.yaml<br><br>docker pull docker.io/calico/cni:v3.25.0<br>docker pull docker.io/calico/node:v3.25.0<br>docker pull docker.io/calico/kube-controllers:v3.25.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改下载下来的calico.yaml文件：其中使用到的镜像、CALICO_IPV4POOL_CIDR的值为“--pod-network-cidr”参数的配置值</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改后如下</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-kube-controllers.yaml</span><br><span class="hljs-comment"># This manifest creates a Pod Disruption Budget for Controller to allow K8s Cluster Autoscaler to evict</span><br><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">policy/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PodDisruptionBudget</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">maxUnavailable:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-kube-controllers.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-node.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-config.yaml</span><br><span class="hljs-comment"># This ConfigMap is used to configure a self-hosted Calico installation.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-comment"># Typha is disabled.</span><br>  <span class="hljs-attr">typha_service_name:</span> <span class="hljs-string">&quot;none&quot;</span><br>  <span class="hljs-comment"># Configure the backend to use.</span><br>  <span class="hljs-attr">calico_backend:</span> <span class="hljs-string">&quot;bird&quot;</span><br><br>  <span class="hljs-comment"># Configure the MTU to use for workload interfaces and tunnels.</span><br>  <span class="hljs-comment"># By default, MTU is auto-detected, and explicitly setting this field should not be required.</span><br>  <span class="hljs-comment"># You can override auto-detection by providing a non-zero value.</span><br>  <span class="hljs-attr">veth_mtu:</span> <span class="hljs-string">&quot;0&quot;</span><br><br>  <span class="hljs-comment"># The CNI network configuration to install on each node. The special</span><br>  <span class="hljs-comment"># values in this config will be automatically populated.</span><br>  <span class="hljs-attr">cni_network_config:</span> <span class="hljs-string">|-</span><br><span class="hljs-string">    &#123;</span><br><span class="hljs-string">      &quot;name&quot;: &quot;k8s-pod-network&quot;,</span><br><span class="hljs-string">      &quot;cniVersion&quot;: &quot;0.3.1&quot;,</span><br><span class="hljs-string">      &quot;plugins&quot;: [</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;calico&quot;,</span><br><span class="hljs-string">          &quot;log_level&quot;: &quot;info&quot;,</span><br><span class="hljs-string">          &quot;log_file_path&quot;: &quot;/var/log/calico/cni/cni.log&quot;,</span><br><span class="hljs-string">          &quot;datastore_type&quot;: &quot;kubernetes&quot;,</span><br><span class="hljs-string">          &quot;nodename&quot;: &quot;__KUBERNETES_NODE_NAME__&quot;,</span><br><span class="hljs-string">          &quot;mtu&quot;: __CNI_MTU__,</span><br><span class="hljs-string">          &quot;ipam&quot;: &#123;</span><br><span class="hljs-string">              &quot;type&quot;: &quot;host-local&quot;,</span><br><span class="hljs-string">               &quot;subnet&quot;: &quot;usePodCidr&quot;</span><br><span class="hljs-string">          &#125;,</span><br><span class="hljs-string">          &quot;policy&quot;: &#123;</span><br><span class="hljs-string">              &quot;type&quot;: &quot;k8s&quot;</span><br><span class="hljs-string">          &#125;,</span><br><span class="hljs-string">          &quot;kubernetes&quot;: &#123;</span><br><span class="hljs-string">              &quot;kubeconfig&quot;: &quot;__KUBECONFIG_FILEPATH__&quot;</span><br><span class="hljs-string">          &#125;</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;portmap&quot;,</span><br><span class="hljs-string">          &quot;snat&quot;: true,</span><br><span class="hljs-string">          &quot;capabilities&quot;: &#123;&quot;portMappings&quot;: true&#125;</span><br><span class="hljs-string">        &#125;,</span><br><span class="hljs-string">        &#123;</span><br><span class="hljs-string">          &quot;type&quot;: &quot;bandwidth&quot;,</span><br><span class="hljs-string">          &quot;capabilities&quot;: &#123;&quot;bandwidth&quot;: true&#125;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">      ]</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">bgpconfigurations.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">BGPConfiguration</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">BGPConfigurationList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">bgpconfigurations</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">bgpconfiguration</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">BGPConfiguration</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">configuration</span> <span class="hljs-string">for</span> <span class="hljs-string">any</span> <span class="hljs-string">BGP</span> <span class="hljs-string">routing.</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">BGPConfigurationSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">configuration.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">asNumber:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ASNumber is the default AS number used by a node. [Default:</span><br><span class="hljs-string">                  64512]&#x27;</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bindMode:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BindMode</span> <span class="hljs-string">indicates</span> <span class="hljs-string">whether</span> <span class="hljs-string">to</span> <span class="hljs-string">listen</span> <span class="hljs-string">for</span> <span class="hljs-string">BGP</span> <span class="hljs-string">connections</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">all</span> <span class="hljs-string">addresses</span> <span class="hljs-string">(None)</span> <span class="hljs-string">or</span> <span class="hljs-string">only</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node&#x27;s</span> <span class="hljs-string">canonical</span> <span class="hljs-string">IP</span> <span class="hljs-string">address</span><br>                  <span class="hljs-string">Node.Spec.BGP.IPvXAddress</span> <span class="hljs-string">(NodeIP).</span> <span class="hljs-string">Default</span> <span class="hljs-string">behaviour</span> <span class="hljs-string">is</span> <span class="hljs-string">to</span> <span class="hljs-string">listen</span><br>                  <span class="hljs-string">for</span> <span class="hljs-string">BGP</span> <span class="hljs-string">connections</span> <span class="hljs-string">on</span> <span class="hljs-string">all</span> <span class="hljs-string">addresses.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">communities:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Communities</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">BGP</span> <span class="hljs-string">community</span> <span class="hljs-string">values</span> <span class="hljs-string">and</span> <span class="hljs-string">their</span><br>                  <span class="hljs-string">arbitrary</span> <span class="hljs-string">names</span> <span class="hljs-string">for</span> <span class="hljs-string">tagging</span> <span class="hljs-string">routes.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">Community</span> <span class="hljs-string">contains</span> <span class="hljs-string">standard</span> <span class="hljs-string">or</span> <span class="hljs-string">large</span> <span class="hljs-string">community</span> <span class="hljs-string">value</span><br>                    <span class="hljs-string">and</span> <span class="hljs-string">its</span> <span class="hljs-string">name.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">name:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">given</span> <span class="hljs-string">to</span> <span class="hljs-string">community</span> <span class="hljs-string">value.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">value:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Value</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">of</span> <span class="hljs-string">format</span> <span class="hljs-string">`aa:nn`</span> <span class="hljs-string">or</span> <span class="hljs-string">`aa:nn:mm`.</span><br>                        <span class="hljs-string">For</span> <span class="hljs-string">standard</span> <span class="hljs-string">community</span> <span class="hljs-string">use</span> <span class="hljs-string">`aa:nn`</span> <span class="hljs-string">format,</span> <span class="hljs-string">where</span> <span class="hljs-string">`aa`</span> <span class="hljs-string">and</span><br>                        <span class="hljs-string">`nn`</span> <span class="hljs-string">are</span> <span class="hljs-number">16</span> <span class="hljs-string">bit</span> <span class="hljs-string">number.</span> <span class="hljs-string">For</span> <span class="hljs-string">large</span> <span class="hljs-string">community</span> <span class="hljs-string">use</span> <span class="hljs-string">`aa:nn:mm`</span><br>                        <span class="hljs-string">format,</span> <span class="hljs-string">where</span> <span class="hljs-string">`aa`,</span> <span class="hljs-string">`nn`</span> <span class="hljs-string">and</span> <span class="hljs-string">`mm`</span> <span class="hljs-string">are</span> <span class="hljs-number">32</span> <span class="hljs-string">bit</span> <span class="hljs-string">number.</span> <span class="hljs-string">Where,</span><br>                        <span class="hljs-string">`aa`</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">AS</span> <span class="hljs-string">Number,</span> <span class="hljs-string">`nn`</span> <span class="hljs-string">and</span> <span class="hljs-string">`mm`</span> <span class="hljs-string">are</span> <span class="hljs-string">per-AS</span> <span class="hljs-string">identifier.</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^(\d+):(\d+)$|^(\d+):(\d+):(\d+)$</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">ignoredInterfaces:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">IgnoredInterfaces</span> <span class="hljs-string">indicates</span> <span class="hljs-string">the</span> <span class="hljs-string">network</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">that</span><br>                  <span class="hljs-string">needs</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">excluded</span> <span class="hljs-string">when</span> <span class="hljs-string">reading</span> <span class="hljs-string">device</span> <span class="hljs-string">routes.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">listenPort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ListenPort</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">port</span> <span class="hljs-string">where</span> <span class="hljs-string">BGP</span> <span class="hljs-string">protocol</span> <span class="hljs-string">should</span> <span class="hljs-string">listen.</span><br>                  <span class="hljs-string">Defaults</span> <span class="hljs-string">to</span> <span class="hljs-number">179</span><br>                <span class="hljs-attr">maximum:</span> <span class="hljs-number">65535</span><br>                <span class="hljs-attr">minimum:</span> <span class="hljs-number">1</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">logSeverityScreen:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeverityScreen is the log severity above which logs</span><br><span class="hljs-string">                  are sent to the stdout. [Default: INFO]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">nodeMeshMaxRestartTime:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Time</span> <span class="hljs-string">to</span> <span class="hljs-string">allow</span> <span class="hljs-string">for</span> <span class="hljs-string">software</span> <span class="hljs-string">restart</span> <span class="hljs-string">for</span> <span class="hljs-string">node-to-mesh</span> <span class="hljs-string">peerings.</span>  <span class="hljs-string">When</span><br>                  <span class="hljs-string">specified,</span> <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">configured</span> <span class="hljs-string">as</span> <span class="hljs-string">the</span> <span class="hljs-string">graceful</span> <span class="hljs-string">restart</span> <span class="hljs-string">timeout.</span>  <span class="hljs-string">When</span><br>                  <span class="hljs-string">not</span> <span class="hljs-string">specified,</span> <span class="hljs-string">the</span> <span class="hljs-string">BIRD</span> <span class="hljs-string">default</span> <span class="hljs-string">of</span> <span class="hljs-string">120s</span> <span class="hljs-string">is</span> <span class="hljs-string">used.</span> <span class="hljs-string">This</span> <span class="hljs-string">field</span> <span class="hljs-string">can</span><br>                  <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">default</span> <span class="hljs-string">BGPConfiguration</span> <span class="hljs-string">instance</span> <span class="hljs-string">and</span> <span class="hljs-string">requires</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">NodeMesh</span> <span class="hljs-string">is</span> <span class="hljs-string">enabled</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">nodeMeshPassword:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Optional</span> <span class="hljs-string">BGP</span> <span class="hljs-string">password</span> <span class="hljs-string">for</span> <span class="hljs-string">full</span> <span class="hljs-string">node-to-mesh</span> <span class="hljs-string">peerings.</span><br>                  <span class="hljs-string">This</span> <span class="hljs-string">field</span> <span class="hljs-string">can</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">default</span> <span class="hljs-string">BGPConfiguration</span> <span class="hljs-string">instance</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">requires</span> <span class="hljs-string">that</span> <span class="hljs-string">NodeMesh</span> <span class="hljs-string">is</span> <span class="hljs-string">enabled</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">secretKeyRef:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Selects</span> <span class="hljs-string">a</span> <span class="hljs-string">key</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">secret</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">node</span> <span class="hljs-string">pod&#x27;s</span> <span class="hljs-string">namespace.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">key:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">key</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">secret</span> <span class="hljs-string">to</span> <span class="hljs-string">select</span> <span class="hljs-string">from.</span>  <span class="hljs-string">Must</span> <span class="hljs-string">be</span><br>                          <span class="hljs-string">a</span> <span class="hljs-string">valid</span> <span class="hljs-string">secret</span> <span class="hljs-string">key.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">name:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</span><br><span class="hljs-string">                          TODO: Add other useful fields. apiVersion, kind, uid?&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">optional:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Specify</span> <span class="hljs-string">whether</span> <span class="hljs-string">the</span> <span class="hljs-string">Secret</span> <span class="hljs-string">or</span> <span class="hljs-string">its</span> <span class="hljs-string">key</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span><br>                          <span class="hljs-string">defined</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>                    <span class="hljs-attr">required:</span><br>                    <span class="hljs-bullet">-</span> <span class="hljs-string">key</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">nodeToNodeMeshEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;NodeToNodeMeshEnabled sets whether full node to node</span><br><span class="hljs-string">                  BGP mesh is enabled. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">prefixAdvertisements:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">PrefixAdvertisements</span> <span class="hljs-string">contains</span> <span class="hljs-string">per-prefix</span> <span class="hljs-string">advertisement</span><br>                  <span class="hljs-string">configuration.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">PrefixAdvertisement</span> <span class="hljs-string">configures</span> <span class="hljs-string">advertisement</span> <span class="hljs-string">properties</span><br>                    <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">specified</span> <span class="hljs-string">CIDR.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">cidr:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">for</span> <span class="hljs-string">which</span> <span class="hljs-string">properties</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">advertised.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">communities:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Communities</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">either</span> <span class="hljs-string">community</span> <span class="hljs-string">names</span><br>                        <span class="hljs-string">already</span> <span class="hljs-string">defined</span> <span class="hljs-string">in</span> <span class="hljs-string">`Specs.Communities`</span> <span class="hljs-string">or</span> <span class="hljs-string">community</span> <span class="hljs-string">value</span><br>                        <span class="hljs-string">of</span> <span class="hljs-string">format</span> <span class="hljs-string">`aa:nn`</span> <span class="hljs-string">or</span> <span class="hljs-string">`aa:nn:mm`.</span> <span class="hljs-string">For</span> <span class="hljs-string">standard</span> <span class="hljs-string">community</span> <span class="hljs-string">use</span><br>                        <span class="hljs-string">`aa:nn`</span> <span class="hljs-string">format,</span> <span class="hljs-string">where</span> <span class="hljs-string">`aa`</span> <span class="hljs-string">and</span> <span class="hljs-string">`nn`</span> <span class="hljs-string">are</span> <span class="hljs-number">16</span> <span class="hljs-string">bit</span> <span class="hljs-string">number.</span> <span class="hljs-string">For</span><br>                        <span class="hljs-string">large</span> <span class="hljs-string">community</span> <span class="hljs-string">use</span> <span class="hljs-string">`aa:nn:mm`</span> <span class="hljs-string">format,</span> <span class="hljs-string">where</span> <span class="hljs-string">`aa`,</span> <span class="hljs-string">`nn`</span> <span class="hljs-string">and</span><br>                        <span class="hljs-string">`mm`</span> <span class="hljs-string">are</span> <span class="hljs-number">32</span> <span class="hljs-string">bit</span> <span class="hljs-string">number.</span> <span class="hljs-string">Where,`aa`</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">AS</span> <span class="hljs-string">Number,</span> <span class="hljs-string">`nn`</span> <span class="hljs-string">and</span><br>                        <span class="hljs-string">`mm`</span> <span class="hljs-string">are</span> <span class="hljs-string">per-AS</span> <span class="hljs-string">identifier.</span><br>                      <span class="hljs-attr">items:</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">serviceClusterIPs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceClusterIPs</span> <span class="hljs-string">are</span> <span class="hljs-string">the</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">blocks</span> <span class="hljs-string">from</span> <span class="hljs-string">which</span> <span class="hljs-string">service</span><br>                  <span class="hljs-string">cluster</span> <span class="hljs-string">IPs</span> <span class="hljs-string">are</span> <span class="hljs-string">allocated.</span> <span class="hljs-string">If</span> <span class="hljs-string">specified,</span> <span class="hljs-string">Calico</span> <span class="hljs-string">will</span> <span class="hljs-string">advertise</span> <span class="hljs-string">these</span><br>                  <span class="hljs-string">blocks,</span> <span class="hljs-string">as</span> <span class="hljs-string">well</span> <span class="hljs-string">as</span> <span class="hljs-string">any</span> <span class="hljs-string">cluster</span> <span class="hljs-string">IPs</span> <span class="hljs-string">within</span> <span class="hljs-string">them.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceClusterIPBlock</span> <span class="hljs-string">represents</span> <span class="hljs-string">a</span> <span class="hljs-string">single</span> <span class="hljs-string">allowed</span> <span class="hljs-string">ClusterIP</span><br>                    <span class="hljs-string">CIDR</span> <span class="hljs-string">block.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">cidr:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">serviceExternalIPs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceExternalIPs</span> <span class="hljs-string">are</span> <span class="hljs-string">the</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">blocks</span> <span class="hljs-string">for</span> <span class="hljs-string">Kubernetes</span><br>                  <span class="hljs-string">Service</span> <span class="hljs-string">External</span> <span class="hljs-string">IPs.</span> <span class="hljs-string">Kubernetes</span> <span class="hljs-string">Service</span> <span class="hljs-string">ExternalIPs</span> <span class="hljs-string">will</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span><br>                  <span class="hljs-string">advertised</span> <span class="hljs-string">if</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span> <span class="hljs-string">within</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span> <span class="hljs-string">these</span> <span class="hljs-string">blocks.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceExternalIPBlock</span> <span class="hljs-string">represents</span> <span class="hljs-string">a</span> <span class="hljs-string">single</span> <span class="hljs-string">allowed</span><br>                    <span class="hljs-string">External</span> <span class="hljs-string">IP</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">block.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">cidr:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">serviceLoadBalancerIPs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceLoadBalancerIPs</span> <span class="hljs-string">are</span> <span class="hljs-string">the</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">blocks</span> <span class="hljs-string">for</span> <span class="hljs-string">Kubernetes</span><br>                  <span class="hljs-string">Service</span> <span class="hljs-string">LoadBalancer</span> <span class="hljs-string">IPs.</span> <span class="hljs-string">Kubernetes</span> <span class="hljs-string">Service</span> <span class="hljs-string">status.LoadBalancer.Ingress</span><br>                  <span class="hljs-string">IPs</span> <span class="hljs-string">will</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">advertised</span> <span class="hljs-string">if</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span> <span class="hljs-string">within</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span> <span class="hljs-string">these</span> <span class="hljs-string">blocks.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceLoadBalancerIPBlock</span> <span class="hljs-string">represents</span> <span class="hljs-string">a</span> <span class="hljs-string">single</span> <span class="hljs-string">allowed</span><br>                    <span class="hljs-string">LoadBalancer</span> <span class="hljs-string">IP</span> <span class="hljs-string">CIDR</span> <span class="hljs-string">block.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">cidr:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">bgppeers.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">BGPPeer</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">BGPPeerList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">bgppeers</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">bgppeer</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">BGPPeerSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">BGPPeer</span> <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">asNumber:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">AS</span> <span class="hljs-string">Number</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">peer.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">keepOriginalNextHop:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Option</span> <span class="hljs-string">to</span> <span class="hljs-string">keep</span> <span class="hljs-string">the</span> <span class="hljs-string">original</span> <span class="hljs-string">nexthop</span> <span class="hljs-string">field</span> <span class="hljs-string">when</span> <span class="hljs-string">routes</span><br>                  <span class="hljs-string">are</span> <span class="hljs-string">sent</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">BGP</span> <span class="hljs-string">Peer.</span> <span class="hljs-string">Setting</span> <span class="hljs-string">&quot;true&quot;</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">selected</span> <span class="hljs-string">BGP</span><br>                  <span class="hljs-string">Peers</span> <span class="hljs-string">node</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">the</span> <span class="hljs-string">&quot;next hop keep;&quot;</span> <span class="hljs-string">instead</span> <span class="hljs-string">of</span> <span class="hljs-string">&quot;next hop self;&quot;</span><span class="hljs-string">(default)</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">specific</span> <span class="hljs-string">branch</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Node</span> <span class="hljs-string">on</span> <span class="hljs-string">&quot;bird.cfg&quot;</span><span class="hljs-string">.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">maxRestartTime:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Time</span> <span class="hljs-string">to</span> <span class="hljs-string">allow</span> <span class="hljs-string">for</span> <span class="hljs-string">software</span> <span class="hljs-string">restart.</span>  <span class="hljs-string">When</span> <span class="hljs-string">specified,</span><br>                  <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">configured</span> <span class="hljs-string">as</span> <span class="hljs-string">the</span> <span class="hljs-string">graceful</span> <span class="hljs-string">restart</span> <span class="hljs-string">timeout.</span>  <span class="hljs-string">When</span> <span class="hljs-string">not</span> <span class="hljs-string">specified,</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">BIRD</span> <span class="hljs-string">default</span> <span class="hljs-string">of</span> <span class="hljs-string">120s</span> <span class="hljs-string">is</span> <span class="hljs-string">used.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">node:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">node</span> <span class="hljs-string">name</span> <span class="hljs-string">identifying</span> <span class="hljs-string">the</span> <span class="hljs-string">Calico</span> <span class="hljs-string">node</span> <span class="hljs-string">instance</span> <span class="hljs-string">that</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">targeted</span> <span class="hljs-string">by</span> <span class="hljs-string">this</span> <span class="hljs-string">peer.</span> <span class="hljs-string">If</span> <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">set,</span> <span class="hljs-string">and</span> <span class="hljs-literal">no</span> <span class="hljs-string">nodeSelector</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">specified,</span> <span class="hljs-string">then</span> <span class="hljs-string">this</span> <span class="hljs-string">BGP</span> <span class="hljs-string">peer</span> <span class="hljs-string">selects</span> <span class="hljs-string">all</span> <span class="hljs-string">nodes</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">nodeSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">nodes</span> <span class="hljs-string">that</span> <span class="hljs-string">should</span> <span class="hljs-string">have</span> <span class="hljs-string">this</span> <span class="hljs-string">peering.</span>  <span class="hljs-string">When</span><br>                  <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">set,</span> <span class="hljs-string">the</span> <span class="hljs-string">Node</span> <span class="hljs-string">field</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">empty.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">numAllowedLocalASNumbers:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Maximum</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">local</span> <span class="hljs-string">AS</span> <span class="hljs-string">numbers</span> <span class="hljs-string">that</span> <span class="hljs-string">are</span> <span class="hljs-string">allowed</span> <span class="hljs-string">in</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">AS</span> <span class="hljs-string">path</span> <span class="hljs-string">for</span> <span class="hljs-string">received</span> <span class="hljs-string">routes.</span> <span class="hljs-string">This</span> <span class="hljs-string">removes</span> <span class="hljs-string">BGP</span> <span class="hljs-string">loop</span> <span class="hljs-string">prevention</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">should</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">used</span> <span class="hljs-string">if</span> <span class="hljs-string">absolutely</span> <span class="hljs-string">necesssary.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">password:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Optional</span> <span class="hljs-string">BGP</span> <span class="hljs-string">password</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">peerings</span> <span class="hljs-string">generated</span> <span class="hljs-string">by</span> <span class="hljs-string">this</span><br>                  <span class="hljs-string">BGPPeer</span> <span class="hljs-string">resource.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">secretKeyRef:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Selects</span> <span class="hljs-string">a</span> <span class="hljs-string">key</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">secret</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">node</span> <span class="hljs-string">pod&#x27;s</span> <span class="hljs-string">namespace.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">key:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">key</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">secret</span> <span class="hljs-string">to</span> <span class="hljs-string">select</span> <span class="hljs-string">from.</span>  <span class="hljs-string">Must</span> <span class="hljs-string">be</span><br>                          <span class="hljs-string">a</span> <span class="hljs-string">valid</span> <span class="hljs-string">secret</span> <span class="hljs-string">key.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">name:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names</span><br><span class="hljs-string">                          TODO: Add other useful fields. apiVersion, kind, uid?&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">optional:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Specify</span> <span class="hljs-string">whether</span> <span class="hljs-string">the</span> <span class="hljs-string">Secret</span> <span class="hljs-string">or</span> <span class="hljs-string">its</span> <span class="hljs-string">key</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span><br>                          <span class="hljs-string">defined</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>                    <span class="hljs-attr">required:</span><br>                    <span class="hljs-bullet">-</span> <span class="hljs-string">key</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">peerIP:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">IP</span> <span class="hljs-string">address</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">peer</span> <span class="hljs-string">followed</span> <span class="hljs-string">by</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">port</span><br>                  <span class="hljs-string">number</span> <span class="hljs-string">to</span> <span class="hljs-string">peer</span> <span class="hljs-string">with.</span> <span class="hljs-string">If</span> <span class="hljs-string">port</span> <span class="hljs-string">number</span> <span class="hljs-string">is</span> <span class="hljs-string">given,</span> <span class="hljs-string">format</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">`[&lt;IPv6&gt;]:port`</span><br>                  <span class="hljs-string">or</span> <span class="hljs-string">`&lt;IPv4&gt;:&lt;port&gt;`</span> <span class="hljs-string">for</span> <span class="hljs-string">IPv4.</span> <span class="hljs-string">If</span> <span class="hljs-string">optional</span> <span class="hljs-string">port</span> <span class="hljs-string">number</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">set,</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">this</span> <span class="hljs-string">peer</span> <span class="hljs-string">IP</span> <span class="hljs-string">and</span> <span class="hljs-string">ASNumber</span> <span class="hljs-string">belongs</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">calico/node</span> <span class="hljs-string">with</span> <span class="hljs-string">ListenPort</span><br>                  <span class="hljs-string">set</span> <span class="hljs-string">in</span> <span class="hljs-string">BGPConfiguration,</span> <span class="hljs-string">then</span> <span class="hljs-string">we</span> <span class="hljs-string">use</span> <span class="hljs-string">that</span> <span class="hljs-string">port</span> <span class="hljs-string">to</span> <span class="hljs-string">peer.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">peerSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">remote</span> <span class="hljs-string">nodes</span> <span class="hljs-string">to</span> <span class="hljs-string">peer</span> <span class="hljs-string">with.</span>  <span class="hljs-string">When</span> <span class="hljs-string">this</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">set,</span> <span class="hljs-string">the</span> <span class="hljs-string">PeerIP</span> <span class="hljs-string">and</span> <span class="hljs-string">ASNumber</span> <span class="hljs-string">fields</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">empty.</span>  <span class="hljs-string">For</span> <span class="hljs-string">each</span><br>                  <span class="hljs-string">peering</span> <span class="hljs-string">between</span> <span class="hljs-string">the</span> <span class="hljs-string">local</span> <span class="hljs-string">node</span> <span class="hljs-string">and</span> <span class="hljs-string">selected</span> <span class="hljs-string">remote</span> <span class="hljs-string">nodes,</span> <span class="hljs-string">we</span> <span class="hljs-string">configure</span><br>                  <span class="hljs-string">an</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">peering</span> <span class="hljs-string">if</span> <span class="hljs-string">both</span> <span class="hljs-string">ends</span> <span class="hljs-string">have</span> <span class="hljs-string">NodeBGPSpec.IPv4Address</span> <span class="hljs-string">specified,</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">an</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">peering</span> <span class="hljs-string">if</span> <span class="hljs-string">both</span> <span class="hljs-string">ends</span> <span class="hljs-string">have</span> <span class="hljs-string">NodeBGPSpec.IPv6Address</span> <span class="hljs-string">specified.</span>  <span class="hljs-string">The</span><br>                  <span class="hljs-string">remote</span> <span class="hljs-string">AS</span> <span class="hljs-string">number</span> <span class="hljs-string">comes</span> <span class="hljs-string">from</span> <span class="hljs-string">the</span> <span class="hljs-string">remote</span> <span class="hljs-string">node&#x27;s</span> <span class="hljs-string">NodeBGPSpec.ASNumber,</span><br>                  <span class="hljs-string">or</span> <span class="hljs-string">the</span> <span class="hljs-string">global</span> <span class="hljs-string">default</span> <span class="hljs-string">if</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">set.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">reachableBy:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Add</span> <span class="hljs-string">an</span> <span class="hljs-string">exact,</span> <span class="hljs-string">i.e.</span> <span class="hljs-string">/32,</span> <span class="hljs-string">static</span> <span class="hljs-string">route</span> <span class="hljs-string">toward</span> <span class="hljs-string">peer</span> <span class="hljs-string">IP</span> <span class="hljs-string">in</span><br>                  <span class="hljs-string">order</span> <span class="hljs-string">to</span> <span class="hljs-string">prevent</span> <span class="hljs-string">route</span> <span class="hljs-string">flapping.</span> <span class="hljs-string">ReachableBy</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">address</span><br>                  <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">gateway</span> <span class="hljs-string">which</span> <span class="hljs-string">peer</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">reached</span> <span class="hljs-string">by.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">sourceAddress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Specifies</span> <span class="hljs-string">whether</span> <span class="hljs-string">and</span> <span class="hljs-string">how</span> <span class="hljs-string">to</span> <span class="hljs-string">configure</span> <span class="hljs-string">a</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span><br>                  <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">peerings</span> <span class="hljs-string">generated</span> <span class="hljs-string">by</span> <span class="hljs-string">this</span> <span class="hljs-string">BGPPeer</span> <span class="hljs-string">resource.</span>  <span class="hljs-string">Default</span> <span class="hljs-string">value</span><br>                  <span class="hljs-string">&quot;UseNodeIP&quot;</span> <span class="hljs-string">means</span> <span class="hljs-string">to</span> <span class="hljs-string">configure</span> <span class="hljs-string">the</span> <span class="hljs-string">node</span> <span class="hljs-string">IP</span> <span class="hljs-string">as</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">address.</span>  <span class="hljs-string">&quot;None&quot;</span><br>                  <span class="hljs-string">means</span> <span class="hljs-string">not</span> <span class="hljs-string">to</span> <span class="hljs-string">configure</span> <span class="hljs-string">a</span> <span class="hljs-string">source</span> <span class="hljs-string">address.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">ttlSecurity:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">TTLSecurity</span> <span class="hljs-string">enables</span> <span class="hljs-string">the</span> <span class="hljs-string">generalized</span> <span class="hljs-string">TTL</span> <span class="hljs-string">security</span> <span class="hljs-string">mechanism</span><br>                  <span class="hljs-string">(GTSM)</span> <span class="hljs-string">which</span> <span class="hljs-string">protects</span> <span class="hljs-string">against</span> <span class="hljs-string">spoofed</span> <span class="hljs-string">packets</span> <span class="hljs-string">by</span> <span class="hljs-string">ignoring</span> <span class="hljs-string">received</span><br>                  <span class="hljs-string">packets</span> <span class="hljs-string">with</span> <span class="hljs-string">a</span> <span class="hljs-string">smaller</span> <span class="hljs-string">than</span> <span class="hljs-string">expected</span> <span class="hljs-string">TTL</span> <span class="hljs-string">value.</span> <span class="hljs-string">The</span> <span class="hljs-string">provided</span> <span class="hljs-string">value</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">hops</span> <span class="hljs-string">(edges)</span> <span class="hljs-string">between</span> <span class="hljs-string">the</span> <span class="hljs-string">peers.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">blockaffinities.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">BlockAffinity</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">BlockAffinityList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">blockaffinities</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">blockaffinity</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">BlockAffinitySpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">BlockAffinity</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">cidr:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">deleted:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Deleted</span> <span class="hljs-string">indicates</span> <span class="hljs-string">that</span> <span class="hljs-string">this</span> <span class="hljs-string">block</span> <span class="hljs-string">affinity</span> <span class="hljs-string">is</span> <span class="hljs-string">being</span> <span class="hljs-string">deleted.</span><br>                  <span class="hljs-string">This</span> <span class="hljs-string">field</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">string</span> <span class="hljs-string">for</span> <span class="hljs-string">compatibility</span> <span class="hljs-string">with</span> <span class="hljs-string">older</span> <span class="hljs-string">releases</span> <span class="hljs-string">that</span><br>                  <span class="hljs-string">mistakenly</span> <span class="hljs-string">treat</span> <span class="hljs-string">this</span> <span class="hljs-string">field</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">string.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">node:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">state:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">cidr</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">deleted</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">node</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">state</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">controller-gen.kubebuilder.io/version:</span> <span class="hljs-string">(devel)</span><br>  <span class="hljs-attr">creationTimestamp:</span> <span class="hljs-literal">null</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">caliconodestatuses.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">CalicoNodeStatus</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">CalicoNodeStatusList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">caliconodestatuses</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">caliconodestatus</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodeStatusSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">CalicoNodeStatus</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">classes:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Classes</span> <span class="hljs-string">declares</span> <span class="hljs-string">the</span> <span class="hljs-string">types</span> <span class="hljs-string">of</span> <span class="hljs-string">information</span> <span class="hljs-string">to</span> <span class="hljs-string">monitor</span><br>                  <span class="hljs-string">for</span> <span class="hljs-string">this</span> <span class="hljs-string">calico/node,</span> <span class="hljs-string">and</span> <span class="hljs-string">allows</span> <span class="hljs-string">for</span> <span class="hljs-string">selective</span> <span class="hljs-string">status</span> <span class="hljs-string">reporting</span><br>                  <span class="hljs-string">about</span> <span class="hljs-string">certain</span> <span class="hljs-string">subsets</span> <span class="hljs-string">of</span> <span class="hljs-string">information.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">node:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">node</span> <span class="hljs-string">name</span> <span class="hljs-string">identifies</span> <span class="hljs-string">the</span> <span class="hljs-string">Calico</span> <span class="hljs-string">node</span> <span class="hljs-string">instance</span> <span class="hljs-string">for</span><br>                  <span class="hljs-string">node</span> <span class="hljs-string">status.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">updatePeriodSeconds:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">UpdatePeriodSeconds</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">period</span> <span class="hljs-string">at</span> <span class="hljs-string">which</span> <span class="hljs-string">CalicoNodeStatus</span><br>                  <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">updated.</span> <span class="hljs-string">Set</span> <span class="hljs-string">to</span> <span class="hljs-number">0</span> <span class="hljs-string">to</span> <span class="hljs-string">disable</span> <span class="hljs-string">CalicoNodeStatus</span> <span class="hljs-string">refresh.</span><br>                  <span class="hljs-string">Maximum</span> <span class="hljs-string">update</span> <span class="hljs-string">period</span> <span class="hljs-string">is</span> <span class="hljs-string">one</span> <span class="hljs-string">day.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">status:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodeStatusStatus</span> <span class="hljs-string">defines</span> <span class="hljs-string">the</span> <span class="hljs-string">observed</span> <span class="hljs-string">state</span> <span class="hljs-string">of</span> <span class="hljs-string">CalicoNodeStatus.</span><br>              <span class="hljs-literal">No</span> <span class="hljs-string">validation</span> <span class="hljs-string">needed</span> <span class="hljs-string">for</span> <span class="hljs-string">status</span> <span class="hljs-string">since</span> <span class="hljs-string">it</span> <span class="hljs-string">is</span> <span class="hljs-string">updated</span> <span class="hljs-string">by</span> <span class="hljs-string">Calico.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">agent:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Agent</span> <span class="hljs-string">holds</span> <span class="hljs-string">agent</span> <span class="hljs-string">status</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">birdV4:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">BIRDV4</span> <span class="hljs-string">represents</span> <span class="hljs-string">the</span> <span class="hljs-string">latest</span> <span class="hljs-string">observed</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">bird4.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">lastBootTime:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">LastBootTime</span> <span class="hljs-string">holds</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">lastBootTime</span><br>                          <span class="hljs-string">from</span> <span class="hljs-string">bird.ctl</span> <span class="hljs-string">output.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">lastReconfigurationTime:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">LastReconfigurationTime</span> <span class="hljs-string">holds</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">lastReconfigTime</span><br>                          <span class="hljs-string">from</span> <span class="hljs-string">bird.ctl</span> <span class="hljs-string">output.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">routerID:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Router</span> <span class="hljs-string">ID</span> <span class="hljs-string">used</span> <span class="hljs-string">by</span> <span class="hljs-string">bird.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">state:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">state</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">Daemon.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">version:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">daemon</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">birdV6:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">BIRDV6</span> <span class="hljs-string">represents</span> <span class="hljs-string">the</span> <span class="hljs-string">latest</span> <span class="hljs-string">observed</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">bird6.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">lastBootTime:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">LastBootTime</span> <span class="hljs-string">holds</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">lastBootTime</span><br>                          <span class="hljs-string">from</span> <span class="hljs-string">bird.ctl</span> <span class="hljs-string">output.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">lastReconfigurationTime:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">LastReconfigurationTime</span> <span class="hljs-string">holds</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">lastReconfigTime</span><br>                          <span class="hljs-string">from</span> <span class="hljs-string">bird.ctl</span> <span class="hljs-string">output.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">routerID:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Router</span> <span class="hljs-string">ID</span> <span class="hljs-string">used</span> <span class="hljs-string">by</span> <span class="hljs-string">bird.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">state:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">state</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">Daemon.</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">version:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">daemon</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">bgp:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BGP</span> <span class="hljs-string">holds</span> <span class="hljs-string">node</span> <span class="hljs-string">BGP</span> <span class="hljs-string">status.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">numberEstablishedV4:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">total</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">established</span> <span class="hljs-string">bgp</span> <span class="hljs-string">sessions.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">numberEstablishedV6:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">total</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">established</span> <span class="hljs-string">bgp</span> <span class="hljs-string">sessions.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">numberNotEstablishedV4:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">total</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">non-established</span> <span class="hljs-string">bgp</span> <span class="hljs-string">sessions.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">numberNotEstablishedV6:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">total</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">non-established</span> <span class="hljs-string">bgp</span> <span class="hljs-string">sessions.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">peersV4:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">PeersV4</span> <span class="hljs-string">represents</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">BGP</span> <span class="hljs-string">peers</span> <span class="hljs-string">status</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                    <span class="hljs-attr">items:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodePeer</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">BGP</span> <span class="hljs-string">peers</span><br>                        <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">peerIP:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">IP</span> <span class="hljs-string">address</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">peer</span> <span class="hljs-string">whose</span> <span class="hljs-string">condition</span> <span class="hljs-string">we</span> <span class="hljs-string">are</span><br>                            <span class="hljs-string">reporting.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">since:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Since</span> <span class="hljs-string">the</span> <span class="hljs-string">state</span> <span class="hljs-string">or</span> <span class="hljs-string">reason</span> <span class="hljs-string">last</span> <span class="hljs-string">changed.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">state:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">State</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">session</span> <span class="hljs-string">state.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">indicates</span> <span class="hljs-string">whether</span> <span class="hljs-string">this</span> <span class="hljs-string">peer</span> <span class="hljs-string">is</span> <span class="hljs-string">configured</span><br>                            <span class="hljs-string">via</span> <span class="hljs-string">the</span> <span class="hljs-string">node-to-node</span> <span class="hljs-string">mesh,</span> <span class="hljs-string">or</span> <span class="hljs-string">via</span> <span class="hljs-string">en</span> <span class="hljs-string">explicit</span> <span class="hljs-string">global</span> <span class="hljs-string">or</span><br>                            <span class="hljs-string">per-node</span> <span class="hljs-string">BGPPeer</span> <span class="hljs-string">object.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                  <span class="hljs-attr">peersV6:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">PeersV6</span> <span class="hljs-string">represents</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">BGP</span> <span class="hljs-string">peers</span> <span class="hljs-string">status</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                    <span class="hljs-attr">items:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodePeer</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">BGP</span> <span class="hljs-string">peers</span><br>                        <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">peerIP:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">IP</span> <span class="hljs-string">address</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">peer</span> <span class="hljs-string">whose</span> <span class="hljs-string">condition</span> <span class="hljs-string">we</span> <span class="hljs-string">are</span><br>                            <span class="hljs-string">reporting.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">since:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Since</span> <span class="hljs-string">the</span> <span class="hljs-string">state</span> <span class="hljs-string">or</span> <span class="hljs-string">reason</span> <span class="hljs-string">last</span> <span class="hljs-string">changed.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">state:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">State</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">BGP</span> <span class="hljs-string">session</span> <span class="hljs-string">state.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">indicates</span> <span class="hljs-string">whether</span> <span class="hljs-string">this</span> <span class="hljs-string">peer</span> <span class="hljs-string">is</span> <span class="hljs-string">configured</span><br>                            <span class="hljs-string">via</span> <span class="hljs-string">the</span> <span class="hljs-string">node-to-node</span> <span class="hljs-string">mesh,</span> <span class="hljs-string">or</span> <span class="hljs-string">via</span> <span class="hljs-string">en</span> <span class="hljs-string">explicit</span> <span class="hljs-string">global</span> <span class="hljs-string">or</span><br>                            <span class="hljs-string">per-node</span> <span class="hljs-string">BGPPeer</span> <span class="hljs-string">object.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                <span class="hljs-attr">required:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">numberEstablishedV4</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">numberEstablishedV6</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">numberNotEstablishedV4</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">numberNotEstablishedV6</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">lastUpdated:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">LastUpdated</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">timestamp</span> <span class="hljs-string">representing</span> <span class="hljs-string">the</span> <span class="hljs-string">server</span> <span class="hljs-string">time</span><br>                  <span class="hljs-string">when</span> <span class="hljs-string">CalicoNodeStatus</span> <span class="hljs-string">object</span> <span class="hljs-string">last</span> <span class="hljs-string">updated.</span> <span class="hljs-string">It</span> <span class="hljs-string">is</span> <span class="hljs-string">represented</span> <span class="hljs-string">in</span><br>                  <span class="hljs-string">RFC3339</span> <span class="hljs-string">form</span> <span class="hljs-string">and</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">UTC.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">date-time</span><br>                <span class="hljs-attr">nullable:</span> <span class="hljs-literal">true</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">routes:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Routes</span> <span class="hljs-string">reports</span> <span class="hljs-string">routes</span> <span class="hljs-string">known</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">Calico</span> <span class="hljs-string">BGP</span> <span class="hljs-string">daemon</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">routesV4:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">RoutesV4</span> <span class="hljs-string">represents</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">routes</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                    <span class="hljs-attr">items:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodeRoute</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">BGP</span> <span class="hljs-string">routes</span><br>                        <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">destination:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">route.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">gateway:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Gateway</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">destination.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">interface:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Interface</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">destination</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">learnedFrom:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">LearnedFrom</span> <span class="hljs-string">contains</span> <span class="hljs-string">information</span> <span class="hljs-string">regarding</span><br>                            <span class="hljs-string">where</span> <span class="hljs-string">this</span> <span class="hljs-string">route</span> <span class="hljs-string">originated.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">peerIP:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">If</span> <span class="hljs-string">sourceType</span> <span class="hljs-string">is</span> <span class="hljs-string">NodeMesh</span> <span class="hljs-string">or</span> <span class="hljs-string">BGPPeer,</span> <span class="hljs-string">IP</span><br>                                <span class="hljs-string">address</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">router</span> <span class="hljs-string">that</span> <span class="hljs-string">sent</span> <span class="hljs-string">us</span> <span class="hljs-string">this</span> <span class="hljs-string">route.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">sourceType:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">where</span> <span class="hljs-string">a</span> <span class="hljs-string">route</span> <span class="hljs-string">is</span> <span class="hljs-string">learned</span><br>                                <span class="hljs-string">from.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">indicates</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">route</span> <span class="hljs-string">is</span> <span class="hljs-string">being</span> <span class="hljs-string">used</span> <span class="hljs-string">for</span><br>                            <span class="hljs-string">forwarding</span> <span class="hljs-string">or</span> <span class="hljs-string">not.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                  <span class="hljs-attr">routesV6:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">RoutesV6</span> <span class="hljs-string">represents</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">routes</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                    <span class="hljs-attr">items:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoNodeRoute</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">status</span> <span class="hljs-string">of</span> <span class="hljs-string">BGP</span> <span class="hljs-string">routes</span><br>                        <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">node.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">destination:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">route.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">gateway:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Gateway</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">destination.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">interface:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Interface</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">destination</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">learnedFrom:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">LearnedFrom</span> <span class="hljs-string">contains</span> <span class="hljs-string">information</span> <span class="hljs-string">regarding</span><br>                            <span class="hljs-string">where</span> <span class="hljs-string">this</span> <span class="hljs-string">route</span> <span class="hljs-string">originated.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">peerIP:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">If</span> <span class="hljs-string">sourceType</span> <span class="hljs-string">is</span> <span class="hljs-string">NodeMesh</span> <span class="hljs-string">or</span> <span class="hljs-string">BGPPeer,</span> <span class="hljs-string">IP</span><br>                                <span class="hljs-string">address</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">router</span> <span class="hljs-string">that</span> <span class="hljs-string">sent</span> <span class="hljs-string">us</span> <span class="hljs-string">this</span> <span class="hljs-string">route.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">sourceType:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">where</span> <span class="hljs-string">a</span> <span class="hljs-string">route</span> <span class="hljs-string">is</span> <span class="hljs-string">learned</span><br>                                <span class="hljs-string">from.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Type</span> <span class="hljs-string">indicates</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">route</span> <span class="hljs-string">is</span> <span class="hljs-string">being</span> <span class="hljs-string">used</span> <span class="hljs-string">for</span><br>                            <span class="hljs-string">forwarding</span> <span class="hljs-string">or</span> <span class="hljs-string">not.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">clusterinformations.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterInformation</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">ClusterInformationList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">clusterinformations</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">clusterinformation</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">ClusterInformation</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster</span> <span class="hljs-string">specific</span> <span class="hljs-string">information.</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">ClusterInformationSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">describing</span><br>              <span class="hljs-string">the</span> <span class="hljs-string">cluster.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">calicoVersion:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">CalicoVersion</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">Calico</span> <span class="hljs-string">that</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">running</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">clusterGUID:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ClusterGUID</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">GUID</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">clusterType:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ClusterType</span> <span class="hljs-string">describes</span> <span class="hljs-string">the</span> <span class="hljs-string">type</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">datastoreReady:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">DatastoreReady</span> <span class="hljs-string">is</span> <span class="hljs-string">used</span> <span class="hljs-string">during</span> <span class="hljs-string">significant</span> <span class="hljs-string">datastore</span> <span class="hljs-string">migrations</span><br>                  <span class="hljs-string">to</span> <span class="hljs-string">signal</span> <span class="hljs-string">to</span> <span class="hljs-string">components</span> <span class="hljs-string">such</span> <span class="hljs-string">as</span> <span class="hljs-string">Felix</span> <span class="hljs-string">that</span> <span class="hljs-string">it</span> <span class="hljs-string">should</span> <span class="hljs-string">wait</span> <span class="hljs-string">before</span><br>                  <span class="hljs-string">accessing</span> <span class="hljs-string">the</span> <span class="hljs-string">datastore.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">variant:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Variant</span> <span class="hljs-string">declares</span> <span class="hljs-string">which</span> <span class="hljs-string">variant</span> <span class="hljs-string">of</span> <span class="hljs-string">Calico</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">active.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">felixconfigurations.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">FelixConfiguration</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">FelixConfigurationList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">felixconfigurations</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">felixconfiguration</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">Felix</span> <span class="hljs-string">Configuration</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">configuration</span> <span class="hljs-string">for</span> <span class="hljs-string">Felix.</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">FelixConfigurationSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Felix</span> <span class="hljs-string">configuration.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">allowIPIPPacketsFromWorkloads:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;AllowIPIPPacketsFromWorkloads controls whether Felix</span><br><span class="hljs-string">                  will add a rule to drop IPIP encapsulated traffic from workloads</span><br><span class="hljs-string">                  [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">allowVXLANPacketsFromWorkloads:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;AllowVXLANPacketsFromWorkloads controls whether Felix</span><br><span class="hljs-string">                  will add a rule to drop VXLAN encapsulated traffic from workloads</span><br><span class="hljs-string">                  [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">awsSrcDstCheck:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Set source-destination-check on AWS EC2 instances. Accepted</span><br><span class="hljs-string">                  value must be one of &quot;DoNothing&quot;, &quot;Enable&quot; or &quot;Disable&quot;. [Default:</span><br><span class="hljs-string">                  DoNothing]&#x27;</span><br>                <span class="hljs-attr">enum:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">DoNothing</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">Enable</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">Disable</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfConnectTimeLoadBalancingEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFConnectTimeLoadBalancingEnabled when in BPF mode,</span><br><span class="hljs-string">                  controls whether Felix installs the connection-time load balancer.  The</span><br><span class="hljs-string">                  connect-time load balancer is required for the host to be able to</span><br><span class="hljs-string">                  reach Kubernetes services and it improves the performance of pod-to-service</span><br><span class="hljs-string">                  connections.  The only reason to disable it is for debugging purposes.  [Default:</span><br><span class="hljs-string">                  true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfDataIfacePattern:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFDataIfacePattern</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">regular</span> <span class="hljs-string">expression</span> <span class="hljs-string">that</span> <span class="hljs-string">controls</span><br>                  <span class="hljs-string">which</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">Felix</span> <span class="hljs-string">should</span> <span class="hljs-string">attach</span> <span class="hljs-string">BPF</span> <span class="hljs-string">programs</span> <span class="hljs-string">to</span> <span class="hljs-string">in</span> <span class="hljs-string">order</span> <span class="hljs-string">to</span><br>                  <span class="hljs-string">catch</span> <span class="hljs-string">traffic</span> <span class="hljs-string">to/from</span> <span class="hljs-string">the</span> <span class="hljs-string">network.</span>  <span class="hljs-string">This</span> <span class="hljs-string">needs</span> <span class="hljs-string">to</span> <span class="hljs-string">match</span> <span class="hljs-string">the</span> <span class="hljs-string">interfaces</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">Calico</span> <span class="hljs-string">workload</span> <span class="hljs-string">traffic</span> <span class="hljs-string">flows</span> <span class="hljs-string">over</span> <span class="hljs-string">as</span> <span class="hljs-string">well</span> <span class="hljs-string">as</span> <span class="hljs-string">any</span> <span class="hljs-string">interfaces</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">handle</span> <span class="hljs-string">incoming</span> <span class="hljs-string">traffic</span> <span class="hljs-string">to</span> <span class="hljs-string">nodeports</span> <span class="hljs-string">and</span> <span class="hljs-string">services</span> <span class="hljs-string">from</span> <span class="hljs-string">outside</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">cluster.</span>  <span class="hljs-string">It</span> <span class="hljs-string">should</span> <span class="hljs-string">not</span> <span class="hljs-string">match</span> <span class="hljs-string">the</span> <span class="hljs-string">workload</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">(usually</span><br>                  <span class="hljs-string">named</span> <span class="hljs-string">cali...).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfDisableUnprivileged:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled</span><br><span class="hljs-string">                  sysctl to disable unprivileged use of BPF.  This ensures that unprivileged</span><br><span class="hljs-string">                  users cannot access Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s BPF maps and cannot insert their own</span><br><span class="hljs-string">                  BPF programs to interfere with Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFEnabled, if enabled Felix will use the BPF dataplane.</span><br><span class="hljs-string">                  [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfEnforceRPF:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFEnforceRPF enforce strict RPF on all host interfaces</span><br><span class="hljs-string">                  with BPF programs regardless of what is the per-interfaces or global</span><br><span class="hljs-string">                  setting. Possible values are Disabled, Strict or Loose. [Default:</span><br><span class="hljs-string">                  Strict]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfExtToServiceConnmark:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFExtToServiceConnmark in BPF mode, control a 32bit</span><br><span class="hljs-string">                  mark that is set on connections from an external client to a local</span><br><span class="hljs-string">                  service. This mark allows us to control how packets of that connection</span><br><span class="hljs-string">                  are routed within the host and how is routing interpreted by RPF</span><br><span class="hljs-string">                  check. [Default: 0]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfExternalServiceMode:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFExternalServiceMode in BPF mode, controls how connections</span><br><span class="hljs-string">                  from outside the cluster to services (node ports and cluster IPs)</span><br><span class="hljs-string">                  are forwarded to remote workloads.  If set to &quot;Tunnel&quot; then both</span><br><span class="hljs-string">                  request and response traffic is tunneled to the remote node.  If</span><br><span class="hljs-string">                  set to &quot;DSR&quot;, the request traffic is tunneled but the response traffic</span><br><span class="hljs-string">                  is sent directly from the remote node.  In &quot;DSR&quot; mode, the remote</span><br><span class="hljs-string">                  node appears to use the IP of the ingress node; this requires a</span><br><span class="hljs-string">                  permissive L2 network.  [Default: Tunnel]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfHostConntrackBypass:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFHostConntrackBypass Controls whether to bypass Linux</span><br><span class="hljs-string">                  conntrack in BPF mode for workloads and services. [Default: true</span><br><span class="hljs-string">                  - bypass Linux conntrack]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfKubeProxyEndpointSlicesEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFKubeProxyEndpointSlicesEnabled</span> <span class="hljs-string">in</span> <span class="hljs-string">BPF</span> <span class="hljs-string">mode,</span> <span class="hljs-string">controls</span><br>                  <span class="hljs-string">whether</span> <span class="hljs-string">Felix&#x27;s</span> <span class="hljs-string">embedded</span> <span class="hljs-string">kube-proxy</span> <span class="hljs-string">accepts</span> <span class="hljs-string">EndpointSlices</span> <span class="hljs-string">or</span> <span class="hljs-string">not.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfKubeProxyIptablesCleanupEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF</span><br><span class="hljs-string">                  mode, Felix will proactively clean up the upstream Kubernetes kube-proxy<span class="hljs-char escape_">&#x27;&#x27;</span>s</span><br><span class="hljs-string">                  iptables chains.  Should only be enabled if kube-proxy is not running.  [Default:</span><br><span class="hljs-string">                  true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">bpfKubeProxyMinSyncPeriod:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFKubeProxyMinSyncPeriod, in BPF mode, controls the</span><br><span class="hljs-string">                  minimum time between updates to the dataplane for Felix<span class="hljs-char escape_">&#x27;&#x27;</span>s embedded</span><br><span class="hljs-string">                  kube-proxy.  Lower values give reduced set-up latency.  Higher values</span><br><span class="hljs-string">                  reduce Felix CPU usage by batching up more work.  [Default: 1s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfL3IfacePattern:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFL3IfacePattern</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">regular</span> <span class="hljs-string">expression</span> <span class="hljs-string">that</span> <span class="hljs-string">allows</span><br>                  <span class="hljs-string">to</span> <span class="hljs-string">list</span> <span class="hljs-string">tunnel</span> <span class="hljs-string">devices</span> <span class="hljs-string">like</span> <span class="hljs-string">wireguard</span> <span class="hljs-string">or</span> <span class="hljs-string">vxlan</span> <span class="hljs-string">(i.e.,</span> <span class="hljs-string">L3</span> <span class="hljs-string">devices)</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">addition</span> <span class="hljs-string">to</span> <span class="hljs-string">BPFDataIfacePattern.</span> <span class="hljs-string">That</span> <span class="hljs-string">is,</span> <span class="hljs-string">tunnel</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">not</span><br>                  <span class="hljs-string">created</span> <span class="hljs-string">by</span> <span class="hljs-string">Calico,</span> <span class="hljs-string">that</span> <span class="hljs-string">Calico</span> <span class="hljs-string">workload</span> <span class="hljs-string">traffic</span> <span class="hljs-string">flows</span> <span class="hljs-string">over</span> <span class="hljs-string">as</span> <span class="hljs-string">well</span><br>                  <span class="hljs-string">as</span> <span class="hljs-string">any</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">that</span> <span class="hljs-string">handle</span> <span class="hljs-string">incoming</span> <span class="hljs-string">traffic</span> <span class="hljs-string">to</span> <span class="hljs-string">nodeports</span> <span class="hljs-string">and</span><br>                  <span class="hljs-string">services</span> <span class="hljs-string">from</span> <span class="hljs-string">outside</span> <span class="hljs-string">the</span> <span class="hljs-string">cluster.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfLogLevel:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFLogLevel controls the log level of the BPF programs</span><br><span class="hljs-string">                  when in BPF dataplane mode.  One of &quot;Off&quot;, &quot;Info&quot;, or &quot;Debug&quot;.  The</span><br><span class="hljs-string">                  logs are emitted to the BPF trace pipe, accessible with the command</span><br><span class="hljs-string">                  `tc exec bpf debug`. [Default: Off].&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">bpfMapSizeConntrack:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFMapSizeConntrack sets the size for the conntrack</span><br><span class="hljs-string">                  map.  This map must be large enough to hold an entry for each active</span><br><span class="hljs-string">                  connection.  Warning: changing the size of the conntrack map can</span><br><span class="hljs-string">                  cause disruption.&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeIPSets:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFMapSizeIPSets</span> <span class="hljs-string">sets</span> <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">for</span> <span class="hljs-string">ipsets</span> <span class="hljs-string">map.</span>  <span class="hljs-string">The</span> <span class="hljs-string">IP</span><br>                  <span class="hljs-string">sets</span> <span class="hljs-string">map</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">large</span> <span class="hljs-string">enough</span> <span class="hljs-string">to</span> <span class="hljs-string">hold</span> <span class="hljs-string">an</span> <span class="hljs-string">entry</span> <span class="hljs-string">for</span> <span class="hljs-string">each</span> <span class="hljs-string">endpoint</span><br>                  <span class="hljs-string">matched</span> <span class="hljs-string">by</span> <span class="hljs-string">every</span> <span class="hljs-string">selector</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">source/destination</span> <span class="hljs-string">matches</span> <span class="hljs-string">in</span> <span class="hljs-string">network</span><br>                  <span class="hljs-string">policy.</span>  <span class="hljs-string">Selectors</span> <span class="hljs-string">such</span> <span class="hljs-string">as</span> <span class="hljs-string">&quot;all()&quot;</span> <span class="hljs-string">can</span> <span class="hljs-string">result</span> <span class="hljs-string">in</span> <span class="hljs-string">large</span> <span class="hljs-string">numbers</span> <span class="hljs-string">of</span><br>                  <span class="hljs-string">entries</span> <span class="hljs-string">(one</span> <span class="hljs-string">entry</span> <span class="hljs-string">per</span> <span class="hljs-string">endpoint</span> <span class="hljs-string">in</span> <span class="hljs-string">that</span> <span class="hljs-string">case).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeIfState:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFMapSizeIfState</span> <span class="hljs-string">sets</span> <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">for</span> <span class="hljs-string">ifstate</span> <span class="hljs-string">map.</span>  <span class="hljs-string">The</span><br>                  <span class="hljs-string">ifstate</span> <span class="hljs-string">map</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">large</span> <span class="hljs-string">enough</span> <span class="hljs-string">to</span> <span class="hljs-string">hold</span> <span class="hljs-string">an</span> <span class="hljs-string">entry</span> <span class="hljs-string">for</span> <span class="hljs-string">each</span> <span class="hljs-string">device</span><br>                  <span class="hljs-string">(host</span> <span class="hljs-string">+</span> <span class="hljs-string">workloads)</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">host.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeNATAffinity:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeNATBackend:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFMapSizeNATBackend</span> <span class="hljs-string">sets</span> <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">for</span> <span class="hljs-string">nat</span> <span class="hljs-string">back</span> <span class="hljs-string">end</span> <span class="hljs-string">map.</span><br>                  <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">total</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">endpoints.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">mostly</span> <span class="hljs-string">more</span> <span class="hljs-string">than</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">services.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeNATFrontend:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFMapSizeNATFrontend</span> <span class="hljs-string">sets</span> <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">for</span> <span class="hljs-string">nat</span> <span class="hljs-string">front</span> <span class="hljs-string">end</span><br>                  <span class="hljs-string">map.</span> <span class="hljs-string">FrontendMap</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">large</span> <span class="hljs-string">enough</span> <span class="hljs-string">to</span> <span class="hljs-string">hold</span> <span class="hljs-string">an</span> <span class="hljs-string">entry</span> <span class="hljs-string">for</span> <span class="hljs-string">each</span><br>                  <span class="hljs-string">nodeport,</span> <span class="hljs-string">external</span> <span class="hljs-string">IP</span> <span class="hljs-string">and</span> <span class="hljs-string">each</span> <span class="hljs-string">port</span> <span class="hljs-string">in</span> <span class="hljs-string">each</span> <span class="hljs-string">service.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfMapSizeRoute:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFMapSizeRoute</span> <span class="hljs-string">sets</span> <span class="hljs-string">the</span> <span class="hljs-string">size</span> <span class="hljs-string">for</span> <span class="hljs-string">the</span> <span class="hljs-string">routes</span> <span class="hljs-string">map.</span>  <span class="hljs-string">The</span><br>                  <span class="hljs-string">routes</span> <span class="hljs-string">map</span> <span class="hljs-string">should</span> <span class="hljs-string">be</span> <span class="hljs-string">large</span> <span class="hljs-string">enough</span> <span class="hljs-string">to</span> <span class="hljs-string">hold</span> <span class="hljs-string">one</span> <span class="hljs-string">entry</span> <span class="hljs-string">per</span> <span class="hljs-string">workload</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">a</span> <span class="hljs-string">handful</span> <span class="hljs-string">of</span> <span class="hljs-string">entries</span> <span class="hljs-string">per</span> <span class="hljs-string">host</span> <span class="hljs-string">(enough</span> <span class="hljs-string">to</span> <span class="hljs-string">cover</span> <span class="hljs-string">its</span> <span class="hljs-string">own</span> <span class="hljs-string">IPs</span> <span class="hljs-string">and</span><br>                  <span class="hljs-string">tunnel</span> <span class="hljs-string">IPs).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">bpfPSNATPorts:</span><br>                <span class="hljs-attr">anyOf:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;BPFPSNATPorts sets the range from which we randomly</span><br><span class="hljs-string">                  pick a port if there is a source port collision. This should be</span><br><span class="hljs-string">                  within the ephemeral range as defined by RFC 6056 (1024–65535) and</span><br><span class="hljs-string">                  preferably outside the  ephemeral ranges used by common operating</span><br><span class="hljs-string">                  systems. Linux uses 32768–60999, while others mostly use the IANA</span><br><span class="hljs-string">                  defined range 49152–65535. It is not necessarily a problem if this</span><br><span class="hljs-string">                  range overlaps with the operating systems. Both ends of the range</span><br><span class="hljs-string">                  are inclusive. [Default: 20000:29999]&#x27;</span><br>                <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>              <span class="hljs-attr">bpfPolicyDebugEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">BPFPolicyDebugEnabled</span> <span class="hljs-string">when</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span> <span class="hljs-string">Felix</span> <span class="hljs-string">records</span> <span class="hljs-string">detailed</span><br>                  <span class="hljs-string">information</span> <span class="hljs-string">about</span> <span class="hljs-string">the</span> <span class="hljs-string">BPF</span> <span class="hljs-string">policy</span> <span class="hljs-string">programs,</span> <span class="hljs-string">which</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">examined</span><br>                  <span class="hljs-string">with</span> <span class="hljs-string">the</span> <span class="hljs-string">calico-bpf</span> <span class="hljs-string">command-line</span> <span class="hljs-string">tool.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">chainInsertMode:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ChainInsertMode controls whether Felix hooks the kernel<span class="hljs-char escape_">&#x27;&#x27;</span>s</span><br><span class="hljs-string">                  top-level iptables chains by inserting a rule at the top of the</span><br><span class="hljs-string">                  chain or by appending a rule at the bottom. insert is the safe default</span><br><span class="hljs-string">                  since it prevents Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s rules from being bypassed. If you switch</span><br><span class="hljs-string">                  to append mode, be sure that the other rules in the chains signal</span><br><span class="hljs-string">                  acceptance by falling through to the Calico rules, otherwise the</span><br><span class="hljs-string">                  Calico policy will be bypassed. [Default: insert]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">dataplaneDriver:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">DataplaneDriver</span> <span class="hljs-string">filename</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">external</span> <span class="hljs-string">dataplane</span> <span class="hljs-string">driver</span><br>                  <span class="hljs-string">to</span> <span class="hljs-string">use.</span>  <span class="hljs-string">Only</span> <span class="hljs-string">used</span> <span class="hljs-string">if</span> <span class="hljs-string">UseInternalDataplaneDriver</span> <span class="hljs-string">is</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">false.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">dataplaneWatchdogTimeout:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;DataplaneWatchdogTimeout is the readiness/liveness timeout</span><br><span class="hljs-string">                  used for Felix&#x27;s (internal) dataplane driver. Increase this value</span><br><span class="hljs-string">                  if you experience spurious non-ready or non-live events when Felix</span><br><span class="hljs-string">                  is under heavy load. Decrease the value to get felix to report non-live</span><br><span class="hljs-string">                  or non-ready more quickly. [Default: 90s] \n Deprecated: replaced</span><br><span class="hljs-string">                  by the generic HealthTimeoutOverrides.&quot;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">debugDisableLogDropping:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">debugMemoryProfilePath:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">debugSimulateCalcGraphHangAfter:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">debugSimulateDataplaneHangAfter:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">defaultEndpointToHostAction:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;DefaultEndpointToHostAction controls what happens to</span><br><span class="hljs-string">                  traffic that goes from a workload endpoint to the host itself (after</span><br><span class="hljs-string">                  the traffic hits the endpoint egress policy). By default Calico</span><br><span class="hljs-string">                  blocks traffic from workload endpoints to the host itself with an</span><br><span class="hljs-string">                  iptables &quot;DROP&quot; action. If you want to allow some or all traffic</span><br><span class="hljs-string">                  from endpoint to host, set this parameter to RETURN or ACCEPT. Use</span><br><span class="hljs-string">                  RETURN if you have your own rules in the iptables &quot;INPUT&quot; chain;</span><br><span class="hljs-string">                  Calico will insert its rules at the top of that chain, then &quot;RETURN&quot;</span><br><span class="hljs-string">                  packets to the &quot;INPUT&quot; chain once it has completed processing workload</span><br><span class="hljs-string">                  endpoint egress policy. Use ACCEPT to unconditionally accept packets</span><br><span class="hljs-string">                  from workloads after processing workload endpoint egress policy.</span><br><span class="hljs-string">                  [Default: Drop]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">deviceRouteProtocol:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">This</span> <span class="hljs-string">defines</span> <span class="hljs-string">the</span> <span class="hljs-string">route</span> <span class="hljs-string">protocol</span> <span class="hljs-string">added</span> <span class="hljs-string">to</span> <span class="hljs-string">programmed</span> <span class="hljs-string">device</span><br>                  <span class="hljs-string">routes,</span> <span class="hljs-string">by</span> <span class="hljs-string">default</span> <span class="hljs-string">this</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">RTPROT_BOOT</span> <span class="hljs-string">when</span> <span class="hljs-string">left</span> <span class="hljs-string">blank.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">deviceRouteSourceAddress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">on</span> <span class="hljs-string">programmed</span><br>                  <span class="hljs-string">device</span> <span class="hljs-string">routes.</span> <span class="hljs-string">By</span> <span class="hljs-string">default</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">is</span> <span class="hljs-string">left</span> <span class="hljs-string">blank,</span> <span class="hljs-string">leaving</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">kernel</span> <span class="hljs-string">to</span> <span class="hljs-string">choose</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">used.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">deviceRouteSourceAddressIPv6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">IPv6</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">on</span> <span class="hljs-string">programmed</span><br>                  <span class="hljs-string">device</span> <span class="hljs-string">routes.</span> <span class="hljs-string">By</span> <span class="hljs-string">default</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">is</span> <span class="hljs-string">left</span> <span class="hljs-string">blank,</span> <span class="hljs-string">leaving</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">kernel</span> <span class="hljs-string">to</span> <span class="hljs-string">choose</span> <span class="hljs-string">the</span> <span class="hljs-string">source</span> <span class="hljs-string">address</span> <span class="hljs-string">used.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">disableConntrackInvalidCheck:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">endpointReportingDelay:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">endpointReportingEnabled:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">externalNodesList:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ExternalNodesCIDRList</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">CIDR&#x27;s</span> <span class="hljs-string">of</span> <span class="hljs-string">external-non-calico-nodes</span><br>                  <span class="hljs-string">which</span> <span class="hljs-string">may</span> <span class="hljs-string">source</span> <span class="hljs-string">tunnel</span> <span class="hljs-string">traffic</span> <span class="hljs-string">and</span> <span class="hljs-string">have</span> <span class="hljs-string">the</span> <span class="hljs-string">tunneled</span> <span class="hljs-string">traffic</span> <span class="hljs-string">be</span><br>                  <span class="hljs-string">accepted</span> <span class="hljs-string">at</span> <span class="hljs-string">calico</span> <span class="hljs-string">nodes.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">failsafeInboundHostPorts:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;FailsafeInboundHostPorts is a list of UDP/TCP ports</span><br><span class="hljs-string">                  and CIDRs that Felix will allow incoming traffic to host endpoints</span><br><span class="hljs-string">                  on irrespective of the security policy. This is useful to avoid</span><br><span class="hljs-string">                  accidentally cutting off a host with incorrect configuration. For</span><br><span class="hljs-string">                  back-compatibility, if the protocol is not specified, it defaults</span><br><span class="hljs-string">                  to &quot;tcp&quot;. If a CIDR is not specified, it will allow traffic from</span><br><span class="hljs-string">                  all addresses. To disable all inbound host ports, use the value</span><br><span class="hljs-string">                  none. The default value allows ssh access and DHCP. [Default: tcp:22,</span><br><span class="hljs-string">                  udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]&#x27;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">ProtoPort</span> <span class="hljs-string">is</span> <span class="hljs-string">combination</span> <span class="hljs-string">of</span> <span class="hljs-string">protocol,</span> <span class="hljs-string">port,</span> <span class="hljs-string">and</span> <span class="hljs-string">CIDR.</span><br>                    <span class="hljs-string">Protocol</span> <span class="hljs-string">and</span> <span class="hljs-string">port</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">net:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">port:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">port</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">protocol</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">failsafeOutboundHostPorts:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;FailsafeOutboundHostPorts is a list of UDP/TCP ports</span><br><span class="hljs-string">                  and CIDRs that Felix will allow outgoing traffic from host endpoints</span><br><span class="hljs-string">                  to irrespective of the security policy. This is useful to avoid</span><br><span class="hljs-string">                  accidentally cutting off a host with incorrect configuration. For</span><br><span class="hljs-string">                  back-compatibility, if the protocol is not specified, it defaults</span><br><span class="hljs-string">                  to &quot;tcp&quot;. If a CIDR is not specified, it will allow traffic from</span><br><span class="hljs-string">                  all addresses. To disable all outbound host ports, use the value</span><br><span class="hljs-string">                  none. The default value opens etcd<span class="hljs-char escape_">&#x27;&#x27;</span>s standard ports to ensure that</span><br><span class="hljs-string">                  Felix does not get cut off from etcd as well as allowing DHCP and</span><br><span class="hljs-string">                  DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666,</span><br><span class="hljs-string">                  tcp:6667, udp:53, udp:67]&#x27;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">ProtoPort</span> <span class="hljs-string">is</span> <span class="hljs-string">combination</span> <span class="hljs-string">of</span> <span class="hljs-string">protocol,</span> <span class="hljs-string">port,</span> <span class="hljs-string">and</span> <span class="hljs-string">CIDR.</span><br>                    <span class="hljs-string">Protocol</span> <span class="hljs-string">and</span> <span class="hljs-string">port</span> <span class="hljs-string">must</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">net:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">port:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">port</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">protocol</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">featureDetectOverride:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">FeatureDetectOverride</span> <span class="hljs-string">is</span> <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">override</span> <span class="hljs-string">feature</span> <span class="hljs-string">detection</span><br>                  <span class="hljs-string">based</span> <span class="hljs-string">on</span> <span class="hljs-string">auto-detected</span> <span class="hljs-string">platform</span> <span class="hljs-string">capabilities.</span>  <span class="hljs-string">Values</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">a</span> <span class="hljs-string">comma</span> <span class="hljs-string">separated</span> <span class="hljs-string">list</span> <span class="hljs-string">with</span> <span class="hljs-literal">no</span> <span class="hljs-string">spaces,</span> <span class="hljs-string">example;</span> <span class="hljs-string">&quot;SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=&quot;</span><span class="hljs-string">.</span>  <span class="hljs-string">&quot;true&quot;</span><br>                  <span class="hljs-string">or</span> <span class="hljs-string">&quot;false&quot;</span> <span class="hljs-string">will</span> <span class="hljs-string">force</span> <span class="hljs-string">the</span> <span class="hljs-string">feature,</span> <span class="hljs-string">empty</span> <span class="hljs-string">or</span> <span class="hljs-string">omitted</span> <span class="hljs-string">values</span> <span class="hljs-string">are</span> <span class="hljs-string">auto-detected.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">featureGates:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">FeatureGates</span> <span class="hljs-string">is</span> <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">enable</span> <span class="hljs-string">or</span> <span class="hljs-string">disable</span> <span class="hljs-string">tech-preview</span><br>                  <span class="hljs-string">Calico</span> <span class="hljs-string">features.</span> <span class="hljs-string">Values</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">in</span> <span class="hljs-string">a</span> <span class="hljs-string">comma</span> <span class="hljs-string">separated</span> <span class="hljs-string">list</span><br>                  <span class="hljs-string">with</span> <span class="hljs-literal">no</span> <span class="hljs-string">spaces,</span> <span class="hljs-string">example;</span> <span class="hljs-string">&quot;BPFConnectTimeLoadBalancingWorkaround=enabled,XyZ=false&quot;</span><span class="hljs-string">.</span><br>                  <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">enable</span> <span class="hljs-string">features</span> <span class="hljs-string">that</span> <span class="hljs-string">are</span> <span class="hljs-string">not</span> <span class="hljs-string">fully</span> <span class="hljs-string">production</span> <span class="hljs-string">ready.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">floatingIPs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">FloatingIPs</span> <span class="hljs-string">configures</span> <span class="hljs-string">whether</span> <span class="hljs-string">or</span> <span class="hljs-string">not</span> <span class="hljs-string">Felix</span> <span class="hljs-string">will</span> <span class="hljs-string">program</span><br>                  <span class="hljs-string">non-OpenStack</span> <span class="hljs-string">floating</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses.</span>  <span class="hljs-string">(OpenStack-derived</span> <span class="hljs-string">floating</span><br>                  <span class="hljs-string">IPs</span> <span class="hljs-string">are</span> <span class="hljs-string">always</span> <span class="hljs-string">programmed,</span> <span class="hljs-string">regardless</span> <span class="hljs-string">of</span> <span class="hljs-string">this</span> <span class="hljs-string">setting.)</span><br>                <span class="hljs-attr">enum:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">Enabled</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">Disabled</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">genericXDPEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;GenericXDPEnabled enables Generic XDP so network cards</span><br><span class="hljs-string">                  that don<span class="hljs-char escape_">&#x27;&#x27;</span>t support XDP offload or driver modes can use XDP. This</span><br><span class="hljs-string">                  is not recommended since it doesn<span class="hljs-char escape_">&#x27;&#x27;</span>t provide better performance</span><br><span class="hljs-string">                  than iptables. [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">healthEnabled:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">healthHost:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">healthPort:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">healthTimeoutOverrides:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">HealthTimeoutOverrides</span> <span class="hljs-string">allows</span> <span class="hljs-string">the</span> <span class="hljs-string">internal</span> <span class="hljs-string">watchdog</span> <span class="hljs-string">timeouts</span><br>                  <span class="hljs-string">of</span> <span class="hljs-string">individual</span> <span class="hljs-string">subcomponents</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">overriden.</span>  <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">useful</span> <span class="hljs-string">for</span><br>                  <span class="hljs-string">working</span> <span class="hljs-string">around</span> <span class="hljs-string">&quot;false positive&quot;</span> <span class="hljs-string">liveness</span> <span class="hljs-string">timeouts</span> <span class="hljs-string">that</span> <span class="hljs-string">can</span> <span class="hljs-string">occur</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">particularly</span> <span class="hljs-string">stressful</span> <span class="hljs-string">workloads</span> <span class="hljs-string">or</span> <span class="hljs-string">if</span> <span class="hljs-string">CPU</span> <span class="hljs-string">is</span> <span class="hljs-string">constrained.</span>  <span class="hljs-string">For</span><br>                  <span class="hljs-string">a</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">active</span> <span class="hljs-string">subcomponents,</span> <span class="hljs-string">see</span> <span class="hljs-string">Felix&#x27;s</span> <span class="hljs-string">logs.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">name:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">timeout:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">name</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">timeout</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">interfaceExclude:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;InterfaceExclude is a comma-separated list of interfaces</span><br><span class="hljs-string">                  that Felix should exclude when monitoring for host endpoints. The</span><br><span class="hljs-string">                  default value ensures that Felix ignores Kubernetes<span class="hljs-char escape_">&#x27;&#x27;</span> IPVS dummy</span><br><span class="hljs-string">                  interface, which is used internally by kube-proxy. If you want to</span><br><span class="hljs-string">                  exclude multiple interface names using a single value, the list</span><br><span class="hljs-string">                  supports regular expressions. For regular expressions you must wrap</span><br><span class="hljs-string">                  the value with <span class="hljs-char escape_">&#x27;&#x27;</span>/<span class="hljs-char escape_">&#x27;&#x27;</span>. For example having values <span class="hljs-char escape_">&#x27;&#x27;</span>/^kube/,veth1<span class="hljs-char escape_">&#x27;&#x27;</span></span><br><span class="hljs-string">                  will exclude all interfaces that begin with <span class="hljs-char escape_">&#x27;&#x27;</span>kube<span class="hljs-char escape_">&#x27;&#x27;</span> and also the</span><br><span class="hljs-string">                  interface <span class="hljs-char escape_">&#x27;&#x27;</span>veth1<span class="hljs-char escape_">&#x27;&#x27;</span>. [Default: kube-ipvs0]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">interfacePrefix:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;InterfacePrefix is the interface name prefix that identifies</span><br><span class="hljs-string">                  workload endpoints and so distinguishes them from host endpoint</span><br><span class="hljs-string">                  interfaces. Note: in environments other than bare metal, the orchestrators</span><br><span class="hljs-string">                  configure this appropriately. For example our Kubernetes and Docker</span><br><span class="hljs-string">                  integrations set the <span class="hljs-char escape_">&#x27;&#x27;</span>cali<span class="hljs-char escape_">&#x27;&#x27;</span> value, and our OpenStack integration</span><br><span class="hljs-string">                  sets the <span class="hljs-char escape_">&#x27;&#x27;</span>tap<span class="hljs-char escape_">&#x27;&#x27;</span> value. [Default: cali]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">interfaceRefreshInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">InterfaceRefreshInterval</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">period</span> <span class="hljs-string">at</span> <span class="hljs-string">which</span> <span class="hljs-string">Felix</span><br>                  <span class="hljs-string">rescans</span> <span class="hljs-string">local</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">to</span> <span class="hljs-string">verify</span> <span class="hljs-string">their</span> <span class="hljs-string">state.</span> <span class="hljs-string">The</span> <span class="hljs-string">rescan</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span><br>                  <span class="hljs-string">disabled</span> <span class="hljs-string">by</span> <span class="hljs-string">setting</span> <span class="hljs-string">the</span> <span class="hljs-string">interval</span> <span class="hljs-string">to</span> <span class="hljs-number">0</span><span class="hljs-string">.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">ipipEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IPIPEnabled overrides whether Felix should configure</span><br><span class="hljs-string">                  an IPIP interface on the host. Optional as Felix determines this</span><br><span class="hljs-string">                  based on the existing IP pools. [Default: nil (unset)]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">ipipMTU:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IPIPMTU is the MTU to set on the tunnel device. See</span><br><span class="hljs-string">                  Configuring MTU [Default: 1440]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">ipsetsRefreshInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IpsetsRefreshInterval is the period at which Felix re-checks</span><br><span class="hljs-string">                  all iptables state to ensure that no other process has accidentally</span><br><span class="hljs-string">                  broken Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s rules. Set to 0 to disable iptables refresh. [Default:</span><br><span class="hljs-string">                  90s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesBackend:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">IptablesBackend</span> <span class="hljs-string">specifies</span> <span class="hljs-string">which</span> <span class="hljs-string">backend</span> <span class="hljs-string">of</span> <span class="hljs-string">iptables</span> <span class="hljs-string">will</span><br>                  <span class="hljs-string">be</span> <span class="hljs-string">used.</span> <span class="hljs-string">The</span> <span class="hljs-string">default</span> <span class="hljs-string">is</span> <span class="hljs-string">Auto.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesFilterAllowAction:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesLockFilePath:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesLockFilePath is the location of the iptables</span><br><span class="hljs-string">                  lock file. You may need to change this if the lock file is not in</span><br><span class="hljs-string">                  its standard location (for example if you have mapped it into Felix<span class="hljs-char escape_">&#x27;&#x27;</span>s</span><br><span class="hljs-string">                  container at a different path). [Default: /run/xtables.lock]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesLockProbeInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesLockProbeInterval is the time that Felix will</span><br><span class="hljs-string">                  wait between attempts to acquire the iptables lock if it is not</span><br><span class="hljs-string">                  available. Lower values make Felix more responsive when the lock</span><br><span class="hljs-string">                  is contended, but use more CPU. [Default: 50ms]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesLockTimeout:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesLockTimeout is the time that Felix will wait</span><br><span class="hljs-string">                  for the iptables lock, or 0, to disable. To use this feature, Felix</span><br><span class="hljs-string">                  must share the iptables lock file with all other processes that</span><br><span class="hljs-string">                  also take the lock. When running Felix inside a container, this</span><br><span class="hljs-string">                  requires the /run directory of the host to be mounted into the calico/node</span><br><span class="hljs-string">                  or calico/felix container. [Default: 0s disabled]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesMangleAllowAction:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesMarkMask:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesMarkMask is the mask that Felix selects its</span><br><span class="hljs-string">                  IPTables Mark bits from. Should be a 32 bit hexadecimal number with</span><br><span class="hljs-string">                  at least 8 bits set, none of which clash with any other mark bits</span><br><span class="hljs-string">                  in use on the system. [Default: 0xff000000]&#x27;</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">iptablesNATOutgoingInterfaceFilter:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesPostWriteCheckInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesPostWriteCheckInterval is the period after Felix</span><br><span class="hljs-string">                  has done a write to the dataplane that it schedules an extra read</span><br><span class="hljs-string">                  back in order to check the write was not clobbered by another process.</span><br><span class="hljs-string">                  This should only occur if another application on the system doesn<span class="hljs-char escape_">&#x27;&#x27;</span>t</span><br><span class="hljs-string">                  respect the iptables lock. [Default: 1s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">iptablesRefreshInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;IptablesRefreshInterval is the period at which Felix</span><br><span class="hljs-string">                  re-checks the IP sets in the dataplane to ensure that no other process</span><br><span class="hljs-string">                  has accidentally broken Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s rules. Set to 0 to disable IP</span><br><span class="hljs-string">                  sets refresh. Note: the default for this value is lower than the</span><br><span class="hljs-string">                  other refresh intervals as a workaround for a Linux kernel bug that</span><br><span class="hljs-string">                  was fixed in kernel version 4.11. If you are using v4.11 or greater</span><br><span class="hljs-string">                  you may want to set this to, a higher value to reduce Felix CPU</span><br><span class="hljs-string">                  usage. [Default: 10s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">ipv6Support:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">IPv6Support</span> <span class="hljs-string">controls</span> <span class="hljs-string">whether</span> <span class="hljs-string">Felix</span> <span class="hljs-string">enables</span> <span class="hljs-string">support</span> <span class="hljs-string">for</span><br>                  <span class="hljs-string">IPv6</span> <span class="hljs-string">(if</span> <span class="hljs-string">supported</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">in-use</span> <span class="hljs-string">dataplane).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">kubeNodePortRanges:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;KubeNodePortRanges holds list of port ranges used for</span><br><span class="hljs-string">                  service node ports. Only used if felix detects kube-proxy running</span><br><span class="hljs-string">                  in ipvs mode. Felix uses these ranges to separate host and workload</span><br><span class="hljs-string">                  traffic. [Default: 30000:32767].&#x27;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">anyOf:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                  <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">logDebugFilenameRegex:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">LogDebugFilenameRegex</span> <span class="hljs-string">controls</span> <span class="hljs-string">which</span> <span class="hljs-string">source</span> <span class="hljs-string">code</span> <span class="hljs-string">files</span><br>                  <span class="hljs-string">have</span> <span class="hljs-string">their</span> <span class="hljs-string">Debug</span> <span class="hljs-string">log</span> <span class="hljs-string">output</span> <span class="hljs-string">included</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">logs.</span> <span class="hljs-string">Only</span> <span class="hljs-string">logs</span> <span class="hljs-string">from</span><br>                  <span class="hljs-string">files</span> <span class="hljs-string">with</span> <span class="hljs-string">names</span> <span class="hljs-string">that</span> <span class="hljs-string">match</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">regular</span> <span class="hljs-string">expression</span> <span class="hljs-string">are</span> <span class="hljs-string">included.</span>  <span class="hljs-string">The</span><br>                  <span class="hljs-string">filter</span> <span class="hljs-string">only</span> <span class="hljs-string">applies</span> <span class="hljs-string">to</span> <span class="hljs-string">Debug</span> <span class="hljs-string">level</span> <span class="hljs-string">logs.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logFilePath:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogFilePath is the full path to the Felix log. Set to</span><br><span class="hljs-string">                  none to disable file logging. [Default: /var/log/calico/felix.log]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logPrefix:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogPrefix is the log prefix that Felix uses when rendering</span><br><span class="hljs-string">                  LOG rules. [Default: calico-packet]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logSeverityFile:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeverityFile is the log severity above which logs</span><br><span class="hljs-string">                  are sent to the log file. [Default: Info]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logSeverityScreen:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeverityScreen is the log severity above which logs</span><br><span class="hljs-string">                  are sent to the stdout. [Default: Info]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logSeveritySys:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeveritySys is the log severity above which logs</span><br><span class="hljs-string">                  are sent to the syslog. Set to None for no logging to syslog. [Default:</span><br><span class="hljs-string">                  Info]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">maxIpsetSize:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">metadataAddr:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;MetadataAddr is the IP address or domain name of the</span><br><span class="hljs-string">                  server that can answer VM queries for cloud-init metadata. In OpenStack,</span><br><span class="hljs-string">                  this corresponds to the machine running nova-api (or in Ubuntu,</span><br><span class="hljs-string">                  nova-api-metadata). A value of none (case insensitive) means that</span><br><span class="hljs-string">                  Felix should not set up any NAT rule for the metadata path. [Default:</span><br><span class="hljs-string">                  127.0.0.1]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">metadataPort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;MetadataPort is the port of the metadata server. This,</span><br><span class="hljs-string">                  combined with global.MetadataAddr (if not <span class="hljs-char escape_">&#x27;&#x27;</span>None<span class="hljs-char escape_">&#x27;&#x27;</span>), is used to</span><br><span class="hljs-string">                  set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort.</span><br><span class="hljs-string">                  In most cases this should not need to be changed [Default: 8775].&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">mtuIfacePattern:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">MTUIfacePattern</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">regular</span> <span class="hljs-string">expression</span> <span class="hljs-string">that</span> <span class="hljs-string">controls</span><br>                  <span class="hljs-string">which</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">Felix</span> <span class="hljs-string">should</span> <span class="hljs-string">scan</span> <span class="hljs-string">in</span> <span class="hljs-string">order</span> <span class="hljs-string">to</span> <span class="hljs-string">calculate</span> <span class="hljs-string">the</span> <span class="hljs-string">host&#x27;s</span><br>                  <span class="hljs-string">MTU.</span> <span class="hljs-string">This</span> <span class="hljs-string">should</span> <span class="hljs-string">not</span> <span class="hljs-string">match</span> <span class="hljs-string">workload</span> <span class="hljs-string">interfaces</span> <span class="hljs-string">(usually</span> <span class="hljs-string">named</span> <span class="hljs-string">cali...).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">natOutgoingAddress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">NATOutgoingAddress</span> <span class="hljs-string">specifies</span> <span class="hljs-string">an</span> <span class="hljs-string">address</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">when</span> <span class="hljs-string">performing</span><br>                  <span class="hljs-string">source</span> <span class="hljs-string">NAT</span> <span class="hljs-string">for</span> <span class="hljs-string">traffic</span> <span class="hljs-string">in</span> <span class="hljs-string">a</span> <span class="hljs-string">natOutgoing</span> <span class="hljs-string">pool</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">leaving</span> <span class="hljs-string">the</span><br>                  <span class="hljs-string">network.</span> <span class="hljs-string">By</span> <span class="hljs-string">default</span> <span class="hljs-string">the</span> <span class="hljs-string">address</span> <span class="hljs-string">used</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">address</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">interface</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">traffic</span> <span class="hljs-string">is</span> <span class="hljs-string">leaving</span> <span class="hljs-string">on</span> <span class="hljs-string">(ie</span> <span class="hljs-string">it</span> <span class="hljs-string">uses</span> <span class="hljs-string">the</span> <span class="hljs-string">iptables</span> <span class="hljs-string">MASQUERADE</span> <span class="hljs-string">target)</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">natPortRange:</span><br>                <span class="hljs-attr">anyOf:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">NATPortRange</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">range</span> <span class="hljs-string">of</span> <span class="hljs-string">ports</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">used</span><br>                  <span class="hljs-string">for</span> <span class="hljs-string">port</span> <span class="hljs-string">mapping</span> <span class="hljs-string">when</span> <span class="hljs-string">doing</span> <span class="hljs-string">outgoing</span> <span class="hljs-string">NAT.</span> <span class="hljs-string">When</span> <span class="hljs-string">unset</span> <span class="hljs-string">the</span> <span class="hljs-string">default</span><br>                  <span class="hljs-string">behavior</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">network</span> <span class="hljs-string">stack</span> <span class="hljs-string">is</span> <span class="hljs-string">used.</span><br>                <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>              <span class="hljs-attr">netlinkTimeout:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">openstackRegion:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;OpenstackRegion is the name of the region that a particular</span><br><span class="hljs-string">                  Felix belongs to. In a multi-region Calico/OpenStack deployment,</span><br><span class="hljs-string">                  this must be configured somehow for each Felix (here in the datamodel,</span><br><span class="hljs-string">                  or in felix.cfg or the environment on each compute node), and must</span><br><span class="hljs-string">                  match the [calico] openstack_region value configured in neutron.conf</span><br><span class="hljs-string">                  on each node. [Default: Empty]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">policySyncPathPrefix:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PolicySyncPathPrefix is used to by Felix to communicate</span><br><span class="hljs-string">                  policy changes to external services, like Application layer policy.</span><br><span class="hljs-string">                  [Default: Empty]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">prometheusGoMetricsEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusGoMetricsEnabled disables Go runtime metrics</span><br><span class="hljs-string">                  collection, which the Prometheus client does by default, when set</span><br><span class="hljs-string">                  to false. This reduces the number of metrics reported, reducing</span><br><span class="hljs-string">                  Prometheus load. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">prometheusMetricsEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusMetricsEnabled enables the Prometheus metrics</span><br><span class="hljs-string">                  server in Felix if set to true. [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">prometheusMetricsHost:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusMetricsHost is the host that the Prometheus</span><br><span class="hljs-string">                  metrics server should bind to. [Default: empty]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">prometheusMetricsPort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusMetricsPort is the TCP port that the Prometheus</span><br><span class="hljs-string">                  metrics server should bind to. [Default: 9091]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">prometheusProcessMetricsEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusProcessMetricsEnabled disables process metrics</span><br><span class="hljs-string">                  collection, which the Prometheus client does by default, when set</span><br><span class="hljs-string">                  to false. This reduces the number of metrics reported, reducing</span><br><span class="hljs-string">                  Prometheus load. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">prometheusWireGuardMetricsEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusWireGuardMetricsEnabled disables wireguard</span><br><span class="hljs-string">                  metrics collection, which the Prometheus client does by default,</span><br><span class="hljs-string">                  when set to false. This reduces the number of metrics reported,</span><br><span class="hljs-string">                  reducing Prometheus load. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">removeExternalRoutes:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Whether</span> <span class="hljs-string">or</span> <span class="hljs-string">not</span> <span class="hljs-string">to</span> <span class="hljs-string">remove</span> <span class="hljs-string">device</span> <span class="hljs-string">routes</span> <span class="hljs-string">that</span> <span class="hljs-string">have</span> <span class="hljs-string">not</span><br>                  <span class="hljs-string">been</span> <span class="hljs-string">programmed</span> <span class="hljs-string">by</span> <span class="hljs-string">Felix.</span> <span class="hljs-string">Disabling</span> <span class="hljs-string">this</span> <span class="hljs-string">will</span> <span class="hljs-string">allow</span> <span class="hljs-string">external</span> <span class="hljs-string">applications</span><br>                  <span class="hljs-string">to</span> <span class="hljs-string">also</span> <span class="hljs-string">add</span> <span class="hljs-string">device</span> <span class="hljs-string">routes.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default</span> <span class="hljs-string">which</span> <span class="hljs-string">means</span><br>                  <span class="hljs-string">we</span> <span class="hljs-string">will</span> <span class="hljs-string">remove</span> <span class="hljs-string">externally</span> <span class="hljs-string">added</span> <span class="hljs-string">routes.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">reportingInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReportingInterval is the interval at which Felix reports</span><br><span class="hljs-string">                  its status into the datastore or 0 to disable. Must be non-zero</span><br><span class="hljs-string">                  in OpenStack deployments. [Default: 30s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">reportingTTL:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReportingTTL is the time-to-live setting for process-wide</span><br><span class="hljs-string">                  status reports. [Default: 90s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">routeRefreshInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;RouteRefreshInterval is the period at which Felix re-checks</span><br><span class="hljs-string">                  the routes in the dataplane to ensure that no other process has</span><br><span class="hljs-string">                  accidentally broken Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s rules. Set to 0 to disable route refresh.</span><br><span class="hljs-string">                  [Default: 90s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">routeSource:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;RouteSource configures where Felix gets its routing</span><br><span class="hljs-string">                  information. - WorkloadIPs: use workload endpoints to construct</span><br><span class="hljs-string">                  routes. - CalicoIPAM: the default - use IPAM data to construct routes.&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">routeSyncDisabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">RouteSyncDisabled</span> <span class="hljs-string">will</span> <span class="hljs-string">disable</span> <span class="hljs-string">all</span> <span class="hljs-string">operations</span> <span class="hljs-string">performed</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">route</span> <span class="hljs-string">table.</span> <span class="hljs-string">Set</span> <span class="hljs-string">to</span> <span class="hljs-literal">true</span> <span class="hljs-string">to</span> <span class="hljs-string">run</span> <span class="hljs-string">in</span> <span class="hljs-string">network-policy</span> <span class="hljs-string">mode</span> <span class="hljs-string">only.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">routeTableRange:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Deprecated</span> <span class="hljs-string">in</span> <span class="hljs-string">favor</span> <span class="hljs-string">of</span> <span class="hljs-string">RouteTableRanges.</span> <span class="hljs-string">Calico</span> <span class="hljs-string">programs</span><br>                  <span class="hljs-string">additional</span> <span class="hljs-string">Linux</span> <span class="hljs-string">route</span> <span class="hljs-string">tables</span> <span class="hljs-string">for</span> <span class="hljs-string">various</span> <span class="hljs-string">purposes.</span> <span class="hljs-string">RouteTableRange</span><br>                  <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">indices</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">route</span> <span class="hljs-string">tables</span> <span class="hljs-string">that</span> <span class="hljs-string">Calico</span> <span class="hljs-string">should</span> <span class="hljs-string">use.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">max:</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">min:</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-attr">required:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">max</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">min</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">routeTableRanges:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Calico</span> <span class="hljs-string">programs</span> <span class="hljs-string">additional</span> <span class="hljs-string">Linux</span> <span class="hljs-string">route</span> <span class="hljs-string">tables</span> <span class="hljs-string">for</span> <span class="hljs-string">various</span><br>                  <span class="hljs-string">purposes.</span> <span class="hljs-string">RouteTableRanges</span> <span class="hljs-string">specifies</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">table</span> <span class="hljs-string">index</span> <span class="hljs-string">ranges</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">Calico</span> <span class="hljs-string">should</span> <span class="hljs-string">use.</span> <span class="hljs-string">Deprecates`RouteTableRange`,</span> <span class="hljs-string">overrides</span> <span class="hljs-string">`RouteTableRange`.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">max:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">min:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">max</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">min</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">serviceLoopPrevention:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;When service IP advertisement is enabled, prevent routing</span><br><span class="hljs-string">                  loops to service IPs that are not in use, by dropping or rejecting</span><br><span class="hljs-string">                  packets that do not get DNAT<span class="hljs-char escape_">&#x27;&#x27;</span>d by kube-proxy. Unless set to &quot;Disabled&quot;,</span><br><span class="hljs-string">                  in which case such routing loops continue to be allowed. [Default:</span><br><span class="hljs-string">                  Drop]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">sidecarAccelerationEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;SidecarAccelerationEnabled enables experimental sidecar</span><br><span class="hljs-string">                  acceleration [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">usageReportingEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;UsageReportingEnabled reports anonymous Calico version</span><br><span class="hljs-string">                  number and cluster size to projectcalico.org. Logs warnings returned</span><br><span class="hljs-string">                  by the usage server. For example, if a significant security vulnerability</span><br><span class="hljs-string">                  has been discovered in the version of Calico being used. [Default:</span><br><span class="hljs-string">                  true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">usageReportingInitialDelay:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;UsageReportingInitialDelay controls the minimum delay</span><br><span class="hljs-string">                  before Felix makes a report. [Default: 300s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">usageReportingInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;UsageReportingInterval controls the interval at which</span><br><span class="hljs-string">                  Felix makes reports. [Default: 86400s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">useInternalDataplaneDriver:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">UseInternalDataplaneDriver,</span> <span class="hljs-string">if</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span> <span class="hljs-string">Felix</span> <span class="hljs-string">will</span> <span class="hljs-string">use</span> <span class="hljs-string">its</span><br>                  <span class="hljs-string">internal</span> <span class="hljs-string">dataplane</span> <span class="hljs-string">programming</span> <span class="hljs-string">logic.</span>  <span class="hljs-string">If</span> <span class="hljs-literal">false</span><span class="hljs-string">,</span> <span class="hljs-string">it</span> <span class="hljs-string">will</span> <span class="hljs-string">launch</span><br>                  <span class="hljs-string">an</span> <span class="hljs-string">external</span> <span class="hljs-string">dataplane</span> <span class="hljs-string">driver</span> <span class="hljs-string">and</span> <span class="hljs-string">communicate</span> <span class="hljs-string">with</span> <span class="hljs-string">it</span> <span class="hljs-string">over</span> <span class="hljs-string">protobuf.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">vxlanEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;VXLANEnabled overrides whether Felix should create the</span><br><span class="hljs-string">                  VXLAN tunnel device for IPv4 VXLAN networking. Optional as Felix</span><br><span class="hljs-string">                  determines this based on the existing IP pools. [Default: nil (unset)]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">vxlanMTU:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;VXLANMTU is the MTU to set on the IPv4 VXLAN tunnel</span><br><span class="hljs-string">                  device. See Configuring MTU [Default: 1410]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">vxlanMTUV6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;VXLANMTUV6 is the MTU to set on the IPv6 VXLAN tunnel</span><br><span class="hljs-string">                  device. See Configuring MTU [Default: 1390]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">vxlanPort:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">vxlanVNI:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">wireguardEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardEnabled controls whether Wireguard is enabled</span><br><span class="hljs-string">                  for IPv4 (encapsulating IPv4 traffic over an IPv4 underlay network).</span><br><span class="hljs-string">                  [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">wireguardEnabledV6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardEnabledV6 controls whether Wireguard is enabled</span><br><span class="hljs-string">                  for IPv6 (encapsulating IPv6 traffic over an IPv6 underlay network).</span><br><span class="hljs-string">                  [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">wireguardHostEncryptionEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardHostEncryptionEnabled controls whether Wireguard</span><br><span class="hljs-string">                  host-to-host encryption is enabled. [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">wireguardInterfaceName:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardInterfaceName specifies the name to use for</span><br><span class="hljs-string">                  the IPv4 Wireguard interface. [Default: wireguard.cali]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">wireguardInterfaceNameV6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardInterfaceNameV6 specifies the name to use for</span><br><span class="hljs-string">                  the IPv6 Wireguard interface. [Default: wg-v6.cali]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">wireguardKeepAlive:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardKeepAlive controls Wireguard PersistentKeepalive</span><br><span class="hljs-string">                  option. Set 0 to disable. [Default: 0]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">wireguardListeningPort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardListeningPort controls the listening port used</span><br><span class="hljs-string">                  by IPv4 Wireguard. [Default: 51820]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">wireguardListeningPortV6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardListeningPortV6 controls the listening port</span><br><span class="hljs-string">                  used by IPv6 Wireguard. [Default: 51821]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">wireguardMTU:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardMTU controls the MTU on the IPv4 Wireguard</span><br><span class="hljs-string">                  interface. See Configuring MTU [Default: 1440]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">wireguardMTUV6:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardMTUV6 controls the MTU on the IPv6 Wireguard</span><br><span class="hljs-string">                  interface. See Configuring MTU [Default: 1420]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">wireguardRoutingRulePriority:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;WireguardRoutingRulePriority controls the priority value</span><br><span class="hljs-string">                  to use for the Wireguard routing rule. [Default: 99]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">workloadSourceSpoofing:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">WorkloadSourceSpoofing</span> <span class="hljs-string">controls</span> <span class="hljs-string">whether</span> <span class="hljs-string">pods</span> <span class="hljs-string">can</span> <span class="hljs-string">use</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">allowedSourcePrefixes</span> <span class="hljs-string">annotation</span> <span class="hljs-string">to</span> <span class="hljs-string">send</span> <span class="hljs-string">traffic</span> <span class="hljs-string">with</span> <span class="hljs-string">a</span> <span class="hljs-string">source</span><br>                  <span class="hljs-string">IP</span> <span class="hljs-string">address</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">theirs.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">disabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default.</span> <span class="hljs-string">When</span><br>                  <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;Any&quot;</span><span class="hljs-string">,</span> <span class="hljs-string">pods</span> <span class="hljs-string">can</span> <span class="hljs-string">request</span> <span class="hljs-string">any</span> <span class="hljs-string">prefix.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">xdpEnabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;XDPEnabled enables XDP acceleration for suitable untracked</span><br><span class="hljs-string">                  incoming deny rules. [Default: true]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">xdpRefreshInterval:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;XDPRefreshInterval is the period at which Felix re-checks</span><br><span class="hljs-string">                  all XDP state to ensure that no other process has accidentally broken</span><br><span class="hljs-string">                  Calico<span class="hljs-char escape_">&#x27;&#x27;</span>s BPF maps or attached programs. Set to 0 to disable XDP</span><br><span class="hljs-string">                  refresh. [Default: 90s]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">globalnetworkpolicies.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">GlobalNetworkPolicy</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">GlobalNetworkPolicyList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">globalnetworkpolicies</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">globalnetworkpolicy</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">applyOnForward:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ApplyOnForward</span> <span class="hljs-string">indicates</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">the</span> <span class="hljs-string">rules</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">policy</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">forward</span> <span class="hljs-string">traffic.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">doNotTrack:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">DoNotTrack</span> <span class="hljs-string">indicates</span> <span class="hljs-string">whether</span> <span class="hljs-string">packets</span> <span class="hljs-string">matched</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">rules</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">policy</span> <span class="hljs-string">should</span> <span class="hljs-string">go</span> <span class="hljs-string">through</span> <span class="hljs-string">the</span> <span class="hljs-string">data</span> <span class="hljs-string">plane&#x27;s</span> <span class="hljs-string">connection</span> <span class="hljs-string">tracking,</span><br>                  <span class="hljs-string">such</span> <span class="hljs-string">as</span> <span class="hljs-string">Linux</span> <span class="hljs-string">conntrack.</span>  <span class="hljs-string">If</span> <span class="hljs-literal">True</span><span class="hljs-string">,</span> <span class="hljs-string">the</span> <span class="hljs-string">rules</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">policy</span> <span class="hljs-string">are</span><br>                  <span class="hljs-string">applied</span> <span class="hljs-string">before</span> <span class="hljs-string">any</span> <span class="hljs-string">data</span> <span class="hljs-string">plane</span> <span class="hljs-string">connection</span> <span class="hljs-string">tracking,</span> <span class="hljs-string">and</span> <span class="hljs-string">packets</span> <span class="hljs-string">allowed</span><br>                  <span class="hljs-string">by</span> <span class="hljs-string">this</span> <span class="hljs-string">policy</span> <span class="hljs-string">are</span> <span class="hljs-string">marked</span> <span class="hljs-string">as</span> <span class="hljs-string">not</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">tracked.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">egress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">ordered</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">egress</span> <span class="hljs-string">rules.</span>  <span class="hljs-string">Each</span> <span class="hljs-string">rule</span> <span class="hljs-string">contains</span><br>                  <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">packet</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">and</span> <span class="hljs-string">a</span> <span class="hljs-string">corresponding</span> <span class="hljs-string">action</span> <span class="hljs-string">to</span> <span class="hljs-string">apply.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;A Rule encapsulates a set of match criteria and an</span><br><span class="hljs-string">                    action.  Both selector-based security Policy and security Profiles</span><br><span class="hljs-string">                    reference rules - separated out as a list of rules for both ingress</span><br><span class="hljs-string">                    and egress packet matching. \n Each positive match criteria has</span><br><span class="hljs-string">                    a negated version, prefixed with \&quot;Not\&quot;. All the match criteria</span><br><span class="hljs-string">                    within a rule must be satisfied for a packet to match. A single</span><br><span class="hljs-string">                    rule can contain the positive and negative version of a match</span><br><span class="hljs-string">                    and both must be satisfied for the rule to match.&quot;</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">action:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">destination:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">destination</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">http:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">contains</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span><br>                        <span class="hljs-string">requests.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">methods:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Methods</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">only</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">requests</span> <span class="hljs-string">that</span> <span class="hljs-string">use</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">listed</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">Methods</span> <span class="hljs-string">(e.g.</span> <span class="hljs-string">GET,</span> <span class="hljs-string">PUT,</span> <span class="hljs-string">etc.)</span> <span class="hljs-string">Multiple</span><br>                            <span class="hljs-string">methods</span> <span class="hljs-string">are</span> <span class="hljs-string">OR&#x27;d</span> <span class="hljs-string">together.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">paths:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Paths is an optional field that restricts</span><br><span class="hljs-string">                            the rule to apply to HTTP requests that use one of the</span><br><span class="hljs-string">                            listed HTTP Paths. Multiple paths are OR<span class="hljs-char escape_">&#x27;&#x27;</span>d together.</span><br><span class="hljs-string">                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may</span><br><span class="hljs-string">                            ONLY specify either a `exact` or a `prefix` match. The</span><br><span class="hljs-string">                            validator will check for it.&#x27;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HTTPPath specifies an HTTP path to match.</span><br><span class="hljs-string">                              It may be either of the form: exact: &lt;path&gt;: which matches</span><br><span class="hljs-string">                              the path exactly or prefix: &lt;path-prefix&gt;: which matches</span><br><span class="hljs-string">                              the path prefix&#x27;</span><br>                            <span class="hljs-attr">properties:</span><br>                              <span class="hljs-attr">exact:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">prefix:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">icmp:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">type</span> <span class="hljs-string">and</span> <span class="hljs-string">code</span> <span class="hljs-string">of</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">traffic.</span>  <span class="hljs-string">This</span><br>                        <span class="hljs-string">should</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">specified</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">field</span> <span class="hljs-string">is</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;ICMP&quot;</span><br>                        <span class="hljs-string">or</span> <span class="hljs-string">&quot;ICMPv6&quot;</span><span class="hljs-string">.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">ipVersion:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">IPVersion</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                        <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">match</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">IP</span> <span class="hljs-string">version.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">metadata:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Metadata</span> <span class="hljs-string">contains</span> <span class="hljs-string">additional</span> <span class="hljs-string">information</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span><br>                        <span class="hljs-string">rule</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">annotations:</span><br>                          <span class="hljs-attr">additionalProperties:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Annotations</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">key</span> <span class="hljs-string">value</span> <span class="hljs-string">pairs</span> <span class="hljs-string">that</span><br>                            <span class="hljs-string">give</span> <span class="hljs-string">extra</span> <span class="hljs-string">information</span> <span class="hljs-string">about</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notICMP:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notProtocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotProtocol</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span><br>                        <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Protocol is an optional field that restricts the</span><br><span class="hljs-string">                        rule to only apply to traffic of a specific IP protocol. Required</span><br><span class="hljs-string">                        if any of the EntityRules contain Ports (because ports only</span><br><span class="hljs-string">                        apply to certain protocols). \n Must be one of these string</span><br><span class="hljs-string">                        values: \&quot;TCP\&quot;, \&quot;UDP\&quot;, \&quot;ICMP\&quot;, \&quot;ICMPv6\&quot;, \&quot;SCTP\&quot;,</span><br><span class="hljs-string">                        \&quot;UDPLite\&quot; or an integer in the range 1-255.&quot;</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">source:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Source</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span><br>                        <span class="hljs-string">source</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">action</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">ingress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">ordered</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">ingress</span> <span class="hljs-string">rules.</span>  <span class="hljs-string">Each</span> <span class="hljs-string">rule</span> <span class="hljs-string">contains</span><br>                  <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">packet</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">and</span> <span class="hljs-string">a</span> <span class="hljs-string">corresponding</span> <span class="hljs-string">action</span> <span class="hljs-string">to</span> <span class="hljs-string">apply.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;A Rule encapsulates a set of match criteria and an</span><br><span class="hljs-string">                    action.  Both selector-based security Policy and security Profiles</span><br><span class="hljs-string">                    reference rules - separated out as a list of rules for both ingress</span><br><span class="hljs-string">                    and egress packet matching. \n Each positive match criteria has</span><br><span class="hljs-string">                    a negated version, prefixed with \&quot;Not\&quot;. All the match criteria</span><br><span class="hljs-string">                    within a rule must be satisfied for a packet to match. A single</span><br><span class="hljs-string">                    rule can contain the positive and negative version of a match</span><br><span class="hljs-string">                    and both must be satisfied for the rule to match.&quot;</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">action:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">destination:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">destination</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">http:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">contains</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span><br>                        <span class="hljs-string">requests.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">methods:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Methods</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">only</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">requests</span> <span class="hljs-string">that</span> <span class="hljs-string">use</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">listed</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">Methods</span> <span class="hljs-string">(e.g.</span> <span class="hljs-string">GET,</span> <span class="hljs-string">PUT,</span> <span class="hljs-string">etc.)</span> <span class="hljs-string">Multiple</span><br>                            <span class="hljs-string">methods</span> <span class="hljs-string">are</span> <span class="hljs-string">OR&#x27;d</span> <span class="hljs-string">together.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">paths:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Paths is an optional field that restricts</span><br><span class="hljs-string">                            the rule to apply to HTTP requests that use one of the</span><br><span class="hljs-string">                            listed HTTP Paths. Multiple paths are OR<span class="hljs-char escape_">&#x27;&#x27;</span>d together.</span><br><span class="hljs-string">                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may</span><br><span class="hljs-string">                            ONLY specify either a `exact` or a `prefix` match. The</span><br><span class="hljs-string">                            validator will check for it.&#x27;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HTTPPath specifies an HTTP path to match.</span><br><span class="hljs-string">                              It may be either of the form: exact: &lt;path&gt;: which matches</span><br><span class="hljs-string">                              the path exactly or prefix: &lt;path-prefix&gt;: which matches</span><br><span class="hljs-string">                              the path prefix&#x27;</span><br>                            <span class="hljs-attr">properties:</span><br>                              <span class="hljs-attr">exact:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">prefix:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">icmp:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">type</span> <span class="hljs-string">and</span> <span class="hljs-string">code</span> <span class="hljs-string">of</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">traffic.</span>  <span class="hljs-string">This</span><br>                        <span class="hljs-string">should</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">specified</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">field</span> <span class="hljs-string">is</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;ICMP&quot;</span><br>                        <span class="hljs-string">or</span> <span class="hljs-string">&quot;ICMPv6&quot;</span><span class="hljs-string">.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">ipVersion:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">IPVersion</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                        <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">match</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">IP</span> <span class="hljs-string">version.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">metadata:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Metadata</span> <span class="hljs-string">contains</span> <span class="hljs-string">additional</span> <span class="hljs-string">information</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span><br>                        <span class="hljs-string">rule</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">annotations:</span><br>                          <span class="hljs-attr">additionalProperties:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Annotations</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">key</span> <span class="hljs-string">value</span> <span class="hljs-string">pairs</span> <span class="hljs-string">that</span><br>                            <span class="hljs-string">give</span> <span class="hljs-string">extra</span> <span class="hljs-string">information</span> <span class="hljs-string">about</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notICMP:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notProtocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotProtocol</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span><br>                        <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Protocol is an optional field that restricts the</span><br><span class="hljs-string">                        rule to only apply to traffic of a specific IP protocol. Required</span><br><span class="hljs-string">                        if any of the EntityRules contain Ports (because ports only</span><br><span class="hljs-string">                        apply to certain protocols). \n Must be one of these string</span><br><span class="hljs-string">                        values: \&quot;TCP\&quot;, \&quot;UDP\&quot;, \&quot;ICMP\&quot;, \&quot;ICMPv6\&quot;, \&quot;SCTP\&quot;,</span><br><span class="hljs-string">                        \&quot;UDPLite\&quot; or an integer in the range 1-255.&quot;</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">source:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Source</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span><br>                        <span class="hljs-string">source</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">action</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">namespaceSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">NamespaceSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">expression</span><br>                  <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">select</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">based</span> <span class="hljs-string">on</span> <span class="hljs-string">namespaces.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">order:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Order</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">order</span> <span class="hljs-string">in</span><br>                  <span class="hljs-string">which</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">is</span> <span class="hljs-string">applied.</span> <span class="hljs-string">Policies</span> <span class="hljs-string">with</span> <span class="hljs-string">higher</span> <span class="hljs-string">&quot;order&quot;</span> <span class="hljs-string">are</span> <span class="hljs-string">applied</span><br>                  <span class="hljs-string">after</span> <span class="hljs-string">those</span> <span class="hljs-string">with</span> <span class="hljs-string">lower</span> <span class="hljs-string">order.</span>  <span class="hljs-string">If</span> <span class="hljs-string">the</span> <span class="hljs-string">order</span> <span class="hljs-string">is</span> <span class="hljs-string">omitted,</span> <span class="hljs-string">it</span> <span class="hljs-string">may</span> <span class="hljs-string">be</span><br>                  <span class="hljs-string">considered</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">&quot;infinite&quot;</span> <span class="hljs-bullet">-</span> <span class="hljs-string">i.e.</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">applied</span> <span class="hljs-string">last.</span>  <span class="hljs-string">Policies</span><br>                  <span class="hljs-string">with</span> <span class="hljs-string">identical</span> <span class="hljs-string">order</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">applied</span> <span class="hljs-string">in</span> <span class="hljs-string">alphanumerical</span> <span class="hljs-string">order</span> <span class="hljs-string">based</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">Policy</span> <span class="hljs-string">&quot;Name&quot;</span><span class="hljs-string">.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">number</span><br>              <span class="hljs-attr">preDNAT:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">PreDNAT</span> <span class="hljs-string">indicates</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">the</span> <span class="hljs-string">rules</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">policy</span> <span class="hljs-string">before</span><br>                  <span class="hljs-string">any</span> <span class="hljs-string">DNAT.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">selector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;The selector is an expression used to pick pick out</span><br><span class="hljs-string">                  the endpoints that the policy should be applied to. \n Selector</span><br><span class="hljs-string">                  expressions follow this syntax: \n \tlabel == \&quot;string_literal\&quot;</span><br><span class="hljs-string">                  \ -&gt;  comparison, e.g. my_label == \&quot;foo bar\&quot; \tlabel != \&quot;string_literal\&quot;</span><br><span class="hljs-string">                  \  -&gt;  not equal; also matches if label is not present \tlabel in</span><br><span class="hljs-string">                  &#123; \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot;, ... &#125;  -&gt;  true if the value of label X is</span><br><span class="hljs-string">                  one of \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot; \tlabel not in &#123; \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot;,</span><br><span class="hljs-string">                  ... &#125;  -&gt;  true if the value of label X is not one of \&quot;a\&quot;, \&quot;b\&quot;,</span><br><span class="hljs-string">                  \&quot;c\&quot; \thas(label_name)  -&gt; True if that label is present \t! expr</span><br><span class="hljs-string">                  -&gt; negation of expr \texpr &amp;&amp; expr  -&gt; Short-circuit and \texpr</span><br><span class="hljs-string">                  || expr  -&gt; Short-circuit or \t( expr ) -&gt; parens for grouping \tall()</span><br><span class="hljs-string">                  or the empty selector -&gt; matches all endpoints. \n Label names are</span><br><span class="hljs-string">                  allowed to contain alphanumerics, -, _ and /. String literals are</span><br><span class="hljs-string">                  more permissive but they do not support escape characters. \n Examples</span><br><span class="hljs-string">                  (with made-up labels): \n \ttype == \&quot;webserver\&quot; &amp;&amp; deployment</span><br><span class="hljs-string">                  == \&quot;prod\&quot; \ttype in &#123;\&quot;frontend\&quot;, \&quot;backend\&quot;&#125; \tdeployment !=</span><br><span class="hljs-string">                  \&quot;dev\&quot; \t! has(label_name)&quot;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">serviceAccountSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccountSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">expression</span><br>                  <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">select</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">based</span> <span class="hljs-string">on</span> <span class="hljs-string">service</span> <span class="hljs-string">accounts.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">types:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Types indicates whether this policy applies to ingress,</span><br><span class="hljs-string">                  or to egress, or to both.  When not explicitly specified (and so</span><br><span class="hljs-string">                  the value on creation is empty or nil), Calico defaults Types according</span><br><span class="hljs-string">                  to what Ingress and Egress rules are present in the policy.  The</span><br><span class="hljs-string">                  default is: \n - [ PolicyTypeIngress ], if there are no Egress rules</span><br><span class="hljs-string">                  (including the case where there are   also no Ingress rules) \n</span><br><span class="hljs-string">                  - [ PolicyTypeEgress ], if there are Egress rules but no Ingress</span><br><span class="hljs-string">                  rules \n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are</span><br><span class="hljs-string">                  both Ingress and Egress rules. \n When the policy is read back again,</span><br><span class="hljs-string">                  Types will always be one of these values, never empty or nil.&quot;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">PolicyType</span> <span class="hljs-string">enumerates</span> <span class="hljs-string">the</span> <span class="hljs-string">possible</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">PolicySpec</span><br>                    <span class="hljs-string">Types</span> <span class="hljs-string">field.</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">globalnetworksets.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">GlobalNetworkSet</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">GlobalNetworkSetList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">globalnetworksets</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">globalnetworkset</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">GlobalNetworkSet</span> <span class="hljs-string">contains</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">arbitrary</span> <span class="hljs-string">IP</span> <span class="hljs-string">sub-networks/CIDRs</span><br>          <span class="hljs-string">that</span> <span class="hljs-string">share</span> <span class="hljs-string">labels</span> <span class="hljs-string">to</span> <span class="hljs-string">allow</span> <span class="hljs-string">rules</span> <span class="hljs-string">to</span> <span class="hljs-string">refer</span> <span class="hljs-string">to</span> <span class="hljs-string">them</span> <span class="hljs-string">via</span> <span class="hljs-string">selectors.</span>  <span class="hljs-string">The</span> <span class="hljs-string">labels</span><br>          <span class="hljs-string">of</span> <span class="hljs-string">GlobalNetworkSet</span> <span class="hljs-string">are</span> <span class="hljs-string">not</span> <span class="hljs-string">namespaced.</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">GlobalNetworkSetSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">NetworkSet</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">nets:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">IP</span> <span class="hljs-string">networks</span> <span class="hljs-string">that</span> <span class="hljs-string">belong</span> <span class="hljs-string">to</span> <span class="hljs-string">this</span> <span class="hljs-string">set.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">hostendpoints.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">HostEndpoint</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">HostEndpointList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">hostendpoints</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">hostendpoint</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">HostEndpointSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">HostEndpoint</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">expectedIPs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;The expected IP addresses (IPv4 and IPv6) of the endpoint.</span><br><span class="hljs-string">                  If \&quot;InterfaceName\&quot; is not present, Calico will look for an interface</span><br><span class="hljs-string">                  matching any of the IPs in the list and apply policy to that. Note:</span><br><span class="hljs-string">                  \tWhen using the selector match criteria in an ingress or egress</span><br><span class="hljs-string">                  security Policy \tor Profile, Calico converts the selector into</span><br><span class="hljs-string">                  a set of IP addresses. For host \tendpoints, the ExpectedIPs field</span><br><span class="hljs-string">                  is used for that purpose. (If only the interface \tname is specified,</span><br><span class="hljs-string">                  Calico does not learn the IPs of the interface for use in match</span><br><span class="hljs-string">                  \tcriteria.)&quot;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">interfaceName:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Either \&quot;*\&quot;, or the name of a specific Linux interface</span><br><span class="hljs-string">                  to apply policy to; or empty.  \&quot;*\&quot; indicates that this HostEndpoint</span><br><span class="hljs-string">                  governs all traffic to, from or through the default network namespace</span><br><span class="hljs-string">                  of the host named by the \&quot;Node\&quot; field; entering and leaving that</span><br><span class="hljs-string">                  namespace via any interface, including those from/to non-host-networked</span><br><span class="hljs-string">                  local workloads. \n If InterfaceName is not \&quot;*\&quot;, this HostEndpoint</span><br><span class="hljs-string">                  only governs traffic that enters or leaves the host through the</span><br><span class="hljs-string">                  specific interface named by InterfaceName, or - when InterfaceName</span><br><span class="hljs-string">                  is empty - through the specific interface that has one of the IPs</span><br><span class="hljs-string">                  in ExpectedIPs. Therefore, when InterfaceName is empty, at least</span><br><span class="hljs-string">                  one expected IP must be specified.  Only external interfaces (such</span><br><span class="hljs-string">                  as \&quot;eth0\&quot;) are supported here; it isn&#x27;t possible for a HostEndpoint</span><br><span class="hljs-string">                  to protect traffic through a specific local workload interface.</span><br><span class="hljs-string">                  \n Note: Only some kinds of policy are implemented for \&quot;*\&quot; HostEndpoints;</span><br><span class="hljs-string">                  initially just pre-DNAT policy.  Please check Calico documentation</span><br><span class="hljs-string">                  for the latest position.&quot;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">node:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">node</span> <span class="hljs-string">name</span> <span class="hljs-string">identifying</span> <span class="hljs-string">the</span> <span class="hljs-string">Calico</span> <span class="hljs-string">node</span> <span class="hljs-string">instance.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">ports:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Ports</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">endpoint&#x27;s</span> <span class="hljs-string">named</span> <span class="hljs-string">ports,</span> <span class="hljs-string">which</span> <span class="hljs-string">may</span><br>                  <span class="hljs-string">be</span> <span class="hljs-string">referenced</span> <span class="hljs-string">in</span> <span class="hljs-string">security</span> <span class="hljs-string">policy</span> <span class="hljs-string">rules.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">name:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">port:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">name</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">port</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">protocol</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">profiles:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">A</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">identifiers</span> <span class="hljs-string">of</span> <span class="hljs-string">security</span> <span class="hljs-string">Profile</span> <span class="hljs-string">objects</span> <span class="hljs-string">that</span><br>                  <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">this</span> <span class="hljs-string">endpoint.</span> <span class="hljs-string">Each</span> <span class="hljs-string">profile</span> <span class="hljs-string">is</span> <span class="hljs-string">applied</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">order</span> <span class="hljs-string">that</span><br>                  <span class="hljs-string">they</span> <span class="hljs-string">appear</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">list.</span>  <span class="hljs-string">Profile</span> <span class="hljs-string">rules</span> <span class="hljs-string">are</span> <span class="hljs-string">applied</span> <span class="hljs-string">after</span> <span class="hljs-string">the</span> <span class="hljs-string">selector-based</span><br>                  <span class="hljs-string">security</span> <span class="hljs-string">policy.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ipamblocks.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">IPAMBlock</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">IPAMBlockList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">ipamblocks</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">ipamblock</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">IPAMBlockSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">IPAMBlock</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">affinity:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Affinity</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">block,</span> <span class="hljs-string">if</span> <span class="hljs-string">this</span> <span class="hljs-string">block</span> <span class="hljs-string">has</span> <span class="hljs-string">one.</span> <span class="hljs-string">If</span> <span class="hljs-string">set,</span><br>                  <span class="hljs-string">it</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">form</span> <span class="hljs-string">&quot;host:&lt;hostname&gt;&quot;</span><span class="hljs-string">.</span> <span class="hljs-string">If</span> <span class="hljs-string">not</span> <span class="hljs-string">set,</span> <span class="hljs-string">this</span> <span class="hljs-string">block</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">affine</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">host.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">allocations:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Array</span> <span class="hljs-string">of</span> <span class="hljs-string">allocations</span> <span class="hljs-string">in-use</span> <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">block.</span> <span class="hljs-string">nil</span> <span class="hljs-string">entries</span><br>                  <span class="hljs-string">mean</span> <span class="hljs-string">the</span> <span class="hljs-string">allocation</span> <span class="hljs-string">is</span> <span class="hljs-string">free.</span> <span class="hljs-string">For</span> <span class="hljs-string">non-nil</span> <span class="hljs-string">entries</span> <span class="hljs-string">at</span> <span class="hljs-string">index</span> <span class="hljs-string">i,</span> <span class="hljs-string">the</span><br>                  <span class="hljs-string">index</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">ordinal</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">allocation</span> <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">block</span> <span class="hljs-string">and</span> <span class="hljs-string">the</span><br>                  <span class="hljs-string">value</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">index</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">associated</span> <span class="hljs-string">attributes</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Attributes</span><br>                  <span class="hljs-string">array.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-comment"># <span class="hljs-doctag">TODO:</span> This nullable is manually added in. We should update controller-gen</span><br>                  <span class="hljs-comment"># to handle []*int properly itself.</span><br>                  <span class="hljs-attr">nullable:</span> <span class="hljs-literal">true</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">attributes:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Attributes</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">array</span> <span class="hljs-string">of</span> <span class="hljs-string">arbitrary</span> <span class="hljs-string">metadata</span> <span class="hljs-string">associated</span><br>                  <span class="hljs-string">with</span> <span class="hljs-string">allocations</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">block.</span> <span class="hljs-string">To</span> <span class="hljs-string">find</span> <span class="hljs-string">attributes</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">given</span> <span class="hljs-string">allocation,</span><br>                  <span class="hljs-string">use</span> <span class="hljs-string">the</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">allocation&#x27;s</span> <span class="hljs-string">entry</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Allocations</span> <span class="hljs-string">array</span><br>                  <span class="hljs-string">as</span> <span class="hljs-string">the</span> <span class="hljs-string">index</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">element</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">array.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">handle_id:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">secondary:</span><br>                      <span class="hljs-attr">additionalProperties:</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">cidr:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">block&#x27;s</span> <span class="hljs-string">CIDR.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">deleted:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Deleted</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">internal</span> <span class="hljs-string">boolean</span> <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">workaround</span> <span class="hljs-string">a</span> <span class="hljs-string">limitation</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Kubernetes</span> <span class="hljs-string">API</span> <span class="hljs-string">whereby</span> <span class="hljs-string">deletion</span> <span class="hljs-string">will</span> <span class="hljs-string">not</span> <span class="hljs-string">return</span> <span class="hljs-string">a</span> <span class="hljs-string">conflict</span><br>                  <span class="hljs-string">error</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">block</span> <span class="hljs-string">has</span> <span class="hljs-string">been</span> <span class="hljs-string">updated.</span> <span class="hljs-string">It</span> <span class="hljs-string">should</span> <span class="hljs-string">not</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">manually.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">sequenceNumber:</span><br>                <span class="hljs-attr">default:</span> <span class="hljs-number">0</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">We</span> <span class="hljs-string">store</span> <span class="hljs-string">a</span> <span class="hljs-string">sequence</span> <span class="hljs-string">number</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">updated</span> <span class="hljs-string">each</span> <span class="hljs-string">time</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">block</span> <span class="hljs-string">is</span> <span class="hljs-string">written.</span> <span class="hljs-string">Each</span> <span class="hljs-string">allocation</span> <span class="hljs-string">will</span> <span class="hljs-string">also</span> <span class="hljs-string">store</span> <span class="hljs-string">the</span> <span class="hljs-string">sequence</span><br>                  <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">block</span> <span class="hljs-string">at</span> <span class="hljs-string">the</span> <span class="hljs-string">time</span> <span class="hljs-string">of</span> <span class="hljs-string">its</span> <span class="hljs-string">creation.</span> <span class="hljs-string">When</span> <span class="hljs-string">releasing</span><br>                  <span class="hljs-string">an</span> <span class="hljs-string">IP,</span> <span class="hljs-string">passing</span> <span class="hljs-string">the</span> <span class="hljs-string">sequence</span> <span class="hljs-string">number</span> <span class="hljs-string">associated</span> <span class="hljs-string">with</span> <span class="hljs-string">the</span> <span class="hljs-string">allocation</span><br>                  <span class="hljs-string">allows</span> <span class="hljs-string">us</span> <span class="hljs-string">to</span> <span class="hljs-string">protect</span> <span class="hljs-string">against</span> <span class="hljs-string">a</span> <span class="hljs-string">race</span> <span class="hljs-string">condition</span> <span class="hljs-string">and</span> <span class="hljs-string">ensure</span> <span class="hljs-string">the</span> <span class="hljs-string">IP</span><br>                  <span class="hljs-string">hasn&#x27;t</span> <span class="hljs-string">been</span> <span class="hljs-string">released</span> <span class="hljs-string">and</span> <span class="hljs-string">re-allocated</span> <span class="hljs-string">since</span> <span class="hljs-string">the</span> <span class="hljs-string">release</span> <span class="hljs-string">request.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int64</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">sequenceNumberForAllocation:</span><br>                <span class="hljs-attr">additionalProperties:</span><br>                  <span class="hljs-attr">format:</span> <span class="hljs-string">int64</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Map</span> <span class="hljs-string">of</span> <span class="hljs-string">allocated</span> <span class="hljs-string">ordinal</span> <span class="hljs-string">within</span> <span class="hljs-string">the</span> <span class="hljs-string">block</span> <span class="hljs-string">to</span> <span class="hljs-string">sequence</span><br>                  <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">block</span> <span class="hljs-string">at</span> <span class="hljs-string">the</span> <span class="hljs-string">time</span> <span class="hljs-string">of</span> <span class="hljs-string">allocation.</span> <span class="hljs-string">Kubernetes</span> <span class="hljs-string">does</span> <span class="hljs-string">not</span><br>                  <span class="hljs-string">allow</span> <span class="hljs-string">numerical</span> <span class="hljs-string">keys</span> <span class="hljs-string">for</span> <span class="hljs-string">maps,</span> <span class="hljs-string">so</span> <span class="hljs-string">the</span> <span class="hljs-string">key</span> <span class="hljs-string">is</span> <span class="hljs-string">cast</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">string.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">strictAffinity:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">StrictAffinity</span> <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">IPAMBlock</span> <span class="hljs-string">is</span> <span class="hljs-string">deprecated</span> <span class="hljs-string">and</span> <span class="hljs-literal">no</span><br>                  <span class="hljs-string">longer</span> <span class="hljs-string">used</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">code.</span> <span class="hljs-string">Use</span> <span class="hljs-string">IPAMConfig</span> <span class="hljs-string">StrictAffinity</span> <span class="hljs-string">instead.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">unallocated:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Unallocated</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">ordered</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">allocations</span> <span class="hljs-string">which</span> <span class="hljs-string">are</span><br>                  <span class="hljs-string">free</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">block.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">allocations</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">attributes</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">cidr</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">strictAffinity</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">unallocated</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ipamconfigs.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">IPAMConfig</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">IPAMConfigList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">ipamconfigs</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">ipamconfig</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">IPAMConfigSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">IPAMConfig</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">autoAllocateBlocks:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">maxBlocksPerHost:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">MaxBlocksPerHost,</span> <span class="hljs-string">if</span> <span class="hljs-string">non-zero,</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">max</span> <span class="hljs-string">number</span> <span class="hljs-string">of</span> <span class="hljs-string">blocks</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">affine</span> <span class="hljs-string">to</span> <span class="hljs-string">each</span> <span class="hljs-string">host.</span><br>                <span class="hljs-attr">maximum:</span> <span class="hljs-number">2147483647</span><br>                <span class="hljs-attr">minimum:</span> <span class="hljs-number">0</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">strictAffinity:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">autoAllocateBlocks</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">strictAffinity</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ipamhandles.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">IPAMHandle</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">IPAMHandleList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">ipamhandles</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">ipamhandle</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">IPAMHandleSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">IPAMHandle</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">block:</span><br>                <span class="hljs-attr">additionalProperties:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">deleted:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">handleID:</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">block</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">handleID</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ippools.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">IPPool</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">IPPoolList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">ippools</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">ippool</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">IPPoolSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">IPPool</span> <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">allowedUses:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">AllowedUse</span> <span class="hljs-string">controls</span> <span class="hljs-string">what</span> <span class="hljs-string">the</span> <span class="hljs-string">IP</span> <span class="hljs-string">pool</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">used</span> <span class="hljs-string">for.</span>  <span class="hljs-string">If</span><br>                  <span class="hljs-string">not</span> <span class="hljs-string">specified</span> <span class="hljs-string">or</span> <span class="hljs-string">empty,</span> <span class="hljs-string">defaults</span> <span class="hljs-string">to</span> [<span class="hljs-string">&quot;Tunnel&quot;</span>, <span class="hljs-string">&quot;Workload&quot;</span>] <span class="hljs-string">for</span> <span class="hljs-string">back-compatibility</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">blockSize:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">block</span> <span class="hljs-string">size</span> <span class="hljs-string">to</span> <span class="hljs-string">use</span> <span class="hljs-string">for</span> <span class="hljs-string">IP</span> <span class="hljs-string">address</span> <span class="hljs-string">assignments</span> <span class="hljs-string">from</span><br>                  <span class="hljs-string">this</span> <span class="hljs-string">pool.</span> <span class="hljs-string">Defaults</span> <span class="hljs-string">to</span> <span class="hljs-number">26</span> <span class="hljs-string">for</span> <span class="hljs-string">IPv4</span> <span class="hljs-string">and</span> <span class="hljs-number">122</span> <span class="hljs-string">for</span> <span class="hljs-string">IPv6.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">cidr:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">pool</span> <span class="hljs-string">CIDR.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">disableBGPExport:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Disable exporting routes from this IP Pool<span class="hljs-char escape_">&#x27;&#x27;</span>s CIDR over</span><br><span class="hljs-string">                  BGP. [Default: false]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">disabled:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">When</span> <span class="hljs-string">disabled</span> <span class="hljs-string">is</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span> <span class="hljs-string">Calico</span> <span class="hljs-string">IPAM</span> <span class="hljs-string">will</span> <span class="hljs-string">not</span> <span class="hljs-string">assign</span> <span class="hljs-string">addresses</span><br>                  <span class="hljs-string">from</span> <span class="hljs-string">this</span> <span class="hljs-string">pool.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">ipip:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Deprecated: this field is only used for APIv1 backwards</span><br><span class="hljs-string">                  compatibility. Setting this field is not allowed, this field is</span><br><span class="hljs-string">                  for internal use only.&#x27;</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">enabled:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">When</span> <span class="hljs-string">enabled</span> <span class="hljs-string">is</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span> <span class="hljs-string">ipip</span> <span class="hljs-string">tunneling</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">used</span><br>                      <span class="hljs-string">to</span> <span class="hljs-string">deliver</span> <span class="hljs-string">packets</span> <span class="hljs-string">to</span> <span class="hljs-string">destinations</span> <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">pool.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>                  <span class="hljs-attr">mode:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">IPIP</span> <span class="hljs-string">mode.</span>  <span class="hljs-string">This</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span> <span class="hljs-string">&quot;always&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;cross-subnet&quot;</span><span class="hljs-string">.</span>  <span class="hljs-string">A</span><br>                      <span class="hljs-string">mode</span> <span class="hljs-string">of</span> <span class="hljs-string">&quot;always&quot;</span> <span class="hljs-string">will</span> <span class="hljs-string">also</span> <span class="hljs-string">use</span> <span class="hljs-string">IPIP</span> <span class="hljs-string">tunneling</span> <span class="hljs-string">for</span> <span class="hljs-string">routing</span> <span class="hljs-string">to</span><br>                      <span class="hljs-string">destination</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">pool.</span>  <span class="hljs-string">A</span> <span class="hljs-string">mode</span> <span class="hljs-string">of</span> <span class="hljs-string">&quot;cross-subnet&quot;</span><br>                      <span class="hljs-string">will</span> <span class="hljs-string">only</span> <span class="hljs-string">use</span> <span class="hljs-string">IPIP</span> <span class="hljs-string">tunneling</span> <span class="hljs-string">when</span> <span class="hljs-string">the</span> <span class="hljs-string">destination</span> <span class="hljs-string">node</span> <span class="hljs-string">is</span> <span class="hljs-string">on</span><br>                      <span class="hljs-string">a</span> <span class="hljs-string">different</span> <span class="hljs-string">subnet</span> <span class="hljs-string">to</span> <span class="hljs-string">the</span> <span class="hljs-string">originating</span> <span class="hljs-string">node.</span>  <span class="hljs-string">The</span> <span class="hljs-string">default</span> <span class="hljs-string">value</span><br>                      <span class="hljs-string">(if</span> <span class="hljs-string">not</span> <span class="hljs-string">specified)</span> <span class="hljs-string">is</span> <span class="hljs-string">&quot;always&quot;</span><span class="hljs-string">.</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">ipipMode:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Contains</span> <span class="hljs-string">configuration</span> <span class="hljs-string">for</span> <span class="hljs-string">IPIP</span> <span class="hljs-string">tunneling</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span> <span class="hljs-string">pool.</span><br>                  <span class="hljs-string">If</span> <span class="hljs-string">not</span> <span class="hljs-string">specified,</span> <span class="hljs-string">then</span> <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">defaulted</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;Never&quot;</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">IPIP</span> <span class="hljs-string">tunneling</span><br>                  <span class="hljs-string">is</span> <span class="hljs-string">disabled).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">nat-outgoing:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Deprecated: this field is only used for APIv1 backwards</span><br><span class="hljs-string">                  compatibility. Setting this field is not allowed, this field is</span><br><span class="hljs-string">                  for internal use only.&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">natOutgoing:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">When</span> <span class="hljs-string">natOutgoing</span> <span class="hljs-string">is</span> <span class="hljs-literal">true</span><span class="hljs-string">,</span> <span class="hljs-string">packets</span> <span class="hljs-string">sent</span> <span class="hljs-string">from</span> <span class="hljs-string">Calico</span> <span class="hljs-string">networked</span><br>                  <span class="hljs-string">containers</span> <span class="hljs-string">in</span> <span class="hljs-string">this</span> <span class="hljs-string">pool</span> <span class="hljs-string">to</span> <span class="hljs-string">destinations</span> <span class="hljs-string">outside</span> <span class="hljs-string">of</span> <span class="hljs-string">this</span> <span class="hljs-string">pool</span> <span class="hljs-string">will</span><br>                  <span class="hljs-string">be</span> <span class="hljs-string">masqueraded.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">boolean</span><br>              <span class="hljs-attr">nodeSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Allows</span> <span class="hljs-string">IPPool</span> <span class="hljs-string">to</span> <span class="hljs-string">allocate</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">node</span> <span class="hljs-string">by</span> <span class="hljs-string">label</span><br>                  <span class="hljs-string">selector.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">vxlanMode:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Contains</span> <span class="hljs-string">configuration</span> <span class="hljs-string">for</span> <span class="hljs-string">VXLAN</span> <span class="hljs-string">tunneling</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span> <span class="hljs-string">pool.</span><br>                  <span class="hljs-string">If</span> <span class="hljs-string">not</span> <span class="hljs-string">specified,</span> <span class="hljs-string">then</span> <span class="hljs-string">this</span> <span class="hljs-string">is</span> <span class="hljs-string">defaulted</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;Never&quot;</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">VXLAN</span><br>                  <span class="hljs-string">tunneling</span> <span class="hljs-string">is</span> <span class="hljs-string">disabled).</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">cidr</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">annotations:</span><br>    <span class="hljs-attr">controller-gen.kubebuilder.io/version:</span> <span class="hljs-string">(devel)</span><br>  <span class="hljs-attr">creationTimestamp:</span> <span class="hljs-literal">null</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ipreservations.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">IPReservation</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">IPReservationList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">ipreservations</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">ipreservation</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">IPReservationSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">IPReservation</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">reservedCIDRs:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ReservedCIDRs</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">CIDRs</span> <span class="hljs-string">and/or</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span><br>                  <span class="hljs-string">that</span> <span class="hljs-string">Calico</span> <span class="hljs-string">IPAM</span> <span class="hljs-string">will</span> <span class="hljs-string">exclude</span> <span class="hljs-string">from</span> <span class="hljs-string">new</span> <span class="hljs-string">allocations.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kubecontrollersconfigurations.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">KubeControllersConfiguration</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">KubeControllersConfigurationList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">kubecontrollersconfigurations</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">kubecontrollersconfiguration</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Cluster</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">KubeControllersConfigurationSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>              <span class="hljs-string">Kubernetes</span> <span class="hljs-string">controllers</span> <span class="hljs-string">configuration.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">controllers:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Controllers</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">individual</span> <span class="hljs-string">Kubernetes</span><br>                  <span class="hljs-string">controllers</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">namespace:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">controller.</span><br>                      <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">reconcilerPeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform reconciliation</span><br><span class="hljs-string">                          with the Calico datastore. [Default: 5m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">node:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Node</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">node</span> <span class="hljs-string">controller.</span><br>                      <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">hostEndpoint:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">HostEndpoint</span> <span class="hljs-string">controls</span> <span class="hljs-string">syncing</span> <span class="hljs-string">nodes</span> <span class="hljs-string">to</span> <span class="hljs-string">host</span> <span class="hljs-string">endpoints.</span><br>                          <span class="hljs-string">Disabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">autoCreate:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;AutoCreate enables automatic creation of</span><br><span class="hljs-string">                              host endpoints for every node. [Default: Disabled]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">leakGracePeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LeakGracePeriod is the period used by the controller</span><br><span class="hljs-string">                          to determine if an IP address has been leaked. Set to 0</span><br><span class="hljs-string">                          to disable IP garbage collection. [Default: 15m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">reconcilerPeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform reconciliation</span><br><span class="hljs-string">                          with the Calico datastore. [Default: 5m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">syncLabels:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;SyncLabels controls whether to copy Kubernetes</span><br><span class="hljs-string">                          node labels to Calico nodes. [Default: Enabled]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">policy:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Policy</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">controller.</span><br>                      <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">reconcilerPeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform reconciliation</span><br><span class="hljs-string">                          with the Calico datastore. [Default: 5m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">serviceAccount:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccount</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">service</span><br>                      <span class="hljs-string">account</span> <span class="hljs-string">controller.</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">reconcilerPeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform reconciliation</span><br><span class="hljs-string">                          with the Calico datastore. [Default: 5m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">workloadEndpoint:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">WorkloadEndpoint</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">workload</span><br>                      <span class="hljs-string">endpoint</span> <span class="hljs-string">controller.</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">reconcilerPeriod:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform reconciliation</span><br><span class="hljs-string">                          with the Calico datastore. [Default: 5m]&#x27;</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">debugProfilePort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">DebugProfilePort</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">port</span> <span class="hljs-string">to</span> <span class="hljs-string">serve</span> <span class="hljs-string">memory</span><br>                  <span class="hljs-string">and</span> <span class="hljs-string">cpu</span> <span class="hljs-string">profiles</span> <span class="hljs-string">on.</span> <span class="hljs-string">If</span> <span class="hljs-string">not</span> <span class="hljs-string">specified,</span> <span class="hljs-string">profiling</span> <span class="hljs-string">is</span> <span class="hljs-string">disabled.</span><br>                <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>              <span class="hljs-attr">etcdV3CompactionPeriod:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;EtcdV3CompactionPeriod is the period between etcdv3</span><br><span class="hljs-string">                  compaction requests. Set to 0 to disable. [Default: 10m]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">healthChecks:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HealthChecks enables or disables support for health</span><br><span class="hljs-string">                  checks [Default: Enabled]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">logSeverityScreen:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeverityScreen is the log severity above which logs</span><br><span class="hljs-string">                  are sent to the stdout. [Default: Info]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">prometheusMetricsPort:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusMetricsPort is the TCP port that the Prometheus</span><br><span class="hljs-string">                  metrics server should bind to. Set to 0 to disable. [Default: 9094]&#x27;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>            <span class="hljs-attr">required:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">controllers</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">status:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">KubeControllersConfigurationStatus</span> <span class="hljs-string">represents</span> <span class="hljs-string">the</span> <span class="hljs-string">status</span><br>              <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">configuration.</span> <span class="hljs-string">It&#x27;s</span> <span class="hljs-string">useful</span> <span class="hljs-string">for</span> <span class="hljs-string">admins</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">able</span> <span class="hljs-string">to</span> <span class="hljs-string">see</span> <span class="hljs-string">the</span> <span class="hljs-string">actual</span><br>              <span class="hljs-string">config</span> <span class="hljs-string">that</span> <span class="hljs-string">was</span> <span class="hljs-string">applied,</span> <span class="hljs-string">which</span> <span class="hljs-string">can</span> <span class="hljs-string">be</span> <span class="hljs-string">modified</span> <span class="hljs-string">by</span> <span class="hljs-string">environment</span> <span class="hljs-string">variables</span><br>              <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">kube-controllers</span> <span class="hljs-string">process.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">environmentVars:</span><br>                <span class="hljs-attr">additionalProperties:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">EnvironmentVars</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">environment</span> <span class="hljs-string">variables</span> <span class="hljs-string">on</span><br>                  <span class="hljs-string">the</span> <span class="hljs-string">kube-controllers</span> <span class="hljs-string">that</span> <span class="hljs-string">influenced</span> <span class="hljs-string">the</span> <span class="hljs-string">RunningConfig.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>              <span class="hljs-attr">runningConfig:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">RunningConfig</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">effective</span> <span class="hljs-string">config</span> <span class="hljs-string">that</span> <span class="hljs-string">is</span> <span class="hljs-string">running</span><br>                  <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">kube-controllers</span> <span class="hljs-string">pod,</span> <span class="hljs-string">after</span> <span class="hljs-string">merging</span> <span class="hljs-string">the</span> <span class="hljs-string">API</span> <span class="hljs-string">resource</span> <span class="hljs-string">with</span><br>                  <span class="hljs-string">any</span> <span class="hljs-string">environment</span> <span class="hljs-string">variables.</span><br>                <span class="hljs-attr">properties:</span><br>                  <span class="hljs-attr">controllers:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">Controllers</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">individual</span> <span class="hljs-string">Kubernetes</span><br>                      <span class="hljs-string">controllers</span><br>                    <span class="hljs-attr">properties:</span><br>                      <span class="hljs-attr">namespace:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span><br>                          <span class="hljs-string">controller.</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">reconcilerPeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform</span><br><span class="hljs-string">                              reconciliation with the Calico datastore. [Default:</span><br><span class="hljs-string">                              5m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">node:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Node</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">node</span> <span class="hljs-string">controller.</span><br>                          <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">hostEndpoint:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">HostEndpoint</span> <span class="hljs-string">controls</span> <span class="hljs-string">syncing</span> <span class="hljs-string">nodes</span> <span class="hljs-string">to</span> <span class="hljs-string">host</span><br>                              <span class="hljs-string">endpoints.</span> <span class="hljs-string">Disabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                            <span class="hljs-attr">properties:</span><br>                              <span class="hljs-attr">autoCreate:</span><br>                                <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;AutoCreate enables automatic creation</span><br><span class="hljs-string">                                  of host endpoints for every node. [Default: Disabled]&#x27;</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                          <span class="hljs-attr">leakGracePeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LeakGracePeriod is the period used by the</span><br><span class="hljs-string">                              controller to determine if an IP address has been leaked.</span><br><span class="hljs-string">                              Set to 0 to disable IP garbage collection. [Default:</span><br><span class="hljs-string">                              15m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">reconcilerPeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform</span><br><span class="hljs-string">                              reconciliation with the Calico datastore. [Default:</span><br><span class="hljs-string">                              5m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">syncLabels:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;SyncLabels controls whether to copy Kubernetes</span><br><span class="hljs-string">                              node labels to Calico nodes. [Default: Enabled]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">policy:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">Policy</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">controller.</span><br>                          <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">reconcilerPeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform</span><br><span class="hljs-string">                              reconciliation with the Calico datastore. [Default:</span><br><span class="hljs-string">                              5m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">serviceAccount:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccount</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">service</span><br>                          <span class="hljs-string">account</span> <span class="hljs-string">controller.</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">reconcilerPeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform</span><br><span class="hljs-string">                              reconciliation with the Calico datastore. [Default:</span><br><span class="hljs-string">                              5m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">workloadEndpoint:</span><br>                        <span class="hljs-attr">description:</span> <span class="hljs-string">WorkloadEndpoint</span> <span class="hljs-string">enables</span> <span class="hljs-string">and</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">workload</span><br>                          <span class="hljs-string">endpoint</span> <span class="hljs-string">controller.</span> <span class="hljs-string">Enabled</span> <span class="hljs-string">by</span> <span class="hljs-string">default,</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">nil</span> <span class="hljs-string">to</span> <span class="hljs-string">disable.</span><br>                        <span class="hljs-attr">properties:</span><br>                          <span class="hljs-attr">reconcilerPeriod:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;ReconcilerPeriod is the period to perform</span><br><span class="hljs-string">                              reconciliation with the Calico datastore. [Default:</span><br><span class="hljs-string">                              5m]&#x27;</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">debugProfilePort:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">DebugProfilePort</span> <span class="hljs-string">configures</span> <span class="hljs-string">the</span> <span class="hljs-string">port</span> <span class="hljs-string">to</span> <span class="hljs-string">serve</span> <span class="hljs-string">memory</span><br>                      <span class="hljs-string">and</span> <span class="hljs-string">cpu</span> <span class="hljs-string">profiles</span> <span class="hljs-string">on.</span> <span class="hljs-string">If</span> <span class="hljs-string">not</span> <span class="hljs-string">specified,</span> <span class="hljs-string">profiling</span> <span class="hljs-string">is</span> <span class="hljs-string">disabled.</span><br>                    <span class="hljs-attr">format:</span> <span class="hljs-string">int32</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                  <span class="hljs-attr">etcdV3CompactionPeriod:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;EtcdV3CompactionPeriod is the period between etcdv3</span><br><span class="hljs-string">                      compaction requests. Set to 0 to disable. [Default: 10m]&#x27;</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">healthChecks:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HealthChecks enables or disables support for health</span><br><span class="hljs-string">                      checks [Default: Enabled]&#x27;</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">logSeverityScreen:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;LogSeverityScreen is the log severity above which</span><br><span class="hljs-string">                      logs are sent to the stdout. [Default: Info]&#x27;</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                  <span class="hljs-attr">prometheusMetricsPort:</span><br>                    <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;PrometheusMetricsPort is the TCP port that the Prometheus</span><br><span class="hljs-string">                      metrics server should bind to. Set to 0 to disable. [Default:</span><br><span class="hljs-string">                      9094]&#x27;</span><br>                    <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                <span class="hljs-attr">required:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">controllers</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">networkpolicies.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">NetworkPolicy</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">NetworkPolicyList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">networkpolicies</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">networkpolicy</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Namespaced</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">egress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">ordered</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">egress</span> <span class="hljs-string">rules.</span>  <span class="hljs-string">Each</span> <span class="hljs-string">rule</span> <span class="hljs-string">contains</span><br>                  <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">packet</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">and</span> <span class="hljs-string">a</span> <span class="hljs-string">corresponding</span> <span class="hljs-string">action</span> <span class="hljs-string">to</span> <span class="hljs-string">apply.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;A Rule encapsulates a set of match criteria and an</span><br><span class="hljs-string">                    action.  Both selector-based security Policy and security Profiles</span><br><span class="hljs-string">                    reference rules - separated out as a list of rules for both ingress</span><br><span class="hljs-string">                    and egress packet matching. \n Each positive match criteria has</span><br><span class="hljs-string">                    a negated version, prefixed with \&quot;Not\&quot;. All the match criteria</span><br><span class="hljs-string">                    within a rule must be satisfied for a packet to match. A single</span><br><span class="hljs-string">                    rule can contain the positive and negative version of a match</span><br><span class="hljs-string">                    and both must be satisfied for the rule to match.&quot;</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">action:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">destination:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">destination</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">http:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">contains</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span><br>                        <span class="hljs-string">requests.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">methods:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Methods</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">only</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">requests</span> <span class="hljs-string">that</span> <span class="hljs-string">use</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">listed</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">Methods</span> <span class="hljs-string">(e.g.</span> <span class="hljs-string">GET,</span> <span class="hljs-string">PUT,</span> <span class="hljs-string">etc.)</span> <span class="hljs-string">Multiple</span><br>                            <span class="hljs-string">methods</span> <span class="hljs-string">are</span> <span class="hljs-string">OR&#x27;d</span> <span class="hljs-string">together.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">paths:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Paths is an optional field that restricts</span><br><span class="hljs-string">                            the rule to apply to HTTP requests that use one of the</span><br><span class="hljs-string">                            listed HTTP Paths. Multiple paths are OR<span class="hljs-char escape_">&#x27;&#x27;</span>d together.</span><br><span class="hljs-string">                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may</span><br><span class="hljs-string">                            ONLY specify either a `exact` or a `prefix` match. The</span><br><span class="hljs-string">                            validator will check for it.&#x27;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HTTPPath specifies an HTTP path to match.</span><br><span class="hljs-string">                              It may be either of the form: exact: &lt;path&gt;: which matches</span><br><span class="hljs-string">                              the path exactly or prefix: &lt;path-prefix&gt;: which matches</span><br><span class="hljs-string">                              the path prefix&#x27;</span><br>                            <span class="hljs-attr">properties:</span><br>                              <span class="hljs-attr">exact:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">prefix:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">icmp:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">type</span> <span class="hljs-string">and</span> <span class="hljs-string">code</span> <span class="hljs-string">of</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">traffic.</span>  <span class="hljs-string">This</span><br>                        <span class="hljs-string">should</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">specified</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">field</span> <span class="hljs-string">is</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;ICMP&quot;</span><br>                        <span class="hljs-string">or</span> <span class="hljs-string">&quot;ICMPv6&quot;</span><span class="hljs-string">.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">ipVersion:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">IPVersion</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                        <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">match</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">IP</span> <span class="hljs-string">version.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">metadata:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Metadata</span> <span class="hljs-string">contains</span> <span class="hljs-string">additional</span> <span class="hljs-string">information</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span><br>                        <span class="hljs-string">rule</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">annotations:</span><br>                          <span class="hljs-attr">additionalProperties:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Annotations</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">key</span> <span class="hljs-string">value</span> <span class="hljs-string">pairs</span> <span class="hljs-string">that</span><br>                            <span class="hljs-string">give</span> <span class="hljs-string">extra</span> <span class="hljs-string">information</span> <span class="hljs-string">about</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notICMP:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notProtocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotProtocol</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span><br>                        <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Protocol is an optional field that restricts the</span><br><span class="hljs-string">                        rule to only apply to traffic of a specific IP protocol. Required</span><br><span class="hljs-string">                        if any of the EntityRules contain Ports (because ports only</span><br><span class="hljs-string">                        apply to certain protocols). \n Must be one of these string</span><br><span class="hljs-string">                        values: \&quot;TCP\&quot;, \&quot;UDP\&quot;, \&quot;ICMP\&quot;, \&quot;ICMPv6\&quot;, \&quot;SCTP\&quot;,</span><br><span class="hljs-string">                        \&quot;UDPLite\&quot; or an integer in the range 1-255.&quot;</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">source:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Source</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span><br>                        <span class="hljs-string">source</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">action</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">ingress:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">ordered</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">ingress</span> <span class="hljs-string">rules.</span>  <span class="hljs-string">Each</span> <span class="hljs-string">rule</span> <span class="hljs-string">contains</span><br>                  <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">packet</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">and</span> <span class="hljs-string">a</span> <span class="hljs-string">corresponding</span> <span class="hljs-string">action</span> <span class="hljs-string">to</span> <span class="hljs-string">apply.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;A Rule encapsulates a set of match criteria and an</span><br><span class="hljs-string">                    action.  Both selector-based security Policy and security Profiles</span><br><span class="hljs-string">                    reference rules - separated out as a list of rules for both ingress</span><br><span class="hljs-string">                    and egress packet matching. \n Each positive match criteria has</span><br><span class="hljs-string">                    a negated version, prefixed with \&quot;Not\&quot;. All the match criteria</span><br><span class="hljs-string">                    within a rule must be satisfied for a packet to match. A single</span><br><span class="hljs-string">                    rule can contain the positive and negative version of a match</span><br><span class="hljs-string">                    and both must be satisfied for the rule to match.&quot;</span><br>                  <span class="hljs-attr">properties:</span><br>                    <span class="hljs-attr">action:</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                    <span class="hljs-attr">destination:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Destination</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">destination</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">http:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">contains</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span><br>                        <span class="hljs-string">requests.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">methods:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Methods</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">only</span> <span class="hljs-string">to</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">requests</span> <span class="hljs-string">that</span> <span class="hljs-string">use</span> <span class="hljs-string">one</span> <span class="hljs-string">of</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">listed</span> <span class="hljs-string">HTTP</span> <span class="hljs-string">Methods</span> <span class="hljs-string">(e.g.</span> <span class="hljs-string">GET,</span> <span class="hljs-string">PUT,</span> <span class="hljs-string">etc.)</span> <span class="hljs-string">Multiple</span><br>                            <span class="hljs-string">methods</span> <span class="hljs-string">are</span> <span class="hljs-string">OR&#x27;d</span> <span class="hljs-string">together.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">paths:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Paths is an optional field that restricts</span><br><span class="hljs-string">                            the rule to apply to HTTP requests that use one of the</span><br><span class="hljs-string">                            listed HTTP Paths. Multiple paths are OR<span class="hljs-char escape_">&#x27;&#x27;</span>d together.</span><br><span class="hljs-string">                            e.g: - exact: /foo - prefix: /bar NOTE: Each entry may</span><br><span class="hljs-string">                            ONLY specify either a `exact` or a `prefix` match. The</span><br><span class="hljs-string">                            validator will check for it.&#x27;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;HTTPPath specifies an HTTP path to match.</span><br><span class="hljs-string">                              It may be either of the form: exact: &lt;path&gt;: which matches</span><br><span class="hljs-string">                              the path exactly or prefix: &lt;path-prefix&gt;: which matches</span><br><span class="hljs-string">                              the path prefix&#x27;</span><br>                            <span class="hljs-attr">properties:</span><br>                              <span class="hljs-attr">exact:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">prefix:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">icmp:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                        <span class="hljs-string">to</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">type</span> <span class="hljs-string">and</span> <span class="hljs-string">code</span> <span class="hljs-string">of</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">traffic.</span>  <span class="hljs-string">This</span><br>                        <span class="hljs-string">should</span> <span class="hljs-string">only</span> <span class="hljs-string">be</span> <span class="hljs-string">specified</span> <span class="hljs-string">if</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">field</span> <span class="hljs-string">is</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;ICMP&quot;</span><br>                        <span class="hljs-string">or</span> <span class="hljs-string">&quot;ICMPv6&quot;</span><span class="hljs-string">.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">ipVersion:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">IPVersion</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                        <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">match</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">IP</span> <span class="hljs-string">version.</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                    <span class="hljs-attr">metadata:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Metadata</span> <span class="hljs-string">contains</span> <span class="hljs-string">additional</span> <span class="hljs-string">information</span> <span class="hljs-string">for</span> <span class="hljs-string">this</span><br>                        <span class="hljs-string">rule</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">annotations:</span><br>                          <span class="hljs-attr">additionalProperties:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Annotations</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">set</span> <span class="hljs-string">of</span> <span class="hljs-string">key</span> <span class="hljs-string">value</span> <span class="hljs-string">pairs</span> <span class="hljs-string">that</span><br>                            <span class="hljs-string">give</span> <span class="hljs-string">extra</span> <span class="hljs-string">information</span> <span class="hljs-string">about</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notICMP:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotICMP</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">code:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">code.</span>  <span class="hljs-string">If</span> <span class="hljs-string">specified,</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">Type</span> <span class="hljs-string">value</span> <span class="hljs-string">must</span> <span class="hljs-string">also</span> <span class="hljs-string">be</span> <span class="hljs-string">specified.</span> <span class="hljs-string">This</span> <span class="hljs-string">is</span> <span class="hljs-string">a</span> <span class="hljs-string">technical</span><br>                            <span class="hljs-string">limitation</span> <span class="hljs-string">imposed</span> <span class="hljs-string">by</span> <span class="hljs-string">the</span> <span class="hljs-string">kernel&#x27;s</span> <span class="hljs-string">iptables</span> <span class="hljs-string">firewall,</span><br>                            <span class="hljs-string">which</span> <span class="hljs-string">Calico</span> <span class="hljs-string">uses</span> <span class="hljs-string">to</span> <span class="hljs-string">enforce</span> <span class="hljs-string">the</span> <span class="hljs-string">rule.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                        <span class="hljs-attr">type:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Match</span> <span class="hljs-string">on</span> <span class="hljs-string">a</span> <span class="hljs-string">specific</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">type.</span>  <span class="hljs-string">For</span> <span class="hljs-string">example</span><br>                            <span class="hljs-string">a</span> <span class="hljs-string">value</span> <span class="hljs-string">of</span> <span class="hljs-number">8</span> <span class="hljs-string">refers</span> <span class="hljs-string">to</span> <span class="hljs-string">ICMP</span> <span class="hljs-string">Echo</span> <span class="hljs-string">Request</span> <span class="hljs-string">(i.e.</span> <span class="hljs-string">pings).</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                    <span class="hljs-attr">notProtocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">NotProtocol</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span><br>                        <span class="hljs-string">field.</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">protocol:</span><br>                      <span class="hljs-attr">anyOf:</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                      <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Protocol is an optional field that restricts the</span><br><span class="hljs-string">                        rule to only apply to traffic of a specific IP protocol. Required</span><br><span class="hljs-string">                        if any of the EntityRules contain Ports (because ports only</span><br><span class="hljs-string">                        apply to certain protocols). \n Must be one of these string</span><br><span class="hljs-string">                        values: \&quot;TCP\&quot;, \&quot;UDP\&quot;, \&quot;ICMP\&quot;, \&quot;ICMPv6\&quot;, \&quot;SCTP\&quot;,</span><br><span class="hljs-string">                        \&quot;UDPLite\&quot; or an integer in the range 1-255.&quot;</span><br>                      <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                      <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                    <span class="hljs-attr">source:</span><br>                      <span class="hljs-attr">description:</span> <span class="hljs-string">Source</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">match</span> <span class="hljs-string">criteria</span> <span class="hljs-string">that</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span><br>                        <span class="hljs-string">source</span> <span class="hljs-string">entity.</span><br>                      <span class="hljs-attr">properties:</span><br>                        <span class="hljs-attr">namespaceSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;NamespaceSelector is an optional field that</span><br><span class="hljs-string">                            contains a selector expression. Only traffic that originates</span><br><span class="hljs-string">                            from (or terminates at) endpoints within the selected</span><br><span class="hljs-string">                            namespaces will be matched. When both NamespaceSelector</span><br><span class="hljs-string">                            and another selector are defined on the same rule, then</span><br><span class="hljs-string">                            only workload endpoints that are matched by both selectors</span><br><span class="hljs-string">                            will be selected by the rule. \n For NetworkPolicy, an</span><br><span class="hljs-string">                            empty NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only workload endpoints in the same namespace</span><br><span class="hljs-string">                            as the NetworkPolicy. \n For NetworkPolicy, `global()`</span><br><span class="hljs-string">                            NamespaceSelector implies that the Selector is limited</span><br><span class="hljs-string">                            to selecting only GlobalNetworkSet or HostEndpoint. \n</span><br><span class="hljs-string">                            For GlobalNetworkPolicy, an empty NamespaceSelector implies</span><br><span class="hljs-string">                            the Selector applies to workload endpoints across all</span><br><span class="hljs-string">                            namespaces.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">nets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">Nets</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span> <span class="hljs-string">the</span><br>                            <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span> <span class="hljs-string">(or</span><br>                            <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">IP</span> <span class="hljs-string">addresses</span> <span class="hljs-string">in</span> <span class="hljs-string">any</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">subnets.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notNets:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotNets</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Nets</span><br>                            <span class="hljs-string">field.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notPorts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotPorts</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Ports</span><br>                            <span class="hljs-string">field.</span> <span class="hljs-string">Since</span> <span class="hljs-string">only</span> <span class="hljs-string">some</span> <span class="hljs-string">protocols</span> <span class="hljs-string">have</span> <span class="hljs-string">ports,</span> <span class="hljs-string">if</span> <span class="hljs-string">any</span> <span class="hljs-string">ports</span><br>                            <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">it</span> <span class="hljs-string">requires</span> <span class="hljs-string">the</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">match</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">Rule</span><br>                            <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">set</span> <span class="hljs-string">to</span> <span class="hljs-string">&quot;TCP&quot;</span> <span class="hljs-string">or</span> <span class="hljs-string">&quot;UDP&quot;</span><span class="hljs-string">.</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">notSelector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">NotSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">negated</span> <span class="hljs-string">version</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">Selector</span><br>                            <span class="hljs-string">field.</span>  <span class="hljs-string">See</span> <span class="hljs-string">Selector</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">subtleties</span> <span class="hljs-string">with</span> <span class="hljs-string">negated</span><br>                            <span class="hljs-string">selectors.</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">ports:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Ports is an optional field that restricts</span><br><span class="hljs-string">                            the rule to only apply to traffic that has a source (destination)</span><br><span class="hljs-string">                            port that matches one of these ranges/values. This value</span><br><span class="hljs-string">                            is a list of integers or strings that represent ranges</span><br><span class="hljs-string">                            of ports. \n Since only some protocols have ports, if</span><br><span class="hljs-string">                            any ports are specified it requires the Protocol match</span><br><span class="hljs-string">                            in the Rule to be set to \&quot;TCP\&quot; or \&quot;UDP\&quot;.&quot;</span><br>                          <span class="hljs-attr">items:</span><br>                            <span class="hljs-attr">anyOf:</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">integer</span><br>                            <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">pattern:</span> <span class="hljs-string">^.*</span><br>                            <span class="hljs-attr">x-kubernetes-int-or-string:</span> <span class="hljs-literal">true</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                        <span class="hljs-attr">selector:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Selector is an optional field that contains</span><br><span class="hljs-string">                            a selector expression (see Policy for sample syntax).</span><br><span class="hljs-string">                            \ Only traffic that originates from (terminates at) endpoints</span><br><span class="hljs-string">                            matching the selector will be matched. \n Note that: in</span><br><span class="hljs-string">                            addition to the negated version of the Selector (see NotSelector</span><br><span class="hljs-string">                            below), the selector expression syntax itself supports</span><br><span class="hljs-string">                            negation.  The two types of negation are subtly different.</span><br><span class="hljs-string">                            One negates the set of matched endpoints, the other negates</span><br><span class="hljs-string">                            the whole match: \n \tSelector = \&quot;!has(my_label)\&quot; matches</span><br><span class="hljs-string">                            packets that are from other Calico-controlled \tendpoints</span><br><span class="hljs-string">                            that do not have the label \&quot;my_label\&quot;. \n \tNotSelector</span><br><span class="hljs-string">                            = \&quot;has(my_label)\&quot; matches packets that are not from</span><br><span class="hljs-string">                            Calico-controlled \tendpoints that do have the label \&quot;my_label\&quot;.</span><br><span class="hljs-string">                            \n The effect is that the latter will accept packets from</span><br><span class="hljs-string">                            non-Calico sources whereas the former is limited to packets</span><br><span class="hljs-string">                            from Calico-controlled endpoints.&quot;</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                        <span class="hljs-attr">serviceAccounts:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccounts</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                            <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span> <span class="hljs-string">from</span><br>                            <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">matching</span> <span class="hljs-string">service</span><br>                            <span class="hljs-string">account.</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">names:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Names</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">whose</span> <span class="hljs-string">name</span> <span class="hljs-string">is</span> <span class="hljs-string">in</span> <span class="hljs-string">the</span> <span class="hljs-string">list.</span><br>                              <span class="hljs-attr">items:</span><br>                                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>                            <span class="hljs-attr">selector:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Selector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">restricts</span><br>                                <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">to</span> <span class="hljs-string">only</span> <span class="hljs-string">apply</span> <span class="hljs-string">to</span> <span class="hljs-string">traffic</span> <span class="hljs-string">that</span> <span class="hljs-string">originates</span><br>                                <span class="hljs-string">from</span> <span class="hljs-string">(or</span> <span class="hljs-string">terminates</span> <span class="hljs-string">at)</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">running</span> <span class="hljs-string">as</span> <span class="hljs-string">a</span> <span class="hljs-string">service</span><br>                                <span class="hljs-string">account</span> <span class="hljs-string">that</span> <span class="hljs-string">matches</span> <span class="hljs-string">the</span> <span class="hljs-string">given</span> <span class="hljs-string">label</span> <span class="hljs-string">selector.</span> <span class="hljs-string">If</span><br>                                <span class="hljs-string">both</span> <span class="hljs-string">Names</span> <span class="hljs-string">and</span> <span class="hljs-string">Selector</span> <span class="hljs-string">are</span> <span class="hljs-string">specified</span> <span class="hljs-string">then</span> <span class="hljs-string">they</span> <span class="hljs-string">are</span><br>                                <span class="hljs-string">AND&#x27;ed.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                        <span class="hljs-attr">services:</span><br>                          <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Services is an optional field that contains</span><br><span class="hljs-string">                            options for matching Kubernetes Services. If specified,</span><br><span class="hljs-string">                            only traffic that originates from or terminates at endpoints</span><br><span class="hljs-string">                            within the selected service(s) will be matched, and only</span><br><span class="hljs-string">                            to/from each endpoint&#x27;s port. \n Services cannot be specified</span><br><span class="hljs-string">                            on the same rule as Selector, NotSelector, NamespaceSelector,</span><br><span class="hljs-string">                            Nets, NotNets or ServiceAccounts. \n Ports and NotPorts</span><br><span class="hljs-string">                            can only be specified with Services on ingress rules.&quot;</span><br>                          <span class="hljs-attr">properties:</span><br>                            <span class="hljs-attr">name:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Name</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">name</span> <span class="hljs-string">of</span> <span class="hljs-string">a</span> <span class="hljs-string">Kubernetes</span><br>                                <span class="hljs-string">Service</span> <span class="hljs-string">to</span> <span class="hljs-string">match.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                            <span class="hljs-attr">namespace:</span><br>                              <span class="hljs-attr">description:</span> <span class="hljs-string">Namespace</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">namespace</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span><br>                                <span class="hljs-string">given</span> <span class="hljs-string">Service.</span> <span class="hljs-string">If</span> <span class="hljs-string">left</span> <span class="hljs-string">empty,</span> <span class="hljs-string">the</span> <span class="hljs-string">rule</span> <span class="hljs-string">will</span> <span class="hljs-string">match</span><br>                                <span class="hljs-string">within</span> <span class="hljs-string">this</span> <span class="hljs-string">policy&#x27;s</span> <span class="hljs-string">namespace.</span><br>                              <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                          <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                      <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                  <span class="hljs-attr">required:</span><br>                  <span class="hljs-bullet">-</span> <span class="hljs-string">action</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>              <span class="hljs-attr">order:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">Order</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">that</span> <span class="hljs-string">specifies</span> <span class="hljs-string">the</span> <span class="hljs-string">order</span> <span class="hljs-string">in</span><br>                  <span class="hljs-string">which</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">is</span> <span class="hljs-string">applied.</span> <span class="hljs-string">Policies</span> <span class="hljs-string">with</span> <span class="hljs-string">higher</span> <span class="hljs-string">&quot;order&quot;</span> <span class="hljs-string">are</span> <span class="hljs-string">applied</span><br>                  <span class="hljs-string">after</span> <span class="hljs-string">those</span> <span class="hljs-string">with</span> <span class="hljs-string">lower</span> <span class="hljs-string">order.</span>  <span class="hljs-string">If</span> <span class="hljs-string">the</span> <span class="hljs-string">order</span> <span class="hljs-string">is</span> <span class="hljs-string">omitted,</span> <span class="hljs-string">it</span> <span class="hljs-string">may</span> <span class="hljs-string">be</span><br>                  <span class="hljs-string">considered</span> <span class="hljs-string">to</span> <span class="hljs-string">be</span> <span class="hljs-string">&quot;infinite&quot;</span> <span class="hljs-bullet">-</span> <span class="hljs-string">i.e.</span> <span class="hljs-string">the</span> <span class="hljs-string">policy</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">applied</span> <span class="hljs-string">last.</span>  <span class="hljs-string">Policies</span><br>                  <span class="hljs-string">with</span> <span class="hljs-string">identical</span> <span class="hljs-string">order</span> <span class="hljs-string">will</span> <span class="hljs-string">be</span> <span class="hljs-string">applied</span> <span class="hljs-string">in</span> <span class="hljs-string">alphanumerical</span> <span class="hljs-string">order</span> <span class="hljs-string">based</span><br>                  <span class="hljs-string">on</span> <span class="hljs-string">the</span> <span class="hljs-string">Policy</span> <span class="hljs-string">&quot;Name&quot;</span><span class="hljs-string">.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">number</span><br>              <span class="hljs-attr">selector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;The selector is an expression used to pick pick out</span><br><span class="hljs-string">                  the endpoints that the policy should be applied to. \n Selector</span><br><span class="hljs-string">                  expressions follow this syntax: \n \tlabel == \&quot;string_literal\&quot;</span><br><span class="hljs-string">                  \ -&gt;  comparison, e.g. my_label == \&quot;foo bar\&quot; \tlabel != \&quot;string_literal\&quot;</span><br><span class="hljs-string">                  \  -&gt;  not equal; also matches if label is not present \tlabel in</span><br><span class="hljs-string">                  &#123; \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot;, ... &#125;  -&gt;  true if the value of label X is</span><br><span class="hljs-string">                  one of \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot; \tlabel not in &#123; \&quot;a\&quot;, \&quot;b\&quot;, \&quot;c\&quot;,</span><br><span class="hljs-string">                  ... &#125;  -&gt;  true if the value of label X is not one of \&quot;a\&quot;, \&quot;b\&quot;,</span><br><span class="hljs-string">                  \&quot;c\&quot; \thas(label_name)  -&gt; True if that label is present \t! expr</span><br><span class="hljs-string">                  -&gt; negation of expr \texpr &amp;&amp; expr  -&gt; Short-circuit and \texpr</span><br><span class="hljs-string">                  || expr  -&gt; Short-circuit or \t( expr ) -&gt; parens for grouping \tall()</span><br><span class="hljs-string">                  or the empty selector -&gt; matches all endpoints. \n Label names are</span><br><span class="hljs-string">                  allowed to contain alphanumerics, -, _ and /. String literals are</span><br><span class="hljs-string">                  more permissive but they do not support escape characters. \n Examples</span><br><span class="hljs-string">                  (with made-up labels): \n \ttype == \&quot;webserver\&quot; &amp;&amp; deployment</span><br><span class="hljs-string">                  == \&quot;prod\&quot; \ttype in &#123;\&quot;frontend\&quot;, \&quot;backend\&quot;&#125; \tdeployment !=</span><br><span class="hljs-string">                  \&quot;dev\&quot; \t! has(label_name)&quot;</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">serviceAccountSelector:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">ServiceAccountSelector</span> <span class="hljs-string">is</span> <span class="hljs-string">an</span> <span class="hljs-string">optional</span> <span class="hljs-string">field</span> <span class="hljs-string">for</span> <span class="hljs-string">an</span> <span class="hljs-string">expression</span><br>                  <span class="hljs-string">used</span> <span class="hljs-string">to</span> <span class="hljs-string">select</span> <span class="hljs-string">a</span> <span class="hljs-string">pod</span> <span class="hljs-string">based</span> <span class="hljs-string">on</span> <span class="hljs-string">service</span> <span class="hljs-string">accounts.</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>              <span class="hljs-attr">types:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;Types indicates whether this policy applies to ingress,</span><br><span class="hljs-string">                  or to egress, or to both.  When not explicitly specified (and so</span><br><span class="hljs-string">                  the value on creation is empty or nil), Calico defaults Types according</span><br><span class="hljs-string">                  to what Ingress and Egress are present in the policy.  The default</span><br><span class="hljs-string">                  is: \n - [ PolicyTypeIngress ], if there are no Egress rules (including</span><br><span class="hljs-string">                  the case where there are   also no Ingress rules) \n - [ PolicyTypeEgress</span><br><span class="hljs-string">                  ], if there are Egress rules but no Ingress rules \n - [ PolicyTypeIngress,</span><br><span class="hljs-string">                  PolicyTypeEgress ], if there are both Ingress and Egress rules.</span><br><span class="hljs-string">                  \n When the policy is read back again, Types will always be one</span><br><span class="hljs-string">                  of these values, never empty or nil.&quot;</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">description:</span> <span class="hljs-string">PolicyType</span> <span class="hljs-string">enumerates</span> <span class="hljs-string">the</span> <span class="hljs-string">possible</span> <span class="hljs-string">values</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">PolicySpec</span><br>                    <span class="hljs-string">Types</span> <span class="hljs-string">field.</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/kdd-crds.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apiextensions.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CustomResourceDefinition</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">networksets.crd.projectcalico.org</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">group:</span> <span class="hljs-string">crd.projectcalico.org</span><br>  <span class="hljs-attr">names:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">NetworkSet</span><br>    <span class="hljs-attr">listKind:</span> <span class="hljs-string">NetworkSetList</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">networksets</span><br>    <span class="hljs-attr">singular:</span> <span class="hljs-string">networkset</span><br>  <span class="hljs-attr">preserveUnknownFields:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">scope:</span> <span class="hljs-string">Namespaced</span><br>  <span class="hljs-attr">versions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">v1</span><br>    <span class="hljs-attr">schema:</span><br>      <span class="hljs-attr">openAPIV3Schema:</span><br>        <span class="hljs-attr">description:</span> <span class="hljs-string">NetworkSet</span> <span class="hljs-string">is</span> <span class="hljs-string">the</span> <span class="hljs-string">Namespaced-equivalent</span> <span class="hljs-string">of</span> <span class="hljs-string">the</span> <span class="hljs-string">GlobalNetworkSet.</span><br>        <span class="hljs-attr">properties:</span><br>          <span class="hljs-attr">apiVersion:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;APIVersion defines the versioned schema of this representation</span><br><span class="hljs-string">              of an object. Servers should convert recognized schemas to the latest</span><br><span class="hljs-string">              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">kind:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;Kind is a string value representing the REST resource this</span><br><span class="hljs-string">              object represents. Servers may infer this from the endpoint the client</span><br><span class="hljs-string">              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds&#x27;</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>          <span class="hljs-attr">metadata:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>          <span class="hljs-attr">spec:</span><br>            <span class="hljs-attr">description:</span> <span class="hljs-string">NetworkSetSpec</span> <span class="hljs-string">contains</span> <span class="hljs-string">the</span> <span class="hljs-string">specification</span> <span class="hljs-string">for</span> <span class="hljs-string">a</span> <span class="hljs-string">NetworkSet</span><br>              <span class="hljs-string">resource.</span><br>            <span class="hljs-attr">properties:</span><br>              <span class="hljs-attr">nets:</span><br>                <span class="hljs-attr">description:</span> <span class="hljs-string">The</span> <span class="hljs-string">list</span> <span class="hljs-string">of</span> <span class="hljs-string">IP</span> <span class="hljs-string">networks</span> <span class="hljs-string">that</span> <span class="hljs-string">belong</span> <span class="hljs-string">to</span> <span class="hljs-string">this</span> <span class="hljs-string">set.</span><br>                <span class="hljs-attr">items:</span><br>                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span><br>                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">object</span><br>    <span class="hljs-attr">served:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">storage:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">status:</span><br>  <span class="hljs-attr">acceptedNames:</span><br>    <span class="hljs-attr">kind:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">plural:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">conditions:</span> []<br>  <span class="hljs-attr">storedVersions:</span> []<br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-kube-controllers-rbac.yaml</span><br><span class="hljs-comment"># Include a clusterrole for the kube-controllers component,</span><br><span class="hljs-comment"># and bind it to the calico-kube-controllers serviceaccount.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-comment"># Nodes are watched to monitor for deletions.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-comment"># Pods are watched to check for existence as part of IPAM controller.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># IPAM resources are manipulated in response to node and block updates, as well as periodic triggers.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipreservations</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">blockaffinities</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamblocks</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamhandles</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">delete</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># Pools are watched to maintain a mapping of blocks to IP pools.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ippools</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># kube-controllers manages hostendpoints.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">hostendpoints</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">delete</span><br>  <span class="hljs-comment"># Needs access to update clusterinformations.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">clusterinformations</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># KubeControllersConfiguration is where it gets its config</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">kubecontrollersconfigurations</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-comment"># read its own config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-comment"># create a default if none exists</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-comment"># update status</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>      <span class="hljs-comment"># watch for changes</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-node-rbac.yaml</span><br><span class="hljs-comment"># Include a clusterrole for the calico-node DaemonSet,</span><br><span class="hljs-comment"># and bind it to the calico-node serviceaccount.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br><span class="hljs-attr">rules:</span><br>  <span class="hljs-comment"># Used for creating service account tokens to be used by the CNI plugin</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">serviceaccounts/token</span><br>    <span class="hljs-attr">resourceNames:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">calico-node</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>  <span class="hljs-comment"># The CNI plugin needs to get pods, nodes, and namespaces.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">namespaces</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-comment"># EndpointSlices are used for Service-based network policy rule</span><br>  <span class="hljs-comment"># enforcement.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;discovery.k8s.io&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">endpointslices</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">endpoints</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">services</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-comment"># Used to discover service IPs for advertisement.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-comment"># Used to discover Typhas.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-comment"># Pod CIDR auto-detection on kubeadm needs access to config maps.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">configmaps</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/status</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-comment"># Needed for clearing NodeNetworkUnavailable flag.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">patch</span><br>      <span class="hljs-comment"># Calico stores some configuration information in node annotations.</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>  <span class="hljs-comment"># Watch for changes to Kubernetes NetworkPolicies.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;networking.k8s.io&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">networkpolicies</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>  <span class="hljs-comment"># Used by Calico for policy information.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">pods</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">namespaces</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">serviceaccounts</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># The CNI plugin patches pods/status.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">pods/status</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">patch</span><br>  <span class="hljs-comment"># Calico monitors various CRDs for config.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">globalfelixconfigs</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">felixconfigurations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">bgppeers</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">globalbgpconfigs</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">bgpconfigurations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ippools</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipreservations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamblocks</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">globalnetworkpolicies</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">globalnetworksets</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">networkpolicies</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">networksets</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">clusterinformations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">hostendpoints</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">blockaffinities</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">caliconodestatuses</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># Calico must create and update some CRDs on startup.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ippools</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">felixconfigurations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">clusterinformations</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>  <span class="hljs-comment"># Calico must update some CRDs.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [ <span class="hljs-string">&quot;crd.projectcalico.org&quot;</span> ]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">caliconodestatuses</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>  <span class="hljs-comment"># Calico stores some configuration information on the node.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">nodes</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># These permissions are only required for upgrade from v2.6, and can</span><br>  <span class="hljs-comment"># be removed after upgrade or on fresh installations.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">bgpconfigurations</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">bgppeers</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>  <span class="hljs-comment"># These permissions are required for Calico CNI to perform IPAM allocations.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">blockaffinities</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamblocks</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamhandles</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">list</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">update</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">delete</span><br>  <span class="hljs-comment"># The CNI plugin and calico/node need to be able to create a default</span><br>  <span class="hljs-comment"># IPAMConfiguration</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">ipamconfigs</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">create</span><br>  <span class="hljs-comment"># Block affinities must also be watchable by confd for route aggregation.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;crd.projectcalico.org&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">blockaffinities</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">watch</span><br>  <span class="hljs-comment"># The Calico IPAM migration needs to get daemonsets. These permissions can be</span><br>  <span class="hljs-comment"># removed if not upgrading from an installation using host-local IPAM.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span> [<span class="hljs-string">&quot;apps&quot;</span>]<br>    <span class="hljs-attr">resources:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">daemonsets</span><br>    <span class="hljs-attr">verbs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-kube-controllers-rbac.yaml</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-node-rbac.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-node.yaml</span><br><span class="hljs-comment"># This manifest installs the calico-node container, as well</span><br><span class="hljs-comment"># as the CNI plugins and network config on</span><br><span class="hljs-comment"># each master and worker node in a Kubernetes cluster.</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-node</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-node</span><br>  <span class="hljs-attr">updateStrategy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">RollingUpdate</span><br>    <span class="hljs-attr">rollingUpdate:</span><br>      <span class="hljs-attr">maxUnavailable:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-node</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">nodeSelector:</span><br>        <span class="hljs-attr">kubernetes.io/os:</span> <span class="hljs-string">linux</span><br>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">tolerations:</span><br>        <span class="hljs-comment"># Make sure calico-node gets scheduled on all nodes.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>          <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>        <span class="hljs-comment"># Mark the pod as a critical add-on for rescheduling.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">CriticalAddonsOnly</span><br>          <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">effect:</span> <span class="hljs-string">NoExecute</span><br>          <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">calico-node</span><br>      <span class="hljs-comment"># Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a &quot;force</span><br>      <span class="hljs-comment"># deletion&quot;: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.</span><br>      <span class="hljs-attr">terminationGracePeriodSeconds:</span> <span class="hljs-number">0</span><br>      <span class="hljs-attr">priorityClassName:</span> <span class="hljs-string">system-node-critical</span><br>      <span class="hljs-attr">initContainers:</span><br>        <span class="hljs-comment"># This container performs upgrade from host-local IPAM to calico-ipam.</span><br>        <span class="hljs-comment"># It can be deleted if this is a fresh installation, or if you have already</span><br>        <span class="hljs-comment"># upgraded to use calico-ipam.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">upgrade-ipam</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/calico/cni:v3.25.0</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&quot;/opt/cni/bin/calico-ipam&quot;</span>, <span class="hljs-string">&quot;-upgrade&quot;</span>]<br>          <span class="hljs-attr">envFrom:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">configMapRef:</span><br>              <span class="hljs-comment"># Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">kubernetes-services-endpoint</span><br>              <span class="hljs-attr">optional:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">KUBERNETES_NODE_NAME</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">fieldRef:</span><br>                  <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">spec.nodeName</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_NETWORKING_BACKEND</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">calico_backend</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/lib/cni/networks</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">host-local-net-dir</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/opt/cni/bin</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">cni-bin-dir</span><br>          <span class="hljs-attr">securityContext:</span><br>            <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment"># This container installs the CNI binaries</span><br>        <span class="hljs-comment"># and CNI network config file on each node.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install-cni</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/calico/cni:v3.25.0</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&quot;/opt/cni/bin/install&quot;</span>]<br>          <span class="hljs-attr">envFrom:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">configMapRef:</span><br>              <span class="hljs-comment"># Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">kubernetes-services-endpoint</span><br>              <span class="hljs-attr">optional:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-comment"># Name of the CNI config file to create.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CNI_CONF_NAME</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;10-calico.conflist&quot;</span><br>            <span class="hljs-comment"># The CNI network config to install on each node.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CNI_NETWORK_CONFIG</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">cni_network_config</span><br>            <span class="hljs-comment"># Set the hostname based on the k8s node name.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">KUBERNETES_NODE_NAME</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">fieldRef:</span><br>                  <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">spec.nodeName</span><br>            <span class="hljs-comment"># CNI MTU Config variable</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CNI_MTU</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">veth_mtu</span><br>            <span class="hljs-comment"># Prevents the container from sleeping forever.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">SLEEP</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;false&quot;</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/opt/cni/bin</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">cni-bin-dir</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/etc/cni/net.d</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">cni-net-dir</span><br>          <span class="hljs-attr">securityContext:</span><br>            <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-comment"># This init container mounts the necessary filesystems needed by the BPF data plane</span><br>        <span class="hljs-comment"># i.e. bpf at /sys/fs/bpf and cgroup2 at /run/calico/cgroup. Calico-node initialisation is executed</span><br>        <span class="hljs-comment"># in best effort fashion, i.e. no failure for errors, to not disrupt pod creation in iptable mode.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;mount-bpffs&quot;</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/calico/node:v3.25.0</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">command:</span> [<span class="hljs-string">&quot;calico-node&quot;</span>, <span class="hljs-string">&quot;-init&quot;</span>, <span class="hljs-string">&quot;-best-effort&quot;</span>]<br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/sys/fs</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">sys-fs</span><br>              <span class="hljs-comment"># Bidirectional is required to ensure that the new mount we make at /sys/fs/bpf propagates to the host</span><br>              <span class="hljs-comment"># so that it outlives the init container.</span><br>              <span class="hljs-attr">mountPropagation:</span> <span class="hljs-string">Bidirectional</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/run/calico</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">var-run-calico</span><br>              <span class="hljs-comment"># Bidirectional is required to ensure that the new mount we make at /run/calico/cgroup propagates to the host</span><br>              <span class="hljs-comment"># so that it outlives the init container.</span><br>              <span class="hljs-attr">mountPropagation:</span> <span class="hljs-string">Bidirectional</span><br>            <span class="hljs-comment"># Mount /proc/ from host which usually is an init program at /nodeproc. It&#x27;s needed by mountns binary,</span><br>            <span class="hljs-comment"># executed by calico-node, to mount root cgroup2 fs at /run/calico/cgroup to attach CTLB programs correctly.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/nodeproc</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">nodeproc</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">securityContext:</span><br>            <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-comment"># Runs calico-node container on each Kubernetes node. This</span><br>        <span class="hljs-comment"># container programs network policy and routes on each</span><br>        <span class="hljs-comment"># host.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">calico-node</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/calico/node:v3.25.0</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">envFrom:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-attr">configMapRef:</span><br>              <span class="hljs-comment"># Allow KUBERNETES_SERVICE_HOST and KUBERNETES_SERVICE_PORT to be overridden for eBPF mode.</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">kubernetes-services-endpoint</span><br>              <span class="hljs-attr">optional:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-comment"># Use Kubernetes API as the backing datastore.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">DATASTORE_TYPE</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;kubernetes&quot;</span><br>            <span class="hljs-comment"># Wait for the datastore.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">WAIT_FOR_DATASTORE</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;true&quot;</span><br>            <span class="hljs-comment"># Set based on the k8s node name.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">NODENAME</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">fieldRef:</span><br>                  <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">spec.nodeName</span><br>            <span class="hljs-comment"># Choose the backend to use.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_NETWORKING_BACKEND</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">calico_backend</span><br>            <span class="hljs-comment"># Cluster type to identify the deployment type</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CLUSTER_TYPE</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;k8s,bgp&quot;</span><br>            <span class="hljs-comment"># Auto-detect the BGP IP address.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">IP</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;autodetect&quot;</span><br>            <span class="hljs-comment"># Enable IPIP</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_IPV4POOL_IPIP</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;Always&quot;</span><br>            <span class="hljs-comment"># Enable or Disable VXLAN on the default IP pool.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_IPV4POOL_VXLAN</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;Never&quot;</span><br>            <span class="hljs-comment"># Enable or Disable VXLAN on the default IPv6 IP pool.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_IPV6POOL_VXLAN</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;Never&quot;</span><br>            <span class="hljs-comment"># Set MTU for tunnel device used if ipip is enabled</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_IPINIPMTU</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">veth_mtu</span><br>            <span class="hljs-comment"># Set MTU for the VXLAN tunnel device.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_VXLANMTU</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">veth_mtu</span><br>            <span class="hljs-comment"># Set MTU for the Wireguard tunnel device.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_WIREGUARDMTU</span><br>              <span class="hljs-attr">valueFrom:</span><br>                <span class="hljs-attr">configMapKeyRef:</span><br>                  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-config</span><br>                  <span class="hljs-attr">key:</span> <span class="hljs-string">veth_mtu</span><br>            <span class="hljs-comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span><br>            <span class="hljs-comment"># chosen from this range. Changing this value after installation will have</span><br>            <span class="hljs-comment"># no effect. This should fall within `--cluster-cidr`.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_IPV4POOL_CIDR</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;10.250.0.0/16&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_IPV4POOL_BLOCK_SIZE</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;24&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">USE_POD_CIDR</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;true&quot;</span><br>            <span class="hljs-comment"># Disable file logging so `kubectl logs` works.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">CALICO_DISABLE_FILE_LOGGING</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;true&quot;</span><br>            <span class="hljs-comment"># Set Felix endpoint to host default action to ACCEPT.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_DEFAULTENDPOINTTOHOSTACTION</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;ACCEPT&quot;</span><br>            <span class="hljs-comment"># Disable IPv6 on Kubernetes.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_IPV6SUPPORT</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;false&quot;</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">FELIX_HEALTHENABLED</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">&quot;true&quot;</span><br>          <span class="hljs-attr">securityContext:</span><br>            <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>          <span class="hljs-attr">resources:</span><br>            <span class="hljs-attr">requests:</span><br>              <span class="hljs-attr">cpu:</span> <span class="hljs-string">250m</span><br>          <span class="hljs-attr">lifecycle:</span><br>            <span class="hljs-attr">preStop:</span><br>              <span class="hljs-attr">exec:</span><br>                <span class="hljs-attr">command:</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/calico-node</span><br>                <span class="hljs-bullet">-</span> <span class="hljs-string">-shutdown</span><br>          <span class="hljs-attr">livenessProbe:</span><br>            <span class="hljs-attr">exec:</span><br>              <span class="hljs-attr">command:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/calico-node</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-felix-live</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-bird-live</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">failureThreshold:</span> <span class="hljs-number">6</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">10</span><br>          <span class="hljs-attr">readinessProbe:</span><br>            <span class="hljs-attr">exec:</span><br>              <span class="hljs-attr">command:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">/bin/calico-node</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-felix-ready</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-bird-ready</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">10</span><br>          <span class="hljs-attr">volumeMounts:</span><br>            <span class="hljs-comment"># For maintaining CNI plugin API credentials.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/host/etc/cni/net.d</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">cni-net-dir</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/lib/modules</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">lib-modules</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/run/xtables.lock</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/run/calico</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">var-run-calico</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/lib/calico</span><br>              <span class="hljs-attr">name:</span> <span class="hljs-string">var-lib-calico</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">false</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">policysync</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/run/nodeagent</span><br>            <span class="hljs-comment"># For eBPF mode, we need to be able to mount the BPF filesystem at /sys/fs/bpf so we mount in the</span><br>            <span class="hljs-comment"># parent directory.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">bpffs</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/sys/fs/bpf</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-log-dir</span><br>              <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/var/log/calico/cni</span><br>              <span class="hljs-attr">readOnly:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">volumes:</span><br>        <span class="hljs-comment"># Used by calico-node.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">lib-modules</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/lib/modules</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">var-run-calico</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/var/run/calico</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">var-lib-calico</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/calico</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">xtables-lock</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/run/xtables.lock</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">FileOrCreate</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">sys-fs</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/sys/fs/</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">DirectoryOrCreate</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">bpffs</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/sys/fs/bpf</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">Directory</span><br>        <span class="hljs-comment"># mount /proc at /nodeproc to be used by mount-bpffs initContainer to mount root cgroup2 fs.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nodeproc</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/proc</span><br>        <span class="hljs-comment"># Used to install CNI.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-bin-dir</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/opt/cni/bin</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-net-dir</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/etc/cni/net.d</span><br>        <span class="hljs-comment"># Used to access CNI logs.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">cni-log-dir</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/var/log/calico/cni</span><br>        <span class="hljs-comment"># Mount in the directory for host-local IPAM allocations. This is</span><br>        <span class="hljs-comment"># used when upgrading from host-local to calico-ipam, and can be removed</span><br>        <span class="hljs-comment"># if not using the upgrade-ipam init container.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">host-local-net-dir</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/var/lib/cni/networks</span><br>        <span class="hljs-comment"># Used to create per-pod Unix Domain Sockets</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">policysync</span><br>          <span class="hljs-attr">hostPath:</span><br>            <span class="hljs-attr">type:</span> <span class="hljs-string">DirectoryOrCreate</span><br>            <span class="hljs-attr">path:</span> <span class="hljs-string">/var/run/nodeagent</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># Source: calico/templates/calico-kube-controllers.yaml</span><br><span class="hljs-comment"># See https://github.com/projectcalico/kube-controllers</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-kube-controllers</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-comment"># The controllers can only have a single active instance.</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-kube-controllers</span><br>  <span class="hljs-attr">strategy:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">Recreate</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>      <span class="hljs-attr">namespace:</span> <span class="hljs-string">kube-system</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">calico-kube-controllers</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">nodeSelector:</span><br>        <span class="hljs-attr">kubernetes.io/os:</span> <span class="hljs-string">linux</span><br>      <span class="hljs-attr">tolerations:</span><br>        <span class="hljs-comment"># Mark the pod as a critical add-on for rescheduling.</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">CriticalAddonsOnly</span><br>          <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">node-role.kubernetes.io/master</span><br>          <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">key:</span> <span class="hljs-string">node-role.kubernetes.io/control-plane</span><br>          <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">calico-kube-controllers</span><br>      <span class="hljs-attr">priorityClassName:</span> <span class="hljs-string">system-cluster-critical</span><br>      <span class="hljs-attr">containers:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">calico-kube-controllers</span><br>          <span class="hljs-attr">image:</span> <span class="hljs-string">docker.io/calico/kube-controllers:v3.25.0</span><br>          <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>          <span class="hljs-attr">env:</span><br>            <span class="hljs-comment"># Choose which controllers to run.</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ENABLED_CONTROLLERS</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">node</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">DATASTORE_TYPE</span><br>              <span class="hljs-attr">value:</span> <span class="hljs-string">kubernetes</span><br>          <span class="hljs-attr">livenessProbe:</span><br>            <span class="hljs-attr">exec:</span><br>              <span class="hljs-attr">command:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">/usr/bin/check-status</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-l</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">initialDelaySeconds:</span> <span class="hljs-number">10</span><br>            <span class="hljs-attr">failureThreshold:</span> <span class="hljs-number">6</span><br>            <span class="hljs-attr">timeoutSeconds:</span> <span class="hljs-number">10</span><br>          <span class="hljs-attr">readinessProbe:</span><br>            <span class="hljs-attr">exec:</span><br>              <span class="hljs-attr">command:</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">/usr/bin/check-status</span><br>              <span class="hljs-bullet">-</span> <span class="hljs-string">-r</span><br>            <span class="hljs-attr">periodSeconds:</span> <span class="hljs-number">10</span><br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行上述 yaml文件</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@controller01:/data/kubernetes/network/calico-for-k8s1.23.17# kubectl create -f calico.yaml</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s集群中所有pod在状态(默认每3秒刷新一次，退出时请使用组合键”ctrl+c“)</span><br>watch kubectl get pods -A -o wide<br></code></pre></td></tr></table></figure><h2 id="集群客户端认证文件准备">2.7 集群客户端认证文件准备</h2><p>其实，对于单节点k8s集群，此操作在前面已经执行过了，可以跳过。对于多节点K8s集群，则需要将此文件复制到所有节点的<code>$HOME/.kube</code>下，一般是直接使用root用户操作，其<code>HOME</code>目录就是<code>/root</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置kube config文件</span><br>mkdir -p $HOME/.kube<br>cp -i /etc/kubernetes/admin.conf $HOME/.kube/config<br>chown $(id -u):$(id -g) $HOME/.kube/config<br></code></pre></td></tr></table></figure><h2 id="验证集群状态与可用性">2.8 验证集群状态与可用性</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/data/kubernetes/network/calico-for-k8s1.23.17# kubectl get nodes<br>NAME           STATUS   ROLES                  AGE     VERSION<br>controller01   Ready    control-plane,master   3h56m   v1.23.17<br><br>root@controller01:/data/kubernetes/network/calico-for-k8s1.23.17# kubectl get cs<br>Warning: v1 ComponentStatus is deprecated in v1.19+<br>NAME                 STATUS    MESSAGE                         ERROR<br>scheduler            Healthy   ok                              <br>controller-manager   Healthy   ok                              <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;  <br><br>root@controller01:/data/kubernetes/network/calico-for-k8s1.23.17# kubectl get pods -A <br>NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE<br>kube-system   calico-kube-controllers-6896bb667c-h8hbp   1/1     Running   0          56m<br>kube-system   calico-node-d8v6f                          1/1     Running   0          56m<br>kube-system   coredns-7fc497bbb9-b7rbp                   1/1     Running   0          4h52m<br>kube-system   coredns-7fc497bbb9-nxh8g                   1/1     Running   0          4h52m<br>kube-system   etcd-controller01                          1/1     Running   0          4h52m<br>kube-system   kube-apiserver-controller01                1/1     Running   0          4h52m<br>kube-system   kube-controller-manager-controller01       1/1     Running   0          4h52m<br>kube-system   kube-proxy-gp5s9                           1/1     Running   0          4h52m<br>kube-system   kube-scheduler-controller01                1/1     Running   0          4h52m<br></code></pre></td></tr></table></figure><p>对于单节点K8S1.23.17集群的搭建，至此就结束了。后续内容是添加工作节点与卸载集群的操作。</p><h1 id="添加节点">3 添加节点</h1><p>此处说的添加节点单纯是指添加工作节点。</p><p>新添加到k8s集群的节点也需要先完成1.2~2.2章节的操作，然后执行如下操作。</p><p>当我们使用kubeadm初始化一个集群后，会生成一个token，用这个token来添加新的节点进入此k8s集群，但此token默认只有24H有效期。</p><p>如果token还没有过期：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看是否存在有效的 token 值</span><br>root@controller01:~# kubeadm token list<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">获取token</span><br>root@controller01:~# kubeadm token list <br>TOKEN                     TTL         EXPIRES                USAGES                   DESCRIPTION                                                EXTRA GROUPS<br>4bwou4.h82yx951wezuo08a   23h         2025-02-10T04:14:45Z   authentication,signing   &lt;none&gt;                                                     system:bootstrappers:kubeadm:default-node-token<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">获取CA证书 sha256 编码 <span class="hljs-built_in">hash</span> 值</span><br>root@controller01:~# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | openssl dgst -sha256 -hex | sed &#x27;s/^.* //&#x27;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用上面输出的token与<span class="hljs-built_in">hash</span> 值，添加新节点（在新节点上执行）</span><br>root@ksp-registry:~# kubeadm join 172.20.0.21:6443 --token 4bwou4.h82yx951wezuo08a  --discovery-token-ca-cert-hash  sha256:78f2d6dbcc9b8aab7b1edfcbd276fc0c70858dd60f1c6e15666020f6c91ca362 <br></code></pre></td></tr></table></figure><p>如果token已过期之后（没过期也可以立刻重新生成），可以使用如下命令重新生成相关token与添加节点的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubeadm token create --print-join-command<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令执行后，会输出一行命令，将这行命令在新节点上执行</span><br>root@ksp-registry:~# kubeadm join 172.20.0.21:6443 --token alvy7y.kvvw4xomybxj67o6 --discovery-token-ca-cert-hash sha256:78f2d6dbcc9b8aab7b1edfcbd276fc0c70858dd60f1c6e15666020f6c91ca362 <br></code></pre></td></tr></table></figure><hr /><p>为新节点打标签：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl label node ksp-registry node-role.kubernetes.io/worker=&quot;&quot;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/cni/bin# kubectl get nodes<br>NAME           STATUS   ROLES                         AGE   VERSION<br>controller01   Ready    control-plane,master,worker   25d   v1.23.17<br>ksp-registry   Ready    worker                        23m   v1.23.17<br></code></pre></td></tr></table></figure><h1 id="卸载集群">4 卸载集群</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>systemctl stop kubelet<br>systemctl stop etcd<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>kubeadm reset <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>dpkg -l | grep kube | awk &#x27;&#123;print $2&#125;&#x27; | xargs dpkg --purge <br>dpkg -l | grep kube<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点执行：</span><br>rm -rf $HOME/.kube<br>rm -rf ~/.kube/<br>rm -rf /etc/kubernetes/<br>rm -rf /etc/systemd/system/kubelet.service.d<br>rm -rf /etc/systemd/system/kubelet.service<br>rm -rf /usr/bin/kube*<br>rm -rf /etc/cni<br>rm -rf /opt/cni<br>rm -rf /var/lib/etcd/*<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubeadm k8s1.23.17</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeepSeek-R1-Distill-Llama-70B大模型4bit量化版部署</title>
    <link href="/2025/02/08/DeepSeek-R1-Distill-Llama-70B%E5%A4%A7%E6%A8%A1%E5%9E%8B4bit%E9%87%8F%E5%8C%96%E7%89%88%E9%83%A8%E7%BD%B2/"/>
    <url>/2025/02/08/DeepSeek-R1-Distill-Llama-70B%E5%A4%A7%E6%A8%A1%E5%9E%8B4bit%E9%87%8F%E5%8C%96%E7%89%88%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="模型下载">模型下载</h1><h2id="deepseek-r1-distill-llama-70b-4bit">DeepSeek-R1-Distill-Llama-70B-4bit</h2><p>此模型在魔搭网站上的下载地址：https://modelscope.cn/models/mlx-community/DeepSeek-R1-Distill-Llama-70B-4bit/files</p><figure><img src="https://s2.loli.net/2025/02/08/UsZFOxlNSyVEnki.png"alt="image-20250208144242151" /><figcaption aria-hidden="true">image-20250208144242151</figcaption></figure><p>命令行下载</p><p>请先通过如下命令安装ModelScope</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> modelscope<br></code></pre></td></tr></table></figure><p>下载完整模型repo</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">modelscope</span> download --model mlx-community/DeepSeek-R1-Distill-Llama-<span class="hljs-number">70</span>B-<span class="hljs-number">4</span>bit<br></code></pre></td></tr></table></figure><p>下载单个文件到指定本地文件夹（以下载README.md到当前路径下“dir”目录为例）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">modelscope download <span class="hljs-params">--model</span> mlx-community/DeepSeek-R1-Distill-Llama-70B-4bit README.md <span class="hljs-params">--local_dir</span> <span class="hljs-string">./dir</span><br></code></pre></td></tr></table></figure><p>完整的ModelScope命令行下载选项，可参见<ahref="https://www.modelscope.cn/docs/模型的下载#使用命令行工具下载模型">具体文档</a></p><h2id="deepseek-r1-distill-llama-70b-gguf优先尝试">DeepSeek-R1-Distill-Llama-70B-GGUF（优先尝试）</h2><p>DeepSeek-R1-Distill-Llama-70B-GGUF模型中有4Bit量化模型GGUF文件：https://www.modelscope.cn/models/lmstudio-community/DeepSeek-R1-Distill-Llama-70B-GGUF/files</p><p>优先尝试，有现成的文档可用：<ahref="ttps://cloud.tencent.com/developer/article/2494213">Ollama导入从魔搭网站下载的大模型.GGUF文件</a>，但相关GGUF文件40多G，准备在2025年2月8日（周六）晚上下载，下周一来上班时继续后续操作</p><h1id="魔搭与huggingface模型导入到ollama中">魔搭与huggingface模型导入到Ollama中</h1><p>Ollama导入从魔搭网站下载的大模型.GGUF文件：https://cloud.tencent.com/developer/article/2494213</p><p>Ollama导入大模型的.safatensors文件：http://www.360doc.com/content/24/0919/11/37846289_1134459888.shtml</p><h1 id="模型部署">模型部署</h1><h2 id="魔搭.gguf文件导入到ollama中">魔搭.GGUF文件导入到Ollama中</h2><figure><img src="https://s2.loli.net/2025/02/10/56jhDQauU9lw3Tv.png"alt="image-20250210094555761" /><figcaption aria-hidden="true">image-20250210094555761</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/YQBPgNIeq32yDsH.png"alt="image-20250210094631455" /><figcaption aria-hidden="true">image-20250210094631455</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在魔搭网站下载4bit量化模型文件</span><br>root@controller01:/opt/code_repos/DeepSeek-R1-Distill-Llama-70B-GGUF# modelscope download --model lmstudio-community/DeepSeek-R1-Distill-Llama-70B-GGUF DeepSeek-R1-Distill-Llama-70B-Q4_K_M.gguf --local_dir ./   <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">当前ollama管理的模型</span><br>root@controller01:/opt/code_repos/DeepSeek-R1-Distill-Llama-70B-GGUF# ollama list<br>NAME                                    ID              SIZE    MODIFIED     <br>deepseek-r1:7b                          0a8c26691023    4.7 GB  4 days ago  <br>deepseek-coder:1.3b                     3ddd2d3fc8d2    776 MB  3 months ago<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将GGUF文件导入到ollama时需要用到一个配置文件，命令名DeepSeek-R1-Distill-Llama-70B-Q4_config.txt，内容如下</span><br>root@controller01:/opt/code_repos/AI_models/DeepSeek-R1-Distill-Llama-70B-GGUF# tee DeepSeek-R1-Distill-Llama-70B-Q4_config.txt &lt;&lt;EOF<br>FROM &quot;./dir/DeepSeek-R1-Distill-Llama-70B-Q4_K_M.gguf&quot;<br><br>TEMPLATE &quot;&quot;&quot;&#123;&#123;- if .System &#125;&#125;<br>&lt;|im_start|&gt;system &#123;&#123; .System &#125;&#125;&lt;|im_end|&gt;<br>&#123;&#123;- end &#125;&#125;<br>&lt;|im_start|&gt;user<br>&#123;&#123; .Prompt &#125;&#125;&lt;|im_end|&gt;<br>&lt;|im_start|&gt;assistant<br>&quot;&quot;&quot;<br><br>SYSTEM &quot;&quot;&quot;&quot;&quot;&quot;<br><br>PARAMETER stop &lt;|im_start|&gt;<br>PARAMETER stop &lt;|im_end|&gt;<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##关于Modelfile的编写与使用，参考官方文档：https://github.com/ollama/ollama、</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> https://github.com/ollama/ollama/blob/main/docs/modelfile.md</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将从魔搭网站下载的大模型.GGUF文件 导入到Ollama中</span><br>root@controller01:/opt/code_repos/DeepSeek-R1-Distill-Llama-70B-GGUF# ollama create DeepSeek-R1-Distill-Llama-70B-Q4 -f ./DeepSeek-R1-Distill-Llama-70B-Q4_config.txt<br>transferring model data <br>using existing layer sha256:eb01fe3e90c4bd09b12f8d0849adf89a11a38174ecdaf56391267975d53e3bc9 <br>creating new layer sha256:ecf1d3ca1fb53d793cbaac0d1928dfa4cfea479cb9c746a09823ec5875cee90c <br>creating new layer sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 <br>using existing layer sha256:f02dd72bb2423204352eabc5637b44d79d17f109fdb510a7c51455892aa2d216 <br>creating new layer sha256:737eec639e0b3d8bf80c36e83f59a9a7c0fa36f5712ee33d4c3d35fc1c195e0b <br>writing manifest <br>success <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到Ollama中管理的大模型新增了一个“DeepSeek-R1-Distill-Llama-70B-Q4:latest”</span><br>root@controller01:/opt# ollama list<br>NAME                                       ID              SIZE      MODIFIED     <br>DeepSeek-R1-Distill-Llama-70B-Q4:latest    573e09a767b2    42 GB     5 hours ago     <br>deepseek-r1:7b                             0a8c26691023    4.7 GB    4 days ago      <br>deepseek-coder:1.3b                        3ddd2d3fc8d2    776 MB    3 months ago         <br></code></pre></td></tr></table></figure><h2 id="运行模型">运行模型</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt# ollama run DeepSeek-R1-Distill-Llama-70B-Q4:latest<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 你是谁</span><br>您好！我是由中国的深度求索（DeepSeek）公司开发的智能助手DeepSeek-R1。如您有任何任何问题，我会尽我所能为您提供帮助。<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 请证明勾股定理</span><br>好的，用户让我证明勾股定理，也就是毕达哥拉斯定理。我需要用清晰的步骤来解释。首先，我得确认用户是谁，看起来他可能是个学生或者对数学感兴趣的人。他想要的是一个经典的几何证明，所以我应该选择一种直观且容易理解的方法。<br><br>考虑到勾股定理的不同证明方式，比如毕达哥拉斯本人的面积相等法，或者使用相似三角形。我觉得用面积相等来证明可能更简单明了，因为它直接利用了几何图形的特性，容易被大多数人理解。<br><br>接下来，我要一步步分解这个过程。首先画一个直角三角形，然后构造一个正方形，这样可以比较斜边和两条直角边所对应的面积。然后通过移动两个小三角形到适当的位置，形成一个更大的直角三角形，从而展示出等式a² + b² = c²。<br><br>在解释的时候，我要确保每一步都清晰，让读者能够跟上思路。同时，使用公式和图示可能会有帮助，但如果没有图示，文字描述也需要足够详细。此外，还应该提到这个定理适用于所有直角三角形，不管边长是什么。<br><br>总的来说，我要确保我的解释既准确又易于理解，让用户能够轻松地掌握勾股定理的证明过程。<br>&lt;/think&gt;<br><br>好的！我来为您详细讲解一下勾股定理（毕达哥拉斯定理）的证明过程。这个定理是几何学中的一个重要定理，适用于所有直角三角形。<br><br>**勾股定理内容：**<br>在任何一个直角三角形中，两条直角边的平方和等于斜边的平方。用数学表达式表示为：<br>\[ a^2 + b^2 = c^2 \]<br>其中，\(a\) 和 \(b\) 是直角边的长度，\(c\) 是斜边的长度。<br><br>---<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">## 证明过程：</span></span><br><br>1. **画一个直角三角形：**<br>   首先，画一个直角三角形 \(ABC\)，其中 \(∠C\) 为直角。设直角边 \(AC = b\)，\(BC = a\)，斜边 \(AB = c\)。<br><br>2. **构造与斜边相等的正方形：**<br>   在斜边 \(AB\) 的外侧构造一个大正方形，其边长为 \(c\)。这样，大正方形的一条边就是斜边 \(AB\)，其余两边延伸到直角三角形的外部。<br><br>3. **将直角三角形移动并组合：**<br>   将直角三角形 \(ABC\) 沿着斜边 \(AB\) 移动，将顶点 \(C\) 放置在大正方形的一个角落。这样，原来的两个较小的直角三角形会被重新排列。<br><br>4. **展示面积相等：**<br>   通过移动和组合，可以发现这两个小直角三角形恰好填补了一个边长为 \(a\) 和 \(b\) 的正方形中的空白区域。这样，原来的大正方形的面积被分解为两部分：<br>   \[ c^2 = a^2 + b^2 \]<br><br>5. **得出结论：**<br>   通过上述几何构造和面积分析，我们可以得到：<br>   \[ a^2 + b^2 = c^2 \]<br>   这就是勾股定理的证明。<br><br>---<br><br>**总结：**<br>这个证明利用了几何图形的面积特性，通过将直角三角形重新排列并结合正方形的面积关系，清晰地展示了两条直角边平方和等于斜边平方的关系。希望这个过程能帮助您理解勾股定理的基本原理！<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt;</span> <br></code></pre></td></tr></table></figure><h1 id="部署openwebui">部署openwebui</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载容器镜像</span><br>docker pull ghcr.io/open-webui/open-webui:v0.5.10<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果无法下载或下载速度太慢，也可以使用如下镜像，它们是同步的</span><br>docker pull swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.10<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">启动open-webui容器</span><br>(self-llm) root@controller01:~# docker run --name=open-webui \<br>        --hostname=open-webui \<br>        --user=0:0 \<br>        --volume=open-webui:/app/backend/data \<br>        --workdir=/app/backend \<br>        -p 18080:8080 \<br>        --restart=always \<br>        --log-opt max-size=50m \<br>        --log-opt max-file=5 \<br>        --add-host host.docker.internal:host-gateway \<br>        --runtime=nvidia \<br>        --detach=true \<br>        swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.10 \<br>        bash start.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">等待两分钟直到其状态变为healthy</span><br>(self-llm) root@controller01:~# docker ps -a | grep open-webui<br>7954bc77bdd5   swr.cn-north-4.myhuaweicloud.com/ddn-k8s/ghcr.io/open-webui/open-webui:v0.5.10   &quot;bash start.sh&quot;          6 minutes ago   Up 6 minutes (healthy)           0.0.0.0:18080-&gt;8080/tcp, :::18080-&gt;8080/tcp            open-webui<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">浏览器地址栏中输入如下URL  http://172.20.0.21:18080/</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">登录前需要进行注册。登录如下图</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/10/9dbRKocQsCa2yEl.png"alt="image-20250210155610560" /><figcaption aria-hidden="true">image-20250210155610560</figcaption></figure><h1 id="open-webui中配置联网搜索">open-webui中配置联网搜索</h1><h2 id="google开发者账号">google开发者账号</h2><p>访问 https://developers.google.com/custom-search注册google开发者账号，如果有Google账号可以直接一键注册</p><h2 id="可编程搜索引擎">可编程搜索引擎</h2><p>访问 https://programmablesearchengine.google.com/controlpanel/all即可编程搜索引擎(pse)控制面板里添加一个自定义搜索引擎</p><figure><img src="https://s2.loli.net/2025/02/10/AUtFpL3g4srVl2u.png"alt="image-20250210160450279" /><figcaption aria-hidden="true">image-20250210160450279</figcaption></figure><p>上述最好指定“在特定网站或网页中搜索”，比如指定www.baidu.com</p><figure><img src="https://s2.loli.net/2025/06/09/wbdy3jXNBIJoS98.png"alt="image-20250210165144110" /><figcaption aria-hidden="true">image-20250210165144110</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/1pCsac8uEdX6tNZ.png"alt="image-20250210160533683" /><figcaption aria-hidden="true">image-20250210160533683</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">&lt;script async src=&quot;https://cse.google.com/cse.js?cx=b2ab2ea5c987a4eed&quot;&gt;<br>&lt;/script&gt;<br>&lt;div class=&quot;gcse-search&quot;&gt;&lt;/div&gt;<br><br><br>记住搜索引擎 ID：<br>b2ab2ea5c987a4eed<br></code></pre></td></tr></table></figure><h2 id="谷歌开发者api密钥">谷歌开发者api密钥</h2><p>访问 https://developers.google.com/custom-search/v1/introduction获取谷歌开发者api密钥，需要将此密钥保存下来。</p><figure><img src="https://s2.loli.net/2025/02/10/DAUBL7lrt6bsXoJ.png"alt="image-20250210160842494" /><figcaption aria-hidden="true">image-20250210160842494</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/vKYfV2ir4Jmx5TE.png"alt="image-20250210161054098" /><figcaption aria-hidden="true">image-20250210161054098</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/K8dXn95BZQHYaGR.png"alt="image-20250210161230162" /><figcaption aria-hidden="true">image-20250210161230162</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/C8wTW2r5XFUpYJK.png"alt="image-20250210161247509" /><figcaption aria-hidden="true">image-20250210161247509</figcaption></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">AIzaSyB3E8VhYwYJDYAdFs68iMJrSbgM1SHaoYc<br></code></pre></td></tr></table></figure><h2 id="open-webui设置">open-webui设置</h2><figure><img src="https://s2.loli.net/2025/02/10/xOZw7BMUhpvWCoK.png"alt="image-20250210161537546" /><figcaption aria-hidden="true">image-20250210161537546</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/10/ShtYTe984HBljyw.png"alt="image-20250210163830474" /><figcaption aria-hidden="true">image-20250210163830474</figcaption></figure><h2 id="使用联网搜索进行对话">使用“联网搜索”进行对话</h2><figure><img src="https://s2.loli.net/2025/02/10/3MeF79wn2G5RBNd.png"alt="image-20250210164015528" /><figcaption aria-hidden="true">image-20250210164015528</figcaption></figure><p>但回答的结果并不一定正确，且有时并不能正常使用</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大模型</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kubeflow1.6的搭建的示例使用</title>
    <link href="/2025/02/07/Kubeflow1.6%E7%9A%84%E6%90%AD%E5%BB%BA%E7%9A%84%E7%A4%BA%E4%BE%8B%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/02/07/Kubeflow1.6%E7%9A%84%E6%90%AD%E5%BB%BA%E7%9A%84%E7%A4%BA%E4%BE%8B%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="官方文档">1 官方文档</h1><p>根据<ahref="https://www.kubeflow.org/docs/releases/kubeflow-1.6/">kubeflow1.6官网发行记录</a>，与k8s1.22适配的kubeflow版本是kubeflow-1.6。当前最新版本是Kubeflow1.9，官方推荐使用的k8s版本是1.29。</p><p>部署步骤参考：<ahref="https://github.com/kubeflow/manifests/tree/v1.6-branch">部署kubeflow1.6的官方文档</a></p><p>以下操作来自笔者刚开始接触k8s时所做的操作，使用kubekey部署了k8s+ksp，一些操作也都依赖于图形化界面。经过一两个月的鼓捣研究最终跑通。</p><h1 id="环境信息规划">2 环境信息规划</h1><p>本次基于k8s 1.22.10搭建kubeflow-1.6环境。k8s1.22.10搭建在如下3台虚拟机上。</p><table><thead><tr><th>主机名</th><th>服务（用途）</th><th>IP</th><th>root用户密码</th><th>规格</th><th>系统盘</th><th>OS</th></tr></thead><tbody><tr><td>master-1</td><td>master</td><td>10.13.31.60</td><td>cloud@2020</td><td>8c16g</td><td>300G</td><td>Centos7.9</td></tr><tr><td>worker-1</td><td>worker</td><td>10.13.31.61</td><td>cloud@2020</td><td>8c16g</td><td>300G</td><td>Centos7.9</td></tr><tr><td>worker-2</td><td>worker</td><td>10.13.31.62</td><td>cloud@2020</td><td>8c16g</td><td>300G</td><td>Centos7.9</td></tr></tbody></table><h1 id="部署kubeflow-1.6环境">3 部署kubeflow 1.6环境</h1><h2 id="下载kubeflow-manifests1.6.1">3.1下载kubeflow-manifests1.6.1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@master01 ~]# mkdir /opt/installPkgs/install-kubeflow1.6<br>[root@master01 ~]# cd /opt/installPkgs/install-kubeflow1.6<br><br>[root@master01 install-kubeflow1.6]# wget https://github.com/kubeflow/manifests/archive/refs/tags/v1.6.1.tar.gz <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压</span><br>[root@master01 install-kubeflow1.6]# tar -zxf v1.6.1.tar.gz<br>[root@master01 install-kubeflow1.6]# ll manifests-1.6.1/<br></code></pre></td></tr></table></figure><h2 id="下载kustomize3.2.0">3.2 下载kustomize3.2.0</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@master01 manifests-1.6.1]# cd /opt/installPkgs/install-kubeflow1.6/<br>[root@master01 install-kubeflow1.6]# wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.0.3/kustomize_v5.0.3_linux_amd64.tar.gz<br>[root@master01 install-kubeflow1.6]# tar -zxf kustomize_v5.0.3_linux_amd64.tar.gz<br><br>[root@master01 install-kubeflow1.6]# chmod +x ./kustomize<br>[root@master01 install-kubeflow1.6]# cp -p kustomize /usr/local/bin<br></code></pre></td></tr></table></figure><h2 id="将gcr.io镜像替换成国内代理镜像">3.3将gcr.io镜像替换成国内代理镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@master01 manifests-1.6.1]# cd /opt/installPkgs/install-kubeflow1.6/manifests-1.6.1/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">【很重要】gcr.io是谷歌官方的docker镜像仓储，访问需要翻墙。替换成其对应代理镜像</span><br>[root@master01 manifests-1.6.1]# sed -i &quot;s/gcr.io/gcr.dockerproxy.com/g&quot; `grep gcr.io -rl /opt/installPkgs/install-kubeflow1.6/manifests-1.6.1`<br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下分步安装，都是在以下目录执行命令：“/opt/installPkgs/install-kubeflow1.6/manifests-1.6.1/”</span><br></code></pre></td></tr></table></figure><h2 id="正式部署">3.4 正式部署</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">一键式安装【官方组件 (apps下) 与所有公共服务 (common下)】</span><br>[root@master01 manifests-1.6.1]# while ! kustomize build example | kubectl apply -f -; do echo &quot;Retrying to apply resources&quot;; sleep 10; done<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##执行完成后，大概需要一个小时的时间（笔者的情况是这样）来拉取相关镜像并启动所有的pod</span></span><br></code></pre></td></tr></table></figure><h2 id="开启https登录kubeflow-ui">3.5 开启https登录kubeflow UI</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">参考文章：https://github.com/kubeflow/kubeflow/issues/5803</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> /opt/installPkgs/install-kubeflow/problem-cloud-not-found-CSRF-cookie</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /opt/installPkgs/install-kubeflow/problem-cloud-not-found-CSRF-cookie</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">首选检查当前k8s集群中是否存在名为“kubeflow-self-signing-issuer”的clusterissuers。</span><br>kubectl get clusterissuers -A<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/yJGX8uKLNHPOz7e.png"alt="image-20250207094358148" /><figcaption aria-hidden="true">image-20250207094358148</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果不存在的话，后面创建的certificate的类型将会是“Opaque”且名字后面会加一串随机字符串</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/Orah4MtfAdDN5mo.png"alt="image-20250207094434773" /><figcaption aria-hidden="true">image-20250207094434773</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果不存在名为“kubeflow-self-signing-issuer”的clusterissuers，则执行以下命令创建（其中manifests-1.6.1即为kubeflow安装文件目录）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl apply -f manifests-1.6.1/common/cert-manager/kubeflow-issuer/base/cluster-issuer.yaml</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/oXmdZe3fTwIuWYz.png"alt="image-20250207094530311" /><figcaption aria-hidden="true">image-20250207094530311</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建两个文件gateways-issuer2.yaml、kf-istio-resources2.yaml</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> &gt; gateways-issuer2.yaml &lt;&lt;<span class="hljs-string">EOF</span></span><br>apiVersion: cert-manager.io/v1alpha2<br>kind: Certificate<br>metadata:<br>  name: kubeflow-ingressgateway-certs<br>  namespace: istio-system<br>spec:<br>  secretName: kubeflow-ingressgateway-certs<br>  issuerRef:<br>    kind: ClusterIssuer<br>    name: kubeflow-self-signing-issuer<br>  commonName: istio-ingressgateway.istio-system.svc<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-string">cat &gt; kf-istio-resources2.yaml &lt;&lt;EOF</span></span><br>apiVersion: networking.istio.io/v1alpha3<br>kind: Gateway<br>metadata:<br>  name: kubeflow-gateway<br>  namespace: kubeflow<br>spec:<br>  selector:<br>    istio: ingressgateway<br>  servers:<br>  - hosts:<br>    - &quot;*&quot;<br>    port:<br>      name: http<br>      number: 80<br>      protocol: HTTP<br>    # Upgrade HTTP to HTTPS<br>    # tls:<br>    #   httpsRedirect: true<br>  - hosts:<br>    - &quot;*&quot;<br>    port:<br>      name: https<br>      number: 443<br>      protocol: HTTPS<br>    tls:<br>      mode: SIMPLE<br>      credentialName: kubeflow-ingressgateway-certs<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用上述两个文件</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl apply -f gateways-issuer2.yaml</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl apply -f kf-istio-resources2.yaml</span><br></code></pre></td></tr></table></figure><h2 id="获取kubeflow-dashboard地址">3.6 获取kubeflow dashboard地址</h2><p>以下两种方法选取其一</p><h3 id="从kubesphere中获取">3.6.1 从kubesphere中获取</h3><figure><img src="https://s2.loli.net/2025/02/07/4GwkivJnb9V8LR1.png"alt="image-20250207094921952" /><figcaption aria-hidden="true">image-20250207094921952</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/07/xomaGyYlOtJvZRI.png"alt="image-20250207094932005" /><figcaption aria-hidden="true">image-20250207094932005</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/07/ZQ7jhXO3kxsiKUS.png"alt="image-20250207094949498" /><figcaption aria-hidden="true">image-20250207094949498</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/07/dY9HtIRSDkwQhK5.png"alt="image-20250207095007191" /><figcaption aria-hidden="true">image-20250207095007191</figcaption></figure><h3 id="从命令行获取">3.6.2 从命令行获取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl -n istio-system get svc | grep istio-Ingressgateway<br></code></pre></td></tr></table></figure><h2 id="登录kubeflow-dashboard">3.7 登录kubeflow dashboard</h2><p>kubeflow1.6的web界面登录信息：</p><ul><li>默认用户名：user@example.com</li><li>默认密码：12341234</li></ul><h2 id="minio-service配置">3.8 minio-service配置</h2><figure><img src="https://s2.loli.net/2025/02/07/yjJGQx2pe5nhRgL.png"alt="image-20250207095305437" /><figcaption aria-hidden="true">image-20250207095305437</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/07/dHhM4QWfxA2gRbq.png"alt="image-20250207095323082" /><figcaption aria-hidden="true">image-20250207095323082</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/07/Tn2j6hN8JGO14g9.png"alt="image-20250207095336459" /><figcaption aria-hidden="true">image-20250207095336459</figcaption></figure><p>默认用户名与密码：</p><ul><li>accessKey: minio</li><li>secretKey: minio123</li></ul><h1 id="tensorflow示例">4 Tensorflow示例</h1><p>kubeflow官方提供的、在kubeflow使用流水线执行tensorflow机器学习任务的例子：</p><p>https://github.com/kubeflow/pipelines/blob/master/samples/contrib/kubeflow-e2e-mnist/kubeflow-e2e-mnist.ipynb</p><h1 id="pytorch示例">5 Pytorch示例</h1><h2 id="示例1">5.1 示例1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">示例代码：</span><br>https://github.com/kubeflow/pipelines/tree/master/samples/contrib/pytorch-samples<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">全按官方文档操作会报错，执行此示例请按以下步骤操作：</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">（k8s集群内执行）Add Minio secret <span class="hljs-keyword">for</span> KServe</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> -p /opt/installPkgs/install-kubeflow/Document_test/Components/Training_Operators/PyTorch-Training-PyTorchJob/pytorch-samples-from-kubeflow_pipeline</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">touch</span> minio-secret.yaml</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">minio-secret.yaml文件的内容如下</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cat</span> minio-secret.yaml</span><br>apiVersion: v1<br>kind: Secret<br>metadata:<br>  name: mysecret<br>  annotations:<br>     serving.kserve.io/s3-endpoint: minio-service.kubeflow:9000<br>     serving.kserve.io/s3-usehttps: &quot;0&quot;<br>     serving.kserve.io/s3-region: &quot;minio&quot;<br>     serving.kserve.io/s3-useanoncredential: &quot;false&quot;<br>     serving.kubeflow.org/s3-endpoint: minio-service.kubeflow:9000<br>     serving.kubeflow.org/s3-region: minio<br>     serving.kubeflow.org/s3-useanoncredential: &quot;false&quot;<br>     serving.kubeflow.org/s3-usehttps: &quot;0&quot;<br>type: Opaque<br>data:<br>  AWS_ACCESS_KEY_ID: bWluaW8=<br>  AWS_SECRET_ACCESS_KEY: bWluaW8xMjM=<br>---<br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: sa<br>secrets:<br>  - name: mysecret<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Run the following <span class="hljs-built_in">command</span> to <span class="hljs-built_in">set</span> the secrets</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl apply -f minio-secret.yaml -n kubeflow-user-example-com</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Run the following <span class="hljs-built_in">command</span> to <span class="hljs-built_in">disable</span> sidecar injection $ kubectl label namespace kubeflow-user-example-com istio-injection=disabled --overwrite</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过kubeflow UI（以下kubeflow环境应该是另外一个，所以相关端口号不一致。当时记录学习笔记时没注意前后文一致）创建notebook，使用的镜像如下。然后connect</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/IYeZFm6qxAcHrw3.png"alt="image-20250207095725081" /><figcaption aria-hidden="true">image-20250207095725081</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在打开的JupterLab窗口中，打开一个 Terminal会话窗口</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/IyMDaCif3G9YpBN.png"alt="image-20250207095753536" /><figcaption aria-hidden="true">image-20250207095753536</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载示例所在的git代码库</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/kubeflow/pipelines.git</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/2EUwRQBXPytIkMq.png"alt="image-20250207095924924" /><figcaption aria-hidden="true">image-20250207095924924</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在如下链接中下载“EditThisCookie” chrome插件的安装文件，并安装到google浏览器中</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">https://chrome.zzzmh.cn/info/fngmhnnpilhplaeedifhccceomclgfbg</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将kubeflow-pipelines-v2/samples/contrib/pytorch-samples/Pipeline-Cifar10.ipynb文件复制一份，操作复制得到的文件</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/IPbfARqBhZp2DGU.png"alt="image-20250207100006254" /><figcaption aria-hidden="true">image-20250207100006254</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">因为我复制了两次，我现在编辑并执行Pipeline-Cifar10-Copy2.ipynb</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装kfp==1.8.12这个python3库</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/J7tF5WyOPouAjvz.png"alt="image-20250207100038272" /><figcaption aria-hidden="true">image-20250207100038272</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用“EditThisCookie” chrome插件获取https://172.24.0.31:30706/这个网站保存的cookie，获取其中的authservice_session这个key对应的value值，将value值保存到示例中的AUTH变量中：</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/bftCycL6s5Wl49j.png"alt="image-20250207100136937" /><figcaption aria-hidden="true">image-20250207100136937</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">（kubesphere中操作）将容器内的minio服务端口暴露出来</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/2thxQNaKeydBmDA.png"alt="image-20250207100309327" /><figcaption aria-hidden="true">image-20250207100309327</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">替换MINIO_ENDPOINT。TENSORBOARD_IMAGE也建议替换</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/y5vS4OwTGPkUnil.png"alt="image-20250207100344529" /><figcaption aria-hidden="true">image-20250207100344529</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">~/kubeflow-pipelines-v2/samples/contrib/pytorch-samples/utils/generate_templates.py，需要修改这个文件如下两个变量，否则执行报错且不能实现既定功能</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/QS4W8xrFGHEPVYe.png"alt="image-20250207100408891" /><figcaption aria-hidden="true">image-20250207100408891</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用ptl_args变量的值</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/st7gof8pPFa1j4E.png"alt="image-20250207100441336" /><figcaption aria-hidden="true">image-20250207100441336</figcaption></figure><h2 id="示例2">5.2 示例2</h2><p>此示例来自<ahref="https://github.com/kubeflow/pipelines/blob/master/samples/contrib/pytorch-samples/Pipeline-Bert.ipynb">kubeflow官方示例pytorch-samples</a></p><p>bert机器学习基础知识：<ahref="https://helloai.blog.csdn.net/article/details/120211601">【理论篇】是时候彻底弄懂BERT模型了</a>、 <ahref="https://blog.csdn.net/yjw123456/article/details/120232707">【实战篇】是时候彻底弄懂BERT模型了</a></p><p>创建的流水线任务“pytorch-bert”在执行Training步骤时会报错失败：</p><figure><img src="https://s2.loli.net/2025/02/07/xuND8gEJb74TkXr.png"alt="image-20250207151415759" /><figcaption aria-hidden="true">image-20250207151415759</figcaption></figure><h3 id="问题解决办法">问题解决办法：</h3><p>原因：因为需要去huggingface这个美国公司的网站下载外网的数据，但是相关外网在大陆无法正常访问。</p><p>最后执行时，做如下修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改generate_templates.py（下图是修改后的样子）</span><br>vi ~/kubeflow-pipelines/samples/contrib/pytorch-samples/utils/<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/YJtEz7kx4Vwpb9y.png"alt="image-20250207151607445" /><figcaption aria-hidden="true">image-20250207151607445</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改如下文件，使用自己的容器镜像（下图是修改后的样子）：</span><br>/home/jovyan/kubeflow-pipelines/samples/contrib/pytorch-samples/bert/template_mapping.json<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/z4C67QO9cRBLdKa.png"alt="image-20250207151701958" /><figcaption aria-hidden="true">image-20250207151701958</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#执行Pipeline-Bert.ipynb时，如果k8s环境没有gpu就修改ptl_args变量的值，将gpu修改为cpu</span></span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/07/zLdywbTcKUhREPG.png"alt="image-20250207151725871" /><figcaption aria-hidden="true">image-20250207151725871</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubeflow k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ollama部署DeepSeek及在ragflow中使用deepseek</title>
    <link href="/2025/02/05/ollama%E9%83%A8%E7%BD%B2DeepSeek%E5%8F%8A%E5%9C%A8ragflow%E4%B8%AD%E4%BD%BF%E7%94%A8deepseek/"/>
    <url>/2025/02/05/ollama%E9%83%A8%E7%BD%B2DeepSeek%E5%8F%8A%E5%9C%A8ragflow%E4%B8%AD%E4%BD%BF%E7%94%A8deepseek/</url>
    
    <content type="html"><![CDATA[<h1 id="环境信息">环境信息</h1><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>controller01</td><td>172.20.0.21</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>16c64g+400G</td><td>NVIDIA A40*2</td><td></td></tr></tbody></table><h1 id="安装配置ollama">安装配置Ollama</h1><h2 id="自动安装">自动安装</h2><p>官网地址：https://ollama.com/下载地址：https://ollama.com/download</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">此处安装Linux版本ollama</span><br>root@controller01:~# curl -fsSL https://ollama.com/install.sh | sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">但https://ollama.com/download/ollama-linux-amd64.tgz一直无法正常下载，所以先手动下载放到指定目录。再修改上述脚本文件继续安装</span><br>root@t1-gpu:/opt/installPkgs# wget https://ollama.com/install.sh -O ollama-install.sh <br>root@t1-gpu:/opt/installPkgs# vi ollama-install.sh<br>...<br> 82 #curl --fail --show-error --location --progress-bar \<br> 83 #    &quot;https://ollama.com/download/ollama-linux-$&#123;ARCH&#125;.tgz$&#123;VER_PARAM&#125;&quot; | \<br> 84 #    $SUDO tar -xzf - -C &quot;$OLLAMA_INSTALL_DIR&quot;<br> 85 $SUDO tar -xzf ollama-linux-amd64.tgz -C &quot;$OLLAMA_INSTALL_DIR&quot;<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装时将输出如下内容</span><br>root@controller01:/opt/installPkgs# bash ollama-install.sh <br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Cleaning up old version at /usr/local/lib/ollama</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Installing ollama to /usr/local</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Downloading Linux amd64 bundle</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Creating ollama user...</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Adding ollama user to render group...</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Adding ollama user to video group...</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Adding current user to ollama group...</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Creating ollama systemd service...</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Enabling and starting ollama service...</span><br>Created symlink /etc/systemd/system/default.target.wants/ollama.service → /etc/systemd/system/ollama.service.<br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; NVIDIA GPU installed.</span><br></code></pre></td></tr></table></figure><h2 id="手动安装">手动安装</h2><p>参考：https://github.com/datawhalechina/handy-ollama/blob/main/docs/C2/3.%20Ollama%20%E5%9C%A8%20Linux%20%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE.md#ollama-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE---linux-%E7%B3%BB%E7%BB%9F%E7%AF%87</p><h3 id="下载-ollama二进制文件">下载 ollama二进制文件</h3><p>将 Ollama 的二进制文件下载到 PATH 中的目录：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo curl -L https:<span class="hljs-regexp">//</span>ollama.com<span class="hljs-regexp">/download/</span>ollama-linux-amd64 -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>ollama<br>sudo chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>ollama<br></code></pre></td></tr></table></figure><h3 id="将-ollama-添加为自启动服务">将 Ollama 添加为自启动服务</h3><p>首先，为 Ollama 创建用户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo useradd -r -s /bin/false -m -d /usr/share/ollama ollama<br></code></pre></td></tr></table></figure><p>然后在该位置：<code>/etc/systemd/system/ollama.service</code>创建服务文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Unit]<br>Description=Ollama Service<br>After=network-online.target<br><br>[Service]<br>ExecStart=/usr/local/bin/ollama serve<br>User=ollama<br>Group=ollama<br>Restart=always<br>RestartSec=3<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中PATH的值就是系统环境变量PATH的值</span><br>Environment=&quot;PATH=/root/anaconda3/envs/graphrag-test/bin:/usr/local/cuda-12.4/bin:/root/anaconda3/bin:/root/anaconda3/condabin:/usr/local/jdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/sbin:/usr/sbin:/usr/local/sbin&quot;<br>Environment=&quot;OLLAMA_HOST=0.0.0.0&quot;<br><br>[Install]<br>WantedBy=default.target<br></code></pre></td></tr></table></figure><p>最后启动服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl daemon-reload<br>sudo systemctl enable ollama<br></code></pre></td></tr></table></figure><h3 id="启动-ollama">启动 Ollama</h3><p>使用以下命令启动 Ollama：<code>systemd</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl start ollama<br></code></pre></td></tr></table></figure><h1 id="使用ollama运行deepseek-r17b">使用Ollama运行DeepSeek-r1:7b</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果本地没有deepseek-r1:7b模型，它会自动下载相关模型文件，此时耗时4个两个小时</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后开始执行此大模型</span><br>root@controller01:~# ollama run deepseek-r1:7b<br>pulling manifest <br>pulling manifest <br>pulling 96c415656d37... 100% ▕████████████████████████████████████████████████████████████████████▏ 4.7 GB                         <br>pulling 369ca498f347... 100% ▕████████████████████████████████████████████████████████████████████ 387 B                         <br>pulling 6e4c38e1172f... 100% ▕████████████████████████████████████████████████████████████████████▏ 1.1 KB                         <br>pulling f4d24e9138dd... 100% ▕████████████████████████████████████████████████████████████████████▏  148 B                         <br>pulling 40fb844194b2... 100% ▕████████████████████████████████████████████████████████████████████▏  487 B                         <br>verifying sha256 digest <br>writing manifest <br>removing any unused layers <br>success <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">至此就可以在命令行中进行对话了</span><br></code></pre></td></tr></table></figure><h1 id="安装ragflow">安装ragflow</h1><p>官网 ：https://github.com/infiniflow/ragflow</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/code_repos# git clone https://github.com/infiniflow/ragflow.git<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或 root@controller01:/opt/code_repos# git <span class="hljs-built_in">clone</span> https://gitee.com/sy-jiang/ragflow.git</span><br><br>root@controller01:/opt/code_repos# cd ragflow/docker/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改RAGFLOW_IMAGE 镜像为国内镜像源提供的镜像（建议不要使用精简版的ragflow镜像）</span><br>root@controller01:/opt/code_repos/ragflow/docker# vi .env<br><span class="hljs-meta prompt_">#</span><span class="language-bash">RAGFLOW_IMAGE=infiniflow/ragflow:v0.15.1-slim</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">RAGFLOW_IMAGE=infiniflow/ragflow:v0.15.1</span><br>RAGFLOW_IMAGE=swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/infiniflow/ragflow:v0.15.1<br><br>root@controller01:/opt/code_repos/ragflow/docker# docker-compose -f docker-compose.yml up -d<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有NVIDIA GPU，使用如下</span><br>root@controller01:/opt/code_repos/ragflow/docker# docker-compose -f docker-compose-gpu.yml up -d<br></code></pre></td></tr></table></figure><h1 id="使用ragflow">使用ragflow</h1><h2 id="注册与登录">注册与登录</h2><p>登录前必须使用邮箱注册（注册信息保存在本地），然后登录（第一个注册的用户默认就是管理员）</p><figure><img src="https://s2.loli.net/2025/02/11/gOoV2h73r8sqFvX.png"alt="image-20250206095806493" /><figcaption aria-hidden="true">image-20250206095806493</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/1re9RnYW6bmwvp5.png"alt="image-20250206100000908" /><figcaption aria-hidden="true">image-20250206100000908</figcaption></figure><h2id="将ollama中管理的deepseek模型接入ragflow">将ollama中管理的DeepSeek模型接入ragflow</h2><p>先在模型提供商中添加嵌入模型和LLM，然后在“系统模型设置”中设置它们。</p><figure><img src="https://s2.loli.net/2025/02/06/Z23MyxmtfS8JqQo.png"alt="image-20250206100217493" /><figcaption aria-hidden="true">image-20250206100217493</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/FqMHjzUmwOYRetC.png"alt="image-20250206100425361" /><figcaption aria-hidden="true">image-20250206100425361</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">chat就是用来对话的模型。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">embedding是一类特殊的模型，用来将用户输入的内容进行一个编码，然后输入给大模型。</span><br><br>root@controller01:/opt/code_repos/ragflow/docker# ollama list<br>NAME                                    ID              SIZE    MODIFIED     <br>deepseek-r1:7b                          0a8c26691023    4.7 GB  18 hours ago<br>qwen:7b                                 2091ee8c8d8f    4.5 GB  2 months ago<br>EntropyYue/chatglm3:6b                  254ec1286add    3.6 GB  2 months ago<br>qwen:14b                                80362ced6553    8.2 GB  2 months ago<br>qwen:0.5b                               b5dc5e784f2a    394 MB  2 months ago<br>deepseek-coder:1.3b                     3ddd2d3fc8d2    776 MB  2 months ago<br>quentinz/bge-large-zh-v1.5:latest       bc8ca0995fcd    651 MB  6 months ago<br>gemma2:9b                               ff02c3702f32    5.4 GB  6 months ago<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/02/06/gynacCU7fqPSvJZ.png"alt="image-20250206101409923" /><figcaption aria-hidden="true">image-20250206101409923</figcaption></figure><p>添加模型后，进行系统模型设置</p><figure><img src="https://s2.loli.net/2025/02/06/DEaqA4ZY1Td2pOo.png"alt="image-20250206101725314" /><figcaption aria-hidden="true">image-20250206101725314</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/FmcUf9dbOqtJklp.png"alt="image-20250206151941934" /><figcaption aria-hidden="true">image-20250206151941934</figcaption></figure><p>其中large表示嵌入模型的规模是large，如果资源足够，模型规模越大效果越好；zh表示此嵌入模型是一个中文解析模型。</p><h2 id="知识库">知识库</h2><h3 id="创建知识库">创建知识库</h3><p>此处我准备了一个《中华人民共和国食品安全法.pdf》文件，用来创建知识库</p><figure><img src="https://s2.loli.net/2025/02/06/do1VKj3CHT8bhUF.png"alt="image-20250206102421822" /><figcaption aria-hidden="true">image-20250206102421822</figcaption></figure><h3 id="知识库配置">知识库配置</h3><figure><img src="https://s2.loli.net/2025/02/06/PF1QBIheHO6t2i7.png"alt="image-20250206152608551" /><figcaption aria-hidden="true">image-20250206152608551</figcaption></figure><h3 id="数据集配置">数据集配置</h3><figure><img src="https://s2.loli.net/2025/02/06/uAahNb9JYQORBci.png"alt="image-20250206152802622" /><figcaption aria-hidden="true">image-20250206152802622</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/eyU3OQaSg4MTBhf.png"alt="image-20250206152833439" /><figcaption aria-hidden="true">image-20250206152833439</figcaption></figure><p>《食品安全法.pdf》下载地址：https://sj.als.gov.cn/attach/0/d50b5b9d5b7e4387abd14da4b1e05f73.pdf</p><figure><img src="https://s2.loli.net/2025/02/06/MevyOWxD13uq8ro.png"alt="image-20250206152929373" /><figcaption aria-hidden="true">image-20250206152929373</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/m3Z2xtvRgTlseWF.png"alt="image-20250206153412950" /><figcaption aria-hidden="true">image-20250206153412950</figcaption></figure><h2 id="聊天">聊天</h2><h3 id="新建助理">新建助理</h3><figure><img src="https://s2.loli.net/2025/02/06/xVebYaBqKLy61Ei.png"alt="image-20250206154504678" /><figcaption aria-hidden="true">image-20250206154504678</figcaption></figure><h3 id="新建聊天">新建聊天</h3><figure><img src="https://s2.loli.net/2025/02/06/hJOIvbS3zuyYU9C.png"alt="image-20250206154651562" /><figcaption aria-hidden="true">image-20250206154651562</figcaption></figure><figure><img src="https://s2.loli.net/2025/02/06/J4lj5gHoXDOKqWb.png"alt="image-20250206155149390" /><figcaption aria-hidden="true">image-20250206155149390</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DeepSeek Ollama</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeepSeek大模型历史及概述</title>
    <link href="/2025/01/27/DeepSeek%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%8E%86%E5%8F%B2%E5%8F%8A%E6%A6%82%E8%BF%B0/"/>
    <url>/2025/01/27/DeepSeek%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%8E%86%E5%8F%B2%E5%8F%8A%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="一deepseek公司">一、DeepSeek公司</h1><p><strong><ahref="https://baike.baidu.com/item/DeepSeek/65258669">DeepSeek公司</a></strong>成立于2023年7月17日，中文名字全称是<strong>杭州深度求索人工智能基础技术研究有限公司</strong>，由知名量化基金公司 <strong>幻方量化</strong>创立（注册总资本1000万，幻方量化的创始人梁文锋占了1%的持股比例）。DeepSeek作为一家创新型科技公司，成立以来专注于开发先进的大语言模型（LLM）和相关技术，作为大厂外唯一一家储备万张A100 芯片的公司，幻方量化为DeepSeek的技术研发提供了强大的硬件支持。</p><p><strong>幻方量化</strong>公司由三名毕业于浙江大学的工程师（其中就包括梁文锋）于2015年创立，是一家总部位于中国浙江省杭州市的对冲基金、量化基金和人工智能公司。2017年幻方量化开始基于机器学习进行交易，并宣称实现投资策略全面AI化。此后的2023年7月创立DeepSeek公司，所以说DeepSeek 公司是幻方量化公司的子公司。</p><h1 id="二deepseek公司的模型历史">二、DeepSeek公司的模型历史</h1><p>此章节按照时间顺序阐述DeepSeek公司发布的重要模型的概述信息。后面有单独的章节把DeepSeek-V3及DeepSeek-R1模型的概述、特征、模型下载等进行说明。</p><h2 id="deepseek-llm">DeepSeek LLM</h2><p>2024年1月5日，发布第一个模型<ahref="https://github.com/deepseek-ai/DeepSeek-LLM">DeepSeekLLM</a>。此模型包含670亿参数，在一个包含2万亿token的数据集上进行了训练，数据集涵盖中英文。为了促进研究社区，公司全部开源了DeepSeekLLM 7B/67B Base和DeepSeek LLM 7B/67B Chat。DeepSeekLLM的主要特征有如下：</p><ul><li>卓越的综合能力：DeepSeek LLM 67BBase在推理、编码、数学和中文理解等方面超越了Llama2 70B Base。</li><li>精通编程和数学：DeepSeek LLM 67B Chat在编码和数学方面表现出色。</li><li>精通中文：DeepSeek LLM 67B Chat在中文表现上超越了GPT-3.5。</li></ul><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-LLM">DeepSeek-LLM的代码仓库</a></p><h2 id="deepseek-coder">DeepSeek-Coder</h2><p>2024年1月25日，发布DeepSeek-Coder，DeepSeekCoder由一系列代码语言模型组成，每个模型均从零开始在2万亿token上训练，数据集包含87%的代码和13%的中英文自然语言。代码模型尺寸从1B到33B版本不等。DeepSeekCoder在多种编程语言和各种基准测试中达到了开源代码模型的最先进性能。DeepSeekLLM的主要特征有如下：</p><ul><li><p>海量的训练数据：从零开始在拥有2万亿token的数据集上进行了训练，数据集包括87%的代码和13%的中英文语言数据。</p></li><li><p>高度灵活性和可扩展：有1B、5.7B、6.7B、33B四种规格可供选择，用户可根据需要选择最合适的模型及规格</p></li><li><p>卓越的模型性能：在HumanEval、MultiPL-E、MBPP、DS-1000、与APPS多种基准测试中，与其他公开、可用的大模型相比，此模型总体上拥有更卓越的性能</p></li><li><p>高阶代码补全能力：采用16K的窗口大小和额外的填空任务进行训练，以支持项目级代码补全和填充。</p></li></ul><figure><img src="https://s2.loli.net/2025/01/27/iyXhSO8bdk6gx3T.png"alt="image-20250127223512626" /><figcaption aria-hidden="true">image-20250127223512626</figcaption></figure><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-Coder">DeepSeek-Coder的代码仓库</a></p><h2 id="deepseekmath">DeepSeekMath</h2><p>2024年2月5日，发布<ahref="https://github.com/deepseek-ai/DeepSeek-Math">DeepSeekMath</a>，DeepSeekMath以DeepSeek-Coder-v1.57B为基础，继续在从CommonCrawl中提取的数学相关token以及自然语言和代码数据上进行预训练，训练规模达5000亿token。DeepSeekMath7B在竞赛级MATH基准测试中取得了51.7%的优异成绩，且未依赖外部工具包和投票技术，接近Gemini-Ultra和GPT-4的性能水平。</p><figure><img src="https://s2.loli.net/2025/01/27/5dFG37UyD1CxXRe.png"alt="image-20250127222229328" /><figcaption aria-hidden="true">image-20250127222229328</figcaption></figure><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-Math">DeepSeek-Math的代码仓库</a></p><h2 id="deepseek-vl">DeepSeek-VL</h2><p>2024年3月11日，发布<ahref="https://github.com/deepseek-ai/DeepSeek-VL">DeepSeek-VL</a>。DeepSeek-VL是一个开源的视觉语言模型，专为现实世界的视觉和语言理解应用而设计。DeepSeek-VL具有通用的多模态理解能力，能够处理逻辑图、网页、公式识别、科学文献、自然图像和复杂场景下的具身智能，同时保持相对较低的计算开销。DeepSeek-VL系列（包括1.3B和7B模型）在相同模型尺寸下，在广泛的视觉-语言基准测试中达到了最先进或可竞争的性能。</p><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-VL">DeepSeek-VL的代码仓库</a></p><h2 id="deepseek-v2">DeepSeek-V2</h2><p>2024年5月7日，发布第二代开源Mixture-of-Experts（MoE）模型——<ahref="https://github.com/deepseek-ai/DeepSeek-V2">DeepSeek-V2</a>。DeepSeek-V2是一个强大的混合专家（MoE）语言模型，以经济高效的训练和推理为特点。它包含2360亿个总参数，其中每个token激活210亿个参数。与DeepSeek67B相比，DeepSeek-V2不仅实现了更强的性能，同时还节省了42.5%的训练成本，将KV缓存减少了93.3%，并将最大生成吞吐量提升至5.76倍。DeepSeek-V2是在一个包含8.1万亿token的多样化且高质量的语料库上进行的预训练。在完成全面的预训练后，通过监督微调（SFT）和强化学习（RL）进一步释放了模型的潜力。评估结果验证了方法的有效性，DeepSeek-V2在标准基准测试和开放式生成评估中均取得了显著的表现。DeepSeekV2模型因在中文综合能力评测中的出色表现，且以极低的推理成本引发行业关注，被称为“AI界的拼多多”。</p><figure><img src="https://s2.loli.net/2025/01/27/d1xasNLn94P6Ulq.png"alt="image-20250127223436895" /><figcaption aria-hidden="true">image-20250127223436895</figcaption></figure><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-V2">DeepSeek-V2的代码仓库</a></p><h2 id="deepseek-coder-v2">DeepSeek-Coder-V2</h2><p>2024年6月17日，发布DeepSeek-Coder-V2，DeepSeek-Coder-V2是一个开源的混合专家（MoE）代码语言模型，在代码特定任务中达到了与GPT4-Turbo相当的性能。DeepSeek-Coder-V2是从DeepSeek-V2的一个中间检查点开始，进一步预训练了额外的6万亿token，显著增强了DeepSeek-V2的编码和数学推理能力，同时在通用语言任务中保持了相当的性能。并在代码相关任务、推理能力和通用能力等多个方面都取得了显著进步。此外，DeepSeek-Coder-V2将支持的编程语言从86种扩展到338种，并将上下文长度从16K扩展到128K。在标准基准测试中，DeepSeek-Coder-V2在编码和数学基准测试中表现优异，超越了GPT4-Turbo、Claude3 Opus和Gemini 1.5 Pro等闭源模型。</p><figure><img src="https://s2.loli.net/2025/01/27/Pe2JGhEZMVDp6sc.png"alt="image-20250127223414157" /><figcaption aria-hidden="true">image-20250127223414157</figcaption></figure><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-Coder-V2">DeepSeek-Coder-V2的代码仓库</a></p><h2 id="deepseek-vl2">DeepSeek-VL2</h2><p>2024年12月13日，发布用于高级多模态理解的专家混合视觉语言模型——<ahref="https://github.com/deepseek-ai/DeepSeek-VL2">DeepSeek-VL2</a>，DeepSeek-VL2是一个先进的大型混合专家（MoE）视觉-语言模型系列，相较于其前身DeepSeek-VL有了显著改进。DeepSeek-VL2在多种任务中展现了卓越的能力，包括但不限于视觉问答、光学字符识别、文档/表格/图表理解以及视觉定位。模型系列由三个变体组成：DeepSeek-VL2-Tiny、DeepSeek-VL2-Small和DeepSeek-VL2，分别具有10亿、28亿和45亿激活参数。与现有的开源密集模型和基于MoE的模型相比，DeepSeek-VL2在相似或更少的激活参数下实现了具有竞争力或最先进的性能。</p><figure><img src="https://s2.loli.net/2025/01/27/mYFA1y2USp4PnNu.png"alt="image-20250127223908472" /><figcaption aria-hidden="true">image-20250127223908472</figcaption></figure><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/DeepSeek-VL2">DeepSeek-VL2的代码仓库</a></p><h2 id="deepseek-v3">DeepSeek-V3</h2><p>2024年12月26日晚，DeepSeek公司正式上线全新系列模型 DeepSeek-V3首个版本并同步开源。</p><p>后面将有一个单独的章节对此模型做一个详细的介绍。</p><h2 id="deepseek-r1">DeepSeek-R1</h2><p>2025年1月20日，DeepSeek正式发布 DeepSeek-R1模型，并同步开源模型权重。</p><p>后面也有一个单独的章节对此模型做一个详细的介绍。</p><h2 id="deepseek-janus-pro">DeepSeek-Janus-Pro</h2><p>2025年1月28日凌晨，DeepSeek 在 GitHub 上的 Janus 项目空间官宣开源了Janus-Pro 模型和技术报告。</p><p>DeepSeek-Janus-Pro的特征如下：</p><ul><li>Janus-Pro模型是一个多模态模型，可以同时进行多模态理解和图像生成任务。它共有2个参数量版本，Janus-Pro-1B及 Janus-Pro-7B。</li><li>Janus-Pro的核心创新是将多模态理解和生成，两种不同的任务解耦。让这两种任务可以在同一模型中高效完成。</li><li>Janus-Pro 与去年10月 DeepSeek 发布的 Janus 模型架构一致，但当时Janus 没有太多关注与关注。</li><li>DeepSeek官方介绍，Janus-Pro不仅能理解图片、对图片中的文字进行提取与理解，还能同时生成图片。</li></ul><p>其他详细介绍参考：<ahref="https://github.com/deepseek-ai/Janus">Janus的代码仓库</a></p><h1 id="三deepseek-v3-模型">三、DeepSeek-V3 模型</h1><p>2024年12月26日晚，DeepSeek公司正式上线全新系列模型 <ahref="https://github.com/deepseek-ai/DeepSeek-V3">DeepSeek-V3</a>首个版本并同步开源。</p><p>论文下载查看：https://github.com/deepseek-ai/DeepSeek-V3/blob/main/DeepSeek_V3.pdf或 https://arxiv.org/abs/2412.19437 。</p><p>以下关于DeepSeek-V3模型的阐述，来看DeepSeek-V3的github仓库内容的翻译。</p><h2 id="模型介绍">3.1 模型介绍</h2><p>是一个强大的专家混合（MoE）语言模型，具有671B个总参数，每个令牌激活37B个参数。为了实现高效的推理和低成本的训练，DeepSeek-V3采用了多头潜注意（MLA）和DeepSeekMoE架构，这两种架构在DeepSeek-V2中得到了充分的验证。此外，DeepSeek-V3开创性提出以下两点：无辅助损失策略、多令牌预测。DeepSeek-V3在14.8万亿个不同的高质量令牌上进行了预训练，然后进行监督微调和强化学习。据DeepSeek官网所述：综合性实验评估表明，DeepSeek-V3优于其他开源模型，并实现了与领先的闭源模型相当的性能。而实现如此优异性能的条件是，DeepSeek-V3的完整训练只花费了278.8 m H800GPU小时。此外，DeepSeek-V3的训练过程非常稳定，在整个训练过程中没有经历任何不可恢复的损失峰值或执行任何回滚。</p><p>从下图（来自DeepSeek-V3在github上的代码仓库）可以看出，DeepSeek-V3在知识类任务（MMLU,MMLU-Pro, GPQA, SimpleQA）上的水平相比前代DeepSeek-V2.5显著提升，接近当前表现最好的由Anthropic公司于10月发布的模型Claude-3.5-Sonnet-1022。在美国数学竞赛（AIME2024,MATH）上，DeepSeek-V3很大程度地超过了其他所有开源闭源模型。在codeforces测评中，DeepSeek-V3大幅超过其他模型。另外，在生成速度上，DeepSeek-V3的生成吐字速度从20TPS（TransactionsPerSecond）大幅提高至60TPS，相比V2.5模型实现了3倍的提升，能够带来更加流畅的使用体验。</p><figure><img src="https://s2.loli.net/2025/01/27/31HemjXDW5QbqLs.png"alt="image-20250127224259093" /><figcaption aria-hidden="true">image-20250127224259093</figcaption></figure><h2 id="模型摘要">3.2 模型摘要</h2><h3id="架构采用创新的负载均衡策略与训练目标">架构：采用创新的负载均衡策略与训练目标</h3><p><em>DeepSeek</em>-<em>V3</em>开创了一种无辅助损失的<em>负载</em>平衡<em>策略</em>，并为更强性能设置了多tokens预测训练目标。</p><ul><li>在DeepSeek-V2的高效构架基础上，DeepSeek-V3开创性地提出了一种无辅助损失的负载均衡策略，这种策略可以最小化由追求负载均衡而引起的性能下降。</li><li>DeepSeek-V3提出了一种多令牌预测（MTP）目标，事实证明它能提升模型性能。此外它能应用于推测解码以加速推理过程。</li></ul><h3 id="预训练极高的训练效率">预训练：极高的训练效率</h3><ul><li>DeepSeek-V3设计了一个FP8混合精度训练框架，并首次验证了FP8训练在超大规模模型上的可行性与有效性。</li><li>通过对算法、框架与硬件的协同考量与设计，DeppSeek-V3克服了跨节点MoE训练的通信瓶颈，几乎达到了计算与通信二者的完全一致性。这显著地提升了训练效率并减少了训练成本，使得研究人员与用户可以进一步扩展模型规模而无需其他额外的开销。</li><li>在仅仅2.664M（百万） 个H800GPU小时的经济与时间成本条件下，在14.8T（万亿）个tokens上完成了DeepSeek-V3的预训练，由此创建出这一当时最强大（针对DeepSeek公司当时开源它们的DeepSeek-V3模型时的时间点来说）的开源基础模型（应该是指DeepSeek-V3-Base）。预训练之后的后续训练阶段仅花费了0.1M（百万）个GPU小时（此处的GPU应该仍然是指H800）。</li></ul><h3id="后训练从deepseek-r1中蒸馏知识">后训练：从DeepSeek-R1中蒸馏知识</h3><p>通过引入一种创新的方法，从长思维链模型（特别是DeepSeek-R1系列模型中的某个）蒸馏与提取推理能力到普通的LLMs（大语言模型，此处特指DeepSeek-V3）。在整个后训练工作流程中，通过优雅地将DeepSeek-R1的验证与反思模式集成到DeepSeek-V3中，显著地提升了DeepSeek-V3 的推理性能。与此同时，DeepSeek-V3的输出风格与输出长度仍处于可控范围内。</p><h2 id="模型下载">3.3 模型下载</h2><table><thead><tr><th><strong>Model</strong></th><th><strong>#Total Params</strong></th><th><strong>#Activated Params</strong></th><th><strong>Context Length</strong></th><th><strong>Huggingface 下载</strong></th><th>魔搭下载</th></tr></thead><tbody><tr><td>DeepSeek-V3-Base</td><td>671B</td><td>37B</td><td>128K</td><td><a href="https://huggingface.co/deepseek-ai/DeepSeek-V3-Base">🤗Hugging Face</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-V3-Base">modelscope</a></td></tr><tr><td>DeepSeek-V3</td><td>671B</td><td>37B</td><td>128K</td><td><a href="https://huggingface.co/deepseek-ai/DeepSeek-V3">🤗 HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-V3">modelscope</a></td></tr></tbody></table><h2 id="具体评估结果">3.4 具体评估结果</h2><p>参考：https://github.com/deepseek-ai/DeepSeek-V3?tab=readme-ov-file#4-evaluation-results</p><h1 id="四deepseek-r1模型">四、DeepSeek-R1模型</h1><p>2025年1月20日，DeepSeek正式发布 <ahref="https://github.com/deepseek-ai/DeepSeek-R1">DeepSeek-R1</a>模型，并同步开源模型权重。DeepSeek-R1在后训练阶段大规模使用了强化学习技术，在仅有极少标注数据的情况下，极大提升了模型推理能力。DeepSeek-V3和DeepSeek-R1两款模型，成本价格低廉，性能与OpenAI-O1模型相当，引起了包括美国硅谷在内的多家知名顶尖AI公司的震惊与兴趣。</p><p>论文下载查看：https://github.com/deepseek-ai/DeepSeek-R1/blob/main/DeepSeek_R1.pdf或 https://arxiv.org/pdf/2501.12948 。</p><p>以下关于DeepSeek-R1模型的阐述，来自DeepSeek-R1的github仓库内容的翻译。</p><h2 id="模型介绍-1">4.1 模型介绍</h2><p>DeepSeek-R1-Zero 与DeepSeek-R1这两个模型是同时开源的，DeepSeek-R1-Zero 是DeepSeek-R1的基础。</p><p>DeepSeek-R1-Zero模型是一个没有事先进行任何（supervisedfine-tuning，SFT）监督微调而只通过大规模强化学习（einforcementlearning，RL）训练得到的模型，最终结果证明DeepSeek-R1-Zero模型展示了卓越的推理能力。但事实上，DeepSeek-R1-Zero模型并不是十全十美，它也有一些显著的不足比如无穷止的重复、糟糕的可读性、语言混合输出等。为了解决这些不足并进一步强化推理能力与提升性能，DeepSeek-R1被训练出来。DeepSeek-R1通过引入强化学习前的冷启动数据和多阶段训练流程，不仅解决前述部分问题，而且最终达到在数学、编码、推理等任务上与`OpenAI-o1-1217模型相媲美的水平。</p><p>为了对研究社区进行支持，DeepSeek 在开源了DeepSeek-R1-Zero 与DeepSeek-R1这两个模型的同时，DeepSeek公司在DeepSeek-R1模型生成的样本数据的基础上对Llama或Qwen模型进行了微调与蒸馏，最终产生了6个性能卓越的蒸馏模型并且它们也被开源推出。其中蒸馏模型<code>DeepSeek-R1-Distill-Qwen-32B</code>在多项基准测试中的表现超过了<code>OpenAI-o1-mini</code>，不失为一个性能卓著的稠密模型（DeepSeek公司自己的评价。单从基准测试结果上来看，确实是这样）。</p><p>从下图（来自DeepSeek-R1在github上的代码仓库）可以看出，DeepSeek-R1在知识类任务（MMLU,MMLU-Pro, GPQA, SimpleQA）上的水平相比前面的最强模型 DeepSeek-V3稍有提升，超过其他绝大多数模型，略逊于当前表现最好的由openai公司于前一年12月发布的模型OpenAI-o1-1217。在美国数学竞赛（AIME2024,MATH）上，DeepSeek-R1超过所有开源闭源模型，略胜于OpenAI-o1-1217。在codeforces测评即编码相关的任务中，DeepSeek-R1在代码竞赛任务中表现出专家水平，获得了2029Elo评级，在竞赛中表现优于96.3%的人类参与者，超过其他绝大多数模型。对于工程相关的任务（SWE-benchVerified），DeepSeek-R1的表现略优于OpenAI-o1-1217。</p><figure><img src="https://s2.loli.net/2025/01/27/4hwdVJaxQl16RMe.png"alt="image-20250127225153880" /><figcaption aria-hidden="true">image-20250127225153880</figcaption></figure><h2 id="模型摘要-1">4.2 模型摘要</h2><h3id="后训练基于基础模型进行大规模强化学习">后训练：基于基础模型进行大规模强化学习</h3><ul><li>我们事先没有依赖监督微调，而是直接在基础模型上实施了强化学习。这种方法允许模型探索思维链去解决复杂问题，最终训练出DeepSeek-R1-Zero模型。DeepSeek-R1-Zero在展现了多方面的能力比如自我验证、反思与生成长思维链，这成为科研社区的一个重要的里程碑。特别地，这是第一个验证了“没有监督微调，LLM的推理能力也可以仅通过强化激励出来”的开源研究。这个突破为未来这个领域的进步铺就了道路。</li><li>我们引入了一个工作流水线来研发DeepSeek-R1。这个流水线采用了两个强化学习阶段，它们旨在探索更加准确高效的推理模式、符合人类偏好，同时也采用了两个监督微调阶段作为模型推理和非推理能力的种子。</li></ul><h3 id="蒸馏小模型也能拥有大智慧">蒸馏：小模型也能拥有大智慧</h3><ul><li>我们证明了大模型的的推理模式可以被蒸馏到更小的模型中，而且小模型的推理模式比直接在小模型上实施强化而得到的推理模式更优。开源的DeepSeek-R1及其API将有助于科研界在未来蒸馏出更小更好的模型。</li><li>使用DeepSeek-R1生成的推理数据，我们对几个在科研界被广泛使用的的稠密模型。评估结果表明，蒸馏出来的小型稠密模型在基准测试中的表现出人意料地好。DeepSeek公司在Qwen2.5或 Llama3模型的基础上蒸馏出了1.5B、7B、8B、14B、32B 和 70B这6个不同参数规模的模型，并将它们全部开源给了社区。</li></ul><h2 id="模型下载-1">4.3 模型下载</h2><h3 id="deepseek-r1-模型">DeepSeek-R1 模型</h3><table><thead><tr><th><strong>Model</strong></th><th><strong>#Total Params</strong></th><th><strong>#Activated Params</strong></th><th><strong>Context Length</strong></th><th><strong>Huggingface 下载</strong></th><th>魔搭下载</th></tr></thead><tbody><tr><td>DeepSeek-R1-Zero</td><td>671B</td><td>37B</td><td>128K</td><td><a href="https://huggingface.co/deepseek-ai/DeepSeek-R1-Zero">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Zero">modelscope</a></td></tr><tr><td>DeepSeek-R1</td><td>671B</td><td>37B</td><td>128K</td><td><a href="https://huggingface.co/deepseek-ai/DeepSeek-R1">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1">modelscope</a></td></tr></tbody></table><p>DeepSeek-R1-Zero 与 DeepSeek-R1 都是从DeepSeek-V3-Base这一模型训练而来.</p><h2 id="deepseek-r1-的蒸馏模型">DeepSeek-R1 的蒸馏模型</h2><table><thead><tr><th><strong>Model</strong></th><th><strong>Base Model</strong></th><th><strong>Huggingface 下载</strong></th><th>魔搭下载</th></tr></thead><tbody><tr><td>DeepSeek-R1-Distill-Qwen-1.5B</td><td><ahref="https://huggingface.co/Qwen/Qwen2.5-Math-1.5B">Qwen2.5-Math-1.5B</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B">modelscope</a></td></tr><tr><td>DeepSeek-R1-Distill-Qwen-7B</td><td><ahref="https://huggingface.co/Qwen/Qwen2.5-Math-7B">Qwen2.5-Math-7B</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-7B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-7B">modelscope</a></td></tr><tr><td>DeepSeek-R1-Distill-Llama-8B</td><td><ahref="https://huggingface.co/meta-llama/Llama-3.1-8B">Llama-3.1-8B</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-8B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Llama-8B">modelscope</a></td></tr><tr><td>DeepSeek-R1-Distill-Qwen-14B</td><td><ahref="https://huggingface.co/Qwen/Qwen2.5-14B">Qwen2.5-14B</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B">modelscope</a></td></tr><tr><td>DeepSeek-R1-Distill-Qwen-32B</td><td><ahref="https://huggingface.co/Qwen/Qwen2.5-32B">Qwen2.5-32B</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-32B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-32B">modelscope</a></td></tr><tr><td>DeepSeek-R1-Distill-Llama-70B</td><td><ahref="https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct">Llama-3.3-70B-Instruct</a></td><td><ahref="https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B">🤗HuggingFace</a></td><td><ahref="https://modelscope.cn/models/deepseek-ai/DeepSeek-R1-Distill-Llama-70B">modelscope</a></td></tr></tbody></table><p>上述 DeepSeek-R1-Distill-XXX 这些都是对同等参数规模的DeepSeek-R1进行微调与蒸馏而得到的，它们（这些蒸馏模型）使用的数据都是由DeepSeek-R1生成的。在微调与蒸馏出模型时，它们的配置与tokenizers都有被或多或少的改变过，使用这些模型时需要注意。</p><h2 id="具体评估结果-1">4.4 具体评估结果</h2><p>参考：https://github.com/deepseek-ai/DeepSeek-R1?tab=readme-ov-file#4-evaluation-results</p><h1 id="五专业名词解释">五、专业名词解释</h1><ul><li><p><strong>AGI</strong></p><p>英文全称是“artificial general intelligence”，中文翻译为“<ahref="https://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E4%BA%BA%E5%B7%A5%E6%99%BA%E6%85%A7">通用人工智能</a>”，也叫<strong>强人工智能</strong>（英语：strongAI）。是指具备与人类同等智能、或超越人类的人工智能，能表现正常人类所具有的所有智能行为。</p></li><li><p><strong><ahref="https://huggingface.co/blog/zh/moe">MoE</a></strong></p><p>英文全称是”Mixture of Experts“，中文翻译为”混合专家模型“，起源于1991年的论文Adaptive Mixture of Local Experts。混合专家模型 (MoE)的一个显著优势是它们能够在远少于稠密模型所需的计算资源下进行有效的预训练。这意味着在相同的计算预算条件下，您可以显著扩大模型或数据集的规模。特别是在预训练阶段，与稠密模型相比，混合专家模型通常能够更快地达到相同的质量水平。</p></li><li><p><strong>蒸馏</strong></p><p>此处的蒸馏当然不是我们初中物理学习的蒸馏技术，此处是指蒸馏技术，它就像是学校里的学习过程：老师拥有丰富的知识和经验，学生通过学习老师的知识逐渐成长。AI中的“教师模型”相当于知识渊博的老师，它通过大量的数据训练，掌握了复杂的模式和特征；而“学生模型”则像是一个刚刚起步的学生，虽然知识面不如老师丰富，但通过学习老师的“思考方式”和“经验”，可以在没有过多计算资源的情况下取得不错的成绩。以个人目前的知识来理解，就像是应试教育与考试。</p><p>也就是说，蒸馏是一种从已有的模型（当然我们会尽可能采用业界最高水准的模型）中提取知识的方法：你可以给教师模型（teachermodel）输入数据，记录它的输出，并用这些数据训练学生模型（studentmodel）。</p><p>一般来说，公司只能对自己的模型进行蒸馏，因为公司对自己的模型拥有所有的归属权与访问控制权限。一般地对商业公司发布的进行蒸馏的方法就是通过不断、反复调用其API接口，记录输入输出，达到对此商业模型进行蒸馏的目的；但对商业公司发布的受商业条款保护的模型进行蒸馏是非法的，商业公司也是严查严防此类行为，通常通过限制API访问（如同一IP在单位时间内访问API的频率等），甚至直接封禁访问IP，但这仍然是一种普遍存在的训练策略，因此我们才看到越来越多的模型在逼近GPT-4o（GPT-4o就是通过此方法从GPT-4演化而来的）的质量。</p></li><li><p><strong><ahref="https://cloud.baidu.com/article/3190441">稀疏模型与稠密模型</a></strong></p><p>在人工智能领域，模型可以分为稀疏和稠密两种类型。稀疏模型通常是指神经网络中大部分参数都是零或非常接近零的模型，而稠密模型则是指神经网络中参数分布较为均匀的模型。</p><p>稀疏语言模型是一种基于稀疏编码的模型，主要用于自然语言处理任务，如文本分类、情感分析等。该模型利用了语言本身的语法和语义结构，通过将文本分解为一系列词组或短语，然后对这些词组或短语进行编码，最后再利用这些编码进行分类或情感分析。由于稀疏语言模型可以自动地识别文本中的关键词和短语，因此在处理自然语言任务时具有较好的效果。</p><p>稀疏优化模型是指基于稀疏性的优化算法，其基本思想是通过引入稀疏性约束来优化目标函数。这种优化算法可以在大规模数据集上找到更具有代表性的特征，从而更好地进行分类或回归等任务。稀疏优化算法在机器学习领域有着广泛的应用，如支持向量机、随机森林等算法中都使用了稀疏性约束。</p><p>稠密模型则是神经网络中最为常见的模型之一，其特点是每个神经元都与输入数据中的每个元素相连，因此可以处理任意形式的输入数据。稠密模型在图像识别、语音识别等领域有着广泛的应用。由于稠密模型中参数分布较为均匀，因此在训练过程中可以充分利用GPU等硬件加速器进行并行计算，从而提高训练速度。</p></li></ul><h1 id="六其他信息与相关事件">六、其他信息与相关事件</h1><h2 id="被雷军挖角的天才少女罗福莉">6.1 被雷军挖角的天才少女罗福莉</h2><p>2024年12月份，雷军以千万级薪酬招揽DeepSeek核心研究员、95后AI天才罗福莉。期望她能领军小米AI大模型团队的发展。</p><h2 id="年1月27日deepseek网页api不可用">6.22025年1月27日DeepSeek网页/API不可用</h2><figure><img src="https://s2.loli.net/2025/01/27/2OhZ6r48oTnp1RQ.png"alt="image-20250127211800641" /><figcaption aria-hidden="true">image-20250127211800641</figcaption></figure><h2 id="deepseek登顶中美应用下载榜首">6.3DeepSeek登顶中美应用下载榜首</h2><p>2025年1月27日，DeepSeek应用登顶苹果美国地区应用商店免费APP下载排行榜，在美区下载榜上超越了ChatGPT。同日，苹果中国区应用商店免费榜显示，DeepSeek成为中国区第一。</p><h2 id="国内知名公司纷纷接入deepseek">6.4国内知名公司纷纷接入DeepSeek</h2><p>DeepSeek横空出世激起千层浪。近日，金山云、荣耀手机、东风汽车等纷纷宣布接入DeepSeek。部分名单与细节参考：<ahref="https://www.21jingji.com/article/20250208/herald/3d402c19a951d2de6adbd9af2111fe09.html">DeepSeek真香！三大运营商、商汤等已接入，名单还在扩大</a>。最终结果让市场来检验。</p><h2 id="国产加速卡纷纷加速适配deepseek">6.5国产加速卡纷纷加速适配DeepSeek</h2><p>DeepSeek-V3及DeepSeek-R1爆火后，国产加速卡厂商如华为昇腾、壁仞科技、天数智芯、摩尔线程、龙芯中科、昆仑芯等纷纷加速适配DeepSeek。最终结果让市场来检验。</p><h1 id="七思考与总结">七、思考与总结</h1><ul><li>大模型现在已经进入爆发阶段，作为一个IT人，如果不转行就只能向其靠近，不断学习大模型的原理、研发与使用。</li><li>模型蒸馏技术并不是DeepSeek公司发明的，但确是它们开源DeepSeek-V3与DeepSeek-R1及相关蒸馏模型后引发科研人员与研发人员关注的，所以专注于当前的某件事情将其做精，也能取得一定的“成功”。</li><li>从2024年12月底到现在，一个半月左右时间过去了，国内越来越多的大公司开源拥抱、研究DeepSeek开源的基础模型及其蒸馏模型，接入这些模型到自己的云产品或人工智能或智算产品中，这些产品水平肯定是各有特色，用户要根据自己需要与条件选择适合自己的产品；此外这些产品的水平肯定参差不齐的，现在不管大公司还是小公司都说自己的产品接入DeepSeek相关模型，最终还需要我们去实地检验它们是真可用，还是说在跟风追逐噱头。</li><li>越来越多的国产加速卡也开始适配DeepSeek模型，真正的适配成功要真实、高效、可用性好才行，这样才能吸引用户、打开市场、扩大生态，最终突破美国对我们此类硬件设备的封锁管控，形成我们国家自己硬实力与特色。拭目以待吧！</li><li>其他很多概念与原理机制，暂时无法全部理解与解释到位，有待后续继续学习与记录。</li></ul>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DeepSeek 深度求索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker及Docker作为高级运行时的K8S中使用NVIDIA GPU</title>
    <link href="/2025/01/24/Docker%E5%8F%8ADocker%E4%BD%9C%E4%B8%BA%E9%AB%98%E7%BA%A7%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84K8S%E4%B8%AD%E4%BD%BF%E7%94%A8NVIDIA-GPU/"/>
    <url>/2025/01/24/Docker%E5%8F%8ADocker%E4%BD%9C%E4%B8%BA%E9%AB%98%E7%BA%A7%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84K8S%E4%B8%AD%E4%BD%BF%E7%94%A8NVIDIA-GPU/</url>
    
    <content type="html"><![CDATA[<h1 id="一写在前面">一、写在前面</h1><p>本文章总结了在Docker环境使用“NVIDIAGPU”，它的效率与直接在物理服务器启动进程使用物理服务器上的NVIDIAGPU效率差不多，所以是一种高效与常用的NVIDIAGPU云原生场景下的使用方式。能够在Docker环境使用“NVIDIAGPU”后，只需要在Docker环境所在的服务器上再部署 Kubernetes环境、安装nvidia-device-plugin 后即可以在 Kubernetes 环境使用NVIDIAGPU。</p><p>本文中涉及的Docker环境宿主机的操作系统有两种：Ubuntu20-amd64、Centos7.9-amd64。</p><p><strong>其他说明</strong></p><ul><li>本文假设服务器安装有NVIDIA GPU，且操作系统上已经安装NVIDIA驱动</li><li>本文假设服务器的操作系统上已经安装好 Docker 服务</li><li>本文不对其中原理细节（如nvidia-docker2/nvidia-container-toolkit的工作原理）进行阐述，此部分内容过多，将单独整理成文</li></ul><h1 id="二ubuntu202224-amd64">二、Ubuntu20/22/24-amd64</h1><p>此章节在Ubuntu20-amd64中验证成功。Ubuntu22/24-amd64操作系统上，安装配置Docker环境及相关配置步骤应该跟Ubuntu20-amd64中一样（个人猜测，还没验证）</p><h2 id="设置-repository-和-gpg-key">2.1 设置 repository 和 GPG key</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">distribution=$(. /etc/os-release;echo $ID$VERSION_ID)<br>curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -<br>curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list<br></code></pre></td></tr></table></figure><h2 id="安装-nvidia-docker2">2.2 安装 nvidia-docker2</h2><p>参考文档：<ahref="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html">Installingthe NVIDIA Container Toolkit</a>、<ahref="https://github.com/NVIDIA/nvidia-container-toolkit">nvidia-container-toolkit的github仓库</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">nvidia-docker2 软件包包括一个自定义的 daemon.json 文件，用于将 NVIDIA 运行时注册为 Docker 的默认运行时，以及一个向后兼容 NVIDIA -Docker 1.0 的脚本。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果安装了 NVIDIA -docker 1.0 ，则需要在安装 NVIDIA 运行时之前删除它和任何现有的 GPU 容器。</span><br>apt-get update<br>apt-get install -y nvidia-docker2<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/24/i6HBhGcNQzgCm7q.png"alt="image-20250124161020395" /><figcaption aria-hidden="true">image-20250124161020395</figcaption></figure><h2 id="配置-docker-守护进程文件">2.3 配置 Docker 守护进程文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#配置 Docker 守护进程以使用 NVIDIA 容器运行时： 将默认运行时设置为 nvidia。如果该文件不存在则创建它。存在时就酌情修改/etc/docker/daemon.json</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">增加如下内容</span><br>root@controller01:~# cat /etc/docker/daemon.json<br>&#123;<br>  &quot;default-runtime&quot;: &quot;nvidia&quot;,<br>  &quot;runtimes&quot;: &#123;<br>    &quot;nvidia&quot;: &#123;<br>      &quot;path&quot;: &quot;/usr/bin/nvidia-container-runtime&quot;,<br>      &quot;runtimeArgs&quot;: []<br>    &#125;<br>  &#125;<br><span class="hljs-meta prompt_">  #</span><span class="language-bash">其他的自定义配置</span><br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">最终得到的daemon.json文件内容可能如下：</span><br>root@controller01:~# cat /etc/docker/daemon.json<br>&#123;<br>  &quot;default-runtime&quot;: &quot;nvidia&quot;,<br>  &quot;runtimes&quot;: &#123;<br>    &quot;nvidia&quot;: &#123;<br>      &quot;path&quot;: &quot;/usr/bin/nvidia-container-runtime&quot;,<br>      &quot;runtimeArgs&quot;: []<br>    &#125;<br>  &#125;,<br><span class="hljs-meta prompt_">  #</span><span class="language-bash">其他的自定义配置</span><br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>  &quot;dns&quot;: [<br>    &quot;223.5.5.5&quot;,<br>    &quot;223.6.6.6&quot;,<br>    &quot;202.103.0.68&quot;,<br>    &quot;8.8.8.8&quot;<br>  ],<br>  &quot;insecure-registries&quot;: [<br>    &quot;172.20.0.21:4000&quot;, #自己的harbor仓库<br>    &quot;172.24.0.31:443&quot;<br>  ],<br>  &quot;log-opts&quot;: &#123;<br>    &quot;max-file&quot;: &quot;5&quot;,<br>    &quot;max-size&quot;: &quot;50m&quot;<br>  &#125;,<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://registry.aliyuncs.com&quot;,<br>    &quot;https://registry.docker-cn.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.nju.edu.cn&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="重启docker进程">2.4 重启docker进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">重启docker进程</span><br>systemctl daemon-reload <br>systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="至此已可在docker容器中使用nvidia-gpu">2.5至此已可在Docker容器中使用NVIDIA GPU</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用一张卡：--gpus=<span class="hljs-string">&#x27;&quot;device=0&quot;&#x27;</span>；使用第0,1张卡：--gpus=<span class="hljs-string">&#x27;&quot;device=0,1&quot;&#x27;</span>；使用全部GPU：--gpus all</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过序号指定GPU（此时不要加“--privileged”参数，否则仍然可以看到所有GPU）</span><br>docker run -idt \<br>  --name ubuntu2204 \<br>  --gpus=&#x27;&quot;device=0,1&quot;&#x27; \<br>  ubuntu:22.04<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">指定所有GPU</span><br>docker run -idt \<br>  --name ubuntu2204 \<br>  --gpus all \<br>  ubuntu:22.04<br></code></pre></td></tr></table></figure><h2 id="安装nvidia-device-plugin">2.6 安装nvidia-device-plugin</h2><p>此步骤及后续步骤需要先安装好K8S环境，且要求K8S环境使用高级容器运行时是Docker。</p><p>部署使用高级容器运行时是Docker的K8S环境文档，可参见前面发布的博客文章</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载并应用nvidia-device-plugin（最新的文件见https://github.com/NVIDIA/k8s-device-plugin）</span><br>wget https://raw.githubusercontent.com/NVIDIA/k8s-device-plugin/v0.14.1/nvidia-device-plugin.yml<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此yaml文件</span><br>kubectl create -f nvidia-device-plugin.yml <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装成功后，可以在kube-system空间下看到一个运行正常的 ds/nvidia-device-plugin-daemonset （笔者k8s环境只有一个节点，此节点上有NVIDIA GPU）</span><br>root@controller01:~# kubectl -n kube-system get daemonsets.apps <br>NAME                             DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE<br>...<br>nvidia-device-plugin-daemonset   1         1         1       1            1           &lt;none&gt;                   2m20s<br></code></pre></td></tr></table></figure><h2 id="验证k8s中gpu是否可用">2.7 验证k8s中GPU是否可用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1 验证NVIDIA GPU是否已经注册到k8s节点</span><br>kubectl describe node controller01   #假设controller01上面有NVIDIA GPU<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/24/ObVELMWmphUcDly.png"alt="image-20250124163002248" /><figcaption aria-hidden="true">image-20250124163002248</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2 验证k8s中能否正常使用NVIDIA GPU</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建一个pod以试用GPU，此pod定义文件如下</span><br>root@controller01:~# touch RunningGPUJobs.yaml<br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-pod<br>spec:<br>  restartPolicy: Never<br>  containers:<br>    - name: cuda-container<br>      image: nvcr.io/nvidia/k8s/cuda-sample:vectoradd-cuda10.2<br>      resources:<br>        limits:<br>          nvidia.com/gpu: 1 # requesting 1 GPU<br>  tolerations:<br>  - key: nvidia.com/gpu<br>    operator: Exists<br>    effect: NoSchedule<br><br>root@controller01:~# kubectl apply -f RunningGPUJobs.yaml<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令将在默认命名空间下创建一个pod/gpu-pod，它处于Running状态后，其中程序很快就会运行完成从面pod变成Completed状态</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod/gpu-pod的日志</span><br>root@controller01:~# kubectl logs gpu-pod<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/24/XxIRLElK5gHhnBQ.png"alt="image-20250124163229713" /><figcaption aria-hidden="true">image-20250124163229713</figcaption></figure><h1 id="三centos7.9-amd64">三、Centos7.9-amd64</h1><h2 id="配置repository">3.1 配置Repository</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">distribution=$(. /etc/os-release;echo $ID$VERSION_ID)<br><br>curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.repo | tee /etc/yum.repos.d/nvidia-container-runtime.repo<br></code></pre></td></tr></table></figure><h2 id="安装-nvidia-docker2-1">3.2 安装 nvidia-docker2</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">yum makecache -<span class="hljs-attribute">y</span><br>yum install nvidia-docker2 -<span class="hljs-attribute">y</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/24/hzQefDJkBIiX86l.png"alt="image-20250124163714236" /><figcaption aria-hidden="true">image-20250124163714236</figcaption></figure><p>后续步骤跟“Ubuntu20/22/24-amd64”上时一样</p><h1 id="四几个容器镜像同步网站">四、几个容器镜像同步网站</h1><p>docker proxy：<a href="https://dockerproxy.net/">docker proxy</a></p><p>public-image-mirror：<ahref="https://github.com/DaoCloud/public-image-mirror">public-image-mirror</a></p><p>渡渡鸟镜像同步站：<ahref="https://docker.aityp.com/">https://docker.aityp.com/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HAMi使用过程中问题处理</title>
    <link href="/2025/01/23/HAMi%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <url>/2025/01/23/HAMi%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HAMi-WebUI的部署与使用</title>
    <link href="/2025/01/22/HAMi-WebUI%E7%9A%84%E9%83%A8%E7%BD%B2%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/01/22/HAMi-WebUI%E7%9A%84%E9%83%A8%E7%BD%B2%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一介绍">一、介绍</h1><p>HAMi-WebUI项目官网：https://github.com/Project-HAMi/HAMi-WebUI</p><p>根据官网的介绍，它是一个基于开源项目HAMi的另一开源项目，主要用来管理与监视GPU等加速设备资源的。它通过提供一个可视化的web接口扩展了HAMi的功能与可用性，这个web接口可以查看与管理跨节点的GPU资源分配与使用情况。HAMi-WebUI支持针对任务与GPU使用细节的查看，使得团队人员能高效地查看与监控相关资源的使用与消耗情况，更好地进行团队协作开发、更加便捷与充分使用相关资源。它具体提供如下4个功能：</p><ul><li><strong>资源概览:</strong>提供所有资源的综合视图，包括节点和显卡的资源使用情况。快速评估所有节点和显卡的状态。</li><li><strong>节点管理:</strong>浏览详细的节点信息，包括节点状态、资源使用情况。</li><li><strong>显卡管理:</strong>可视化各节点的显卡使用情况，详细展示算力与显存的分配与使用。</li><li><strong>任务管理:</strong>追踪任务及其资源消耗。查看任务创建时间、状态、显卡分配等信息。</li></ul><h1 id="二部署">二、部署</h1><p>部署文档：https://github.com/Project-HAMi/HAMi-WebUI/blob/main/docs/installation/helm/index.md</p><p>部署HAMi-WebUI之前必须先满足以下先决条件：</p><ul><li>已经部署好了k8s环境（对k8s版本要求由HAMi版本决定，具体查看HAMi官方安装文档）</li><li>已经部署好HAMi环境且其版本&gt;=2.4.0</li><li>部署好Prometheus且其版本&gt;2.8.0</li><li>部署好Helm且其版本&gt;3.0（目前官方文档中说明了通过helm安装HAMi-WebUI这一安装途经与工具）</li></ul><h2 id="部署hami-webui-helm-charts">2.1 部署HAMi-WebUI Helm charts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.添加HAMi-WebUI repository</span><br>helm repo add hami-webui https://project-hami.github.io/HAMi-WebUI<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2.使用helm部署HAMi-WebUI（其中externalPrometheus.address参数的值以k8s环境中prometheus实际服务名为准，端口一般都是9090）</span><br>helm install my-hami-webui hami-webui/hami-webui --set externalPrometheus.enabled=true --set externalPrometheus.address=&quot;http://prometheus-k8s.monitoring.svc.cluster.local:9090&quot; -n kube-system<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命令执行后，会有如下输出</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NAME: my-hami-webui</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">LAST DEPLOYED: Wed Jan 22 14:46:54 2025</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NAMESPACE: kube-system</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">STATUS: deployed</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">REVISION: 1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">TEST SUITE: None</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">NOTES:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">1. Get the application URL by running these commands:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-built_in">export</span> POD_NAME=$(kubectl get pods --namespace kube-system -l <span class="hljs-string">&quot;app.kubernetes.io/name=hami-webui,app.kubernetes.io/instance=my-hami-webui&quot;</span> -o <span class="hljs-comment">#jsonpath=&quot;&#123;.items[0].metadata.name&#125;&quot;)</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-built_in">export</span> CONTAINER_PORT=$(kubectl get pod --namespace kube-system <span class="hljs-variable">$POD_NAME</span> -o jsonpath=<span class="hljs-string">&quot;&#123;.spec.containers[0].ports[0].containerPort&#125;&quot;</span>)</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Visit http://127.0.0.1:3000 to use your application&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> kubectl --namespace kube-system port-forward <span class="hljs-variable">$POD_NAME</span> 3000:<span class="hljs-variable">$CONTAINER_PORT</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下是执行<span class="hljs-string">&quot;helm install xxx&quot;</span>前的确认性命令</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看与确认k8s环境中prometheus实际服务名与端口</span><br>root@controller01:~# kubectl -n monitoring get svc | egrep &quot;NAME|prometheus&quot;<br>NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                         AGE<br>prometheus-adapter      ClusterIP   10.68.33.74     &lt;none&gt;        443/TCP                         11d<br>prometheus-k8s          NodePort    10.68.168.213   &lt;none&gt;        9090:31819/TCP,8080:31903/TCP   11d<br>prometheus-operated     ClusterIP   None            &lt;none&gt;        9090/TCP                        11d<br>prometheus-operator     ClusterIP   None            &lt;none&gt;        8443/TCP                        11d<br><span class="hljs-meta prompt_">#</span><span class="language-bash">确认 prometheus-k8s.monitoring.svc.cluster.local 服务名是否可用</span><br>root@controller01:~# kubectl run -it --restart=Never --image=swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/infoblox/dnstools:v3 dnstools --rm<br>If you don&#x27;t see a command prompt, try pressing enter.<br><span class="hljs-meta prompt_">dnstools# </span><span class="language-bash"></span><br><span class="language-bash">dnstools# nslookup prometheus-k8s.monitoring.svc.cluster.local</span><br>Server:         169.254.20.10<br>Address:        169.254.20.10#53<br><br>Name:   prometheus-k8s.monitoring.svc.cluster.local<br>Address: 10.68.168.213<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">dnstools# </span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3.执行如下命令确认安装结果</span><br>root@controller01:~# kubectl get pods -n kube-system | grep webui<br>my-hami-webui-c6f4b6c98-mpgd7                2/2     Running   0            17h<br>my-hami-webui-dcgm-exporter-v6gnx            1/1     Running   0            16m<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中使用到了镜像“nvcr.io/nvidia/k8s/dcgm-exporter:3.3.7-3.5.0-ubuntu22.04”很可能下载失败</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">4.查看svc并修改svc类型为NodePort</span><br>root@controller01:~# kubectl -n kube-system get svc<br>NAME                          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                         AGE<br>dashboard-metrics-scraper     ClusterIP   10.68.5.223     &lt;none&gt;        8000/TCP                        12d<br>hami-device-plugin-monitor    NodePort    10.68.183.209   &lt;none&gt;        31992:31992/TCP                 8d<br>hami-scheduler                NodePort    10.68.83.62     &lt;none&gt;        443:31998/TCP,31993:31993/TCP   8d<br>kube-dns                      ClusterIP   10.68.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP          12d<br>kube-dns-upstream             ClusterIP   10.68.48.155    &lt;none&gt;        53/UDP,53/TCP                   12d<br>kubelet                       ClusterIP   None            &lt;none&gt;        10250/TCP,10255/TCP,4194/TCP    12d<br>kubernetes-dashboard          NodePort    10.68.176.76    &lt;none&gt;        443:30119/TCP                   12d<br>metrics-server                ClusterIP   10.68.24.142    &lt;none&gt;        443/TCP                         12d<br>my-hami-webui                 ClusterIP   10.68.74.135    &lt;none&gt;        3000/TCP,8000/TCP               17h<br>my-hami-webui-dcgm-exporter   ClusterIP   10.68.174.215   &lt;none&gt;        9400/TCP                        17h<br>node-local-dns                ClusterIP   None            &lt;none&gt;        9253/TCP                        12d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将svc/my-hami-webui 类型由ClusterIP修改为NodePort</span><br>root@controller01:~# kubectl -n kube-system get svc | grep webui<br>my-hami-webui                 NodePort    10.68.74.135    &lt;none&gt;        3000:31254/TCP,8000:32691/TCP   17h<br>my-hami-webui-dcgm-exporter   ClusterIP   10.68.174.215   &lt;none&gt;        9400/TCP                        17h<br></code></pre></td></tr></table></figure><h2 id="访问hami-webui">2.2 访问HAMi-WebUI</h2><p>http://{k8s集群任意节点IP}:{svc/my-hami-webui的在k8s节点上的映射端口号}，根据上述命令的回显结果，svc/my-hami-webui的在k8s节点上的映射端口号是31254。如果k8s集群中某个控制节点IP是172.20.0.21，则HAMi-WebUI的访问url是如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">http:</span><span class="hljs-comment">//172.20.0.21:31254</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/23/skNFOavBxmIPH4z.png"alt="image-20250123093641069" /><figcaption aria-hidden="true">image-20250123093641069</figcaption></figure><h2 id="卸载hami-webui">2.3 卸载HAMi-WebUI</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# helm -n kube-system uninstall my-hami-webui <br></code></pre></td></tr></table></figure><h2 id="报错与处理">2.4 报错与处理</h2><h3id="podmy-hami-webui-dcgm-exporter提示failed-to-watch-metrics-error-watching-fields-the-third-party-profiling-module-returned-an-unrecoverable-error">2.4.1pod/my-hami-webui-dcgm-exporter提示"Failed to watch metrics: Errorwatching fields: The third-party Profiling module returned anunrecoverable error"</h3><p>具体问题描述在：https://github.com/Project-HAMi/HAMi-WebUI/issues/20</p><figure><img src="https://s2.loli.net/2025/01/22/RFNzHtKjCZTsDyB.png"alt="image-20250122162820887" /><figcaption aria-hidden="true">image-20250122162820887</figcaption></figure><p>处理办法：</p><p>2025年1月22日：不知如何处理，暂时搁置。社区提问与hami微信群提问，暂时（2025年1月22日）都无人回复，不知道是不是快过年了，大家不上班</p><p>2025年1月23日：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改daemonsets/my-hami-webui-dcgm-exporter，将参数“args: -f /etc/dcgm-exporter/dcp-metrics-inclueded.csv”去掉</span><br>root@controller01:~# kubectl -n kube-system edit daemonsets.apps my-hami-webui-dcgm-exporter <br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/23/mN1zj3qf9PdkBVH.png"alt="image-20250123092714778" /><figcaption aria-hidden="true">image-20250123092714778</figcaption></figure><figure><img src="https://s2.loli.net/2025/01/23/LAH1txd7pIyZ3Ql.png"alt="image-20250123092747161" /><figcaption aria-hidden="true">image-20250123092747161</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">然后可以看到pod/my-hami-webui-dcgm-exporter-v6gnx 正常运行</span><br>root@controller01:~# kubectl -n kube-system get pods<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/23/2rVwPOf54Kj8XMT.png"alt="image-20250123092608635" /><figcaption aria-hidden="true">image-20250123092608635</figcaption></figure><h1 id="三使用">三、使用</h1><h2 id="创建任务">创建任务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# cat gpu-test4.yaml                 <br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-test4<br>spec:<br>  restartPolicy: OnFailure<br><span class="hljs-meta prompt_">  # </span><span class="language-bash"> nodeName: controller01</span><br>  containers:<br>    - name: gpu-test4-01<br>      image: xxx/ubuntu2004:pytorch2.2.2-classification-example<br>      command:<br>        - python3<br>        - /opt/classification/train.py<br>      resources:<br>        limits:<br>          nvidia.com/vgpu: 2 # requesting 1 vGPUs<br>          nvidia.com/gpumem: 3000 # Each vGPU contains 3000m device memory （Optional,Integer）<br>          nvidia.com/gpucores: 10 # Each vGPU uses 10% of the entire GPU （Optional,Integer)<br><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# cat gpu-test6.yaml   <br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-test6<br>spec:<br>  restartPolicy: OnFailure<br><span class="hljs-meta prompt_">  # </span><span class="language-bash"> nodeName: controller01</span><br>  containers:<br>    - name: gpu-test6-01<br>      image: 175.6.40.93:8196/k8s-kubekey/ubuntu2004:pytorch2.2.2-classification-example<br>      command:<br>        - python3<br>        - /opt/classification/train.py<br>      resources:<br>        limits:<br>          nvidia.com/vgpu: 1 # requesting 1 vGPUs<br>          nvidia.com/gpumem: 3000 # Each vGPU contains 3000m device memory （Optional,Integer）<br>          #nvidia.com/gpumem-percentage: 10 #Each vGPU containers 10% device memory of that GPU. Can not be used with nvidia.com/gpumem<br>          nvidia.com/gpucores: 10 # Utilization limit of this vGPU is set to 10% of total GPU utilization <br>          #nvidia.com/priority: 0 # We only have two priority class, 0(high) and 1(low), default: 1 <br>          #The utilization of high priority task won&#x27;t be limited to resourceCores unless sharing GPU node with other high priority tasks.<br>          #The utilization of low priority task won&#x27;t be limited to resourceCores if no other tasks sharing its GPU.<br><br><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl apply -f gpu-test4.yaml -f gpu-test6.yaml <br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl get pods<br>NAME        READY   STATUS    RESTARTS   AGE<br>dnstools    1/1     Running   0          23h<br>gpu-test4   1/1     Running   0          2m17s<br>gpu-test6   1/1     Running   0          2m17s<br></code></pre></td></tr></table></figure><h2 id="资源总览">资源总览</h2><figure><img src="https://s2.loli.net/2025/01/23/ADkSXv7jTo6lWcu.png"alt="image-20250123103935595" /><figcaption aria-hidden="true">image-20250123103935595</figcaption></figure><h2 id="任务管理">任务管理</h2><p>查看所有任务的资源使用情况、单个任务的资源使用详情</p><figure><img src="https://s2.loli.net/2025/01/23/MkNHcUIBxJQ6bKY.png"alt="image-20250123103950833" /><figcaption aria-hidden="true">image-20250123103950833</figcaption></figure><figure><img src="https://s2.loli.net/2025/01/23/LmCIHVKDwNxM1OP.png"alt="image-20250123104011189" /><figcaption aria-hidden="true">image-20250123104011189</figcaption></figure><p>更多细节分析，待续</p><h1 id="四开源贡献">四、开源贡献</h1><p>https://github.com/Project-HAMi/HAMi-WebUI/blob/main/README_ZH.md#%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE</p>]]></content>
    
    
    
    <tags>
      
      <tag>HAMi-WebUI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Debian各主流版本的安装源归档</title>
    <link href="/2025/01/21/Debian%E5%90%84%E4%B8%BB%E6%B5%81%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85%E6%BA%90%E5%BD%92%E6%A1%A3/"/>
    <url>/2025/01/21/Debian%E5%90%84%E4%B8%BB%E6%B5%81%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%89%E8%A3%85%E6%BA%90%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="debian10">Debian10</h1><h2 id="amd64">amd64</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="arm64">arm64</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian10:~/ cat /etc/apt/sources.list<br>deb https://mirrors.huaweicloud.com/debian/ buster main contrib non-free<br><span class="hljs-meta prompt_">#</span><span class="language-bash">deb-src https://mirrors.huaweicloud.com/debian/ buster main contrib non-free</span><br>deb https://mirrors.huaweicloud.com/debian/ buster-updates main contrib non-free<br><span class="hljs-meta prompt_">#</span><span class="language-bash">deb-src https://mirrors.huaweicloud.com/debian/ buster-updates main contrib non-free</span><br>deb https://mirrors.huaweicloud.com/debian-security/ buster/updates main contrib non-free<br><span class="hljs-meta prompt_">#</span><span class="language-bash">deb-src https://mirrors.huaweicloud.com/debian-security/ buster/updates main contrib non-free</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">官方：</span><br>cat &gt; /etc/apt/sources.list &lt;&lt;EOF<br>deb http://deb.debian.org/debian buster main contrib non-free<br>deb http://deb.debian.org/debian buster-updates main contrib non-free<br>deb http://security.debian.org/debian-security buster/updates main contrib non-free<br>EOF<br></code></pre></td></tr></table></figure><h1 id="debian11">Debian11</h1><h2 id="amd64-1">amd64</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@debian11:~/ cat /etc/apt/sources.list<br>deb https://mirrors.aliyun.com/debian/ bullseye main non-free contrib<br>deb https://mirrors.aliyun.com/debian-security/ bullseye-security main<br>deb https://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib<br>deb https://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib<br></code></pre></td></tr></table></figure><h1 id="debian12">Debian12</h1><p>/etc/apt/sources.list</p><h2 id="amd64-2">amd64</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">阿里云镜像站</span><br>deb https://mirrors.aliyun.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb-src https://mirrors.aliyun.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb https://mirrors.aliyun.com/debian-security/ bookworm-security main<br>deb-src https://mirrors.aliyun.com/debian-security/ bookworm-security main<br>deb https://mirrors.aliyun.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb-src https://mirrors.aliyun.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb https://mirrors.aliyun.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br>deb-src https://mirrors.aliyun.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">腾讯云镜像站</span><br>deb https://mirrors.tencent.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb-src https://mirrors.tencent.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb https://mirrors.tencent.com/debian-security/ bookworm-security main<br>deb-src https://mirrors.tencent.com/debian-security/ bookworm-security main<br>deb https://mirrors.tencent.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb-src https://mirrors.tencent.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb https://mirrors.tencent.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br>deb-src https://mirrors.tencent.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">网易镜像站</span><br>deb https://mirrors.163.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb-src https://mirrors.163.com/debian/ bookworm main non-free non-free-firmware contrib<br>deb https://mirrors.163.com/debian-security/ bookworm-security main<br>deb-src https://mirrors.163.com/debian-security/ bookworm-security main<br>deb https://mirrors.163.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb-src https://mirrors.163.com/debian/ bookworm-updates main non-free non-free-firmware contrib<br>deb https://mirrors.163.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br>deb-src https://mirrors.163.com/debian/ bookworm-backports main non-free non-free-firmware contrib<br></code></pre></td></tr></table></figure><h2 id="arm64-1">arm64</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">官方组件安装源</span><br>deb http://deb.debian.org/debian bookworm main<br>deb http://deb.debian.org/debian bookworm-updates main<br>deb http://deb.debian.org/debian-security bookworm-security main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Debian 国内安装源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HAMi使用相关faq</title>
    <link href="/2025/01/21/HAMi%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3faq/"/>
    <url>/2025/01/21/HAMi%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3faq/</url>
    
    <content type="html"><![CDATA[<h1 id="hami-能否感知其他进程对物理gpu的使用">001 HAMi能否感知其他进程对物理GPU的使用？</h1><p>提问具体描述：如果一个物理NVIDIAGPU卡，显存24G。已经在物理服务器上创建了一个进程使用此GPU卡，占用显存12G（它此时空闲显存12G）。此时我能否创建4个显存大小是4G的vGPU出来（创建出来后就会一直处于使用中）？</p><p>回答：HAMi（我使用的是2.4.1）无法感知其他进程对物理GPU的使用。比如上述问题中，一个物理NVIDIAGPU卡，显存24G。已经在物理服务器上创建了一个进程使用此GPU卡，占用显存12G（它此时空闲显存12G），此时还能使用HAMi创建出4个或更多个数的显存大小是4G的vGPU，但仅限于能创建出来，如果后续把这4个vGPU的显存全部跑满，则会发生OOM显存溢出报错</p>]]></content>
    
    
    
    <tags>
      
      <tag>HAMi faq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>容器镜像的获取与导入</title>
    <link href="/2025/01/17/%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F%E7%9A%84%E8%8E%B7%E5%8F%96%E4%B8%8E%E5%AF%BC%E5%85%A5/"/>
    <url>/2025/01/17/%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F%E7%9A%84%E8%8E%B7%E5%8F%96%E4%B8%8E%E5%AF%BC%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="容器镜像概述">1 容器镜像概述</h1><p>​容器镜像（Image）所承载的是封装了应用程序及其所有软件依赖的二进制数据。容器镜像是可执行的软件包，可以单独运行；该软件包对所处的运行时环境具有良定（WellDefined）的假定。</p><p>​容器镜像与容器的关系，类似于可执行文件与进程的关系。也就是说，可以将容器理解为容器镜像的动态形式，容器镜像则容器的静态形式。一般地，实现某特定业务功能的容器镜像都是在某一个基础镜像的基础上构建的。</p><figure><img src="https://s2.loli.net/2025/01/17/4rxylmhikKt9AIa.png"alt="image-20250117211509892" /><figcaption aria-hidden="true">image-20250117211509892</figcaption></figure><p>​<code>Docker</code>容器镜像是符合<code>OCI</code>规范的，而<code>Containerd</code>支持所有符合<code>OCI</code>规范的容器镜像。但<code>Containerd</code>本身附带的<code>ctr</code>工具并不提供创建容器镜像的能力，但<code>Containerd</code>的子项目<code>nerdctl</code>，它兼容 <code>docker cli</code>，可以像<code>docker</code>命令一样来管理本地的镜像和容器。笔者目前使用的容器场景与云原生环境下，暂时还是以<code>Docker</code>命令管理镜像与容器居多，但正在往使用<code>Containerd</code>及其子项目<code>nerdctl</code>转移中。</p><p>​容器镜像实际上是由一层一层的系统文件组成，这种层级的文件系统被称为UnionFS(Union file system统一文件系统)，镜像可以基于Dockerfile构建，Dockerfile是一个描述文件，里面包含了若干条密令，每条命令都会对基础文件系统创建新的层次结构。<code>docker build与nerdctl</code>及<code>buildctl</code>命令都可以使用Dockerfile文件来构建容器镜像。</p><h1 id="容器镜像的获取与生成方法">2 容器镜像的获取与生成方法</h1><p>• <strong>方法一：在DockerHub直接下载</strong></p><p>DockerHub是docker容器镜像的官网上传与下载网站（当然全球还有很多公司如阿里云提供了公开的容器镜像可供下载与使用），下载下来的容器镜像可以直接用来创建容器，也可以作为自定义容器镜像的基础镜像。</p><p>• <strong>方法二：把操作系统中文件系统打包为容器镜像</strong></p><p>利用Docker容器引擎的功能，可以将物理机或虚拟机上正在运行的操作系统的全部或部分内容打包成一个容器镜像。</p><p>• <strong>方法三：把正在运行的容器打包为容器镜像</strong></p><p>类似地，利用Docker容器引擎的功能可以将一个容器保存为一个容器镜像。这也可以更形象具体地将容器镜像理解为容器的静止状态。</p><p>•<strong>方法四：通过Dockerfile实现容器镜像的自定义与构建</strong></p><p>这是开发与生产环境中经常用到一种构建容器的方式。</p><p>容器镜像获取后，可以保存到本地的registry或自己搭建的harbor镜像仓库中，以便后续使用。</p><h2 id="方法一在dockerhub直接下载">2.1 方法一：在DockerHub直接下载</h2><p>​ 访问DockerHub官网： https://hub.docker.com/ 。</p><figure><img src="https://s2.loli.net/2025/01/17/M3BUG9NsPkfzhbD.png"alt="image-20250117213321848" /><figcaption aria-hidden="true">image-20250117213321848</figcaption></figure><p>（1）可以看到DockerHub可以注册登录，登录后可以上传镜像到用户空间内。这些上传的镜像可以设置为public，这样其他人都可以使用它。与此相应地，镜像设置为private时，其他人则是不可见的。</p><p>（2）可以看到DockerHub上的容器镜像支持多种不同构架，同一个镜像不同的构架在拉取时，使用不同的Digest</p><p>（3）同时，DockerHub已经检测并告诉用户，当前镜像有多少个不同级别的漏洞或安全隐患，并可以查看这些漏洞的详情。对容器镜像安全性有较高要求时要注意</p><p>（4）下载镜像。</p><figure><img src="https://s2.loli.net/2025/01/17/ZA8oQLOmq9KlyrP.png"alt="image-20250117213552141" /><figcaption aria-hidden="true">image-20250117213552141</figcaption></figure><p>比如我们要下载<code>nginx:stable-perl</code>镜像在arm64构架平台上对应的镜像文件时，有如下两种方法：</p><ul><li>已有Docker服务运行在一个arm64构架平台上</li></ul><p>此时可以直接<code>docker pull nginx:stable-perl</code>拉取此镜像，docker服务会拉取一个跟自己构架一样的<code>nginx:stable-perl</code>镜像</p><ul><li>已有Docker服务运行在一个非arm64构架平台上，比如常见的x86_64构架的windows电脑或一个amd64构架的Linux服务器上</li></ul><p>此时并不能直接使用<code>docker pull nginx:stable-perl</code>，要是要像上图中展示的一样，单击此构架镜像对应的Digest即<code>61eaeb2c1479</code>，跳转到如下图界面。然后复制下图中Indexdigest对应的值，如下是<code>sha256:746bca4640fce6b18814e47162c26da63f185a2b4a1bbc5fd137cbf9bc8293e8</code>，然后组合成命令如下命令拉取nginx:stable-perl镜像在arm64构架平台上对应的镜像文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull nginx@sha256:746bca4640fce6b18814e47162c26da63f185a2b4a1bbc5fd137cbf9bc8293e8<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/mcLwOzxoC41ap29.png"alt="image-20250117213752425" /><figcaption aria-hidden="true">image-20250117213752425</figcaption></figure><p>​可以看到DockerHub可以注册登录，登录后可以上传镜像到用户空间内。这些上传的镜像可以设置为public，这样其他人都可以使用它。</p><p>​可以看到DockerHub上的容器镜像支持多种不同构架，同一个镜像不同的构架在拉取时，使用不同的Digest。</p><p>​同时，还需要DockerHub已经检测并告诉用户，当前有多少个不同级别的漏洞或安全隐患，并可以查看这些漏洞的详情。对容器镜像安全性有较高要求时要注意。</p><h2 id="方法二把操作系统中文件系统打包为容器镜像">2.2方法二：把操作系统中文件系统打包为容器镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">打包镜像（其中--exclude参数指定不打包的目录，可以指定多次、取并集）</span><br>tar --numeric-owner --exclude=/proc --exclude=/sys -cvf centos7u6.tar /<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">导入镜像到本地</span><br>docker import centos7u6.tar centos7u6:v1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用此镜像创建并进入容器</span><br>docker run -it centos7u6:v1 bash<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/Xzwmuh4k7QO9SFv.png"alt="image-20250117220842655" /><figcaption aria-hidden="true">image-20250117220842655</figcaption></figure><h2 id="方法三把容器打包为容器镜像">2.3方法三：把容器打包为容器镜像</h2><p>​现有一个容器<code>test01</code>，创建一个新文件<code>/opt/test01.txt</code>，并在其中写入字符串内容<code>container test01</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有容器</span><br>docker ps -a<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">进入容器，打开一个交互式命令虚拟终端</span><br>docker exec -it test01 bash<br>root@271b105e357f:/# echo &quot;container test01&quot; &gt; /opt/test01.txt<br>root@271b105e357f:/# cat /opt/test01.txt<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用组合键“ctrl+p+q”退出容器</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/XmOSNLVnKkBvxWU.png"alt="image-20250117214428285" /><figcaption aria-hidden="true">image-20250117214428285</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将容器保存为镜像（容器处于Up或Exited状态都无所谓）</span><br>root@ubuntu20:~# docker commit -a &quot;a good man&quot; -m &quot;测试&quot; test01 ubuntu:test01<br>root@ubuntu20:~# docker images | grep ubuntu<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/Kuv58rnx1dVJPpo.png"alt="image-20250117214858751" /><figcaption aria-hidden="true">image-20250117214858751</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用上述打包后的镜像创建一个新的容器test001，可以看到容器中的/opt/test01.txt 文件内容跟前面写入的一样</span><br>root@ubuntu20:~# docker run -it --name test001 ubuntu:test01 bash<br>root@66a8e5be6b13:/# ls -al /opt/<br>root@66a8e5be6b13:/# cat /opt/test01.txt<br>root@ubuntu20:~# docker ps -a | egrep &quot;NAME|test001&quot;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/5NfjhmXIdg4DTqE.png"alt="image-20250117214936732" /><figcaption aria-hidden="true">image-20250117214936732</figcaption></figure><h2 id="方法四通过dockerfile实现容器镜像的自定义与构建">2.4方法四：通过Dockerfile实现容器镜像的自定义与构建</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#创建一个Dockerfile文件，就取名Dockerfile</span><br><span class="hljs-string">root@ubuntu20:/opt/manual-for-ppt#</span> <span class="hljs-string">cat</span> <span class="hljs-string">Dockerfile</span><br><span class="hljs-string">FROM</span> <span class="hljs-string">centos:centos7</span><br><span class="hljs-string">MAINTAINER</span> <span class="hljs-string">&quot;a good man&quot;</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">yum</span> <span class="hljs-string">makecache</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">yum</span> <span class="hljs-string">-y</span> <span class="hljs-string">install</span> <span class="hljs-string">wget</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">wget</span> <span class="hljs-string">-O</span> <span class="hljs-string">/etc/yum.repos.d/epel.repo</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">http://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">yum</span> <span class="hljs-string">-y</span> <span class="hljs-string">install</span> <span class="hljs-string">nginx</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;nginx index page!&quot;</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">\</span><br>    <span class="hljs-string">/usr/share/nginx/html/index.html</span><br><span class="hljs-string">RUN</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;daemon off;&quot;</span><span class="hljs-string">&gt;&gt;</span> <span class="hljs-string">/etc/nginx/nginx.conf</span><br><span class="hljs-string">EXPOSE</span> <span class="hljs-number">80</span><br><span class="hljs-string">CMD</span> <span class="hljs-string">/usr/sbin/nginx</span><br></code></pre></td></tr></table></figure><p>​ 相关指令的意义如下。</p><figure><img src="https://s2.loli.net/2025/01/17/kcve1uAWLjZG8Ka.png"alt="image-20250117215021189" /><figcaption aria-hidden="true">image-20250117215021189</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">上述Dockerfile文件中有一个指令“MAINTAINER”在上表中未列出，它指定的是镜像的维护人员信息一般也就是镜像作者<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果本地没有镜像“centos:centos7”，建议先执行如下命令将此镜像拉取下来，减少dcoker build阶段的时间</span><br>docker pull centos:centos7<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">接下来就可以构建镜像了，编译镜像的命令如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中build是docker的子命令</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">./ 表示编译镜像时宿主的工作目录</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-f参数指定要使用的Dockerfile文件。如果有另外一个nginx.Dockerfile则使用这个名字</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">-t 参数指定编译完成生成的镜像的名称与标签</span><br>root@ubuntu20:/opt/manual-for-ppt# docker build ./ -f Dockerfile -t nginx:v001<br><span class="hljs-meta prompt_">#</span><span class="language-bash">从下图中可以看到，本地docker环境中有了一个镜像 nginx:v001</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/SaByPpFNumClfqI.png"alt="image-20250117215154332" /><figcaption aria-hidden="true">image-20250117215154332</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看镜像信息</span><br>root@ubuntu20:/opt/manual-for-ppt# docker inspect nginx:v001 | grep -i &quot;good&quot;<br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到Dockerfile文件中MAINTAINER指令指定的值就是镜像的Authtor属性值。</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/zwXn9j7ZQfEMmJB.png"alt="image-20250117215246362" /><figcaption aria-hidden="true">image-20250117215246362</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">利用上述生成的镜像创建一个启动nginx进程的容器</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下命令指定容器名称为nginx01，-d表示以后台模式运行，-p做宿主机与容器端口映射</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">因为制作容器nginx:v001时，已经指定” CMD /usr/sbin/nginx”表示容器启动后就会自动执行/usr/sbin/nginx，不需要再在docker run命令后面再添加指令参数，添加指令参数如/bin/bash将会替换“/usr/sbin/nginx”，则此容器将不会自动启动nginx相关进程</span><br>docker run -d --name nginx01 -p 8080:80 nginx:v001<br>docker ps -a | egrep &quot;NAME|nginx01&quot;<br>curl 127.0.0.1:8080<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/8jF6xlUL9HOaZMp.png"alt="image-20250117215313476" /><figcaption aria-hidden="true">image-20250117215313476</figcaption></figure><p>​此时，比如当前宿主机的ip是10.10.0.51，自己笔记本电脑上或其他有桌面的操作系统通过浏览器访问http://10.10.0.51:8080 ，也可以访问上述nginx主页。</p><p>​ 关于Dockerfile更详细的用法，可以参考 <ahref="https://docs.docker.com/reference/dockerfile/">官网文档Dockerfilereference</a> 或 <ahref="https://www.runoob.com/docker/docker-dockerfile.html">菜鸟教程Dockerfile文档</a></p><h1 id="docker-save与docker-load-命令">3 docker save与docker load命令</h1><p>​<code>docker save</code>命令的功能是将一个容器镜像保存为一个本地文件（相当于被持久化保存了），<code>docker load</code>命令将<code>docker save</code>生成的本地镜像文件导入到本地docker环境中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将容器镜像保存为本地文件nginx-v001.tar</span><br>root@ubuntu20:~# docker save -o nginx-v001.tar nginx:v001<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/AcsGyjJk2mewr5z.png"alt="image-20250117215708133" /><figcaption aria-hidden="true">image-20250117215708133</figcaption></figure><figure><img src="https://s2.loli.net/2025/01/17/1Nj6Z45L7WqmMpy.png"alt="image-20250117215716903" /><figcaption aria-hidden="true">image-20250117215716903</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">可以将文件传输到其他安装了docker容器引擎的服务器上，再使用docker load命令导入即是一个可用的容器镜像</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">比如传输此文件到另外一个服务器controller01上，然后导入并使用</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# docker load -i nginx-v001.tar<br>root@controller01:~# docker run -d --name nginx-test -p 8085:80 nginx:v001<br>root@controller01:~# curl 127.0.0.1:8085<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/MKIiy79hOutlXW3.png"alt="image-20250117215853043" /><figcaption aria-hidden="true">image-20250117215853043</figcaption></figure><h1 id="docker-export与docker-import命令">4 docker export与dockerimport命令</h1><p>​<code>docker export</code>命令，类似于<code>docker save</code>，但前者是将一个容器保存成一个文件，后者是将一个容器镜像保存成一个文件。</p><p>​<code>docker import</code>命令，有点类似于<code>docker load</code>，将<code>docker export</code>保存的文件导入成<code>docker</code>镜像。</p><p><strong>注意</strong>：<code>docker import</code>与<code>docker export</code>是一对的，它们成对使用。<code>docker import</code>不能跟<code>docker save</code>混用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将centos01容器打包保存成镜像文件centos-v0.2.tar到本地</span><br>root@kafka:/opt# docker export -o centos-v0.2.tar centos01<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/fGsZeQrVFNlgq3R.png"alt="image-20250117220238284" /><figcaption aria-hidden="true">image-20250117220238284</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">docker import时，强烈建议设定好镜像名与标签（否则就像下图最底行一样，镜像名与标签都没有，只能通过镜像<span class="hljs-built_in">id</span>来引用）</span><br>root@kafka:/opt/msb_study# docker import centos-v0.2.tar centos:v0.2<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/17/I1Y9V27uoq5m4Cz.png"alt="image-20250117220654638" /><figcaption aria-hidden="true">image-20250117220654638</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>容器镜像</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HAMi官方监控文档相关内容分析</title>
    <link href="/2025/01/14/HAMi%E5%AE%98%E6%96%B9%E7%9B%91%E6%8E%A7%E6%96%87%E6%A1%A3%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%E5%88%86%E6%9E%90/"/>
    <url>/2025/01/14/HAMi%E5%AE%98%E6%96%B9%E7%9B%91%E6%8E%A7%E6%96%87%E6%A1%A3%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="背景及环境">背景及环境</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">操作系统：Ubuntu 20.04.3 LTS x86_64</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">HAMi版本：2.4.1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Kubernetes版本：1.23.17</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl get nodes<br>NAME          STATUS     ROLES    AGE    VERSION<br>172.20.0.21   Ready      master   7d3h   v1.23.17<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">相关任务负载</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# cat gpu-test5.yaml <br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-test5-01<br>spec:<br>  restartPolicy: OnFailure<br><span class="hljs-meta prompt_">  # </span><span class="language-bash"> nodeName: controller01</span><br>  containers:<br>    - name: gpu-test111<br>      image: 175.6.40.93:8196/k8s-kubekey/ubuntu2004:pytorch2.2.2-classification-example<br>      command:<br>        - python3<br>        - /opt/classification/train.py<br>      resources:<br>        limits:<br>          nvidia.com/vgpu: 2 # requesting 2 vGPUs<br>          nvidia.com/gpumem: 3000 # Each vGPU contains 3000m device memory （Optional,Integer）<br>          #nvidia.com/gpumem-percentage: 10 #Each vGPU containers 10% device memory of that GPU. Can not be used with nvidia.com/gpumem<br>          <br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl apply -f gpu-test5.yaml<br></code></pre></td></tr></table></figure><h1id="一关于nskube-system下svc的分析">一、关于ns/kube-system下svc的分析</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# kubectl -n kube-system get svc<br>NAME                         TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                         AGE<br>dashboard-metrics-scraper    ClusterIP   10.68.5.223     &lt;none&gt;        8000/TCP                        4d2h<br>hami-device-plugin-monitor   NodePort    10.68.183.209   &lt;none&gt;        31992:31992/TCP                 6h35m<br>hami-scheduler               NodePort    10.68.83.62     &lt;none&gt;        443:31998/TCP,31993:31993/TCP   6h35m<br>kube-dns                     ClusterIP   10.68.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP          4d2h<br>kube-dns-upstream            ClusterIP   10.68.48.155    &lt;none&gt;        53/UDP,53/TCP                   4d2h<br>kubelet                      ClusterIP   None            &lt;none&gt;        10250/TCP,10255/TCP,4194/TCP    4d2h<br>kubernetes-dashboard         NodePort    10.68.176.76    &lt;none&gt;        443:30119/TCP                   4d2h<br>metrics-server               ClusterIP   10.68.24.142    &lt;none&gt;        443/TCP                         4d2h<br>node-local-dns               ClusterIP   None            &lt;none&gt;        9253/TCP                        4d2h<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">准备“使用vGPU的yaml例”</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# cat gpu-test5.yaml <br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-test5-01<br>spec:<br>  restartPolicy: OnFailure<br><span class="hljs-meta prompt_">  # </span><span class="language-bash"> nodeName: controller01</span><br>  containers:<br>    - name: gpu-test111<br>      image: 175.6.40.93:8196/k8s-kubekey/ubuntu2004:pytorch2.2.2-classification-example<br>      command:<br>        - python3<br>        - /opt/classification/train.py<br>      resources:<br>        limits:<br>          nvidia.com/vgpu: 2 # requesting 1 vGPUs<br>          nvidia.com/gpumem: 3000 # Each vGPU contains 3000m device memory （Optional,Integer）<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl apply -f gpu-test5.yaml<br>pod/gpu-test5-01 created<br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl get pods<br>NAME           READY   STATUS    RESTARTS   AGE<br>gpu-test5-01   1/1     Running   0          4s<br></code></pre></td></tr></table></figure><h2 id="svchami-device-plugin-monitor">1.1svc/hami-device-plugin-monitor</h2><h3 id="svc本身">1.1.1 svc本身</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n kube-system get svc hami-device-plugin-monitor -o yaml<br>apiVersion: v1<br>kind: Service<br>metadata:<br>  annotations:<br>    meta.helm.sh/release-name: hami<br>    meta.helm.sh/release-namespace: kube-system<br>  creationTimestamp: &quot;2025-01-14T02:34:24Z&quot;<br>  labels:<br>    app.kubernetes.io/component: hami-device-plugin<br>    app.kubernetes.io/instance: hami<br>    app.kubernetes.io/managed-by: Helm<br>    app.kubernetes.io/name: hami<br>    app.kubernetes.io/version: 2.4.1<br>    helm.sh/chart: hami-2.4.1<br>  name: hami-device-plugin-monitor<br>  namespace: kube-system<br>  resourceVersion: &quot;737654&quot;<br>  uid: 167789e8-f5a4-483a-ab5c-a1d154c8337c<br>spec:<br>  clusterIP: 10.68.183.209<br>  clusterIPs:<br>  - 10.68.183.209<br>  externalTrafficPolicy: Local<br>  internalTrafficPolicy: Cluster<br>  ipFamilies:<br>  - IPv4<br>  ipFamilyPolicy: SingleStack<br>  ports:<br>  - name: monitorport<br>    nodePort: 31992<br>    port: 31992<br>    protocol: TCP<br>    targetPort: 9394<br>  selector:<br>    app.kubernetes.io/component: hami-device-plugin<br>  sessionAffinity: None<br>  type: NodePort<br>status:<br>  loadBalancer: &#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="监控指标">1.1.2 监控指标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##hami-device-plugin-monitor 的监控指标，浏览器访问：http://172.20.0.21:31992/metrics</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##返回结果如下</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP Device_last_kernel_of_container Container device last kernel description</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE Device_last_kernel_of_container gauge</span><br>Device_last_kernel_of_container&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 0<br>Device_last_kernel_of_container&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;0&quot;,zone=&quot;vGPU&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP Device_memory_desc_of_container Container device meory description</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE Device_memory_desc_of_container counter</span><br>Device_memory_desc_of_container&#123;context=&quot;0&quot;,ctrname=&quot;gpu-test111&quot;,data=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,module=&quot;0&quot;,offset=&quot;0&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 0<br>Device_memory_desc_of_container&#123;context=&quot;272629760&quot;,ctrname=&quot;gpu-test111&quot;,data=&quot;453545472&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,module=&quot;0&quot;,offset=&quot;0&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;0&quot;,zone=&quot;vGPU&quot;&#125; 7.26175232e+08<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP Device_utilization_desc_of_container Container device utilization description</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE Device_utilization_desc_of_container gauge</span><br>Device_utilization_desc_of_container&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 0<br>Device_utilization_desc_of_container&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;0&quot;,zone=&quot;vGPU&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP HostCoreUtilization GPU core utilization</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE HostCoreUtilization gauge</span><br>HostCoreUtilization&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,zone=&quot;vGPU&quot;&#125; 17<br>HostCoreUtilization&#123;deviceidx=&quot;1&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,zone=&quot;vGPU&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP HostGPUMemoryUsage GPU device memory usage</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE HostGPUMemoryUsage gauge</span><br>HostGPUMemoryUsage&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,zone=&quot;vGPU&quot;&#125; 1.49651456e+09<br>HostGPUMemoryUsage&#123;deviceidx=&quot;1&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,zone=&quot;vGPU&quot;&#125; 7.00317696e+08<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP vGPU_device_memory_limit_in_bytes vGPU device <span class="hljs-built_in">limit</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE vGPU_device_memory_limit_in_bytes gauge</span><br>vGPU_device_memory_limit_in_bytes&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br>vGPU_device_memory_limit_in_bytes&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;0&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP vGPU_device_memory_usage_in_bytes vGPU device usage</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE vGPU_device_memory_usage_in_bytes gauge</span><br>vGPU_device_memory_usage_in_bytes&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 0<br>vGPU_device_memory_usage_in_bytes&#123;ctrname=&quot;gpu-test111&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,vdeviceid=&quot;0&quot;,zone=&quot;vGPU&quot;&#125; 7.26175232e+08<br></code></pre></td></tr></table></figure><h3 id="对应的smon">1.1.3 对应的smon</h3><p>此servicemonitor由自己进行封装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">传统方式部署prometheus时，是基于prometheus.yaml来配置监控目标的，如果需要配置的内容多就会产生可读性问题</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> 所以后面有了服务发现即增加file_sd_config等，来以减少prometheus.yaml中的配置内容</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在k8s中，servicemonitor就是承担了“服务发现”的类似的作用。就是说如果没有smon，可以通过hami自身部署在ns/kube-system中的svc/hami-device-plugin-monitor查看到相应的监控数据，但不会被保存到prometheus时序数据库中（可以通过下面两张截图得到验证，可以查看截图中在相关时间范围内检索到的数据：16:35左右将smon/hami-device-plugin-svc-monitor删除，然后在16:55左右又重新创建出来。）</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# ll hami-device-plugin-svc-monitor.yaml <br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# cat hami-device-plugin-svc-monitor.yaml<br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  name: hami-device-plugin-svc-monitor<br>  namespace: kube-system<br>spec:<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-device-plugin<br>  namespaceSelector:<br>    matchNames:<br>      - &quot;kube-system&quot;<br>  endpoints:<br>  - path: /metrics<br>    port: monitorport<br>    interval: &quot;15s&quot;<br>    honorLabels: false<br>    relabelings:<br>    - sourceLabels: [__meta_kubernetes_endpoints_name]<br>      regex: hami-.*<br>      replacement: $1<br>      action: keep<br>    - sourceLabels: [__meta_kubernetes_pod_node_name]<br>      regex: (.*)<br>      targetLabel: node_name<br>      replacement: $&#123;1&#125;<br>      action: replace<br>    - sourceLabels: [__meta_kubernetes_pod_host_ip]<br>      regex: (.*)<br>      targetLabel: ip<br>      replacement: $1<br>      action: replace<br><br><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# kubectl -n kube-system get smon hami-device-plugin-svc-monitor -o yaml<br><br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  annotations:<br>    kubectl.kubernetes.io/last-applied-configuration: |<br>      &#123;&quot;apiVersion&quot;:&quot;monitoring.coreos.com/v1&quot;,&quot;kind&quot;:&quot;ServiceMonitor&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;name&quot;:&quot;hami-device-plugin-svc-monitor&quot;,&quot;namespace&quot;:&quot;kube-system&quot;&#125;,&quot;spec&quot;:&#123;&quot;endpoints&quot;:[&#123;&quot;honorLabels&quot;:false,&quot;interval&quot;:&quot;15s&quot;,&quot;path&quot;:&quot;/metrics&quot;,&quot;port&quot;:&quot;monitorport&quot;,&quot;relabelings&quot;:[&#123;&quot;action&quot;:&quot;keep&quot;,&quot;regex&quot;:&quot;hami-.*&quot;,&quot;replacement&quot;:&quot;$1&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_endpoints_name&quot;]&#125;,&#123;&quot;action&quot;:&quot;replace&quot;,&quot;regex&quot;:&quot;(.*)&quot;,&quot;replacement&quot;:&quot;$&#123;1&#125;&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_pod_node_name&quot;],&quot;targetLabel&quot;:&quot;node_name&quot;&#125;,&#123;&quot;action&quot;:&quot;replace&quot;,&quot;regex&quot;:&quot;(.*)&quot;,&quot;replacement&quot;:&quot;$1&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_pod_host_ip&quot;],&quot;targetLabel&quot;:&quot;ip&quot;&#125;]&#125;],&quot;namespaceSelector&quot;:&#123;&quot;matchNames&quot;:[&quot;kube-system&quot;]&#125;,&quot;selector&quot;:&#123;&quot;matchLabels&quot;:&#123;&quot;app.kubernetes.io/component&quot;:&quot;hami-device-plugin&quot;&#125;&#125;&#125;&#125;<br>  creationTimestamp: &quot;2025-01-14T06:40:10Z&quot;<br>  generation: 1<br>  name: hami-device-plugin-svc-monitor<br>  namespace: kube-system<br>  resourceVersion: &quot;764614&quot;<br>  uid: 8eab0c04-7047-4811-af8a-425df908b797<br>spec:<br>  endpoints:<br>  - honorLabels: false<br>    interval: 15s<br>    path: /metrics<br>    port: monitorport<br>    relabelings:<br>    - action: keep<br>      regex: hami-.*<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_endpoints_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $&#123;1&#125;<br>      sourceLabels:<br>      - __meta_kubernetes_pod_node_name<br>      targetLabel: node_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_pod_host_ip<br>      targetLabel: ip<br>  namespaceSelector:<br>    matchNames:<br>    - kube-system<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-device-plugin<br></code></pre></td></tr></table></figure><figure><imgsrc="C:\Users\jiangsanyin\AppData\Roaming\Typora\typora-user-images\image-20250116165340426.png"alt="image-20250116165340426" /><figcaption aria-hidden="true">image-20250116165340426</figcaption></figure><figure><imgsrc="C:\Users\jiangsanyin\AppData\Roaming\Typora\typora-user-images\image-20250116165713613.png"alt="image-20250116165713613" /><figcaption aria-hidden="true">image-20250116165713613</figcaption></figure><h2 id="svchami-scheduler">1.2 svc/hami-scheduler</h2><h3 id="svc本身-1">1.2.1 svc本身</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n kube-system get svc hami-scheduler -o yaml<br>apiVersion: v1<br>kind: Service<br>metadata:<br>  annotations:<br>    meta.helm.sh/release-name: hami<br>    meta.helm.sh/release-namespace: kube-system<br>  creationTimestamp: &quot;2025-01-14T02:34:24Z&quot;<br>  labels:<br>    app.kubernetes.io/component: hami-scheduler<br>    app.kubernetes.io/instance: hami<br>    app.kubernetes.io/managed-by: Helm<br>    app.kubernetes.io/name: hami<br>    app.kubernetes.io/version: 2.4.1<br>    helm.sh/chart: hami-2.4.1<br>  name: hami-scheduler<br>  namespace: kube-system<br>  resourceVersion: &quot;737655&quot;<br>  uid: 6b1d223f-6d80-4ae8-a930-7878193dc200<br>spec:<br>  clusterIP: 10.68.83.62<br>  clusterIPs:<br>  - 10.68.83.62<br>  externalTrafficPolicy: Cluster<br>  internalTrafficPolicy: Cluster<br>  ipFamilies:<br>  - IPv4<br>  ipFamilyPolicy: SingleStack<br>  ports:<br>  - name: http<br>    nodePort: 31998<br>    port: 443<br>    protocol: TCP<br>    targetPort: 443<br>  - name: monitor<br>    nodePort: 31993<br>    port: 31993<br>    protocol: TCP<br>    targetPort: 9395<br>  selector:<br>    app.kubernetes.io/component: hami-scheduler<br>    app.kubernetes.io/instance: hami<br>    app.kubernetes.io/name: hami<br>  sessionAffinity: None<br>  type: NodePort<br>status:<br>  loadBalancer: &#123;&#125;<br></code></pre></td></tr></table></figure><h3 id="监控指标-1">1.2.2 监控指标</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##hami-scheduler 的监控指标，浏览器访问：http://172.20.0.21:31993/metrics</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##返回结果如下</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP GPUDeviceCoreAllocated Device core allocated <span class="hljs-keyword">for</span> a certain GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE GPUDeviceCoreAllocated gauge</span><br>GPUDeviceCoreAllocated&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 0<br>GPUDeviceCoreAllocated&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP GPUDeviceCoreLimit Device memory core <span class="hljs-built_in">limit</span> <span class="hljs-keyword">for</span> a certain GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE GPUDeviceCoreLimit gauge</span><br>GPUDeviceCoreLimit&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 100<br>GPUDeviceCoreLimit&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 100<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP GPUDeviceMemoryAllocated Device memory allocated <span class="hljs-keyword">for</span> a certain GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE GPUDeviceMemoryAllocated gauge</span><br>GPUDeviceMemoryAllocated&#123;devicecores=&quot;0&quot;,deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br>GPUDeviceMemoryAllocated&#123;devicecores=&quot;0&quot;,deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP GPUDeviceMemoryLimit Device memory <span class="hljs-built_in">limit</span> <span class="hljs-keyword">for</span> a certain GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE GPUDeviceMemoryLimit gauge</span><br>GPUDeviceMemoryLimit&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 4.8305799168e+10<br>GPUDeviceMemoryLimit&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 4.8305799168e+10<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP GPUDeviceSharedNum Number of containers sharing this GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE GPUDeviceSharedNum gauge</span><br>GPUDeviceSharedNum&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 1<br>GPUDeviceSharedNum&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP nodeGPUMemoryPercentage GPU Memory Allocated Percentage on a certain GPU</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE nodeGPUMemoryPercentage gauge</span><br>nodeGPUMemoryPercentage&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 0.06512112529304506<br>nodeGPUMemoryPercentage&#123;deviceidx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,zone=&quot;vGPU&quot;&#125; 0.06512112529304506<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP nodeGPUOverview GPU overview on a certain node</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE nodeGPUOverview gauge</span><br>nodeGPUOverview&#123;devicecores=&quot;0&quot;,deviceidx=&quot;0&quot;,devicememorylimit=&quot;46068&quot;,devicetype=&quot;NVIDIA-NVIDIA A40&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodeid=&quot;172.20.0.21&quot;,sharedcontainers=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br>nodeGPUOverview&#123;devicecores=&quot;0&quot;,deviceidx=&quot;0&quot;,devicememorylimit=&quot;46068&quot;,devicetype=&quot;NVIDIA-NVIDIA A40&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodeid=&quot;172.20.0.21&quot;,sharedcontainers=&quot;1&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP vGPUCorePercentage vGPU core allocated from a container</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE vGPUCorePercentage gauge</span><br>vGPUCorePercentage&#123;containeridx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 0<br>vGPUCorePercentage&#123;containeridx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP vGPUMemoryPercentage vGPU memory percentage allocated from a container</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE vGPUMemoryPercentage gauge</span><br>vGPUMemoryPercentage&#123;containeridx=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 0.06512112529304506<br>vGPUMemoryPercentage&#123;containeridx=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 0.06512112529304506<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP vGPUPodsDeviceAllocated vGPU Allocated from pods</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE vGPUPodsDeviceAllocated gauge</span><br>vGPUPodsDeviceAllocated&#123;containeridx=&quot;0&quot;,deviceusedcore=&quot;0&quot;,deviceuuid=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br>vGPUPodsDeviceAllocated&#123;containeridx=&quot;0&quot;,deviceusedcore=&quot;0&quot;,deviceuuid=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,nodename=&quot;172.20.0.21&quot;,podname=&quot;gpu-test5-01&quot;,podnamespace=&quot;default&quot;,zone=&quot;vGPU&quot;&#125; 3.145728e+09<br></code></pre></td></tr></table></figure><h3 id="对应的smon-1">1.2.3 对应的smon</h3><p>此servicemonitor由自己进行封装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# ll hami-scheduler-svc-monitor.yaml  <br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# cat hami-scheduler-svc-monitor.yaml <br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  name: hami-scheduler-svc-monitor<br>  namespace: kube-system<br>spec:<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-scheduler<br>  namespaceSelector:<br>    matchNames:<br>      - &quot;kube-system&quot;<br>  endpoints:<br>  - path: /metrics<br>    port: monitor<br>    interval: &quot;15s&quot;<br>    honorLabels: false<br>    relabelings:<br>    - sourceLabels: [__meta_kubernetes_endpoints_name]<br>      regex: hami-.*<br>      replacement: $1<br>      action: keep<br>    - sourceLabels: [__meta_kubernetes_pod_node_name]<br>      regex: (.*)<br>      targetLabel: node_name<br>      replacement: $&#123;1&#125;<br>      action: replace<br>    - sourceLabels: [__meta_kubernetes_pod_host_ip]<br>      regex: (.*)<br>      targetLabel: ip<br>      replacement: $1<br>      action: replace<br><br><br><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# kubectl -n kube-system get smon hami-scheduler-svc-monitor -o yaml<br><br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  annotations:<br>    kubectl.kubernetes.io/last-applied-configuration: |<br>      &#123;&quot;apiVersion&quot;:&quot;monitoring.coreos.com/v1&quot;,&quot;kind&quot;:&quot;ServiceMonitor&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;name&quot;:&quot;hami-scheduler-svc-monitor&quot;,&quot;namespace&quot;:&quot;kube-system&quot;&#125;,&quot;spec&quot;:&#123;&quot;endpoints&quot;:[&#123;&quot;honorLabels&quot;:false,&quot;interval&quot;:&quot;15s&quot;,&quot;path&quot;:&quot;/metrics&quot;,&quot;port&quot;:&quot;monitor&quot;,&quot;relabelings&quot;:[&#123;&quot;action&quot;:&quot;keep&quot;,&quot;regex&quot;:&quot;hami-.*&quot;,&quot;replacement&quot;:&quot;$1&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_endpoints_name&quot;]&#125;,&#123;&quot;action&quot;:&quot;replace&quot;,&quot;regex&quot;:&quot;(.*)&quot;,&quot;replacement&quot;:&quot;$&#123;1&#125;&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_pod_node_name&quot;],&quot;targetLabel&quot;:&quot;node_name&quot;&#125;,&#123;&quot;action&quot;:&quot;replace&quot;,&quot;regex&quot;:&quot;(.*)&quot;,&quot;replacement&quot;:&quot;$1&quot;,&quot;sourceLabels&quot;:[&quot;__meta_kubernetes_pod_host_ip&quot;],&quot;targetLabel&quot;:&quot;ip&quot;&#125;]&#125;],&quot;namespaceSelector&quot;:&#123;&quot;matchNames&quot;:[&quot;kube-system&quot;]&#125;,&quot;selector&quot;:&#123;&quot;matchLabels&quot;:&#123;&quot;app.kubernetes.io/component&quot;:&quot;hami-scheduler&quot;&#125;&#125;&#125;&#125;<br>  creationTimestamp: &quot;2025-01-14T06:42:15Z&quot;<br>  generation: 1<br>  name: hami-scheduler-svc-monitor<br>  namespace: kube-system<br>  resourceVersion: &quot;764901&quot;<br>  uid: ba0dc589-4ebe-4fb8-aa11-978f5288adbd<br>spec:<br>  endpoints:<br>  - honorLabels: false<br>    interval: 15s<br>    path: /metrics<br>    port: monitor<br>    relabelings:<br>    - action: keep<br>      regex: hami-.*<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_endpoints_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $&#123;1&#125;<br>      sourceLabels:<br>      - __meta_kubernetes_pod_node_name<br>      targetLabel: node_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_pod_host_ip<br>      targetLabel: ip<br>  namespaceSelector:<br>    matchNames:<br>    - kube-system<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-scheduler<br></code></pre></td></tr></table></figure><h2 id="发现问题">1.3 发现问题</h2><ul><li><p>进入pod内容器中执行<code>nvidia-smi</code>命令输出正常，即可以看到两个“NVIDIAGPU”，显存是3000M</p></li><li><p>查看pod日志正常</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi/deploy-prometheus# kubectl logs gpu-test5-01 | more<br>[HAMI-core Msg(1:139687502968448:libvgpu.c:836)]: Initializing.....<br>2025-01-15 07:46:41.274 | INFO     | __main__:&lt;module&gt;:97 - Namespace(batch_size=32, epochs=10, lr=0.01, save_dir=&#x27;./output&#x27;, train_data_dir=&#x27;./data/cifar10/train&#x27;, val_data_dir=&#x27;./data/cifar10/val&#x27;, weights=None)<br>[HAMI-core Msg(1:139687502968448:libvgpu.c:855)]: Initialized<br>2025-01-15 07:46:41.588 | INFO     | __main__:main:21 - Using device: cuda<br>2025-01-15 07:46:41.995 | INFO     | __main__:main:50 - Epoch: 1/10<br>2025-01-15 07:46:41.996 | INFO     | __main__:main:52 - Training<br>[HAMI-core Msg(1:139687502968448:memory.c:511)]: orig free=47283240960 total=47608692736 limit=3145728000 usage=310526720<br>...<br>2025-01-15 07:46:42.572 | INFO     | __main__:main:60 - Step: 1 Loss: 2.253140<br>[HAMI-core Msg(1:139682238363392:memory.c:511)]: orig free=47088205824 total=47608692736 limit=3145728000 usage=451448320<br>...<br>2025-01-15 07:46:42.920 | INFO     | __main__:main:60 - Step: 2 Loss: 2.400440<br>2025-01-15 07:46:42.944 | INFO     | __main__:main:60 - Step: 3 Loss: 2.344008<br>2025-01-15 07:46:42.964 | INFO     | __main__:main:60 - Step: 4 Loss: 2.309544<br>...<br>2025-01-15 07:52:53.087 | INFO     | __main__:main:60 - Step: 1561 Loss: 0.496849<br>2025-01-15 07:52:53.107 | INFO     | __main__:main:60 - Step: 1562 Loss: 0.342890<br>2025-01-15 07:52:53.128 | INFO     | __main__:main:60 - Step: 1563 Loss: 0.425614<br>2025-01-15 07:52:53.178 | INFO     | __main__:main:64 - Evaluating<br>2025-01-15 07:52:56.328 | INFO     | __main__:main:74 - Accuracy: 7591/10000<br>2025-01-15 07:52:56.328 | INFO     | __main__:main:79 - Saving model weights to ./output/epoch10.pth<br>2025-01-15 07:52:56.430 | INFO     | __main__:main:84 - Done<br>[HAMI-core Msg(1:139687502968448:multiprocess_memory_limit.c:497)]: Calling exit handler 1<br></code></pre></td></tr></table></figure><ul><li>Device_memory_desc_of_container 监控数据正常</li><li><em><strong>Device_utilization_desc_of_container</strong><strong>监控数据不正常，一直为0</strong></em></li></ul><figure><img src="https://s2.loli.net/2025/01/15/tmAqdpMjJu1IwCh.png"alt="image-20250115155308205" /><figcaption aria-hidden="true">image-20250115155308205</figcaption></figure><h1id="二关于nsmonitoring下svc的分析">二、关于ns/monitoring下svc的分析</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n monitoring get svc<br>NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                         AGE<br>alertmanager-main       NodePort    10.68.143.71    &lt;none&gt;        9093:30854/TCP,8080:30320/TCP   5d<br>alertmanager-operated   ClusterIP   None            &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP      5d<br>blackbox-exporter       ClusterIP   10.68.0.167     &lt;none&gt;        9115/TCP,19115/TCP              5d<br>dcgm-exporter           ClusterIP   10.68.32.112    &lt;none&gt;        9400/TCP                        25h<br>grafana                 NodePort    10.68.79.63     &lt;none&gt;        3000:30300/TCP                  5d<br>kube-state-metrics      ClusterIP   None            &lt;none&gt;        8443/TCP,9443/TCP               5d<br>node-exporter           ClusterIP   None            &lt;none&gt;        9100/TCP                        5d<br>prometheus-adapter      ClusterIP   10.68.33.74     &lt;none&gt;        443/TCP                         5d<br>prometheus-k8s          NodePort    10.68.168.213   &lt;none&gt;        9090:31819/TCP,8080:31903/TCP   5d<br>prometheus-operated     ClusterIP   None            &lt;none&gt;        9090/TCP                        5d<br>prometheus-operator     ClusterIP   None            &lt;none&gt;        8443/TCP                        5d<br><span class="hljs-meta prompt_">#</span><span class="language-bash">着重查看svc/dcgm-exporter</span> <br></code></pre></td></tr></table></figure><h2 id="svcdcgm-exporter-本身">2.1 svc/dcgm-exporter 本身</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n monitoring get svc dcgm-exporter -o yaml<br>apiVersion: v1<br>kind: Service<br>metadata:<br>  annotations:<br>    meta.helm.sh/release-name: dcgm-exporter<br>    meta.helm.sh/release-namespace: monitoring<br>  creationTimestamp: &quot;2025-01-14T06:37:49Z&quot;<br>  labels:<br>    app.kubernetes.io/component: dcgm-exporter<br>    app.kubernetes.io/instance: dcgm-exporter<br>    app.kubernetes.io/managed-by: Helm<br>    app.kubernetes.io/name: dcgm-exporter<br>    app.kubernetes.io/version: 3.1.7<br>    helm.sh/chart: dcgm-exporter-3.1.7<br>  name: dcgm-exporter<br>  namespace: monitoring<br>  resourceVersion: &quot;764255&quot;<br>  uid: ebe9c178-4252-43af-9ef5-01682bb7aceb<br>spec:<br>  clusterIP: 10.68.32.112<br>  clusterIPs:<br>  - 10.68.32.112<br>  internalTrafficPolicy: Cluster<br>  ipFamilies:<br>  - IPv4<br>  ipFamilyPolicy: SingleStack<br>  ports:<br>  - name: metrics<br>    port: 9400<br>    protocol: TCP<br>    targetPort: 9400<br>  selector:<br>    app.kubernetes.io/instance: dcgm-exporter<br>    app.kubernetes.io/name: dcgm-exporter<br>  sessionAffinity: None<br>  type: ClusterIP<br>status:<br>  loadBalancer: &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="svcdcgm-exporter-监控">2.2 svc/dcgm-exporter 监控</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">从上面可以看到svc/dcgm-exporter 的类型是ClusterIP，它的工作端口是9400</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# curl 10.68.32.112:9400/metrics<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_SM_CLOCK SM clock frequency (<span class="hljs-keyword">in</span> MHz).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_SM_CLOCK gauge</span><br>DCGM_FI_DEV_SM_CLOCK&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 1740<br>DCGM_FI_DEV_SM_CLOCK&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 210<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_MEM_CLOCK Memory clock frequency (<span class="hljs-keyword">in</span> MHz).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_MEM_CLOCK gauge</span><br>DCGM_FI_DEV_MEM_CLOCK&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 7250<br>DCGM_FI_DEV_MEM_CLOCK&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 405<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_GPU_TEMP GPU temperature (<span class="hljs-keyword">in</span> C).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_GPU_TEMP gauge</span><br>DCGM_FI_DEV_GPU_TEMP&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 66<br>DCGM_FI_DEV_GPU_TEMP&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 37<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_POWER_USAGE Power draw (<span class="hljs-keyword">in</span> W).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_POWER_USAGE gauge</span><br>DCGM_FI_DEV_POWER_USAGE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 124.967000<br>DCGM_FI_DEV_POWER_USAGE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 30.280000<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_TOTAL_ENERGY_CONSUMPTION Total energy consumption since boot (<span class="hljs-keyword">in</span> mJ).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_TOTAL_ENERGY_CONSUMPTION counter</span><br>DCGM_FI_DEV_TOTAL_ENERGY_CONSUMPTION&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 7187773583<br>DCGM_FI_DEV_TOTAL_ENERGY_CONSUMPTION&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 7015882815<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_PCIE_REPLAY_COUNTER Total number of PCIe retries.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_PCIE_REPLAY_COUNTER counter</span><br>DCGM_FI_DEV_PCIE_REPLAY_COUNTER&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_PCIE_REPLAY_COUNTER&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_GPU_UTIL GPU utilization (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_GPU_UTIL gauge</span><br>DCGM_FI_DEV_GPU_UTIL&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 16<br>DCGM_FI_DEV_GPU_UTIL&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_MEM_COPY_UTIL Memory utilization (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_MEM_COPY_UTIL gauge</span><br>DCGM_FI_DEV_MEM_COPY_UTIL&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 8<br>DCGM_FI_DEV_MEM_COPY_UTIL&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_ENC_UTIL Encoder utilization (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_ENC_UTIL gauge</span><br>DCGM_FI_DEV_ENC_UTIL&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_ENC_UTIL&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_DEC_UTIL Decoder utilization (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_DEC_UTIL gauge</span><br>DCGM_FI_DEV_DEC_UTIL&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_DEC_UTIL&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_XID_ERRORS Value of the last XID error encountered.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_XID_ERRORS gauge</span><br>DCGM_FI_DEV_XID_ERRORS&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_XID_ERRORS&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_FB_FREE Framebuffer memory free (<span class="hljs-keyword">in</span> MiB).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_FB_FREE gauge</span><br>DCGM_FI_DEV_FB_FREE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 44718<br>DCGM_FI_DEV_FB_FREE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 45400<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_FB_USED Framebuffer memory used (<span class="hljs-keyword">in</span> MiB).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_FB_USED gauge</span><br>DCGM_FI_DEV_FB_USED&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 684<br>DCGM_FI_DEV_FB_USED&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 3<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL Total number of NVLink bandwidth counters <span class="hljs-keyword">for</span> all lanes.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL counter</span><br>DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_VGPU_LICENSE_STATUS vGPU License status</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_VGPU_LICENSE_STATUS gauge</span><br>DCGM_FI_DEV_VGPU_LICENSE_STATUS&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_VGPU_LICENSE_STATUS&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_UNCORRECTABLE_REMAPPED_ROWS Number of remapped rows <span class="hljs-keyword">for</span> uncorrectable errors</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_UNCORRECTABLE_REMAPPED_ROWS counter</span><br>DCGM_FI_DEV_UNCORRECTABLE_REMAPPED_ROWS&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_UNCORRECTABLE_REMAPPED_ROWS&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_CORRECTABLE_REMAPPED_ROWS Number of remapped rows <span class="hljs-keyword">for</span> correctable errors</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_CORRECTABLE_REMAPPED_ROWS counter</span><br>DCGM_FI_DEV_CORRECTABLE_REMAPPED_ROWS&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_CORRECTABLE_REMAPPED_ROWS&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_DEV_ROW_REMAP_FAILURE Whether remapping of rows has failed</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_DEV_ROW_REMAP_FAILURE gauge</span><br>DCGM_FI_DEV_ROW_REMAP_FAILURE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br>DCGM_FI_DEV_ROW_REMAP_FAILURE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_PROF_GR_ENGINE_ACTIVE Ratio of <span class="hljs-keyword">time</span> the graphics engine is active (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_PROF_GR_ENGINE_ACTIVE gauge</span><br>DCGM_FI_PROF_GR_ENGINE_ACTIVE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.160959<br>DCGM_FI_PROF_GR_ENGINE_ACTIVE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.000000<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_PROF_PIPE_TENSOR_ACTIVE Ratio of cycles the tensor (HMMA) pipe is active (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_PROF_PIPE_TENSOR_ACTIVE gauge</span><br>DCGM_FI_PROF_PIPE_TENSOR_ACTIVE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.010100<br>DCGM_FI_PROF_PIPE_TENSOR_ACTIVE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.000000<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_PROF_DRAM_ACTIVE Ratio of cycles the device memory interface is active sending or receiving data (<span class="hljs-keyword">in</span> %).</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_PROF_DRAM_ACTIVE gauge</span><br>DCGM_FI_PROF_DRAM_ACTIVE&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.061415<br>DCGM_FI_PROF_DRAM_ACTIVE&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 0.000325<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_PROF_PCIE_TX_BYTES The rate of data transmitted over the PCIe bus - including both protocol headers and data payloads - <span class="hljs-keyword">in</span> bytes per second.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_PROF_PCIE_TX_BYTES gauge</span><br>DCGM_FI_PROF_PCIE_TX_BYTES&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 6811221<br>DCGM_FI_PROF_PCIE_TX_BYTES&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 1837182<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP DCGM_FI_PROF_PCIE_RX_BYTES The rate of data received over the PCIe bus - including both protocol headers and data payloads - <span class="hljs-keyword">in</span> bytes per second.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE DCGM_FI_PROF_PCIE_RX_BYTES gauge</span><br>DCGM_FI_PROF_PCIE_RX_BYTES&#123;gpu=&quot;0&quot;,UUID=&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;,device=&quot;nvidia0&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 40172789<br>DCGM_FI_PROF_PCIE_RX_BYTES&#123;gpu=&quot;1&quot;,UUID=&quot;GPU-c10058bc-1eae-1b32-ba0d-85d26c9ed9ff&quot;,device=&quot;nvidia1&quot;,modelName=&quot;NVIDIA A40&quot;,Hostname=&quot;172.20.0.21&quot;,DCGM_FI_DRIVER_VERSION=&quot;550.54.15&quot;,container=&quot;&quot;,namespace=&quot;&quot;,pod=&quot;&quot;&#125; 1166047<br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# <br></code></pre></td></tr></table></figure><h2 id="对应的smondcgm-exporter">2.3 对应的smon/dcgm-exporter</h2><p>此smon是在部署dcgm组件时，由其自动创建的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl -n monitoring get smon<br>NAME                      AGE<br>...<br>dcgm-exporter             26h<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看smon/dcgm-exporter 本身的内容</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl -n monitoring get smon dcgm-exporter -o yaml<br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  annotations:<br>    meta.helm.sh/release-name: dcgm-exporter<br>    meta.helm.sh/release-namespace: monitoring<br>  creationTimestamp: &quot;2025-01-14T06:37:49Z&quot;<br>  generation: 1<br>  labels:<br>    app.kubernetes.io/component: dcgm-exporter<br>    app.kubernetes.io/instance: dcgm-exporter<br>    app.kubernetes.io/managed-by: Helm<br>    app.kubernetes.io/name: dcgm-exporter<br>    app.kubernetes.io/version: 3.1.7<br>    helm.sh/chart: dcgm-exporter-3.1.7<br>  name: dcgm-exporter<br>  namespace: monitoring<br>  resourceVersion: &quot;764260&quot;<br>  uid: cb9c11ee-6702-48b6-9780-52b15c3e78a9<br>spec:<br>  endpoints:<br>  - honorLabels: false<br>    interval: 15s<br>    path: /metrics<br>    port: metrics<br>    relabelings:<br>    - action: keep<br>      regex: dcgm-exporter<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_endpoints_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $&#123;1&#125;<br>      sourceLabels:<br>      - __meta_kubernetes_pod_node_name<br>      targetLabel: node_name<br>    - action: replace<br>      regex: (.*)<br>      replacement: $1<br>      sourceLabels:<br>      - __meta_kubernetes_pod_host_ip<br>      targetLabel: ip<br>  namespaceSelector:<br>    matchNames:<br>    - monitoring<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: dcgm-exporter<br>      app.kubernetes.io/instance: dcgm-exporter<br>      app.kubernetes.io/name: dcgm-exporter<br></code></pre></td></tr></table></figure><h2 id="问题处理">2.4 问题处理</h2><h3id="device_utilization_desc_of_container-监控数据不正常一直为0">2.4.1Device_utilization_desc_of_container 监控数据不正常，一直为0</h3><figure><img src="https://s2.loli.net/2025/01/23/TNprH1JUtcSihWB.png"alt="image-20250123105319763" /><figcaption aria-hidden="true">image-20250123105319763</figcaption></figure><p>处理办法：</p><p>先前没有在任务中加“nvidia.com/gpucores: xxx”发现Device_utilization_desc_of_container一直为0。不需要显式加hostPid，声明了“nvidia.com/gpucores:xxx”Device_utilization_desc_of_container 就有监控数据了</p><p>相关源码：https://github.com/Project-HAMi/HAMi-core/blob/88dd82117e057b88d5c3c19a546002838242a64f/src/multiprocess/multiprocess_utilization_watcher.c#L223</p><p>hami-core里面只有在 sm_limit 大于 0 小于等于 100时才启动监控线程，然后https://github.com/Project-HAMi/HAMi/blob/4b1cda2ea77107826e0d6836f7b2f2dd1dbfb3b7/charts/hami/templates/scheduler/device-configmap.yaml#L21这个 nvidia.defaultCores: 0 不写 nvidia.com/gpucores 就是 默认0，是需要显示声明算力限制才会有对应的监控</p>]]></content>
    
    
    
    <tags>
      
      <tag>HAMi2.4.1 k8s servicemonitor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HAMi安装部署时报错处理归纳</title>
    <link href="/2025/01/13/HAMi%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E6%97%B6%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E5%BD%92%E7%BA%B3/"/>
    <url>/2025/01/13/HAMi%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E6%97%B6%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86%E5%BD%92%E7%BA%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="podhami-device-plugin一直处于crashloopbackoff">1.pod/hami-device-plugin一直处于CrashLoopBackOff</h1><p>具体报错信息如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n kube-system get pods<br>NAME                                         READY   STATUS             RESTARTS      AGE<br>calico-kube-controllers-754966f84c-7nm8r     1/1     Running            3 (17h ago)   3d19h<br>calico-node-84csz                            1/1     Running            3 (17h ago)   3d19h<br>coredns-596755dbff-94m7w                     1/1     Running            4 (17h ago)   3d19h<br>dashboard-metrics-scraper-799d786dbf-swl8b   1/1     Running            4 (17h ago)   3d19h<br>hami-device-plugin-n9s94                     1/2     CrashLoopBackOff   4 (88s ago)   2m57s<br>hami-scheduler-cdcc75c6f-s2hp5               2/2     Running            0             2m57s<br>kubernetes-dashboard-9f8c8b989-f4cqj         1/1     Running            4 (17h ago)   3d19h<br>metrics-server-5d648558d9-49q98              1/1     Running            5 (17h ago)   3d19h<br>nfs-client-provisioner-6994b84bd-2w7vr       1/1     Running            4 (17h ago)   3d19h<br>node-local-dns-2mqv2                         1/1     Running            5 (17h ago)   3d19h<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod/hami-device-plugin-n9s94 日志</span><br>root@controller01:~# kubectl -n kube-system describe pod hami-device-plugin-n9s94<br>...<br>Events:<br>  Type     Reason               Age                From               Message<br>  ----     ------               ----               ----               -------<br>  Normal   Scheduled            60s                default-scheduler  Successfully assigned kube-system/hami-device-plugin-n9s94 to 172.20.0.21<br>  Normal   Pulled               58s                kubelet            Container image &quot;projecthami/hami:latest&quot; already present on machine<br>  Normal   Created              58s                kubelet            Created container vgpu-monitor<br>  Normal   Started              58s                kubelet            Started container vgpu-monitor<br>  Warning  FailedPostStartHook  42s (x3 over 59s)  kubelet            Exec lifecycle hook ([/bin/sh -c cp -f /k8s-vgpu/lib/nvidia/* /usr/local/vgpu/]) for Container &quot;device-plugin&quot; in Pod &quot;hami-device-plugin-n9s94_kube-system(70f823fa-d042-400d-abd1-0527921e60a6)&quot; failed - error: command &#x27;/bin/sh -c cp -f /k8s-vgpu/lib/nvidia/* /usr/local/vgpu/&#x27; exited with 126: , message: &quot;OCI runtime exec failed: exec failed: cannot exec in a stopped container: unknown\r\n&quot;<br>  Normal   Killing              42s (x3 over 59s)  kubelet            FailedPostStartHook<br>  Warning  BackOff              26s (x4 over 56s)  kubelet            Back-off restarting failed container<br>  Normal   Pulled               14s (x4 over 59s)  kubelet            Container image &quot;projecthami/hami:latest&quot; already present on machine<br>  Normal   Created              14s (x4 over 59s)  kubelet            Created container device-plugin<br>  Normal   Started              13s (x4 over 59s)  kubelet            Started container device-plugin<br></code></pre></td></tr></table></figure><p><strong>分析定位：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# ll /usr/local/vgpu/<br>total 636<br>drwxr-xr-x  3 root root   4096 Aug 28 15:37 ./<br>drwxr-xr-x 17 root root   4096 Nov 15 16:56 ../<br>drwxr-xr-x  5 root root   4096 Jan  8 15:27 containers/<br>-rw-r--r--  1 root root     26 Jan  8 17:20 ld.so.preload<br>-rwxr-xr-x  1 root root 631456 Jan  8 17:20 libvgpu.so*<br>root@controller01:~# <br>root@controller01:~# cd /usr/local/vgpu/<br>root@controller01:/usr/local/vgpu# ll<br>total 636<br>drwxr-xr-x  3 root root   4096 Aug 28 15:37 ./<br>drwxr-xr-x 17 root root   4096 Nov 15 16:56 ../<br>drwxr-xr-x  5 root root   4096 Jan  8 15:27 containers/<br>-rw-r--r--  1 root root     26 Jan  8 17:20 ld.so.preload<br>-rwxr-xr-x  1 root root 631456 Jan  8 17:20 libvgpu.so*<br>root@controller01:/usr/local/vgpu# cd containers/<br>root@controller01:/usr/local/vgpu/containers# ll<br>total 20<br>drwxr-xr-x 5 root root 4096 Jan  8 15:27 ./<br>drwxr-xr-x 3 root root 4096 Aug 28 15:37 ../<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n kube-system logs hami-device-plugin-n9s94 -c device-plugin<br>I0114 02:25:43.181802   36787 client.go:53] BuildConfigFromFlags failed for file /root/.kube/config: stat /root/.kube/config: no such file or directory using inClusterConfig<br>Incorrect Usage: invalid value &quot;false&quot; for flag -v: parse error<br><br>NAME:<br>   NVIDIA Device Plugin - NVIDIA device plugin for Kubernetes<br><br>USAGE:<br>   NVIDIA Device Plugin [global options] command [command options] <br><br>COMMANDS:<br>   version  Show the version of NVIDIA Device Plugin<br>   help, h  Shows a list of commands or help for one command<br><br>GLOBAL OPTIONS:<br>   --mig-strategy value                                           the desired strategy for exposing MIG devices on GPUs that support it:<br>                                                                    [none | single | mixed] (default: &quot;none&quot;) [$MIG_STRATEGY]<br>   --fail-on-init-error                                           fail the plugin if an error is encountered during initialization, otherwise block indefinitely (default: true) [$FAIL_ON_INIT_ERROR]<br>   --nvidia-driver-root value                                     the root path for the NVIDIA driver installation (typical values are &#x27;/&#x27; or &#x27;/run/nvidia/driver&#x27;) (default: &quot;/&quot;) [$NVIDIA_DRIVER_ROOT]<br>   --pass-device-specs                                            pass the list of DeviceSpecs to the kubelet on Allocate() (default: false) [$PASS_DEVICE_SPECS]<br>   --device-list-strategy value [ --device-list-strategy value ]  the desired strategy for passing the device list to the underlying runtime:<br>                                                                    [envvar | volume-mounts | cdi-annotations] (default: &quot;envvar&quot;) [$DEVICE_LIST_STRATEGY]<br>   --device-id-strategy value                                     the desired strategy for passing device IDs to the underlying runtime:<br>                                                                    [uuid | index] (default: &quot;uuid&quot;) [$DEVICE_ID_STRATEGY]<br>   --gds-enabled                                                  ensure that containers are started with NVIDIA_GDS=enabled (default: false) [$GDS_ENABLED]<br>   --mofed-enabled                                                ensure that containers are started with NVIDIA_MOFED=enabled (default: false) [$MOFED_ENABLED]<br>   --config-file value                                            the path to a config file as an alternative to command line options or environment variables [$CONFIG_FILE]<br>   --cdi-annotation-prefix value                                  the prefix to use for CDI container annotation keys (default: &quot;cdi.k8s.io/&quot;) [$CDI_ANNOTATION_PREFIX]<br>   --nvidia-ctk-path value                                        the path to use for the nvidia-ctk in the generated CDI specification (default: &quot;/usr/bin/nvidia-ctk&quot;) [$NVIDIA_CTK_PATH]<br>   --container-driver-root value                                  the path where the NVIDIA driver root is mounted in the container; used for generating CDI specifications (default: &quot;/driver-root&quot;) [$CONTAINER_DRIVER_ROOT]<br>   -v value                                                       number for the log level verbosity (default: 0)<br>   --node-name value                                              node name (default: &quot;172.20.0.21&quot;) [$NodeName]<br>   --device-split-count value                                     the number for NVIDIA device split (default: 2) [$DEVICE_SPLIT_COUNT]<br>   --device-memory-scaling value                                  the ratio for NVIDIA device memory scaling (default: 1) [$DEVICE_MEMORY_SCALING]<br>   --device-cores-scaling value                                   the ratio for NVIDIA device cores scaling (default: 1) [$DEVICE_CORES_SCALING]<br>   --disable-core-limit                                           If set, the core utilization limit will be ignored (default: false) [$DISABLE_CORE_LIMIT]<br>   --resource-name value                                          the name of field for number GPU visible in container (default: &quot;nvidia.com/gpu&quot;)<br>   --help, -h                                                     show help<br>E0114 02:25:43.184839   36787 main.go:153] invalid value &quot;false&quot; for flag -v: parse error<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# kubectl -n kube-system logs hami-device-plugin-n9s94 -c vgpu-monitor | more<br>I0114 02:04:27.527629   34952 client.go:53] BuildConfigFromFlags failed for file /root/.kube/config: stat /root/.kube/config: no such file or directory using inClusterConfig<br>W0114 02:04:27.528191   34952 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.<br>I0114 02:04:27.528497   34952 metrics.go:353] Initializing metrics for vGPUmonitor<br>E0114 02:04:32.537271   34952 feedback.go:269] Failed to update container list: env NODE_NAME not set<br>E0114 02:04:37.541471   34952 feedback.go:269] Failed to update container list: env NODE_NAME not set<br>E0114 02:04:42.541695   34952 feedback.go:269] Failed to update container list: env NODE_NAME not set<br><span class="hljs-meta prompt_">#</span><span class="language-bash">一直重复“E0114 02:04:42.541695   34952 feedback.go:269] Failed to update container list: <span class="hljs-built_in">env</span> NODE_NAME not <span class="hljs-built_in">set</span>”</span><br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# helm -n kube-system uninstall hami<br>root@controller01:~# rm -rf /usr/local/vgpu<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新安装HAMi</span><br>root@controller01:~# helm install hami hami-charts/hami --set resourceName=nvidia.com/vgpu -n kube-system --version 2.4.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">还是报一样的错误</span><br></code></pre></td></tr></table></figure><p>根据项目维护人员回复说可能是镜像被污染了</p><p><strong>处理方法：</strong></p><p>已经issue：https://github.com/Project-HAMi/HAMi/issues/805</p><p>升级到HAMi2.4.1后，问题不再存在。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>containerd容器引擎服务的安装与使用</title>
    <link href="/2025/01/05/containerd%E5%AE%B9%E5%99%A8%E5%BC%95%E6%93%8E%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/01/05/containerd%E5%AE%B9%E5%99%A8%E5%BC%95%E6%93%8E%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="安装方法列举">1 安装方法列举</h1><p>以下以在Ubuntu 20.04.3 LTS-amd64宿主机（arm64宿主机只需要转换对应文件或命令名称即可）上部署containerd容器引擎服务为例。</p><ul><li><p>apt形式安装</p><p>apt install containerd.io</p></li><li><p>二进制形式安装</p><p>访问 https://github.com/containerd/下载对应构架与操作系统的二进制安装文件，解压到自定义目录并进行手动配置</p></li><li><p>通过源码编译安装</p></li></ul><h1 id="apt形式安装">2 apt形式安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装containerd.io组件</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt install containerd.io</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装好containerd服务后，/etc/containerd/config.toml文件默认不存在</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成配置文件</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改配置文件后需要重启containerd服务</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">systemctl daemon-reload &amp;&amp; systemctl restart containerd</span><br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">卸载方法（注意：会将docker服务端同时卸载）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt remove containerd.io</span><br></code></pre></td></tr></table></figure><h1 id="二进制方式">3 二进制方式</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.安装containerd本身</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载 containerd-1.7.24-linux-amd64.tar.gz 二进制压缩文件</span> <br>root@ubuntu20:/opt/installPkgs# wget https://github.com/containerd/containerd/releases/download/v1.7.24/containerd-1.7.24-linux-amd64.tar.gz<br><span class="hljs-meta prompt_">#</span><span class="language-bash">只查看不解压 归档压缩文件中的内容</span><br>root@ubuntu20:/opt/installPkgs# tar -tvf containerd-1.7.24-linux-amd64.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压到/usr/ 目录下</span> <br>root@ubuntu20:/opt/installPkgs# tar -zxf containerd-1.7.24-linux-amd64.tar.gz -C /usr/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">封装containerd.service，以使用 systemd对containerd.service 进行管理</span> <br>root@ubuntu20:/opt/installPkgs# cat &gt; /lib/systemd/system/containerd.service &lt;&lt;EOF<br>[Unit]<br>Description=containerd container runtime<br>Documentation=https://containerd.io<br>After=network.target local-fs.target<br> <br>[Service]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">uncomment to <span class="hljs-built_in">enable</span> the experimental</span><br>sbservice (sandboxed) version of containerd/cri integration<br><span class="hljs-meta prompt_">#</span><span class="language-bash">Environment=<span class="hljs-string">&quot;ENABLE_CRI_SANDBOXES=sandboxed&quot;</span></span><br>ExecStartPre=-/sbin/modprobe overlay<br>ExecStart=/usr/bin/containerd<br> <br>Type=notify<br>Delegate=yes<br>KillMode=process<br>Restart=always<br>RestartSec=5<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Having non-zero Limit*s causes</span><br>performance problems due to accounting overhead<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">in</span> the kernel. We recommend using cgroups</span><br>to do container-local accounting.<br>LimitNPROC=infinity<br>LimitCORE=infinity<br>LimitNOFILE=infinity<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Comment TasksMax <span class="hljs-keyword">if</span> your systemd version</span><br>does not supports it.<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Only systemd 226 and above support this</span><br>version.<br>TasksMax=infinity<br>OOMScoreAdjust=-999<br> <br>[Install]<br>WantedBy=multi-user.target<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启containerd服务</span> <br>root@ubuntu20:/opt/installPkgs# systemctl daemon-reload<br>root@ubuntu20:/opt/installPkgs# systemctl unmask containerd<br>root@ubuntu20:/opt/installPkgs# systemctl start containerd<br> <br>root@ubuntu20:/opt/installPkgs# systemctl enable containerd <br>root@ubuntu20:/opt/installPkgs# systemctl status containerd<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2.安装runc</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">另外，需要手动下载安装runc（后面创建容器时需要用到）</span><br>root@ubuntu20:/opt/installPkgs# wget https://github.com/opencontainers/runc/releases/download/v1.1.13/runc.amd64<br>root@ubuntu20:/opt/installPkgs# chmod a+x runc.amd64 <br>root@ubuntu20:/opt/installPkgs# cp -p runc.amd64 /usr/bin/runc<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3.安装cni插件</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">从https://github.com/containernetworking/plugins/releases 下载合适版本、操作系统、构架对应的压缩文件</span><br>root@ubuntu20:/opt/installPkgs# wget https://github.com/containernetworking/plugins/releases/download/v1.6.0/cni-plugins-linux-amd64-v1.6.0.tgz<br>root@ubuntu20:/opt/installPkgs# tar -zxf cni-plugins-linux-amd64-v1.6.0.tgz -C /opt/cni/bin/<br></code></pre></td></tr></table></figure><h1 id="源码编译安装">4 源码编译安装</h1><p>暂略，后续有需要更新补充到个人博客同步文章。</p><h1 id="安装与使用containerd服务cli">5 安装与使用containerd服务CLI</h1><p>​一共有3种与containerd服务进行交互的命令行工具：nerdctl、ctr、crictl。</p><h2 id="安装与使用nerdctl">安装与使用nerdctl</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">安装nerdctl</span><br>root@ubuntu20:~# cd /opt/installPkgs/ <br>root@ubuntu20:~# wget https://github.com/containerd/nerdctl/releases/download/v2.0.1/nerdctl-2.0.1-linux-amd64.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压（保证/usr/local/bin 目录在操作系统PATH路径内）</span><br>root@ubuntu20:/opt/installPkgs# tar Cxzvvf /usr/local/bin nerdctl-2.0.1-linux-amd64.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装buildkit（buildkit 是一个将 <span class="hljs-built_in">source</span> code 转换为 build artifacts 的开源工具，buildctl 客户端可用于 Linux、macOS 和 Windows，但 buildkitd 守护进程目前仅适用于 Linux。buildkit暂时没用到，不强制安装，但如果不安装执行nerdctl 相关命令时会告警）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载buildkit-v0.11.5安装包</span><br>root@ubuntu20:~# wget https://github.com/moby/buildkit/releases/download/v0.11.5/buildkit-v0.11.5.linux-amd64.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压 buildkit-v0.11.5安装包</span><br>root@ubuntu20:~# tar -zxvf buildkit-v0.11.5.linux-amd64.tar.gz -C /usr/local<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证nerdctl 命令、查看containerd版本</span><br>root@ubuntu20:~# nerdctl version<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/ybK5m2Mdauvile6.png"alt="image-20250105234139252" /><figcaption aria-hidden="true">image-20250105234139252</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用nerdctl管理镜像</span><br>root@ubuntu20:~# nerdctl pull registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看镜像</span><br>root@ubuntu20:~# nerdctl images 或 nerdctl image ls<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看nerdctl帮助</span><br>root@ubuntu20:~# nerdctl --help<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建容器并进入容器内</span><br>root@ubuntu20:~# nerdctl run -it registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2 /bin/bash<br><span class="hljs-meta prompt_">#</span><span class="language-bash">从容器退出回到宿主机上（尽量使用组合键：ctrl+p+q。在使用Docker容器引擎时，使用<span class="hljs-built_in">exit</span>退出容器会直接将容器停掉，使用nerdctl时虽未发现此情况，但建议还是养成上述好习惯较好）</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置nerdctl命令自动补全</span><br>root@ubuntu20:~# echo &quot;source &lt;(nerdctl completion bash)&quot; &gt;&gt; /root/.bashrc<br>root@ubuntu20:~# source /root/.bashrc<br><br></code></pre></td></tr></table></figure><h2 id="安装与使用ctr">安装与使用ctr</h2><p>​ctr命令行工具是跟随containerd服务一共被安装部署好的，此时可直接使用。</p><h3 id="镜像操作">镜像操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">containerd中新引入命名空间的概念，所有镜像与容器都属于某个特定的命名空间</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">也只在特定的命名空间内可见。如果没有指定命名空间，则所有操作在default命名空间内执行</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">containerd默认已经创建如下3个命名空间</span><br>root@ubuntu20:~# ctr ns ls<br>NAME    LABELS <br>default        <br>k8s.io         <br>moby<br><span class="hljs-meta prompt_">#</span><span class="language-bash">拉取镜像（如下命名相当于省略了<span class="hljs-string">&quot;-n default&quot;</span>）</span><br>root@ubuntu20:~# ctr image pull registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看镜像（如下image可被i替换，list可被<span class="hljs-built_in">ls</span>替换，即<span class="hljs-string">&quot;ctr i ls&quot;</span>，甚至混合着使用也行）</span><br>root@ubuntu20:~# ctr -n default image list<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/07/p63FibfTskaxRqD.png"alt="image-20250107224942505" /><figcaption aria-hidden="true">image-20250107224942505</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">镜像标记tag</span><br>ctr -n default i tag registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果新镜像 reference 已存在, 则需要先删除新reference, 或者加上<span class="hljs-string">&quot;--force&quot;</span>强制替换</span><br>ctr -n default i tag --force registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">推送镜像</span><br>ctr -n default i push -k 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">拉取镜像</span><br>ctr -n default i pull -k 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除镜像</span><br>ctr -n default i rm 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">导出镜像</span><br>ctr -n default i export ubuntu-secboot_v2.tar 175.6.40.93:8196/base/ubuntu:secboot_v2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">导入镜像</span><br>ctr -n default i import ubuntu-secboot_v2.tar<br></code></pre></td></tr></table></figure><h3 id="容器操作">容器操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建容器（会自动进入容器内。此方式创建的默认是静态的容器，静态容器与动态容器是ctr中的概念）</span><br>root@ubuntu20:~# ctr run -t registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2 test01<br><span class="hljs-meta prompt_">#</span><span class="language-bash">退出容器使用<span class="hljs-built_in">exit</span>命令或组合键“ctrl+d”</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看容器</span><br>root@ubuntu20:~# ctr c ls<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/e2Lqb9IXJ7pEMrj.png"alt="image-20250105234351116" /><figcaption aria-hidden="true">image-20250105234351116</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看容器详细信息</span><br>ctr container info test01<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">静态容器启动为动态容器</span><br>复制containerd连接runC垫片工具至系统即保证/usr/bin/目录有一个containerd-shim-runc-v2执行文件<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动task，即表示在容器中运行了进程，即为动态容器（-d表示daemon或者后台的意思）</span><br>ctr task start -d test01<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看task也是查看容器所在宿主机进程（它其实是一个宿主机进程，即165225上一个宿主机进程<span class="hljs-built_in">id</span>）</span><br>ctr task ls<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/lKXzAImqbPa5foJ.png"alt="image-20250105234414968" /><figcaption aria-hidden="true">image-20250105234414968</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看容器的进程(都是宿主机的进程)</span><br>ctr task ps test01<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/sTpCgMyOjDuzWBi.png"alt="image-20250105234439449" /><figcaption aria-hidden="true">image-20250105234439449</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">宿主机查看到相应的进程</span><br>ps -ef | grep 165225<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/uHoxfd8JVj2GyzY.png"alt="image-20250105234512202" /><figcaption aria-hidden="true">image-20250105234512202</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看正在运行中的容器</span><br>ctr task ls<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新进入动态容器内</span><br>root@ubuntu20:~# ctr -n default task exec --exec-id $RANDOM -t test01 bash<br><span class="hljs-meta prompt_">#</span><span class="language-bash">退出动态容器，使用<span class="hljs-built_in">exit</span>或组合键<span class="hljs-string">&quot;ctrl+d&quot;</span>。此后此动态容器仍然是处于Running状态</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/qUG7LjgvbKS1k4J.png"alt="image-20250105234549550" /><figcaption aria-hidden="true">image-20250105234549550</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">直接创建一个动态的容器然后进入容器内，其中--net-host 代表容器的IP就是宿主机的IP(相当于docker里的host类型网络)，</span><br>ctr run -d --net-host registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot_v2 test02<br>ctr task ls<br>ctr -n default task exec --exec-id $RANDOM -t test02 bash<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/3jPE29pgeHMRKOk.png"alt="image-20250105234638744" /><figcaption aria-hidden="true">image-20250105234638744</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">删除容器</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">首先要将动态容器对应的task杀死、删除</span><br>root@ubuntu20:~# ctr task kill test01<br>root@ubuntu20:~# ctr task delete test01<br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时test01容器是处于Created状态（如果安装了nerdctl，可以使用“nerdctl ps -a”查看）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时才能删除test01容器</span><br>root@ubuntu20:~# ctr c delete test01<br></code></pre></td></tr></table></figure><p>笔者认为ctr命令行工具的执行习惯不像nerdctl、crictl，平时用起来不太方便。但如果是用来调试，还是可以的</p><h2 id="安装与使用crictl">安装与使用crictl</h2><p>​crictl与Kubernetes的紧密集成，它无法直接查看或调试非Kubernetes创建的容器。所以无法在非kubernetes环境直接操作容器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载安装</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">此处使用v1.30.0版本，所有及最新版本可在此查看：https://github.com/kubernetes-sigs/cri-tools/releases</span><br>cd /opt/installPkgs<br>VERSION=&quot;v1.30.0&quot;   <br>wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz<br><span class="hljs-meta prompt_">#</span><span class="language-bash">解压</span><br>tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/05/rApazmoXFYftiLv.png"alt="image-20250105234828836" /><figcaption aria-hidden="true">image-20250105234828836</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">该 WARN 消息(图未截全)表明，crictl 或其他相关工具在尝试连接容器运行时（如 containerd）时，正在使用默认的设置中的端点列表。但默认的设置已经被弃用，而又未明确设置crictl的runtime-endpoint。解决上述警告的方法</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置容器运行时和镜像服务的端点</span><br>cat &gt; /etc/crictl.yaml &lt;&lt;EOF<br>runtime-endpoint: unix:///run/containerd/containerd.sock<br><span class="hljs-meta prompt_">#</span><span class="language-bash">image-endpoint: unix:///run/containerd/containerd.sock</span><br>timeout: 10<br>debug: false<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">拉取镜像</span><br>root@ubuntu20:~# crictl pull registry.cn-hangzhou.aliyuncs.com/quectel/ubuntu:secboot<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其他用法参考下图</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/09/UTmBDE5FGKcRlLn.png"alt="image-20250109211000203" /><figcaption aria-hidden="true">image-20250109211000203</figcaption></figure><h1 id="参考资源">6 参考资源</h1><ul><li>关于buildkit的介绍可参考：https://github.com/moby/buildkit</li><li>containerd入门：https://github.com/containerd/containerd/blob/main/docs/getting-started.md</li><li>ctr用法：直接执行“ctr--help”、https://github.com/projectatomic/containerd/blob/master/docs/cli.md、https://www.akiraka.net/kubernetes/1139.html、https://www.cnblogs.com/lldhsds/p/18262839</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>containerd 安装 nerdctl ctr crictl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LXC容器运行时</title>
    <link href="/2024/12/27/LXC%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/"/>
    <url>/2024/12/27/LXC%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="lxc项目介绍">1 LXC项目介绍</h1><p>​LXC是在crgoup被引入Linux内核后立即被创建的项目，它被设计用于"full-system"容器，是用来创建Linux容器的，此时的Linux容器跟我们现在常用的Linux上Docker容器或containerd容器是有区别的，最显著的区别在于它们使用不是容器运行时不同。同时Systemd也获得了类似的容器支持，systemd-nspawn可以运行命名空间进程，systemd本身可以控制cgroup。尽管lxc与systemd-nspawn也在其他项目中被利用到了，但它们还是没有能够吸引足够多的终端用户。现在并不是一个流行的开源容器化项目。</p><h1 id="lxc容器运行时介绍">2 LXC容器运行时介绍</h1><p>​ LXC 是一个早期知名的Linux 容器运行时，主要由C语言实现。官网参考https://linuxcontainers.org/lxc/introduction/ 。</p><figure><img src="https://s2.loli.net/2024/12/27/s2lMK6STe1YJvDw.png"alt="image-20241227233124311" /><figcaption aria-hidden="true">image-20241227233124311</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/62NApc1QeoqavCX.png"alt="image-20241227233051173" /><figcaption aria-hidden="true">image-20241227233051173</figcaption></figure><p>​ OCI（Open ContainerInitiative）规范主要定义了容器运行时的标准，包括容器的镜像格式、容器的生命周期管理（如创建、启动、停止、删除）、配置管理（如挂载点、环境变量等）以及资源管理（如CPU、内存分配）等多个方面。符合OCI规范的容器运行时可以更好地与其他符合该规范的工具和平台进行交互和协作。</p><p>​ LXC 并不完全符合OCI 规范。LXC有自己独立的一套容器创建和管理机制，它主要是利用Linux 内核的 cgroups 和namespaces 特性来实现容器的隔离和资源管理。</p><p>​ 尽管 LXC 本身不符合OCI规范，但在某些场景下可以实现一定程度的兼容。例如，可以通过一些中间层工具或者适配层来使LXC 容器与基于 OCI规范的生态系统进行交互。不过，这种方式相对复杂，并且可能会损失一些LXC本身的特性或者引入额外的开销，笔者未做探讨研究，此文不涉及。</p><h1 id="安装lxc">3 安装LXC</h1><h2 id="软硬件要求">软硬件要求</h2><ul><li><p>支持多种构架如amd64、arm64、riscv64、armhf等</p></li><li><p>要使用 lxc-attach及非特权容器，就必须满足以下条件：</p></li><li><ul><li>Linux kernel &gt;= 3.12</li></ul></li><li><ul><li>至少有glibc, musl libc, uclib or bionic 其中一个作为操作系统的 Clibrary</li></ul></li><li><p>其余推荐的信赖库：</p></li><li><ul><li>libcap (to allow for capability drops)</li></ul></li><li><ul><li>libapparmor (to set a different apparmor profile for thecontainer)</li></ul></li><li><ul><li>libselinux (to set a different selinux context for thecontainer)</li></ul></li><li><ul><li>libseccomp (to set a seccomp policy for the container)</li></ul></li><li><ul><li>libgnutls (for various checksumming)</li></ul></li><li><ul><li>liblua (for the LUA binding)</li></ul></li><li><ul><li>python3-dev (for the python3 binding)</li></ul></li></ul><h2 id="安装步骤">安装步骤</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在ubuntu20.04LTS-amd64上安装lxc</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">apt-get install lxc</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证安装成功（成功时输出大致如下）</span><br>root@ubuntu20:~# lxc-info --version4.0.12<br></code></pre></td></tr></table></figure><h1 id="简单使用lxc">4 简单使用LXC</h1><h2 id="命令行形式">命令行形式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建lxc容器(第一次创建lxc容器时耗时较长)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.1 只通过-t指定模板（其实就是容器镜像）名称，不指定标签与构架，那么标签与构架与宿主机靠齐</span><br>root@ubuntu20:~# lxc-create -n my_lxc_ubuntu -t ubuntu<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.2 执行创建lxc容器的命令时不指定模板名称，创建过程中互动指定（指定Distribution、Release、Architecture）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有容器模板好像是被官方维护的（具体还未研究）</span><br>root@ubuntu20:~# lxc-create --template download --name my-container<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果已经知道这三个参数可以是什么，当然也可以在上述命令直接指定下面的3个参数</span><br>root@ubuntu20:~# lxc-create --template download --name my-container -- --dist opensuse --release 15.5 --arch amd64<br><span class="hljs-meta prompt_">#</span><span class="language-bash">没有指定--dist、--release、--<span class="hljs-built_in">arch</span>参数时，创建中通过如下方式指定</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/27/GWfEhz2O3c1RaCr.png"alt="image-20241227232807348" /><figcaption aria-hidden="true">image-20241227232807348</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">4.3 启动容器：创建出来的lxc容器默认是停止状态，需要手动启动</span><br>root@ubuntu20:~# lxc-start -n my-container<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.4 进入lxc容器内</span><br>root@ubuntu20:~# lxc-attach -n my-container<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.5 执行命令：进入容器内后，可以在容器内执行命令</span><br>my-container:~ # cat /etc/os-release <br>NAME=&quot;openSUSE Leap&quot;<br>VERSION=&quot;15.5&quot;<br>ID=&quot;opensuse-leap&quot;<br>ID_LIKE=&quot;suse opensuse&quot;<br>…<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.6 从lxc容器内退出</span><br>my-container:~ # exit<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.7查看所有的容器</span><br>root@ubuntu20:~# lxc-ls -f<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.8查看容器信息</span> <br>root@ubuntu20:~# lxc-info -n my-container<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.9 停掉容器</span><br>root@ubuntu20:~# lxc-stop -n my-container<br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.10 删除容器</span><br>root@ubuntu20:~# lxc-destroy -n my-container <br><span class="hljs-meta prompt_">#</span><span class="language-bash">暂时未弄清楚是否可以定制lxc容器镜像，理论上应该是可以的。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">因为这个lxc容器暂时未真正使用，暂时不再研究</span><br></code></pre></td></tr></table></figure><p>​其他关于命令行对lxc容器进行操作的说明，参见官方文档：https://linuxcontainers.org/lxc/getting-started/</p><h2 id="api调用形式">API调用形式</h2><p>​从官网看到的内容，目前支持C语言与Python语言通过API形式对lxc容器相关操作。具体参见：https://linuxcontainers.org/lxc/documentation/</p><h1 id="lxc其他资源介绍">5 LXC其他资源介绍</h1><p>1）lxc容器当前虽然并不是很火，但其一直在迭代，其所有版本信息及下载：https://linuxcontainers.org/lxc/downloads/</p><p>2）lxc项目对应代开源代码仓库地址：https://github.com/lxc/lxc</p><p>3）lxc相关指令的manpage：https://linuxcontainers.org/lxc/manpages</p><p>4）lxc容器安全机制介绍：https://linuxcontainers.org/lxc/security</p><h1 id="备注与参考文章">6 备注与参考文章</h1><p>​订阅号文章不方便更新，如后续有修改或完善，将更新到个人博客，博客地址参考文首。技术操作类文章推荐直接访问个人博客查阅，阅读效果更佳。</p><p>​某些观点或阐述，笔者水平有限无法给出正式严谨的答案，唯有引用或参考企业单位的官网与其他前辈的描述。本文某些内容来自以下文章：**</p><ul><li>lxc官网：https://linuxcontainers.org/lxc</li><li>PolarSPARC文章：https://www.polarsparc.com/xhtml/LXC.html</li><li>csdn博客：https://blog.csdn.net/qq_44281591/article/details/132251767</li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开源容器运行时 LXC 容器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年冬季岳麓山随拍</title>
    <link href="/2024/12/27/2024%E5%B9%B4%E5%86%AC%E5%AD%A3%E5%B2%B3%E9%BA%93%E5%B1%B1%E9%9A%8F%E6%8B%8D/"/>
    <url>/2024/12/27/2024%E5%B9%B4%E5%86%AC%E5%AD%A3%E5%B2%B3%E9%BA%93%E5%B1%B1%E9%9A%8F%E6%8B%8D/</url>
    
    <content type="html"><![CDATA[<p>​期间有三对男女看自己拿相机在拍照，找笔者帮他们拍摄照片，但是用他们自己的手机拍摄的，对方觉得拍得不错很好，其中两对自己也觉得拍得不错。</p><p>​下次再去遇上此类情况，尝试征求对方意见“用他们手机拍摄的同时，能否用自己的相机拍摄几张”，希望能增加自己的摄影实践经验、提升自己的摄影实践水平。</p><p>​ 记录下当天自己拍摄的照片，使用的是入门级相机CanonEOS800D，有时感觉有购置新相机的想法了，存钱中。</p><p>​以后可能会尝试接拍照片，周末有空可约。可能也是为自己以后失业了提前找一份兼职吧。</p><p>​上传到个人博客的存储中时，原图文件太大上传失败，已经上传压缩后的照片，所以有点模糊。个人微信公众号jxytalk上可查看较清晰图片</p><figure><img src="https://s2.loli.net/2024/12/27/5EaXTVwqNidM8zt.jpg"alt="微信图片_20241227234958" /><figcaption aria-hidden="true">微信图片_20241227234958</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/MDNIh8ftJyZkzAW.png"alt="image-20241227235403300" /><figcaption aria-hidden="true">image-20241227235403300</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/3gK6UHwdayfVzib.png"alt="image-20241227235434207" /><figcaption aria-hidden="true">image-20241227235434207</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/dqBT4nRHNVZwSIi.png"alt="image-20241227235442742" /><figcaption aria-hidden="true">image-20241227235442742</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/s5yMZdgelYNFntv.png"alt="image-20241227235453122" /><figcaption aria-hidden="true">image-20241227235453122</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/B7Hr5xMS8ZVuFf3.png"alt="image-20241227235459299" /><figcaption aria-hidden="true">image-20241227235459299</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/DQfHimj78XWw9Rp.png"alt="image-20241227235507944" /><figcaption aria-hidden="true">image-20241227235507944</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/27/quXoyQ8ws9Kc5MV.png"alt="image-20241227235513687" /><figcaption aria-hidden="true">image-20241227235513687</figcaption></figure>]]></content>
    
    
    
    <tags>
      
      <tag>岳麓山附近 随拍 佳能EOS800D</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自己提交的PR被开源项目HAMi合入主线分支了</title>
    <link href="/2024/12/27/%E8%87%AA%E5%B7%B1%E6%8F%90%E4%BA%A4%E7%9A%84PR%E8%A2%AB%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AEHAMi%E5%90%88%E5%85%A5%E4%B8%BB%E7%BA%BF%E5%88%86%E6%94%AF%E4%BA%86/"/>
    <url>/2024/12/27/%E8%87%AA%E5%B7%B1%E6%8F%90%E4%BA%A4%E7%9A%84PR%E8%A2%AB%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AEHAMi%E5%90%88%E5%85%A5%E4%B8%BB%E7%BA%BF%E5%88%86%E6%94%AF%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h1 id="自己提交的pr被接纳">1 自己提交的PR被接纳</h1><p>​昨天，自己在两个月前提交的PR终于被开源项目HAMi接纳，并被合并到master分支中。虽然提交的PR中涉及的内容并不是开源项目关键功能，但自己还是很高兴能能够参与到开源项目的学习与贡献中来<img src="https://s2.loli.net/2024/12/27/ZEwbWv3zUKJY4jQ.png" alt="图片" style="zoom:25%;" />。</p><p>​现在从项目主页“https://github.com/Project-HAMi/HAMi”下面“Monitor（对应的中文文档显示的是“监控”）”监控相关章节可以看到我提交的内容，英文版本与中文版本都有。</p><p>​ 如下是昨天自己邮箱收到的PR被合并通知截图：</p><p><img src="https://s2.loli.net/2024/12/27/UoTaVOwJqKRDEr2.png" alt="image-20241227231818630" style="zoom:50%;" /></p><p>​ 如下是PR最后被合并到主线分支时的相关截图：</p><p><img src="https://s2.loli.net/2024/12/27/TpoA678XsS31qHe.png" alt="image-20241227231833699" style="zoom:50%;" /></p><h1 id="自己提交的pr中涉及的内容">2 自己提交的PR中涉及的内容</h1><p>​ PR链接是：https://github.com/Project-HAMi/HAMi/pull/543.其中主要包括两个文档（一个英文，一个中文），描述的是如何进行在K8S/prometheus/grafana中进行安装配置，实现对HAMi项目中使用到的各类GPU或加速卡资源及其虚拟化的虚拟资源进行监控。</p><p>​ 英文版本如下：Grafana dashboardexample（https://github.com/Project-HAMi/HAMi/blob/master/docs/dashboard.md）</p><p>​ 中文版本如下：Grafana仪表板示例（https://github.com/Project-HAMi/HAMi/blob/master/docs/dashboard.md）</p><p><img src="https://s2.loli.net/2024/12/27/KnjOdTsXoFVpJRb.png" alt="image-20241227231926974" style="zoom:50%;" /></p><h1 id="备注与致谢">3 备注与致谢</h1><p>​ 文档中使用的grafana视图主要由fangfenghuang，自己在其grafana视图的基础上进行了少量修改与说明，并重新发布了proemtheus社区。同时感谢其对我第一次提交PR时给予的帮指导。</p><p>​ 另外感谢HAMi开源贡献者或爱好者 yxl 与 fangfenghuang的评审，还有HAMi官方社区开发维护人员 Nimbus318 的评审。最后感谢 wawa0210执行的合并。</p><p>​感谢大家提供的帮忙，自己将继续学习和参与此开源项目的贡献<img src="https://s2.loli.net/2024/12/27/CgX47TU3a1FGP5R.png" alt="图片" style="zoom:25%;" /></p>]]></content>
    
    
    <categories>
      
      <category>算力虚拟化中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HAMi 提交PR 合并 开源贡献</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>容器运行时的定义、分类、历史与简介</title>
    <link href="/2024/12/23/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E5%88%86%E7%B1%BB%E3%80%81%E5%8E%86%E5%8F%B2%E4%B8%8E%E7%AE%80%E4%BB%8B/"/>
    <url>/2024/12/23/%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%81%E5%88%86%E7%B1%BB%E3%80%81%E5%8E%86%E5%8F%B2%E4%B8%8E%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<p>​ 本文70%左右内容来自对英文文章“https://www.capitalone.com/tech/cloud/container-runtime/”的翻译。笔者首先看到文章“https://www.zhangjiee.com/blog/2021/container-runtime.html”，发现此文是对上述文章的完全翻译，因为笔者个人觉得此中文文章一些地方翻译得不够准确与不够可读，所以笔者个人尝试对上述英文文章进行了再次翻译，同时在其中某些段落插入了一些自己编辑的图文，以更好地理解相关概念，在此做下记录以备后续回忆与学习。</p><h1 id="容器运行时的定义">1 容器运行时的定义</h1><p>​容器本质上是由几个底层的内核原语相关组件捆绑在一起组成，每次创建隔离进程时，都不需要手动隔离、自定义命名空间等，把这些组件捆绑在一起，我们称之为容器。容器运行时就是一个工具，这个工具将这些组件以一起有序高效地方式组合起来，从而构建、管理与销毁一个隔离的、安全的执行环境（即容器），让用户不再需要手动隔离、自定义命名空间等，同时能够以一种简洁方便的方式去对容器的整个周期进行管理。</p><p>​ 随着技术的发展和迭代，它们的运行时也在随着变化。</p><h1 id="容器运行时的早期历史">2 容器运行时的早期历史</h1><p>​ 随着技术的发展和迭代，它们的运行时也在随着变化。</p><p>​自从2007年cgroup被加入Linux内核后，讯速出现了几个利用包括cgroup命名空间在内的7个Linux命名空间的项目，这些项目都是的目的都是为了创建容器化进程。这些项目主要如下几个：</p><ul><li>LXC（https://linuxcontainers.org/lxc/）</li><li>LMCTFY（https://github.com/google/lmctfy）</li><li>systemd-nspawn（https://www.freedesktop.org/software/systemd/man/systemd-nspawn.html）</li><li>rkt（https://github.com/rkt/rkt）</li></ul><h2 id="lxc即linux-containers">LXC即Linux Containers</h2><p>​LXC是在crgoup被引入Linux内核后立即被创建的项目，它被设计用于"full-system"容器，是用来创建Linux容器的，此时的Linux容器跟我们现在常用的Linux上Docker容器或containerd容器是有区别的，最显著的区别在于它们使用不是容器运行时不同。同时Systemd也获得了类似的容器支持，systemd-nspawn可以运行命名空间进程，systemd本身可以控制cgroup。尽管lxc与systemd-nspawn也在其他项目中被利用到了，但它们还是没有能够吸引足够多的终端用户。直到现在也是一个不流行的开源容器化项目。</p><h2 id="dotcloud即后来的docker">dotCloud即后来的Docker）</h2><p>​dotCloud（它就是现在的Docker公司的前身）开始围绕LXC开发各种工具以使容器对开发人员与用户体验更友好。但不久后，dotCloud抛弃了LXC，创建了开放容器倡议（OCI， https://github.com/opencontainers/runtime-spec）来建立业内容器标准，并将一些容器组件开源为 libcontainer（地址：https://github.com/docker-archive/libcontainer ） 项目。</p><h2 id="lmctfy">LMCTFY</h2><p>​ Google开源也其内部容器技术栈的开源版本：LMCTFY（https://github.com/google/lmctfy）。但随着dotCloud（后来改名为Docker）变得流行起来，LMCTFY项目最终被抛弃，LMCTFY项目中的绝大部分功能也被其开发人员复制融入到了Docker的开源项目libcontainer中。</p><h2 id="rkt与appc">rkt与appc</h2><p>​ CoreOS起初在其ContainerdLinux产品中只使用Docker技术栈，一段时间后也发行了一个名为rkt 项目（https://github.com/rkt/rkt）作为Docker的替代品。在当时，rkt提前具备了区别于Docker与其他早期容器运行时的特性。它不需要以root用户运行、没有守护进程、是CLI驱动的，同时它也具有一些独到特性如加密验证和完全的Docker 镜像兼容。 令人惋惜地是，在Docker 创建 开放容器倡议（OCI，https://github.com/opencontainers/runtime-spec）之前，CoreOS发布了一个叫做 appc 的容器标准。但抗不住后起这秀 OCI在全球范围内的流行，CoreOS最终放弃了appc 转而支持OCI，并将appc的部分特性功能也提交给 OCI。至此，rkt与appc最终都被抛弃。</p><p>​ 直至Kubernetes1.24之前，OCI 成为并一直是业界最流行的容器标准。</p><h1 id="容器运行时的汇总">3 容器运行时的汇总</h1><p>​ 当前容器运行时有多种类型，但它们可以被分两大类：OCI 运行时和CRI（容器运行接口）。</p><figure><img src="https://s2.loli.net/2024/12/23/qo9kmvG7t1JLrny.png"alt="image-20241223205205598" /><figcaption aria-hidden="true">image-20241223205205598</figcaption></figure><h1 id="开放容器规范oci">4 开放容器规范（OCI）</h1><p>​ 有时称为低级别运行时，实现 OCI运行时规范专注于管理容器的生命周期，并且无需其它操作。低级别运行时创建和运行容器。</p><p>​ 随着技术的发展和迭代，它们的运行时也在随着变化。</p><h2 id="本地运行时">本地运行时</h2><p>​本地容器运行时在同一个主机内核上运行容器化进程。早期出现的有较大影响力的本地容器运行时有如下，它们当中的其中某些仍然在被广泛使用。</p><p>​runC是Docker在开源项目libcontainer与开放容器规范OCI所有工作的结晶。它是事实上的标准低级运行时，由Go语言实现并由Docker下的开源项目moby维护。</p><p>​Railcar是一个由Oracle创建的OCI运行时实现。它是用Rust语言实现的，对于与内核执行低级的交互操作的容器运行时组件来说，与runC的Go语言代码相比之下，Rust是一门更加优秀的语言。但不幸地是Railcar已经被抛弃了。</p><p>​ crun是一个由Redhat引领的OCI运行时实现。它是containers project（https://github.com/containers ）的一部分，是libpod的姊妹项目。是由C语言实现的，具有性能好、轻量级等特点，是第一批支持cgroups v2（ https://medium.com/nttlabs/cgroup-v2-596d035be4d7 ）的容器运行时之一。</p><p>​rkt不是一个OCI运行时实现，但是它是一个类低级容器运行时。除了支持appc软件集外，它还支持运行Docker与OCI镜像，但它不能与使用OCI运行时的更高级组件进行交互。</p><p>​从现有容器运行时来看，低级容器运行时只有在容器创建与删除阶段才显得尤为重要，一旦相关进程处于运行状态，低级容器运行时就不再被重要关注了即将容器处于运行状态中时低级容器运行时显得不那么重要了。</p><h2 id="沙箱和虚拟化运行时">沙箱和虚拟化运行时</h2><p>​对于开放容器规范OCI，它不仅有本地运行时实现方案，还有虚拟化方向实现方案，早期出现的虚拟化实现方案有如下，其中某些当前仍被使用中。</p><p>​ gVisor（ https://gvisor.dev/ ） 与Nabla（https://nabla-containers.github.io/）都是沙箱运行时实现方案，它们在宿主机与容器进程间提供了更进一步的隔离。不像本地容器运行时那样与宿主机共享内核，此时容器化进程运行在“unikernelor kernelproxy”层，容器化进程与这个层进行交互通信，然后再由这个层代表容器与宿主机内核进行交互。因为增加了隔离，这两个沙箱运行时降低了攻击面，使得容器化进程对宿主机实施破坏或不得影响的功能性更低了。</p><p>​ runV（ https://github.com/hyperhq/runv ），Clear (https://github.com/clearcontainers ）与Kata（https://github.com/kata-containers）都是虚拟化运行时。它们都是OCI运行时实现方案，底层由虚拟机接口而不是宿主机内核提供支持。前两者当前已经被废弃且它们特性已经被Kata所吸收。它（们）能够使用标准的OCI容器镜像，但在使用过程中在容器与宿主机之间提供了强有力的隔离，它（们）使用一个标准的Linux内核镜像来启动一个轻量级虚拟机，然后在这个虚拟机中运行容器化进程。</p><p>​与本地化运行时相比，沙箱运行时与虚拟化运行时在容器的整个生命周期中增加了更多性能上的负面影响。在沙箱运行时容器中，存在一个额外的抽象层即容器进程运行在沙箱unikernel/proxy层，由这个层来传递容器指令给宿主机内核。而在虚拟化运行时容器中，存在一个额外的虚拟化层即整个容器进程都是运行在虚拟机上的，由虚拟机再与宿主机内核进行交互，这比本地运行时直接与内核进行交互更慢；幸运地是，专注于虚拟化运行时下容器性能的AWS Firecracker （ https://github.com/kata-containers）在这方面做出了努力，提供的这种底层虚拟机能够尽可能地将性能影响降到最小。</p><p>​ 以下是对本地运行时沙箱、虚拟化运行时代表性实现方案的对比。</p><figure><img src="https://s2.loli.net/2024/12/23/atpU5XfLC9Zucbl.png"alt="image-20241223205527496" /><figcaption aria-hidden="true">image-20241223205527496</figcaption></figure><h1 id="容器运行时接口cri">5 容器运行时接口（CRI）</h1><p>​当Kubernetes（2014年9月第一个正式版本v0.2，2015年7月v1.0版本正式发布并可在生产环境中使用）这一容器编排工具出现时，Docker已经在业界大为流行，是业界标准的高级容器运行时，所以当时Kubernetes当时只能迁就Docker，将Docker这一高级运行时硬编码到Kubernetes的守护进程kubelet中。之后，随着Kubernetes在业界的大火，社区与企业办都产生了创建一个替代Docker这一高级运行时的要求。</p><p>​关于Kubernetes弃用docker的原因，内容较多，笔者打算另做学习总结然后做记录。</p><p>​rkt是一个尝试这一要求的支持者，通过定制化kubelet的代码产生了rktlet。但是，这种按运行时定制的构建过程无法扩展，此时也正好暴露出了Kubernetes中对抽象运行时模型的需求。为了解决这个痛点，Hyper、CoreOS、Google和Kubernetes的其他赞助商一起协商合作，站在容器编排角度推出了一个容器运行时的一个高级规范即高级容器运行规范，这个规范就是容器运行时接口（英文原名是ContainerRuntime Interface，简称CRI，https://kubernetes.io/blog/2016/12/container-runtime-interface-cri-in-kubernetes/）。通过与CRI集成而不是与特定的低级运行时耦合，kubelet不需要针对每种低级运行时进行硬编码与重编译，就可以灵活地支持多个容器运行时。这不仅符合软件设计的解耦设计规范，也为满足了业界中想要Kubernetes灵活地支持多个容器运行时的要求。</p><p>​CRI同时也对OCI运行时的镜像管理与分发，也对容器存储、快照、网络等其他容器与镜像生命周期中用到的事物也给予了应有关注。不像OCI运行时主要紧密关注于在宿主上创建与运行容器，CRI具备在动态云环境中充分利用容器所需的功能。更有甚者，CRI通常也是委托一个低级的OCI运行时作为其实际上的底层运行时。通过引入CRI，Kubernetes以一种高度可扩展的方式高效地达到将kubelet与底层容器运行时进行解耦这一目的。</p><p>​CRI的第一个实现是dockershim，它在Docker容器引擎的上面提供了一个抽象层（这也是Kubernetes在Docker在业界仍然占据主导地位时的一个折中选择）。随着containerd与runc从Docker技术栈的核心中被分离出来，dockershim实际的地位终于被撼动，containerd当前提供了CRI的完整实现并逐渐成为（或说正在成为）主流。</p><figure><img src="https://s2.loli.net/2024/12/23/24HoaA6m1t7TX9z.png"alt="image-20241223205703497" /><figcaption aria-hidden="true">image-20241223205703497</figcaption></figure><p>​也有一个虚拟化方向的CRI实现，它就是frakti(v1)，它也是第一个非docker式的CRI实现方案（参考：UnifiedKubernetes CRI runtimes based on Kata Containers，https://object-storage-ca-ymq-1.vexxhost.net/swift/v1/6e4619c416ff4bd19e1c087f27a43eea/www-assets-prod/presentation-media/hyper-kata-frakti-cri2.pdf）。它本来是为runV而开发的，同时也被设计与runV协同工作的。虽然是虚拟化方向的，但它提供的功能跟基于本地OCI底层支持的CRI实现是一样的。因为runV被废弃了同时ClearContainers 与runV的特性也被 kata所吸收，现在frakti已经不再流行。“frakti加runV组合”也被当前的“containerd加kata组合”被取代，换句话说“containerd加kata组合”就是当前“frakti加runV组合”方案实现。</p><p>​当前，CRI领域内有两个主要活跃项目，它们分别是containerd与cri-o。以下是对它们的简单介绍。</p><h2 id="containerd">containerd</h2><p>​containerd是从Docker中孕育出来的高级运行时，是开源项目Moby在管理与研发出来的。默认情况下，containerd也是使用runc作为其低级运行时。跟其他源自Docker的容器工具一样，containerd当前是事实上的标准高级运行时。它实现与提供了CRI的全部核心功能，且增加了一些额外功能。containerd中有一个插件设计即cri-containerd （ https://github.com/containerd/cri），它实现了CRI，并且存在多种垫片设计与实现以将containerd与各种低级运行时如kata、runc等进行集成。</p><p>上面提到的这些CRI实现能够与所有的OCI运行时（不仅包括本地运行时，还包含沙箱运行时与虚拟化运行时）进行交互，交互的方式可能是本地交互也可能是通过在中间插入一个插件或垫片。</p><h2 id="cri-o">cri-o</h2><p>​cri-o是一个由Redhat领导的精简CRI实现方案，专为Kubernetes而设计。它意在充当为CRI与各种底层低级OCI运行时之间轻量级桥梁。与containd相比，它的外围功能更少，并委托来自libpod和“ContainerTools”项目的组件进行镜像管理和存储。默认情况下，cri-o也是使用runc作为其底层低级运行时，但在RedHatFedora installations (with cgroups v2)项目中，它使用了crun这一低级运行时。因为cri-o能够对OCI实现完全兼容，cri-o 与低级别的运行时比如kata开箱即用，不需要其它的组件，只需要很少的配置即可。</p><h1 id="容器引擎">6 容器引擎</h1><h2 id="docker容器引擎">docker容器引擎</h2><p>​Docker并不是一个纯粹的CRI实现或OCI实现，但是它包含了CRI的一个实现即containerd，也包含一个OCI的实现。事实上，它具有CRI 或者 OCI范围之外的其他功能，比如镜像构建与签名。那么到底该如何定义Docker？根据我对此文与其他技术文档的学习，最后可以得出如下大致总结：</p><p>​ 第一，Docker现在全称应该叫Docker容器引擎，并且通常将这些完整的容器工具套件称之为容器引擎。而且一般来说，我们在Linux服务器（比如Ubuntu20.04LTS）上通过执行“apt-get install docker-ce docker-ce-clicontainerd.io”命令安装所谓Docker其实就是安装整个Docker容器引擎套件。除了Docker，没有其他单一可执行文件能提供这样一个完整功能，如果一定需要找到一个替换解决方案的话，我们可以从containertools项目中拼凑出一个类似的工具套件。Container Tools 项目遵循了 UNIX小型工具哲学，每个工具只做好一件事情：</p><ul><li>podman - 运行镜像</li><li>buildah - 构建镜像</li><li>skopeo - 分发镜像</li><li>其他的</li></ul><p>​ 第二，Docker是一个大而完备的高级运行时，其用户端核心叫做DockerEngine（ https://docs.docker.com/engine/ ），由 3 部分构成：DockerServer (docker daemon, 简称 dockerd)、REST API 和Docker cli。借助 DockerEngine既能便捷地运行容器进程进行集成开发、也能快速构建分发镜像。下图来自文章“https://www.zeng.dev/post/2020-container-runtimes/” 。</p><figure><img src="https://s2.loli.net/2024/12/23/aQewkdiogORbfnP.png"alt="image-20241223205843274" /><figcaption aria-hidden="true">image-20241223205843274</figcaption></figure><h2 id="containerd容器引擎">containerd容器引擎</h2><p>​containerd其实就是Docker从自身中剥离出来并捐赠给CNCF。从Docker中剥离出来后，containerd现在也是一个独立的容器引擎，下图（来自containerd官网）展示了整个容器技术架构及containerd在其中的位置。</p><figure><img src="https://s2.loli.net/2024/12/23/ATYLiecyoh6m7nt.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>​ 关于containerd还不够了解，更多内容有待进一步探索与补充。</p><h1 id="备注与参考文章">8 备注与参考文章</h1><p>​订阅号文章不方便更新，如后续有修改或完善，将更新到个人博客，博客地址参考文首。技术操作类文章推荐直接访问个人博客查阅，阅读效果更佳。</p><p>​某些观点或阐述，笔者水平有限无法给出正式严谨的答案，唯有引用或参考企业单位的官网与其他前辈的描述。本文某些内容来自以下文章：</p><ul><li>https://www.capitalone.com/tech/cloud/container-runtime/</li><li>https://www.zhangjiee.com/blog/2021/container-runtime.html#org4b14f92</li><li>https://www.zeng.dev/post/2020-container-runtimes/</li><li>https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/comparison-of-docker-containerd-and-sandboxed-container</li><li>https://mp.weixin.qq.com/s/qEKyEseD370xWI-2yIyUzg</li><li>https://containerd.io/</li><li>https://www.cnblogs.com/ricklz/p/17032914.html</li><li>https://blog.csdn.net/projim_tao/article/details/129534626</li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>容器 运行时 kubernetes k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>容器概述</title>
    <link href="/2024/12/18/%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/"/>
    <url>/2024/12/18/%E5%AE%B9%E5%99%A8%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="容器的定义">1 容器的定义</h1><p>​容器是一种虚拟化技术，用于将应用程序及其所有依赖项打包在一起，以便在不同的计算环境中进行移植和运行。</p><p>​每个运行的容器都是可重复的，意味着无论在哪里运行它都会得到相同的行为。容器将应用程序从底层的主机设施中解耦。这使得在不同的云或OS环境中部署更加容易。</p><p>​容器提供了一种隔离的运行环境，使不同应用程序能够在独立的文件系统、网络和进程空间等独立运行环境中运行，提升了安全性和稳定性。通过利用容器技术，可以将应用及其整个运行时环境（包括需要的所有文件及信赖环境）一起进行打包和隔离。从而可以在不同环境（如开发、测试和生产等环境）之间轻松迁移应用，同时还可保留应用的全部功能。容器也是保障IT安全的一个重要组成部分。将安全防护内置于容器管道并为基础架构增添防护，可以保障容器的可靠性、可扩展性和信赖度。利用容器，还可以轻松地在具有一致行为和功能的公共、私有和混合云环境和数据中心（或本地环境）之间移动容器化应用。</p><h1 id="容器与虚拟机的区别">2 容器与虚拟机的区别</h1><p>​容器和虚拟机之间的主要区别在于虚拟化层级、资源利用效率、启动速度和性能以及隔离性。</p><figure><img src="https://s2.loli.net/2024/12/18/XlrPybfMmukY3tL.png"alt="image-20241218234125009" /><figcaption aria-hidden="true">image-20241218234125009</figcaption></figure><p>​相比于传统的虚拟机技术，容器具有更快的启动和停止速度，更少的资源占用，更高的可伸缩性和更好的性能。容器还提供了更好的环境隔离和更高的应用程序密度，可以在相同的硬件资源上运行更多的应用程序实例。</p><p>​容器和传统的虚拟机技术有所不同。传统的虚拟机技术是通过在物理服务器上运行一个完整的操作系统实例来实现虚拟化，每个虚拟机都有自己的内核和操作系统。而容器是在宿主机的操作系统上运行，共享宿主机的内核和操作系统，每个容器只包含应用程序及其依赖项。</p><h1 id="容器是如何工作的">3 容器是如何工作的</h1><p>​容器技术基于操作系统级的虚拟化技术，利用Linux内核的命名空间和控制组等特性，实现了容器的隔离和资源管理。容器使用了一种称为容器镜像的打包格式，包含了应用程序及其依赖项，以及运行时所需的文件系统、网络和进程空间等。容器镜像可以通过容器运行时创建和启动，形成一个独立的运行环境。</p><p>​在Linux内核中，容器不是一类对象。容器本质上由几个底层的内核原语组成：namespace（允许你跟谁交谈），cgroups（允许使用的资源量），和LSMs（Linux安全模块——允许你做的事情）。这些凑在一起能够为我们的进程设置安全、隔离和可计量的执行环境。</p><p>​有兴趣的或想进行更深入学习的“同学”，可以再进一步去学习Linux内核的命名空间、控制组等相关知识。Linux内核的命名空间一共包括mnt、uts、pid、net、ipc、user、cgroup这7种不同命名空间。</p><p>​ Linux内核命名空间参考文章：</p><ul><li><p>Linux kernel内核官网：</p><p>https://www.kernel.org/doc/html/latest/admin-guide/namespaces/index.html</p></li><li><p>man7.org网站：https://man7.org/linux/man-pages/man7/namespaces.7.html</p></li></ul><h1 id="容器与虚拟机的构架对比">4 容器与虚拟机的构架对比</h1><figure><img src="https://s2.loli.net/2024/12/18/KyaMD6qQFgxBGU2.png"alt="image-20241218234218202" /><figcaption aria-hidden="true">image-20241218234218202</figcaption></figure><h1 id="容器的优势">5 容器的优势</h1><ul><li><strong>可移植性</strong></li></ul><p>容器已经成为应用分发和交付的标准技术，将应用与底层运行环境进行解耦，使得应用程序可以在不同的计算环境中快速移植和运行。</p><ul><li><strong>高效性</strong></li></ul><p>相比于传统的虚拟机技术，容器更加轻量级，启动和停止速度更快，占用的资源更少。容器共享操作系统和硬件资源，提高了资源利用率，降低了运行成本。</p><ul><li><strong>环境隔离</strong></li></ul><p>容器提供了一种隔离的运行环境，每个容器都有自己的文件系统、网络和进程空间，保证了应用程序之间的相互隔离。这样可以提高应用程序的安全性和稳定性，避免了不同应用程序之间的冲突和干扰。</p><ul><li><strong>可伸缩性</strong></li></ul><p>容器可以根据需求进行水平和垂直扩展，快速实现应用程序的弹性伸缩。通过容器编排工具，可以自动管理和调度容器的部署和扩展，提高了应用程序的可伸缩性和可靠性。</p><h1 id="容器有哪些实际应用">6 容器有哪些实际应用</h1><p>​ 容器在各种应用场景中有着广泛的应用，以下是其中几个主要应用场景：</p><ul><li><strong>应用程序开发和测试</strong></li></ul><p>容器提供了一个一致的运行环境，使得开发人员可以在开发和测试阶段快速构建和部署应用程序。容器可以将开发环境和生产环境保持一致，提高了开发效率和质量。</p><ul><li><strong>微服务架构</strong></li></ul><p>微服务架构将应用程序拆分为多个小型的、独立部署的服务。容器可以为每个服务提供一个独立的运行环境，使得微服务之间互相隔离，提高了整体系统的可维护性和可伸缩性。</p><ul><li><strong>持续集成和持续部署</strong></li></ul><p>容器可以与持续集成和持续部署工具集成，实现自动化的构建、测试和部署。容器可以快速启动和停止，提供了快速迭代和发布的能力，加快了软件交付的速度。</p><h1 id="备注与引用">7 备注与引用</h1><p>​某些观点或阐述，笔者水平有限无法给出正式严谨的答案，唯有引用企业或单位的官网正式描述。本文某些内容来自以下文章：</p><ul><li>容器的定义与优势：来自阿里云官网“https://www.aliyun.com/getting-started/what-is/what-is-container”</li><li>容器技术的用途或作用：来自redhat官网“https://www.redhat.com/zh/topics/containers”</li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>容器 虚拟化 算力调度 k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算力调度概述</title>
    <link href="/2024/12/14/%E7%AE%97%E5%8A%9B%E8%B0%83%E5%BA%A6%E6%A6%82%E8%BF%B0/"/>
    <url>/2024/12/14/%E7%AE%97%E5%8A%9B%E8%B0%83%E5%BA%A6%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="算力调度是什么">1 算力调度是什么</h1><p>算力调度，简单直白地说，就是调度算力（计算能力）的过程。具体地说就是“基于人工智能应用对算力的需求特点，通过虚拟化、容器化等技术，将算力资源池化为标准算力单元，通过适应性策略及敏捷框架对算力进行精准调度配给，保障AI开发和AI业务的高效运行”的过程。</p><p>​调度能力是智算中心连接上层应用与底层计算设备的核心能力，将聚合的CPU、GPU、FPGA、ASIC等算力资源进行标准化和细粒度切分，满足上层不同类型智能应用对算力的多样化需求，让上层应用更高效、更便捷地对算力资源进行利用。算力调度分为三个算力池化、算力调度、算力服务过程。</p><figure><img src="https://s2.loli.net/2024/12/14/BKH3ZCTca2F9plJ.png"alt="image-20241214232453929" /><figcaption aria-hidden="true">image-20241214232453929</figcaption></figure><p>上图是“智能计算中心总体架构图”，阐述了算力调度在智算中心所处位置。（原图来自国家信息中心在2020年12月份发布的《智能计算中心规划建设指南全文》，本文将其进行了稍许修改重画。）</p><h2 id="算力池化">算力池化</h2><p>硬件技术的不断迭代与更新的同时，涌现了各类异构加速芯片与设备，以满足各类上层应用对计算资源与计算能力的要求。通过将计算资源池化，可以简化算力调用过程，用户就像使用云计算能力一样申请计算资源而无需关注计算设备的种类，方便用户对大规模集群内的计算资源进行按需申请与有效利用。算力池化主要<strong>算力虚拟化</strong>和<strong>应用容器化</strong>。</p><p>​<strong>算力虚拟化</strong>的核心，是向用户直接提供计算能力，避免用户在申请、使用计算能力的过程中对集群内设备的分布、类别、性能等产生关注。通过算力虚拟化，用户避开在大规模计算设备集群中进行设备选择、设备适配的繁杂工作。</p><p>​<strong>应用容器化</strong>，基于容器化的应用部署策略能够显著降低管理应用、支持业务的计算开销，具有较高的灵活性，便于快速在边缘端、计算中心端等计算场景中灵活部署和迁移。</p><h2 id="算力调度">算力调度</h2><p>​通过有效算力调度，提高算力设备的利用率，降低设备闲置率；能够有效整合分散的算力资源，实现跨地域、跨架构、跨异构的高效调度与优化配置，确保算力资源按需分配、高效利用；对用户行为进行分析和监管，优化算力设备布局规划，提升业务部署效能，使应用具有更好的稳定性和扩展性。算力调度涉及<strong>配额策略、共享超分、负载均衡</strong>等策略。</p><p>​算力<strong>配额策略</strong>，智算中心会将池化的计算资源提供给用户，为用户的算力配给进行了有效的划分。</p><p>​算力<strong>共享超分策略</strong>，在保证业务正常申请需求与扩容需求的同时，减少算力资源闲置，提升计算设备利用率，保证训练和推理业务顺利进行。</p><p>​<strong>负载均衡</strong>，以人工智能的推理类业务为代表，对算力的使用、申请、接入等需求进行均衡分配，对应用的稳定性、服务能力、响应速度达到最优的配置。</p><h2 id="算力服务">算力服务</h2><p><strong>训练服务</strong>，依托容器化技术，将运行环境、框架适配过程标准化、模块化，让开发者能够便捷高效地构建运行环境，提交训练任务，保证智算中心内能够部署多样化的开发环境和训练环境，且彼此隔离、不会互相影响；</p><p>​<strong>推理服务</strong>，简化应用部署流程和交互模式，方便用户在智算中心中进行应用部署，保障推理业务的算力分配随推理业务量变化实现弹性伸缩，保障业务稳定可靠。</p><p><strong>注：</strong></p><p>算力调度的名词定义，不同的研究机构或单位对其稍有不同，但基本上都是以“对计算的能力的调度”为中心。以下是其他两个研究机构或单位的定义。</p><p>（1）东吴证券《计算机行业深度报告：算力调度，算力时代的国家电网》中对算力调度的定义：指在一定区域或者系统中合理分配和利用计算机资源的过程。</p><p>（2）Imagination官方博客对算力调度（Computational PowerScheduling或Computing ResourceScheduling）的定义：是指在计算机集群、数据中心或云计算环境中，对计算资源进行分配和管理的过程。尤其是针对大规模计算任务，如人工智能训练、大数据分析、高性能计算等，需要将有限的算力精准地分配到对应的任务中，提高计算效率和资源利用率。</p><h1 id="算力调度的核心技术">2 算力调度的核心技术</h1><p>实现算力调度的技术涉及多个方面，这些技术共同构成了算力调度系统的核心，主要的有如下内容。</p><ul><li><strong>算力感知</strong></li></ul><p>算力感知是实现算力调度的基础，通过感知全网的算力资源信息，包括计算资源、存储资源等，确保能够按需、实时地调度不同位置的算力资源。</p><ul><li><strong>算力度量</strong></li></ul><p>算力度量标准的建立可以将算力资源统一表达为包含计算、网络、存储等多维度资源的综合模型，是实现灵活调度多元异构算力资源的前提。</p><ul><li><strong>算力路由</strong></li></ul><p>算力路由的作用是根据所感知的抽象算网资源，综合考虑计算资源及网络状态，按需将业务流量灵活路由至适当的计算节点中。</p><ul><li><strong>算力调度算法</strong></li></ul><p>算力调度算法是算力调度系统的核心，它根据任务特性、资源可用性、用户需求等因素，实现最优的任务分配。</p><ul><li><strong>虚拟化技术</strong></li></ul><p>通过虚拟化技术，可以将物理算力资源划分为多个虚拟资源，允许多个用户或任务共享同一块物理算力资源，同时保证性能和资源的隔离。</p><ul><li><strong>容器编排技术</strong></li></ul><p>在算力调度中，容器编排技术扮演着关键角色，尤其是在高性能计算场景下。容器编排技术可以实现对容器化应用的高效调度和管理，确保应用能够按需、实时地获得所需的算力资源。</p><ul><li><strong>确定性网络技术</strong></li></ul><p>确定性网络技术为数据流传输提供提供带宽、时延、抖动等质量可确定的服务，有助于保障算力网络中的数据传输质量和稳定性。</p><ul><li><strong>算网编排技术</strong></li></ul><p>算网编排技术能够实现对算力资源和网络资源的统一编排和部署，确保算力任务能够按照预定的路径和策略执行。</p><p>​通过不断优化算力调度技术，也将推动算网协同调度的深化发展，进一步实现计算资源和网络资源的统一管理和协同工作，能够结合网络优势以更高性能、更优稳定性为各类任务的高效处理提供支撑。</p><h1 id="算力调度的核心技术-1">3 算力调度的核心技术</h1><p>以下对算力调度平台的相关描述，不仅适应于AI算力调度平台，也适应于普通的不包含或只包含少量AI资源的算力调度平台。但主要仍指AI算力调度平台，因为当在分析与使用算力调度平台时，主要是关注其中的AI应用及相关软硬件资源。它的核心功能主要有如下几点。</p><ul><li><strong>资源监控和管理</strong></li></ul><p>算力调度平台首先需要监控各种计算资源，包括CPU、GPU、TPU等，以及存储和网络资源的使用情况。通过收集和分析这些数据，平台可以实时了解资源的负载和可用性，并进行相应的管理和调整。</p><ul><li><strong>任务调度与优先级管理</strong></li></ul><p>算力调度平台需要根据任务的类型、优先级和需求，进行智能的任务调度。高优先级的任务通常会被优先分配计算资源，以保证重要任务能够及时完成。而低优先级的任务则可能被推迟或暂停，以便让更紧急的任务得到更多资源。</p><ul><li><strong>弹性扩缩容</strong></li></ul><p>算力调度平台需要具备弹性扩缩容的能力。当任务量增加时，平台应能自动扩展计算资源，以满足需求。而在任务量减少时，平台也能自动释放多余的资源，避免资源浪费。</p><ul><li><strong>资源分配策略</strong></li></ul><p>算力调度平台需要设计合理的资源分配策略，以确保每个任务都能得到足够的计算资源，并且在不同资源间实现均衡的负载。这需要平台考虑到任务的大小、资源的类型、网络延迟等因素，制定相应的调度策略。</p><ul><li><strong>任务迁移与容错</strong></li></ul><p>在分布式系统中，硬件故障或其他意外情况难免发生。算力调度平台应具备任务迁移和容错的能力，使得任务可以从一个故障节点无缝迁移到其他正常节点上，保证任务的可靠执行。</p><ul><li><strong>安全和合规</strong></li></ul><p>确保计算任务在安全的环境中执行，管理用户的访问权限，保护数据的安全性和隐私。</p><h1 id="算力调度平台的应用场景">4 算力调度平台的应用场景</h1><p>应用场景包括如下，可能还有更多内容且还在发展更新中，笔者知识面与水平有限未能全部列举出来：</p><ul><li><strong>AI训练与推理：</strong></li></ul><p>在AI大模型训练和推理过程中，算力调度平台能够实现跨资源池、跨架构、跨厂商的异构算力资源调度，满足AI训练作业的高算力需求。</p><ul><li><strong>云计算与数据中心：</strong></li></ul><p>在云计算和数据中心领域，算力调度平台能够整合不同来源、类型和架构的算力资源，为用户提供按需获取和调度的服务。</p><ul><li><strong>智慧城市与物联网：</strong></li></ul><p>在智慧城市和物联网领域，算力调度平台能够实现对海量数据的快速处理和分析，为城市管理和物联网应用提供强大的算力支持。</p><p>算力调度平台作为推动我国数字经济发展的重要基础设施之一，具有广阔的发展前景和应用空间。随着技术的不断进步和应用场景的不断拓展，算力调度平台将在未来发挥更加重要的作用。未来，随着全国一体化算力调度平台的建设将有利于全国算力供需的精准对接，推动算力像水电煤气网一样“随时随地、即取即用”。</p><h1 id="参考文章">5 参考文章</h1><p>（1）国家信息中心在2020年12月份发布的《智能计算中心规划建设指南全文》</p><p>（2）https://www.cloudchef.io/h-nd-303.html</p><p>（3）Imagination官方博客</p><p>​本文个人学习后的内容总结，如果觉得有用，欢迎点赞与在看！<img src="https://res.wx.qq.com/t/wx_fed/we-emoji/res/assets/Expression/Expression_82@2x.png" alt="img" style="zoom:25%;" /></p><p>​ 后续如有完善或修正，将继续更新此博客。</p>]]></content>
    
    
    <categories>
      
      <category>算力及调度</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算力调度 算力池化 算力服务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-compose本地部署FastGPT与简单使用</title>
    <link href="/2024/12/07/docker-compose%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2FastGPT%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/12/07/docker-compose%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2FastGPT%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景与环境说明">一、背景与环境说明</h1><p>本文主要对如何在本地部署FastGPT进行记录与说明，因为笔者暂时不是专门从事AI与大模型研究工作且目前理解不够，所以还不能对其中配置细节与原理阐述清楚，有待后续发掘。</p><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>GPU情况</th><th>备注</th></tr></thead><tbody><tr><td>t1-gpu</td><td>10.12.62.25</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>8c16g+400G</td><td>NVIDIA A10*1</td><td>部署m3e向量模型</td></tr><tr><td>controller01</td><td>172.20.0.21</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>16c64g+400G</td><td>无</td><td>部署其他所有服务或进程</td></tr></tbody></table><h1 id="二ollama安装与使用">二、ollama安装与使用</h1><p>ollama官网：www.ollama.com</p><p>ollama的github仓库地址：https://github.com/ollama/ollama</p><p>通过ollma下载模型：ollama pull 模型链接，模型链接查看地址：https://www.ollama.com/library</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以下操作在172.20.0.21上操作，操作系统是Ubuntu 20.04.3 LTS -amd64</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">相关操作在一个名为self-llm的conda环境执行：</span><br>conda activate /root/miniconda3/envs/self-llm<br></code></pre></td></tr></table></figure><p>修改ollama的systemd service配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改ollama的systemd service配置文件</span><br>(self-llm) root@controller01:~# vi /etc/systemd/system/ollama.service<br>[Unit]<br>Description=Ollama Service<br>After=network-online.target<br>[Service]<br>ExecStart=/usr/local/bin/ollama serve<br>User=ollama<br>Group=ollama<br>Restart=always<br>RestartSec=3<br>Environment=&quot;PATH=/root/anaconda3/envs/graphrag-test/bin:...&quot;<br>Environment=&quot;OLLAMA_HOST=0.0.0.0&quot;   #添加此行内容（否则后面docker容器化部署的open-webui不能读取到此服务器上的模型）<br>[Install]<br>WantedBy=default.target<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启ollama服务</span><br>(self-llm) root@controller01:~# systemctl daemon-reload<br>(self-llm) root@controller01:~# systemctl restart ollama<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看ollama管理的模型</span><br>(self-llm) root@controller01:~# ollama list<br>NAME                                    ID              SIZE    MODIFIED     <br>qwen:0.5b                               b5dc5e784f2a    394 MB  5 hours ago <br>deepseek-coder:1.3b                     3ddd2d3fc8d2    776 MB  6 hours ago <br>quentinz/bge-large-zh-v1.5:latest       bc8ca0995fcd    651 MB  3 months ago<br>gemma2:9b                               ff02c3702f32    5.4 GB  3 months ago<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看ollama命令的用法</span><br>(self-llm) root@controller01:~# ollama <br>Usage:<br>  ollama [flags]<br>  ollama [command]<br><br>Available Commands:<br>  serve       Start ollama<br>  create      Create a model from a Modelfile<br>  show        Show information for a model<br>  run         Run a model<br>  pull        Pull a model from a registry<br>  push        Push a model to a registry<br>  list        List models<br>  ps          List running models<br>  cp          Copy a model<br>  rm          Remove a model<br>  help        Help about any command<br><br>Flags:<br>  -h, --help      help for ollama<br>  -v, --version   Show version information<br><br>Use &quot;ollama [command] --help&quot; for more information about a command.<br></code></pre></td></tr></table></figure><p>从ollama官网的模型列表中查看某个具体模型的信息：</p><figure><img src="https://s2.loli.net/2024/12/07/eiaMLGkXj56rHRF.png"alt="image-20241111100916875" /><figcaption aria-hidden="true">image-20241111100916875</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">通过ollama运行上述模型，如果模型文件本身不存在，ollama会先去下载模型文件本身到本地</span><br>(self-llm) root@controller01:~# ollama run deepseek-coder:1.3b<br>pulling manifest <br>pulling d040cc185215... 100% ▕█████████████████████████████████████████████████████████████████████████████████▏ 776 MB <br>pulling a3a0e9449cb6... 100% ▕█████████████████████████████████████████████████████████████████████████████████▏ 13 KB         <br>pulling 8893e08fa9f9... 100% ▕█████████████████████████████████████████████████████████████████████████████████▏ 59 B           <br>pulling 8972a96b8ff1... 100% ▕█████████████████████████████████████████████████████████████████████████████████▏ 297 B         <br>pulling d55c9eb1669a... 100% ▕█████████████████████████████████████████████████████████████████████████████████▏ 483 B         <br>verifying sha256 digest <br>writing manifest <br>removing any unused layers <br>success <br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; 你是谁？                      <span class="hljs-comment">#此处就可以输入问题进行提问。如果要结束运行就输入“ctrl+d”</span></span><br></code></pre></td></tr></table></figure><h2 id="docker部署open-webui">2.1 docker部署open webui</h2><p>官网地址：https://github.com/open-webui/open-webui</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">通过容器方式启动与运行</span><br>(self-llm) root@controller01:~# docker run -d -p 18080:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main<br></code></pre></td></tr></table></figure><p>然后可以通过服务器IP+18080端口，即 http://172.20.0.21:18080 访问 openwebui的web界面。</p><figure><img src="https://s2.loli.net/2024/12/07/IVGKa9ANP5FpC2f.png"alt="image-20241111150810100" /><figcaption aria-hidden="true">image-20241111150810100</figcaption></figure><p>第一次登录需要注册一个用户，然后使用此用户登录与使用。</p><p>选择一个ollama管理的模型，然后可以进行对话：</p><figure><img src="https://s2.loli.net/2024/12/07/TaDLvesCHEWP1qr.png"alt="image-20241111162231984" /><figcaption aria-hidden="true">image-20241111162231984</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/07/IogtvyiHPr917Ff.png"alt="image-20241111172408647" /><figcaption aria-hidden="true">image-20241111172408647</figcaption></figure><h1 id="三docker-compose快速部署fastgpt">三、Dockercompose快速部署fastgpt</h1><h2 id="fastgpt介绍">3.1 FastGPT介绍</h2><p>FastGPT 是一个基于 LLM大语言模型的知识库问答系统，提供开箱即用的数据处理、模型调用等能力。同时可以通过Flow 可视化进行工作流编排，从而实现复杂的问答场景！FastGPT是开源项目，遵循附加条件 Apache License 2.0 开源协议，可以 <ahref="https://github.com/labring/FastGPT/fork">Fork</a>之后进行二次开发和发布。FastGPT社区版将保留核心功能，商业版仅在社区版基础上使用 API的形式进行扩展，不影响学习使用。</p><h3 id="fastgpt-能力">3.1.1 FastGPT 能力</h3><h4 id="专属-ai-客服">3.1.1.1 专属 AI 客服</h4><p>通过导入文档或已有问答对进行训练，让 AI模型能根据你的文档以交互式对话方式回答问题。</p><h4 id="简单易用的可视化界面">3.1.1.2 简单易用的可视化界面</h4><p>FastGPT采用直观的可视化界面设计，为各种应用场景提供了丰富实用的功能。通过简洁易懂的操作步骤，可以轻松完成AI 客服的创建和训练流程。</p><h4 id="自动数据预处理">3.1.1.3 自动数据预处理</h4><p>提供手动输入、直接分段、LLM 自动处理和 CSV等多种数据导入途径，其中“直接分段”支持通过 PDF、WORD、Markdown 和 CSV文档内容作为上下文。FastGPT 会自动对文本数据进行预处理、向量化和 QA分割，节省手动训练时间，提升效能。</p><h4 id="工作流编排">3.1.1.4 工作流编排</h4><p>基于 Flow模块的工作流编排，可以帮助你设计更加复杂的问答流程。例如查询数据库、查询库存、预约实验室等。</p><h4 id="强大的-api-集成">3.1.1.5 强大的 API 集成</h4><p>FastGPT 对外的 API 接口对齐了 OpenAI 官方接口，可以直接接入现有的 GPT应用，也可以轻松集成到企业微信、公众号、飞书等平台。</p><h3 id="其他说明">3.1.2 其他说明</h3><p>参考：https://doc.tryfastgpt.ai/docs/development/docker/</p><ul><li>MongoDB：用于存储除了向量外的各类数据</li><li>PostgreSQL/Milvus：存储向量数据</li><li>OneAPI: 聚合各类 AI API，支持多模型调用 （任何模型问题，先自行通过OneAPI 测试校验）</li></ul><h2 id="安装docker-和-docker-compose">3.2 安装docker 和docker-compose</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装 Docker</span><br>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun<br>systemctl enable --now docker<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装 docker-compose</span><br>curl -L https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-`uname -s`-`uname -m` -o /usr/bin/docker-compose<br>chmod +x /usr/bin/docker-compose<br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证安装</span><br>docker -v<br>docker-compose -v<br></code></pre></td></tr></table></figure><h2 id="下载docker-compose.yml">3.3 下载docker-compose.yml</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# conda activate /root/miniconda3/envs/self-llm<br>root@controller01:~# cd /root/miniconda3/envs/self-llm<br>(self-llm) root@controller01:~/miniconda3/envs/self-llm# mkdir fastgpt<br>(self-llm) root@controller01:~/miniconda3/envs/self-llm# cd fastgpt<br>(self-llm) root@controller01:~/miniconda3/envs/self-llm# wget https://raw.githubusercontent.com/labring/FastGPT/refs/heads/main/projects/app/data/config.json<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">pgvector 版本(测试推荐，简单快捷)</span><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm# curl -o docker-compose.yml https://raw.githubusercontent.com/labring/FastGPT/main/files/docker/docker-compose-pgvector.yml<br><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# cp -p docker-compose-pgvector.yml docker-compose.yml <br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# ll<br>total 32<br>drwxr-xr-x  2 root root 4096 Nov  7 16:26 ./<br>drwxr-xr-x 14 root root 4096 Nov  7 16:35 ../<br>-rw-r--r--  1 root root 6771 Nov  7 16:25 config.json<br>-rw-r--r--  1 root root 5644 Nov  7 16:26 docker-compose-pgvector.yml<br>-rw-r--r--  1 root root 5644 Nov  7 16:26 docker-compose.yml<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">1）编辑docker-compose.yml，使用阿里云镜像</span><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# vi docker-compose.yml<br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# grep &quot;image:&quot; docker-compose.yml <br>    #image: pgvector/pgvector:0.7.0-pg15 # docker hub<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:v0.7.0 # 阿里云<br>    #image: mongo:5.0.18 # dockerhub<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mongo:5.0.18 # 阿里云<br>    # image: mongo:4.4.29 # cpu不支持AVX时候使用<br>    #image: ghcr.io/labring/fastgpt-sandbox:v4.8.11 # git<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-sandbox:v4.8.11 # 阿里云<br>    #image: ghcr.io/labring/fastgpt:v4.8.11 # git<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.8.11 # 阿里云<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mysql:8.0.36 # 阿里云<br>    #image: mysql:8.0.36<br>    #image: ghcr.io/songquanpeng/one-api:v0.6.7<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/one-api:v0.6.6 # 阿里云<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2）修改mysql容器在宿主机上的映射端口为3307（我宿主机上3307端口已经被其他服务占用了）</span><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# vi docker-compose.yml<br><span class="hljs-meta prompt_">   # </span><span class="language-bash">oneapi</span><br>   mysql:<br>     image: registry.cn-hangzhou.aliyuncs.com/fastgpt/mysql:8.0.36 # 阿里云<br>     #image: mysql:8.0.36<br>     container_name: mysql<br>     restart: always<br>     ports:<br>       - 3307:3306           #此修改此处<br>     networks:<br>       - fastgpt<br>     command: --default-authentication-plugin=mysql_native_password<br>     environment:<br>       # 默认root密码，仅首次运行有效<br>       MYSQL_ROOT_PASSWORD: oneapimmysql<br>       MYSQL_DATABASE: oneapi<br>     volumes:<br>       - ./mysql:/var/lib/mysql<br>   oneapi:<br>     container_name: oneapi<br>     #image: ghcr.io/songquanpeng/one-api:v0.6.7<br>     image: registry.cn-hangzhou.aliyuncs.com/fastgpt/one-api:v0.6.6 # 阿里云<br>     ports:<br>       - 3001:3000<br>     depends_on:<br>       - mysql<br>     networks:<br>       - fastgpt<br>     restart: always<br>     environment:<br>       # mysql 连接参数<br>       - SQL_DSN=root:oneapimmysql@tcp(mysql:3306)/oneapi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">3）修改OPENAI_BASE_URL的值，CHAT_API_KEY的值暂时不变后续再改</span><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# vi docker-compose.yml<br><span class="hljs-meta prompt_"># </span><span class="language-bash">AI模型的API地址哦。务必加 /v1。这里默认填写了OneApi的访问地址。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##- OPENAI_BASE_URL=http://oneapi:3000/v1</span></span><br>- OPENAI_BASE_URL=http://172.20.0.21:3001/v1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">AI模型的API Key。（这里默认填写了OneAPI的快速默认key，测试通后，务必及时修改）</span><br>- CHAT_API_KEY=sk-fastgpt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4）在oneapi容器后，再添加一个m3e容器</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# vi docker-compose.yml</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> m3e:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   image: registry.cn-hangzhou.aliyuncs.com/fastgpt_docker/m3e-large-api:latest</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   container_name: m3e</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   restart: always</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   ports:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">     - 6008:6008</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   networks:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">     - fastgpt</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   deploy:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">     resources:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       reservations:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">         devices:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">           - driver: nvidia</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">             count: 1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">             capabilities: [gpu]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">相关容器说明：</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">pgvector：向量数据库</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">mongdb：存储用户信息、文件文档信息</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">fastgpt：主程序，其中用到了config.json文件</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">mysql：</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">oneapi：接口统一</span><br><br></code></pre></td></tr></table></figure><h2 id="启动m3e向量模型">3.4 启动m3e向量模型</h2><p>启动m3e向量模型(如果在docker-compose.ym中没配置)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">启动m3e向量模型在上述说明的安装有一个NVIDIA A10 GPU的服务器t1-gpu（ip：10.12.62.25）上操作</span><br>docker pull registry.cn-hangzhou.aliyuncs.com/fastgpt_docker/m3e-large-api:latest<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">GPU模式启动， 并把m3e加载到fastgpt同一个网络（使用一张卡：--gpus=<span class="hljs-string">&#x27;&quot;device=0&quot;&#x27;</span>；使用第0,1张卡：--gpus=<span class="hljs-string">&#x27;&quot;device=0,1&quot;&#x27;</span>；使用全部GPU：--gpus all）。以下默认会将容器的6008端口映射到宿主机的6008端口</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">指定所有GPU</span><br>docker run -dt \<br>  --name m3e-large-api \<br>  --gpus all \<br>  --privileged \<br>  --net=host \<br>  --ipc=host \<br>  --ulimit memlock=-1 \<br>  --ulimit stack=67108864 \<br>  registry.cn-hangzhou.aliyuncs.com/fastgpt_docker/m3e-large-api:latest<br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过序号指定GPU（此时不要加“--privileged”参数，否则仍然可以看到所有GPU）</span><br>docker run -dt \<br>  --name m3e-large-api \<br>  --gpus=&#x27;&quot;device=0&quot;&#x27; \<br>  --net=host \<br>  --ipc=host \<br>  --ulimit memlock=-1 \<br>  --ulimit stack=67108864 \<br>  registry.cn-hangzhou.aliyuncs.com/fastgpt_docker/m3e-large-api:latest<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###CPU模式启动， 并把m3e加载到fastgpt同一个网络（不必要是使用fastgpt网络）</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##docker run -d -p 6008:6008 --name m3e --network fastgpt_fastgpt registry.cn-hangzhou.aliyuncs.com/fastgpt_docker/m3e-large-api:latest</span></span><br></code></pre></td></tr></table></figure><h2 id="修改-config.json-文件">3.5 修改 config.json 文件</h2><p>FastGPT模型配置说明：https://doc.tryfastgpt.ai/docs/development/modelconfig/intro/</p><p>关于config.json文件的说明：https://github.com/labring/FastGPT/blob/main/projects/app/data/model.json</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在llmModels部分添加如下模型配置</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中 deepseek-coder:1.3b 是先前通过ollama已经拉取下来的模型</span><br>    &#123;<br>      &quot;model&quot;: &quot;deepseek-coder:1.3b&quot;,<br>      &quot;name&quot;: &quot;deepseek-coder:1.3b&quot;,<br>      &quot;avatar&quot;: &quot;/imgs/model/openai.svg&quot;,<br>      &quot;maxContext&quot;: 128000,<br>      &quot;maxResponse&quot;: 4000,<br>      &quot;quoteMaxToken&quot;: 100000,<br>      &quot;maxTemperature&quot;: 1.2,<br>      &quot;charsPointsPrice&quot;: 0,<br>      &quot;censor&quot;: false,<br>      &quot;vision&quot;: false,<br>      &quot;datasetProcess&quot;: true,<br>      &quot;usedInClassify&quot;: true,<br>      &quot;usedInExtractFields&quot;: true,<br>      &quot;usedInToolCall&quot;: true,<br>      &quot;usedInQueryExtension&quot;: true,<br>      &quot;toolChoice&quot;: false,<br>      &quot;functionCall&quot;: false,<br>      &quot;customCQPrompt&quot;: &quot;&quot;,<br>      &quot;customExtractPrompt&quot;: &quot;&quot;,<br>      &quot;defaultSystemChatPrompt&quot;: &quot;&quot;,<br>      &quot;defaultConfig&quot;: &#123;<br>        &quot;temperature&quot;: 1,<br>        &quot;stream&quot;: false<br>      &#125;,<br>      &quot;fieldMap&quot;: &#123;<br>        &quot;max_tokens&quot;: &quot;max_completion_tokens&quot;<br>      &#125;<br>    &#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在 vectorModels 部分添加如下模型配置。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其中这个m3e模型就是先前在docker-compose.ym文件中手动新添加的向量模型</span><br>    &#123;<br>      &quot;model&quot;: &quot;m3e&quot;,<br>      &quot;name&quot;: &quot;M3E&quot;,<br>      &quot;price&quot;: 0,<br>      &quot;defaultToken&quot;: 500,<br>      &quot;maxToken&quot;: 1800<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="启动容器">3.6 启动容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# docker-compose up -d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动完成后，查看容器列表</span><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# docker-compose ps<br>NAME                IMAGE                                                               COMMAND                  SERVICE             CREATED             STATUS              PORTS<br>fastgpt             registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.8.11           &quot;sh -c &#x27;node --max-o…&quot;   fastgpt             39 seconds ago      Up 37 seconds       0.0.0.0:3000-&gt;3000/tcp, :::3000-&gt;3000/tcp<br>mongo               registry.cn-hangzhou.aliyuncs.com/fastgpt/mongo:5.0.18              &quot;bash -c &#x27;openssl ra…&quot;   mongo               39 seconds ago      Up 37 seconds       0.0.0.0:27017-&gt;27017/tcp, :::27017-&gt;27017/tcp<br>mysql               registry.cn-hangzhou.aliyuncs.com/fastgpt/mysql:8.0.36              &quot;docker-entrypoint.s…&quot;   mysql               39 seconds ago      Up 37 seconds       33060/tcp, 0.0.0.0:3307-&gt;3306/tcp, :::3307-&gt;3306/tcp<br>oneapi              registry.cn-hangzhou.aliyuncs.com/fastgpt/one-api:v0.6.6            &quot;/one-api&quot;               oneapi              39 seconds ago      Up 35 seconds       0.0.0.0:3001-&gt;3000/tcp, :::3001-&gt;3000/tcp<br>pg                  registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:v0.7.0           &quot;docker-entrypoint.s…&quot;   pg                  39 seconds ago      Up 37 seconds       0.0.0.0:5432-&gt;5432/tcp, :::5432-&gt;5432/tcp<br>sandbox             registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-sandbox:v4.8.11   &quot;docker-entrypoint.s…&quot;   sandbox             39 seconds ago      Up 37 seconds       <br></code></pre></td></tr></table></figure><h2 id="打开-oneapi-添加模型">3.7 打开 OneAPI 添加模型</h2><p>可以通过<code>ip:3001</code>访问OneAPI，默认账号为<code>root</code>密码为<code>123456</code>。</p><p>在OneApi中添加合适的AI模型渠道。<ahref="https://doc.tryfastgpt.ai/docs/development/one-api/">点击查看相关教程</a></p><h3 id="登录oneapi">3.7.1 登录OneApi</h3><figure><img src="https://s2.loli.net/2024/11/07/DjFvZTXokm7AKuR.png"alt="image-20241107171404284" /><figcaption aria-hidden="true">image-20241107171404284</figcaption></figure><h3 id="创建令牌和渠道">3.7.2 创建令牌和渠道</h3><h4 id="创建令牌">3.7.2.1 创建令牌</h4><figure><img src="https://s2.loli.net/2024/12/07/hRwvzuoDTW15SpF.png"alt="image-20241113183540805" /><figcaption aria-hidden="true">image-20241113183540805</figcaption></figure><h4 id="创建渠道">3.7.2.2 创建渠道</h4><figure><img src="https://s2.loli.net/2024/11/07/E5r8mgfh9Bcz1Dw.png"alt="image-20241107172511431" /><figcaption aria-hidden="true">image-20241107172511431</figcaption></figure><figure><img src="https://s2.loli.net/2024/11/07/rdZ5Q2mSYkUiP4H.png"alt="image-20241107172632721" /><figcaption aria-hidden="true">image-20241107172632721</figcaption></figure><h5 id="创建ollama渠道">3.7.2.1.1 创建ollama渠道</h5><figure><img src="https://s2.loli.net/2024/12/07/BZh3bckW8KrVjRs.png"alt="image-20241113184117696" /><figcaption aria-hidden="true">image-20241113184117696</figcaption></figure><ul><li><strong>上图中Base URL样中，更建议将host.docker.internal换成对应的ip地址。</strong></li><li>上图中创建ollama渠道时，模型栏可以将ollama中已经拉取到所有模型都填写进去。</li></ul><p>提交后，可以点击"测试"按钮进行测试：</p><figure><img src="https://s2.loli.net/2024/12/07/9PGFvrMk4AHBVqo.png"alt="image-20241113184505093" /><figcaption aria-hidden="true">image-20241113184505093</figcaption></figure><h5 id="创建m3e渠道">3.7.2.1.2 创建m3e渠道</h5><figure><img src="https://s2.loli.net/2024/12/07/AV516fy9PmYjrIs.png"alt="image-20241113185816938" /><figcaption aria-hidden="true">image-20241113185816938</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/07/CS4NhUMVYX5vRor.png"alt="image-20241113190216645" /><figcaption aria-hidden="true">image-20241113190216645</figcaption></figure><p>此处 m3e 渠道测试时报404，暂时不理会。</p><h2 id="重启fastgpt相关容器">3.8 重启fastgpt相关容器</h2><p><strong>复制 ollama 令牌的密钥：</strong></p><figure><img src="https://s2.loli.net/2024/12/07/Tx34lGbOifz5vdc.png"alt="image-20241113190828105" /><figcaption aria-hidden="true">image-20241113190828105</figcaption></figure><p>sk-ZJ0I49yR2NYUG9mu326cF283380b46159d2b347eB00eD8E3</p><p><strong>修改docker.compose.yml文件：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# vi docker-compose.yml<br>...<br>  fastgpt:<br>    container_name: fastgpt<br>    #image: ghcr.io/labring/fastgpt:v4.8.11 # git<br>    image: registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.8.11 # 阿里云<br>    ports:<br>      - 3000:3000<br>    networks:<br>      - fastgpt<br>    depends_on:<br>      - mongo<br>      - pg<br>      - sandbox<br>      - oneapi<br>    restart: always<br>    environment:<br>      # root 密码，用户名为: root。如果需要修改 root 密码，直接修改这个环境变量，并重启即可。<br>      - DEFAULT_ROOT_PSW=1234<br>      # AI模型的API地址哦。务必加 /v1。这里默认填写了OneApi的访问地址。<br>      ###- OPENAI_BASE_URL=http://oneapi:3000/v1<br>      - OPENAI_BASE_URL=http://172.20.0.21:3001/v1<br>      # AI模型的API Key。（这里默认填写了OneAPI的快速默认key，测试通后，务必及时修改）<br>      #- CHAT_API_KEY=sk-fastgpt<br>      - CHAT_API_KEY=sk-ZJ0I49yR2NYUG9mu326cF283380b46159d2b347eB00eD8E3              #####修改这里<br>...<br></code></pre></td></tr></table></figure><p><strong>执行重启容器：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# docker-compose restart<br><br>(self-llm) root@controller01:~/miniconda3/envs/self-llm/fastgpt# docker-compose ps  <br>NAME                IMAGE                                                               COMMAND                  SERVICE             CREATED             STATUS              PORTS<br>fastgpt             registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt:v4.8.11           &quot;sh -c &#x27;node --max-o…&quot;   fastgpt             8 seconds ago       Up 5 seconds        0.0.0.0:3000-&gt;3000/tcp, :::3000-&gt;3000/tcp<br>mongo               registry.cn-hangzhou.aliyuncs.com/fastgpt/mongo:5.0.18              &quot;bash -c &#x27;openssl ra…&quot;   mongo               8 seconds ago       Up 6 seconds        0.0.0.0:27017-&gt;27017/tcp, :::27017-&gt;27017/tcp<br>mysql               registry.cn-hangzhou.aliyuncs.com/fastgpt/mysql:8.0.36              &quot;docker-entrypoint.s…&quot;   mysql               8 seconds ago       Up 6 seconds        33060/tcp, 0.0.0.0:3307-&gt;3306/tcp, :::3307-&gt;3306/tcp<br>oneapi              registry.cn-hangzhou.aliyuncs.com/fastgpt/one-api:v0.6.6            &quot;/one-api&quot;               oneapi              8 seconds ago       Up 5 seconds        0.0.0.0:3001-&gt;3000/tcp, :::3001-&gt;3000/tcp<br>pg                  registry.cn-hangzhou.aliyuncs.com/fastgpt/pgvector:v0.7.0           &quot;docker-entrypoint.s…&quot;   pg                  8 seconds ago       Up 6 seconds        0.0.0.0:5432-&gt;5432/tcp, :::5432-&gt;5432/tcp<br>sandbox             registry.cn-hangzhou.aliyuncs.com/fastgpt/fastgpt-sandbox:v4.8.11   &quot;docker-entrypoint.s…&quot;   sandbox             8 seconds ago       Up 7 seconds        <br></code></pre></td></tr></table></figure><h1 id="四fastgpt中配置知识库与应用">四、FastGPT中配置知识库与应用</h1><p>目前可以通过 <code>ip:3000</code> 直接访问(注意防火墙)。登录用户名为<code>root</code>，密码为<code>docker-compose.yml</code>环境变量里设置的<code>DEFAULT_ROOT_PSW</code>。</p><p>如果需要域名访问，请自行安装并配置 Nginx。</p><p>首次运行，会自动初始化 root 用户，密码为<code>1234</code>（与环境变量中的<code>DEFAULT_ROOT_PSW</code>一致），日志里会提示一次<code>MongoServerError: Unable to read from a snapshot due to pending collection catalog changes;</code>可忽略。</p><figure><img src="https://s2.loli.net/2024/11/07/B2VQsCWbHkgwP6E.png"alt="image-20241107174345779" /><figcaption aria-hidden="true">image-20241107174345779</figcaption></figure><p>登录后，默认是没有可用的应用的。</p><h2 id="创建通用知识库">4.1 创建通用知识库</h2><figure><img src="https://s2.loli.net/2024/12/07/8wMdQznlHbxKZOy.png"alt="image-20241113192714415" /><figcaption aria-hidden="true">image-20241113192714415</figcaption></figure><h2 id="知识库导入数据集">4.2 知识库导入数据集</h2><figure><img src="https://s2.loli.net/2024/12/07/v75reJxjiG9gqn4.png"alt="image-20241113192910065" /><figcaption aria-hidden="true">image-20241113192910065</figcaption></figure><figure><img src="https://s2.loli.net/2024/12/07/ThOAMz6vWDQwHYI.png"alt="image-20241113192954019" /><figcaption aria-hidden="true">image-20241113192954019</figcaption></figure><p>此处选择本地一个doc 文件，然后下一步：</p><figure><img src="https://s2.loli.net/2024/12/07/jEtFWpG1SJKbaAm.png"alt="image-20241113193141780" /><figcaption aria-hidden="true">image-20241113193141780</figcaption></figure><p>选择问答拆分，然后下一步：</p><figure><img src="https://s2.loli.net/2024/12/07/vFn4KZJ7wzhPdtk.png"alt="image-20241113193227525" /><figcaption aria-hidden="true">image-20241113193227525</figcaption></figure><p>开始上传：</p><figure><img src="https://s2.loli.net/2024/12/07/xyszi7J8TLfPetV.png"alt="image-20241113193305696" /><figcaption aria-hidden="true">image-20241113193305696</figcaption></figure><p>上传完成后：</p><figure><img src="https://s2.loli.net/2024/12/07/Ood5EkGS72TBnD4.png"alt="image-20241113193357782" /><figcaption aria-hidden="true">image-20241113193357782</figcaption></figure><p><strong>请等待知识库文件条目的状态变更为“已就绪”</strong></p><h2 id="创建应用">4.3 创建应用</h2><figure><img src="https://s2.loli.net/2024/12/07/a8A3yPgYBjsUCMu.png"alt="image-20241113193630915" /><figcaption aria-hidden="true">image-20241113193630915</figcaption></figure><p><strong>选择“知识库+对话引导”：</strong></p><figure><img src="https://s2.loli.net/2024/12/07/cFd4DCh8g12rJlo.png"alt="image-20241113193709870" /><figcaption aria-hidden="true">image-20241113193709870</figcaption></figure><h2 id="配置应用">4.4 配置应用</h2><figure><img src="https://s2.loli.net/2024/12/07/MPEqAaIFS3Be2uK.png"alt="image-20241113193846005" /><figcaption aria-hidden="true">image-20241113193846005</figcaption></figure><p><strong>选择deepseek-coder:1.3b：</strong></p><figure><img src="https://s2.loli.net/2024/12/07/sdHmcM9w1FuyYOC.png"alt="image-20241113193942936" /><figcaption aria-hidden="true">image-20241113193942936</figcaption></figure><p><strong>关联知识库：</strong></p><figure><img src="https://s2.loli.net/2024/12/07/GL1ATKN5gCXv4qc.png"alt="image-20241113200034815" /><figcaption aria-hidden="true">image-20241113200034815</figcaption></figure><p><strong>选择先前创建的知识库：</strong></p><figure><img src="https://s2.loli.net/2024/12/07/xnSr6IUYf8T4uX7.png"alt="image-20241113200112918" /><figcaption aria-hidden="true">image-20241113200112918</figcaption></figure><p>然后，右上角，点击“保存并发布”。</p><figure><img src="https://s2.loli.net/2025/01/23/9Pgco5fByaDNt1Z.png"alt="image-20250123150725679" /><figcaption aria-hidden="true">image-20250123150725679</figcaption></figure><h2 id="查看应用与使用">4.5 查看应用与使用</h2><h3 id="在工作台中使用">4.5.1 在工作台中使用</h3><figure><img src="https://s2.loli.net/2025/01/23/ZBflSOd2r8sHRwq.png"alt="image-20250123150751085" /><figcaption aria-hidden="true">image-20250123150751085</figcaption></figure><figure><img src="https://s2.loli.net/2025/01/23/va7EnfJ5hObQk43.png"alt="image-20250123150948199" /><figcaption aria-hidden="true">image-20250123150948199</figcaption></figure><h3 id="在聊天中直接使用">4.5.2 在聊天中直接使用</h3><figure><img src="https://s2.loli.net/2025/01/23/ntHVWKXOGog9bZQ.png"alt="image-20250123151056398" /><figcaption aria-hidden="true">image-20250123151056398</figcaption></figure><figure><img src="https://s2.loli.net/2025/01/23/nfNAKcoMDOEeVZJ.png"alt="image-20250123151156093" /><figcaption aria-hidden="true">image-20250123151156093</figcaption></figure><h1 id="五备注">五、备注</h1><h2 id="现有问题">5.1 现有问题</h2><h3 id="每次使用问答功能时fastgpt容器日志中会有如下错误">5.1.1每次使用问答功能时，fastgpt容器日志中会有如下错误</h3><figure><img src="https://s2.loli.net/2024/12/08/4QeDjE9WngOTHUS.png"alt="image-20241208094204434" /><figcaption aria-hidden="true">image-20241208094204434</figcaption></figure><p>解决办法：</p><p>暂未解决。从网上查看的资料来看，极可能是config.json文件中关于模型的某个参数配置不正确或不恰当所致，但不知是哪个具体是哪个地方的配置不当所致。此报错暂时不影响整体功能</p><h2 id="参考视频">5.2 参考视频</h2><p>https://www.bilibili.com/video/BV1xMyGYwEdk/?spm_id_from=333.337.search-card.all.click&amp;vd_source=0b5fe5d5aa31f64bf7462d1d094b70a2</p><h2 id="后续更新">5.3 后续更新</h2><p>笔者个人博客“https://jiangsanyin.github.io/archives/”2024年12月7日的文章</p>]]></content>
    
    
    <categories>
      
      <category>大模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FastGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s离线部署-使用kubekey部署aarch64高可用版k8s1.23.17+ksp3.4.1</title>
    <link href="/2024/12/06/k8s%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubekey%E9%83%A8%E7%BD%B2arm64%E9%AB%98%E5%8F%AF%E7%94%A8%E7%89%88k8s1-23-17-ksp3-4-1/"/>
    <url>/2024/12/06/k8s%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubekey%E9%83%A8%E7%BD%B2arm64%E9%AB%98%E5%8F%AF%E7%94%A8%E7%89%88k8s1-23-17-ksp3-4-1/</url>
    
    <content type="html"><![CDATA[<h1 id="一环境信息介绍">一、环境信息介绍</h1><table><thead><tr><th><strong>主机名</strong></th><th><strong>IP</strong></th><th><strong>root密码</strong></th><th><strong>规格</strong></th><th><strong>磁盘</strong></th><th><strong>操作系统</strong></th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>ksp-deploy</td><td>172.25.253.106</td><td>cloud@123</td><td>4c8g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>联网，生成artifact等文件</td></tr><tr><td>node01</td><td>172.25.253.93</td><td>cloud@123</td><td>8c16g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>控制节点</td></tr><tr><td>node02</td><td>172.25.253.94</td><td>cloud@123</td><td>8c16g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>控制节点</td></tr><tr><td>node03</td><td>172.25.253.95</td><td>cloud@123</td><td>8c16g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>控制节点</td></tr><tr><td>node04</td><td>172.25.253.113</td><td>cloud@123</td><td>8c16g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>工作节点</td></tr><tr><td>node05</td><td>172.25.253.114</td><td>cloud@123</td><td>8c16g</td><td>400g</td><td>Ubuntu 20.04.3 LTS-aarch64</td><td>工作节点</td></tr></tbody></table><p>环境涉及软件版本信息：</p><ul><li>K8S节点操作系统：<strong>Ubuntu 20.04.3 LTS -aarch64</strong></li><li>KubeSphere：<strong>v3.4.1</strong></li><li>K8S：<strong>v1.23.17</strong></li><li>Docker：<strong>24.0.6</strong></li><li>KubeKey: <strong>v3.0.13</strong></li><li>cni-plugins: <strong>v1.2.0</strong></li><li>crictl: <strong>v1.24.0</strong></li><li>etcd: <strong>v3.4.13</strong></li><li>helm: <strong>v3.9.0</strong></li><li>kubeadm、kubectl、kubelet: <strong>v1.23.17</strong></li></ul><p>​ <a href="https://github.com/kubesphere/kubekey">KubeKey</a> 使用<code>/var/lib/docker</code> 作为默认路径来存储所有 Docker相关文件（包括镜像）。建议添加附加存储卷（本文中未添加），分别给<code>/var/lib/docker</code> 和 <code>/mnt/registry</code> 挂载至少<strong>100G</strong>。</p><p>​本文假设联网的服务器ksp-deploy上相关基础操作如安装、配置docker等已经完成，未进行介绍说明。</p><h1 id="二离线安装介绍">二、离线安装介绍</h1><p>​ KubeKey 从 v2.1.0 版开始新增了清单 (manifest) 和制品 (artifact)的概念，为用户离线部署 KubeSphere 和 K8s集群提供了一种简单便捷的解决方案。</p><p>​ manifest 是一个描述当前 Kubernetes 集群信息和定义 artifact制品中需要包含哪些内容的文本文件。</p><p>​ 使用 KubeKey，用户只需使用清单 manifest文件来定义将要离线部署的集群环境需要的内容，再通过该 manifest 来导出制品artifact 文件即可完成准备工作。离线部署时只需要 KubeKey 和 artifact就可快速、简单的在环境中部署镜像仓库 Harbor 和 KubeSphere 以及 K8s集群。</p><p>​ KubeKey 生成 manifest 文件有两种方式：</p><ul><li>利用现有运行中的集群作为源生成 manifest文件，是官方推荐的一种方式，具体参考 KubeSphere <ahref="https://v3-1.docs.kubesphere.io/zh/docs/installing-on-linux/introduction/air-gapped-installation/">官网的离线部署文档</a>。</li><li>根据 <ahref="https://github.com/kubesphere/kubekey/blob/master/docs/manifest-example.md">manifest模板文件</a> 手动编写 manifest 文件。</li></ul><p>​ 第一种方式的好处是可以根据 1:1的运行集群构建离线集群，依赖于已有集群，灵活度不够，并不是所有人都具备这种条件。</p><p>​但本文中涉及的是arm64构架服务器上搭建k8s1.23.17+ksp3.4.1环境，上述方法在amd64构架服务器上能成功，在此处不能成功（至少笔者自己未成功。其中笔者遇到失败之处就是不论是否使用harbor做镜像仓库，安装过程中都会尝试去下载harbor安装文件，但harbor官方并未提供arm64的安装文件，所以反复下载、反复失败）。所以笔者选择了逐步手动下载相关安装二进制文件、镜像与其他工具文件等，最后完成arm64构架服务器上k8s1.23.17+ksp3.4.1环境的安装部署。其中最关键的在于提前下载准备好离线安装k8s1.23.17+ksp3.4.1环境中用到<strong>Kubernetes二进制文件、Kubernetes与Kubesphere用到的镜像</strong>，其他的大致都是围绕此二者展开进行准备。</p><h1 id="三服务器的前置操作">三、服务器的前置操作</h1><p>建议所有服务器都要执行。</p><h2 id="设置各服务器时区">3.1 设置各服务器时区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">timedatectl set-timezone Asia/Shanghai<br></code></pre></td></tr></table></figure><h2 id="设置各服务器主机名">3.2 设置各服务器主机名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname xxx<br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后退出终端并重新创建一个终端会话</span><br></code></pre></td></tr></table></figure><h2 id="设置主机与ip的映射信息">3.3 设置主机与ip的映射信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &gt;&gt; /etc/hosts &lt;&lt;EOF<br>172.25.253.106 ksp-deploy<br>172.25.253.93 node01<br>172.25.253.94 node02<br>172.25.253.95 node03<br>172.25.253.113 node04<br>172.25.253.114 node05<br>EOF<br></code></pre></td></tr></table></figure><h2 id="设置时间同步">3.4 设置时间同步</h2><p>​最好以离线k8s环境的某个节点做时间同步的源服务器。本文为了简化操作，未执行。生产环境中建议执行。</p><h1 id="四离线部署资源制作">四、离线部署资源制作</h1><p>制作离线部署资源需要找一台能联通互联网的节点（本文中是ksp-deploy），本文为了资源的制作和离线部署验证，单独增加了一个能联网的<strong>ksp-deploy</strong> 节点。</p><p>在该节点下载 KubeKey （下文简称 KK）<strong>v3.0.13</strong>。具体 KK版本号可以在 <ahref="https://github.com/kubesphere/kubekey/releases">KubeKey发行页面</a> 查看。</p><h2 id="下载-kubekey">4.1 下载 KubeKey</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-deploy:~# mkdir /root/kubekey<br>root@ksp-deploy:~# cd /root/kubekey<br><span class="hljs-meta prompt_"># </span><span class="language-bash">选择中文区下载(访问 GitHub 受限时使用)</span><br>root@ksp-deploy:~/kubekey# export KKZONE=cn<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行下载命令，获取指定版本的 kk（受限于网络可能会失败，可能需要执行多次）</span><br>root@ksp-deploy:~/kubekey# curl -sfL https://get-kk.kubesphere.io | VERSION=v3.0.13 sh -<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/28/qSkxtXjcFlwdTOs.png"alt="image-20241228172413417" /><figcaption aria-hidden="true">image-20241228172413417</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-deploy:~/kubekey# chown root:root kk<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看kubekey3.0.13版本</span><br>root@ksp-deploy:~/kubekey# ./kk version<br>kk version: &amp;version.Info&#123;Major:&quot;3&quot;, Minor:&quot;0&quot;, GitVersion:&quot;v3.0.13-dirty&quot;, GitCommit:&quot;ac75d3ef3c22e6a9d999dcea201234d6651b3e72&quot;, GitTreeState:&quot;dirty&quot;, BuildDate:&quot;2023-11-07T08:43:42Z&quot;, GoVersion:&quot;go1.19.2&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/arm64&quot;&#125;<br></code></pre></td></tr></table></figure><h2 id="准备安装镜像">4.2 准备安装镜像</h2><p>​ 在 Linux 上安装 KubeSphere 和 Kubernetes时，需要准备所有必需镜像文件，并事先下载 Kubernetes 二进制文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行下面的命令获取官方 releases v3.4.1 对应的 images-list</span><br>root@ksp-deploy:~/kubekey# wget https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/images-list.txt<br></code></pre></td></tr></table></figure><p>​但上述文件不能直接使用（从官网上下载下来的这个文件应该只是x86平台上验证过的。这个文件中有些镜像并没有对应arm64版本镜像；此外，非全量安装时不是所有镜像都是需要的）。​经过修改后image-list.txt文件如下（已经经过验证）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-deploy:~/kubekey#  cat images-list.txt<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#k8s-images</span></span><br>kubesphere/pause:3.6<br>kubesphere/kube-apiserver:v1.23.17<br>kubesphere/kube-controller-manager:v1.23.17<br>kubesphere/kube-scheduler:v1.23.17<br>kubesphere/kube-proxy:v1.23.17<br>coredns/coredns:1.8.6<br>kubesphere/k8s-dns-node-cache:1.15.12<br>calico/kube-controllers:v3.26.1<br>calico/cni:v3.26.1<br>calico/node:v3.26.1<br>calico/pod2daemon-flexvol:v3.26.1<br>openebs/provisioner-localpv:3.3.0<br>openebs/linux-utils:3.3.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-images</span></span><br>kubesphere/ks-installer:v3.4.1<br>kubesphere/ks-apiserver:v3.4.1<br>kubesphere/ks-console:v3.4.1<br>kubesphere/ks-controller-manager:v3.4.1<br>kubesphere/kubectl:v1.20.0<br>kubesphere/kubectl:v1.22.0<br>kubesphere/kubefed:v0.8.1<br>kubesphere/tower:v0.2.1<br>minio/minio:RELEASE.2024-08-17T01-24-54Z<br>minio/mc:RELEASE.2024-08-17T11-33-50Z<br>csiplugin/snapshot-controller:v4.0.0<br>kubesphere/nginx-ingress-controller:v1.3.1<br>mirrorgooglecontainers/defaultbackend-arm64:1.4<br>kubesphere/metrics-server:v0.4.2<br>redis:5.0.14-alpine<br>haproxy:2.0.25-alpine<br>haproxy:2.3<br>alpine:3.14<br>osixia/openldap:1.3.0<br>kubesphere/netshoot:v1.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubeedge-images</span></span><br>kubeedge/cloudcore:v1.13.0<br>kubesphere/iptables-manager:v1.13.0<br>kubesphere/edgeservice:v0.3.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#gatekeeper-images</span></span><br>openpolicyagent/gatekeeper:v3.5.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#openpitrix-images</span></span><br>kubesphere/openpitrix-jobs:v3.3.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-devops-images</span></span><br>kubesphere/devops-apiserver:ks-v3.4.1<br>kubesphere/devops-controller:ks-v3.4.1<br>kubesphere/devops-tools:ks-v3.4.1<br>kubesphere/ks-jenkins:v3.4.0-2.319.3-1<br>jenkins/inbound-agent:4.10-2<br>kubesphere/s2ioperator:v3.2.1<br>kubesphere/java-11-centos7:v3.2.0<br>kubesphere/java-8-centos7:v3.2.0<br>quay.io/argoproj/argocd:v2.3.3<br>quay.io/argoproj/argocd-applicationset:v0.4.1<br>ghcr.io/dexidp/dex:v2.30.2<br>redis:6.2.6-alpine<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-monitoring-images</span></span><br>jimmidyson/configmap-reload:v0.7.1<br>prom/prometheus:v2.39.1<br>kubesphere/prometheus-config-reloader:v0.55.1<br>kubesphere/prometheus-operator:v0.55.1<br>kubesphere/kube-rbac-proxy:v0.11.0<br>kubesphere/kube-state-metrics:v2.6.0<br>prom/node-exporter:v1.3.1<br>prom/alertmanager:v0.23.0<br>thanosio/thanos:v0.31.0<br>grafana/grafana:8.3.3<br>kubesphere/kube-rbac-proxy:v0.11.0<br>kubesphere/notification-manager-operator:v2.3.0<br>kubesphere/notification-manager:v2.3.0<br>kubesphere/notification-tenant-sidecar:v3.2.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-logging-images</span></span><br>kubesphere/opensearch-curator:v0.0.5<br>kubesphere/fluent-bit:v1.9.4<br>kubesphere/log-sidecar-injector:v1.2.0<br>elastic/filebeat:6.7.0<br>kubesphere/kube-events-operator:v0.6.0<br>kubesphere/kube-events-ruler:v0.6.0<br>kubesphere/kube-auditing-operator:v0.2.0<br>kubesphere/kube-auditing-webhook:v0.2.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#istio-images</span></span><br>jaegertracing/jaeger-operator:1.29<br>jaegertracing/jaeger-agent:1.29<br>jaegertracing/jaeger-collector:1.29<br>jaegertracing/jaeger-query:1.29<br>jaegertracing/jaeger-es-index-cleaner:1.29<br>kubesphere/kiali-operator:v1.50.1<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#example-images</span></span><br>busybox:1.31.1<br></code></pre></td></tr></table></figure><h2 id="下载-kubernetes-二进制文件">4.3 下载 Kubernetes 二进制文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载 offline-installation-tool.sh</span><br>root@ksp-deploy:~/kubekey# curl -L -O https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/offline-installation-tool.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">给文件增加可执行权限</span><br>root@ksp-deploy:~/kubekey# chmod +x offline-installation-tool.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">执查看如何使用脚本</span><br>root@ksp-deploy:~/kubekey# ./offline-installation-tool.sh -h<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载 Kubernetes 二进制文件</span><br>root@ksp-deploy:~/kubekey# export KKZONE=cn<br>root@ksp-deploy:~/kubekey# export HELM_VERSION=v3.9.0 &amp;&amp; export CNI_VERSION=v1.2.0 &amp;&amp; export CRICTL_VERSION=v1.24.0 &amp;&amp; export ETCD_VERSION=v3.4.13 &amp;&amp; export DOCKER_VERSION=24.0.6;<br>root@ksp-deploy:~/kubekey# ./offline-installation-tool.sh -b -v v1.23.17<br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行脚本后，会在当前目录下自动创建一个文件夹 kubekey。请注意，后面创建集群时，该文件夹和 kk 必须放在同一个目录</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/30/figQNSrTJ5RIWeZ.png"alt="image-20241230195525723" /><figcaption aria-hidden="true">image-20241230195525723</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">还需要下载一个calicoctl-linux-arm64 文件</span><br>root@ksp-deploy:~/kubekey# curl -L -o kubekey/v1.23.17/arm64/calicoctl-linux-arm64 https://github.com/projectcalico/calico/releases/download/v3.26.1/calicoctl-linux-arm64 -O <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看创建的文件夹及下载的文件</span><br>root@ksp-deploy:~/kubekey# ls -alh kubekey/v1.23.17/arm64/<br>total 419M<br>drwxr-xr-x 2 root root 4.0K Dec 30 20:12 .<br>drwxr-xr-x 3 root root 4.0K Dec 29 17:05 ..<br>-rw-r--r-- 1 root root  59M Dec 30 19:30 calicoctl-linux-arm64<br>-rw-r--r-- 1 root root  37M Dec 30 19:53 cni-plugins-linux-arm64-v1.2.0.tgz<br>-rw-r--r-- 1 root root  13M Dec 30 19:53 crictl-v1.24.0-linux-arm64.tar.gz<br>-rw-r--r-- 1 root root  61M Oct 26  2023 docker-24.0.6.tgz<br>-rw-r--r-- 1 root root  16M Dec 30 19:53 etcd-v3.4.13-linux-arm64.tar.gz<br>-rw-r--r-- 1 root root  44M Dec 30 19:52 helm<br>-rw-r--r-- 1 root root  41M Dec 30 19:51 kubeadm<br>-rw-r--r-- 1 root root  42M Dec 30 19:52 kubectl<br>-rw-r--r-- 1 root root 110M Dec 30 19:52 kubelet<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">笔者在下载时docker虽然显示成功但其实下载下来的 kubekey/v1.23.17/arm64/docker-24.0.6.tgz 文件只有2.3K，并不可用</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">于是手动重新下载</span><br>root@ksp-deploy:~/kubekey# wget https://download.docker.com/linux/static/stable/aarch64/docker-24.0.6.tgz -O kubekey/v1.23.17/arm64/docker-24.0.6.tgz<br>root@ksp-deploy:~/kubekey# ls -alh kubekey/v1.23.17/arm64/docker-24.0.6.tgz<br>-rw-r--r-- 1 root root 61M Oct 26  2023 kubekey/v1.23.17/arm64/docker-24.0.6.tgz<br></code></pre></td></tr></table></figure><h2 id="拉取部署过程中的镜像">4.4 拉取部署过程中的镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-deploy:~/kubekey# ./offline-installation-tool.sh -s -l images-list.txt -d ./kubesphere-images<br><span class="hljs-meta prompt_">#</span><span class="language-bash">总共大概有4G左右</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/29/VKPmkQFJB6pUXbs.png"alt="image-20241229171432036" /><figcaption aria-hidden="true">image-20241229171432036</figcaption></figure><h2 id="准备registry2镜像">4.5 准备registry:2镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ksp-deploy:~/kubekey# docker pull registry:2<br>root@ksp-deploy:~/kubekey# docker save -o registry-2.tar.gz registry:2<br></code></pre></td></tr></table></figure><h2 id="打包压缩部署镜像文件">4.6 打包压缩部署镜像文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将 整个kubesphere-images/ 目录打包压缩成一个文件</span><br>root@ksp-deploy:~/kubekey# tar -zcf kubesphere-images.tar.gz kubesphere-images/<br>root@ksp-deploy:~/kubekey# ls -alh kubesphere-images.tar.gz<br>-rw-r--r-- 1 root root 4.0G Dec 29 17:26 kubesphere-images.tar.gz<br></code></pre></td></tr></table></figure><h2 id="准备与打包压缩依赖组件离线安装包">4.7准备与打包压缩依赖组件离线安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">方法1：如下方法只下载部署k8s与kubesphere时需要用到的依赖组件 的离线安装文件</span><br>root@ksp-deploy:~/kubekey# mkdir dependent-components<br>root@ksp-deploy:~/kubekey# cd dependent-components<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看依赖：</span><br>root@ksp-deploy:~/kubekey/dependent-components# apt-cache depends socat conntrack ebtables ipset ipvsadm<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载 deb 依赖包</span><br>root@ksp-deploy:~/kubekey/dependent-components# apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances --no-pre-depends depends socat conntrack ebtables ipset ipvsadm | grep -v i386 | grep &quot;^\w&quot;)<br><span class="hljs-meta prompt_">#</span><span class="language-bash">打包压缩</span><br>root@ksp-deploy:~/kubekey# tar -zcf dependent-components.tar.gz dependent-components/<br>root@ksp-deploy:~/kubekey# ls -alh dependent-components.tar.gz <br>-rw-r--r-- 1 root root 6.8M Dec 30 13:03 dependent-components.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">方法2：真正在离线部署此类环境应该会准备一个操作系统的常用组件离线安装本地源，此处不展开阐述</span><br></code></pre></td></tr></table></figure><h2 id="打包压缩其他文件">4.8 打包压缩其他文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">把 KubeKey文件夹、kubekey-v3.0.13-linux-arm64.tar.gz、offline-installation-tool.sh等5个文件（夹）也制作成压缩包，便于拷贝到离线节点。</span><br>root@ksp-deploy:~/kubekey# tar -zcf deploy-files.tar.gz kubekey kubekey-v3.0.13-linux-arm64.tar.gz offline-installation-tool.sh registry-2.tar.gz images-list.txt<br>root@ksp-deploy:~/kubekey# ls -alh deploy-files.tar.gz <br>-rw-r--r-- 1 root root 250M Dec 30 20:15 deploy-files.tar.gz<br></code></pre></td></tr></table></figure><p>至此，我们已经准备了如下离线部署资源包：</p><ul><li>部署镜像文件：<strong>kubesphere-images.tar.gz（4.0G）</strong></li><li>部署工具文件：<strong>deploy-files.tar.gz（250M）</strong></li><li>依赖组件离线安装包：<strong>dependent-components.tar.gz（6.8M）</strong></li></ul><h1 id="五部署-ksp-和-k8s-的前置准备操作">五、部署 KSP 和 K8S的前置准备操作</h1><h2 id="上传离线部署资源包到部署节点">5.1上传离线部署资源包到部署节点</h2><p>将以下离线部署资源包（kubesphere-images.tar.gz、dependent-components.tar.gz与deploy-files.tar.gz），上传至离线环境部署节点 (此处是 <strong>node01</strong>节点，所有节点信息参考文档最开始处的描述) 的 /opt/deploy-k8s-ksp目录（可根据实际情况修改）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创离线资源存放的数据目录</span><br>root@node01:/# mkdir /opt/deploy-k8s-ksp<br><span class="hljs-meta prompt_"># </span><span class="language-bash">上传kubesphere-images.tar.gz与deploy-files.tar.gz 文件到node01:/opt/deploy-k8s-ksp 目录下</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行以下命令，解压相关文件：</span><br>root@node01:/opt/deploy-k8s-ksp# tar -zxf kubesphere-images.tar.gz<br>root@node01:/opt/deploy-k8s-ksp# tar -zxf deploy-files.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">至此获得如下文件（夹）</span><br>root@node01:/opt/deploy-k8s-ksp# ls -alh<br>total 4.3G<br>drwxr-xr-x  7 root root 4.0K Dec 30 20:17 .<br>drwxr-xr-x  5 root root 4.0K Dec 30 19:32 ..<br>-rw-r--r--  1 root root 6.8M Dec 30 13:04 dependent-components.tar.gz<br>-rw-r--r--  1 root root 250M Dec 30 20:17 deploy-files.tar.gz<br>-rw-r--r--  1 root root 2.7K Dec 30 19:34 images-list.txt<br>drwxr-xr-x 16 root root 4.0K Dec 29 17:05 kubekey<br>-rw-r--r--  1 root root  32M Dec 28 17:23 kubekey-v3.0.13-linux-arm64.tar.gz<br>drwxr-xr-x  2 root root 4.0K Dec 29 17:10 kubesphere-images<br>-rw-r--r--  1 root root 4.0G Dec 29 17:35 kubesphere-images.tar.gz<br>-rwxr-xr-x  1 root root 8.6K Dec  6 22:52 offline-installation-tool.sh<br>-rw-------  1 root root  25M Dec 29 17:29 registry-2.tar.gz<br></code></pre></td></tr></table></figure><h2 id="安装docker容器服务">5.2 安装docker容器服务</h2><p>​ k8s集群的每个节点都要安装与配置。将node01节点上的/opt/deploy-k8s-ksp/kubekey/v1.23.17/arm64/docker-24.0.6.tgz复制到k8s集群的其他所有节点上，然后按照如下方式解压与部署docker服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">按照如下方式解压与部署docker服务</span><br>root@node01:/opt/deploy-k8s-ksp# tar -zxf kubekey/v1.23.17/arm64/docker-24.0.6.tgz<br>root@node01:/opt/deploy-k8s-ksp# chown root:root -R docker/<br>root@node01:/opt/deploy-k8s-ksp# mv docker/* /usr/bin/ &amp;&amp; rmdir docker<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用systemd管理docker服务</span><br>root@node01:/opt/deploy-k8s-ksp# cat &gt; /etc/systemd/system/docker.service &lt;&lt;EOF<br>[Unit]<br>Description=Docker Application Container Engine<br>Documentation=https://docs.docker.com<br>After=network-online.target firewalld.service<br>Wants=network-online.target<br><br>[Service]<br>Type=notify<br>ExecStart=/usr/bin/dockerd<br>ExecReload=/bin/kill -s HUP $MAINPID<br>LimitNOFILE=infinity<br>LimitNPROC=infinity<br>TimeoutStartSec=0<br>Delegate=yes<br>KillMode=process<br>Restart=on-failure<br>StartLimitBurst=3<br>StartLimitInterval=60s<br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置docker守护进程配置文件：/etc/docker/daemon.json</span><br>root@node01:/opt/deploy-k8s-ksp# mkdir -p /etc/docker<br>root@node01:/opt/deploy-k8s-ksp# cat &gt; /etc/docker/daemon.json &lt;&lt;EOF<br>&#123;<br>    &quot;insecure-registries&quot;: [<br>        &quot;dockerhub.kubekey.local&quot;<br>    ],<br>    &quot;log-opts&quot;: &#123;<br>        &quot;max-file&quot;: &quot;5&quot;,<br>        &quot;max-size&quot;: &quot;50m&quot;<br>    &#125;,<br>    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;]<br>&#125;<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在 /etc/hosts 中添加一个条目，将主机名（即仓库域名；在本示例中是 dockerhub.kubekey.local）映射到docker resgistry所在服务器的私有 IP 地址，如下所示，以下规划172.25.253.93是docker resgistry所在服务器</span><br>root@node01:/opt/deploy-k8s-ksp# cat &gt;&gt; /etc/hosts &lt;&lt;EOF<br>172.25.253.93 dockerhub.kubekey.local<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用上述文件并启动dicker服务，设置开机自启动</span><br>root@node01:/opt/deploy-k8s-ksp# systemctl daemon-reload &amp;&amp; systemctl restart docker<br>root@node01:/opt/deploy-k8s-ksp# systemctl status docker<br>root@node01:/opt/deploy-k8s-ksp# systemctl enable docker.service<br><br>root@node01:/opt/deploy-k8s-ksp# docker version          <br>Client:<br> Version:           24.0.6<br> API version:       1.43<br> Go version:        go1.20.7<br> Git commit:        ed223bc<br> Built:             Mon Sep  4 12:30:04 2023<br> OS/Arch:           linux/arm64<br> Context:           default<br><br>Server: Docker Engine - Community<br> Engine:<br>  Version:          24.0.6<br>  API version:      1.43 (minimum version 1.12)<br>  Go version:       go1.20.7<br>  Git commit:       1a79695<br>  Built:            Mon Sep  4 12:31:30 2023<br>  OS/Arch:          linux/arm64<br>  Experimental:     false<br> containerd:<br>  Version:          v1.7.3<br>  GitCommit:        7880925980b188f4c97b462f709d0db8e8962aff<br> runc:<br>  Version:          1.1.9<br>  GitCommit:        v1.1.9-0-gccaecfc<br> docker-init:<br>  Version:          0.19.0<br>  GitCommit:        de40ad0<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动docker命令自动补全</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@node01:/opt/deploy-k8s-ksp# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source &lt;(docker completion bash)&quot;</span> &gt;&gt; /root/.bashrc</span> <br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@node01:/opt/deploy-k8s-ksp# <span class="hljs-built_in">source</span> /root/.bashrc</span><br></code></pre></td></tr></table></figure><h2 id="安装依赖组件">5.3 安装依赖组件</h2><p>​k8s集群的每个节点都要安装与配置。将node01节点上的/opt/deploy-k8s-ksp/kubekey/dependent-components.tar.gz复制到k8s集群的其他所有节点上，然后按照如下方式解压与安装依赖组件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@node01:/opt/deploy-k8s-ksp# tar -zxf dependent-components.tar.gz<br>root@node01:/opt/deploy-k8s-ksp# cd dependent-components<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用dpkg命令进行离线安装</span><br>root@node01:/opt/deploy-k8s-ksp/dependent-components# dpkg -i *.deb<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以先做好ssh免密登录</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">传输 dependent-components.tar.gz 到node01之外的其他k8s节点 /opt/deploy-k8s-ksp/ 目录下</span><br>root@node01:/opt/deploy-k8s-ksp# for i in &#123;2..5&#125;; do ssh -t root@node0$&#123;i&#125; &quot;mkdir -p /opt/deploy-k8s-ksp&quot;; done<br>root@node01:/opt/deploy-k8s-ksp# for i in &#123;2..5&#125;; do scp dependent-components.tar.gz root@node0$&#123;i&#125;:/opt/deploy-k8s-ksp/; done <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">k8s集群所有节点安装依赖组件</span><br>root@node01:/opt/deploy-k8s-ksp# for i in &#123;1..5&#125;; do ssh -t root@node0$&#123;i&#125; &quot;cd /opt/deploy-k8s-ksp &amp;&amp; tar -zxf dependent-components.tar.gz &amp;&amp; cd dependent-components &amp;&amp; dpkg -i *.deb&quot;; done<br></code></pre></td></tr></table></figure><h2 id="准备一个私有镜像仓库">5.4 准备一个私有镜像仓库</h2><p>​Harbor官方未提供harbor安装文件，虽然笔者已经找到在arm64服务器上部署harbor的方法，但本文以Docker 仓库作为镜像仓库存储k8s部署过程中需要用到的镜像，并使用<ahref="https://docs.docker.com/registry/insecure/#use-self-signed-certificates">自签名证书</a>。</p><p>​ 本文在node01上搭建 Docker 仓库。</p><h3 id="使用自签名证书">使用自签名证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令生成您自己的证书</span><br>root@node01:/opt/deploy-k8s-ksp# mkdir certs<br>root@node01:/opt/deploy-k8s-ksp# openssl req -addext &quot;subjectAltName = DNS:dockerhub.kubekey.local&quot; \<br>  -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key \<br>  -x509 -days 36500 -out certs/domain.crt<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/29/PtgGJ71CjWSfEZY.png"alt="image-20241229221911321" /><figcaption aria-hidden="true">image-20241229221911321</figcaption></figure><h3 id="启动-docker-仓库">启动 Docker 仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">加载registry:2镜像</span><br>root@node01:/opt/deploy-k8s-ksp# docker load -i registry-2.tar.gz <br>2ee1e756df5d: Loading layer [==================================================&gt;]  7.955MB/7.955MB<br>9ef0c8e13134: Loading layer [==================================================&gt;]  898.6kB/898.6kB<br>a7c03a80ddda: Loading layer [==================================================&gt;]  16.65MB/16.65MB<br>55f11e417f9b: Loading layer [==================================================&gt;]  3.584kB/3.584kB<br>caa2189153ef: Loading layer [==================================================&gt;]  2.048kB/2.048kB<br>Loaded image: registry:2<br>root@node01:/opt/deploy-k8s-ksp# docker images <br>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE<br>registry     2         1c6adc34955d   15 months ago   25MB<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">让Docker信任刚生成的证书</span><br>root@node01:/opt/deploy-k8s-ksp# mkdir -p  /etc/docker/certs.d/dockerhub.kubekey.local<br>root@node01:/opt/deploy-k8s-ksp# cp certs/domain.crt  /etc/docker/certs.d/dockerhub.kubekey.local/ca.crt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令启动 Docker 仓库</span><br>root@node01:/opt/deploy-k8s-ksp# docker run -d \<br> --restart=always \<br> --name registry \<br> -v &quot;$(pwd)&quot;/certs:/certs \<br> -v /mnt/registry:/var/lib/registry \<br> -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \<br> -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \<br> -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \<br> -p 443:443 \<br> registry:2<br></code></pre></td></tr></table></figure><h3 id="验证仓库">验证仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">要验证私有仓库是否有效，可以修改镜像registry:2的namespace，然后使用 docker push 和 docker pull 来测试。</span><br>root@node01:/opt/deploy-k8s-ksp# docker tag registry:2 dockerhub.kubekey.local/registry:2<br>root@node01:/opt/deploy-k8s-ksp# docker push dockerhub.kubekey.local/registry:2<br>root@node01:/opt/deploy-k8s-ksp# docker pull dockerhub.kubekey.local/registry:2<br></code></pre></td></tr></table></figure><h2 id="推送镜像至私有仓库">5.5 推送镜像至私有仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将打包的镜像文件传输至您的本地机器，并运行以下命令把它推送至仓库</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">命令中的域名是 dockerhub.kubekey.local，它是docker registry仓库的别名</span><br>root@node01:/opt/deploy-k8s-ksp# ./offline-installation-tool.sh -l images-list.txt -d ./kubesphere-images -r dockerhub.kubekey.local<br></code></pre></td></tr></table></figure><h2 id="创建离线集群配置文件">5.6 创建离线集群配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令创建离线集群配置文件</span><br>root@node01:/opt/deploy-k8s-ksp# tar -zxf kubekey-v3.0.13-linux-arm64.tar.gz <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果在这一步的命令中不添加标志 --with-kubesphere，则不会部署 KubeSphere，只能使用配置文件中的 addons 字段安装，或者后续使用 ./kk create cluster 命令时再次添加这个标志。</span><br>root@node01:/opt/deploy-k8s-ksp# ./kk create config --with-kubesphere v3.4.1 --with-kubernetes v1.23.17 -f ksp-v341-v12317-offline.yaml<br></code></pre></td></tr></table></figure><p>命令执行成功后，在当前目录会生成文件名为 ksp-v341-v12317-offline.yaml的配置文件。</p><h2 id="修改-cluster-配置">5.7 修改 Cluster 配置</h2><p>​ 在离线集群配置文件文件中 <strong>kind: Cluster</strong>小节的作用是部署 Kubernetes 集群。本文示例采用 3 个节点同时作为control-plane、etcd 节点，两个节点作为 worker 节点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令修改离线集群配置文件 ksp-v341-v12317-offline.yaml</span><br>root@node01:/data/kubekey# vi ksp-v341-v12317-offline.yaml<br></code></pre></td></tr></table></figure><p>修改 <strong>kind: Cluster</strong> 小节中 hosts 和 roleGroups等信息，修改说明如下。</p><ul><li>hosts：指定节点的IP、ssh登录用户、ssh登录密码，并指明服务器构架。</li><li>roleGroups：指定 3 个 etcd、control-plane 节点，2 个 worker节点</li></ul><p>修改controlPlaneEndpoint组的配置：</p><ul><li>internalLoadbalancer： 启用内置的 HAProxy 负载均衡器</li></ul><p>添加storage组的配置：</p><ul><li>storage.openebs.basePath：<strong>新增配置</strong>，指定 openebs默认存储路径为 <strong>/data/openebs/local</strong></li></ul><p>修改registry组的配置：</p><ul><li>registry：使用 dockerregistry，它的地址是"dockerhub.kubekey.local"</li></ul><p>修改或添加的内容如下（其余保持默认）：</p><figure><img src="https://s2.loli.net/2024/12/30/cpIRmhfQl69xLZ3.png"alt="image-20241230203614561" /><figcaption aria-hidden="true">image-20241230203614561</figcaption></figure><h2 id="最后的配置">5.8 最后的配置</h2><p>​ 经过上述步骤，我们成功完成了对离线集群配置文件ksp-v341-v12317-offline.yaml 的修改。此时，修改后的ksp-v341-v12317-offline.yaml文件如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubekey.kubesphere.io/v1alpha2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Cluster</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">sample</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">hosts:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node01</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.93</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.93</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@123&quot;</span>, <span class="hljs-attr">arch:</span> <span class="hljs-string">arm64</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node02</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.94</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.94</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@123&quot;</span>, <span class="hljs-attr">arch:</span> <span class="hljs-string">arm64</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node03</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.95</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.95</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@123&quot;</span>, <span class="hljs-attr">arch:</span> <span class="hljs-string">arm64</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node04</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.113</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.113</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@123&quot;</span>, <span class="hljs-attr">arch:</span> <span class="hljs-string">arm64</span> &#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">node05</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.114</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">172.25</span><span class="hljs-number">.253</span><span class="hljs-number">.114</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@123&quot;</span>, <span class="hljs-attr">arch:</span> <span class="hljs-string">arm64</span> &#125;<br>  <span class="hljs-attr">roleGroups:</span><br>    <span class="hljs-attr">etcd:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node01</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node02</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node03</span><br>    <span class="hljs-attr">control-plane:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node01</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node02</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node03</span><br>    <span class="hljs-attr">worker:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node04</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">node05</span><br>  <span class="hljs-attr">controlPlaneEndpoint:</span><br>    <span class="hljs-comment">## Internal loadbalancer for apiservers </span><br>    <span class="hljs-attr">internalLoadbalancer:</span> <span class="hljs-string">haproxy</span><br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">lb.kubesphere.local</span><br>    <span class="hljs-attr">address:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6443</span><br>  <span class="hljs-attr">kubernetes:</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v1.23.17</span><br>    <span class="hljs-attr">clusterName:</span> <span class="hljs-string">cluster.local</span><br>    <span class="hljs-attr">autoRenewCerts:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">containerManager:</span> <span class="hljs-string">docker</span><br>  <span class="hljs-attr">etcd:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">kubekey</span><br>  <span class="hljs-attr">network:</span><br>    <span class="hljs-attr">plugin:</span> <span class="hljs-string">calico</span><br>    <span class="hljs-attr">kubePodsCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>    <span class="hljs-attr">kubeServiceCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>    <span class="hljs-comment">## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span><br>    <span class="hljs-attr">multusCNI:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">storage:</span><br>    <span class="hljs-attr">openebs:</span><br>      <span class="hljs-attr">basePath:</span> <span class="hljs-string">/mnt/openebs/local</span> <span class="hljs-comment"># 默认没有，新增的配置，base path of the local PV provisioner</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-attr">privateRegistry:</span> <span class="hljs-string">&quot;dockerhub.kubekey.local&quot;</span><br>    <span class="hljs-attr">namespaceOverride:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">registryMirrors:</span> []<br>    <span class="hljs-attr">insecureRegistries:</span> []<br>  <span class="hljs-attr">addons:</span> []<br><br><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">installer.kubesphere.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterConfiguration</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ks-installer</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kubesphere-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v3.4.1</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">persistence:</span><br>    <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">authentication:</span><br>    <span class="hljs-attr">jwtSecret:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">local_registry:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-comment"># dev_tag: &quot;&quot;</span><br>  <span class="hljs-attr">etcd:</span><br>    <span class="hljs-attr">monitoring:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">endpointIps:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">2379</span><br>    <span class="hljs-attr">tlsEnable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">common:</span><br>    <span class="hljs-attr">core:</span><br>      <span class="hljs-attr">console:</span><br>        <span class="hljs-attr">enableMultiLogin:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">port:</span> <span class="hljs-number">30880</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br>    <span class="hljs-comment"># apiserver:</span><br>    <span class="hljs-comment">#  resources: &#123;&#125;</span><br>    <span class="hljs-comment"># controllerManager:</span><br>    <span class="hljs-comment">#  resources: &#123;&#125;</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">enableHA:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">2Gi</span><br>    <span class="hljs-attr">openldap:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">2Gi</span><br>    <span class="hljs-attr">minio:</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">20Gi</span><br>    <span class="hljs-attr">monitoring:</span><br>      <span class="hljs-comment"># type: external</span><br>      <span class="hljs-attr">endpoint:</span> <span class="hljs-string">http://prometheus-operated.kubesphere-monitoring-system.svc:9090</span><br>      <span class="hljs-attr">GPUMonitoring:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">gpu:</span><br>      <span class="hljs-attr">kinds:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">resourceName:</span> <span class="hljs-string">&quot;nvidia.com/gpu&quot;</span><br>        <span class="hljs-attr">resourceType:</span> <span class="hljs-string">&quot;GPU&quot;</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">es:</span><br>      <span class="hljs-comment"># master:</span><br>      <span class="hljs-comment">#   volumeSize: 4Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-comment"># data:</span><br>      <span class="hljs-comment">#   volumeSize: 20Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">logMaxAge:</span> <span class="hljs-number">7</span><br>      <span class="hljs-attr">elkPrefix:</span> <span class="hljs-string">logstash</span><br>      <span class="hljs-attr">basicAuth:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalElasticsearchHost:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalElasticsearchPort:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">opensearch:</span><br>      <span class="hljs-comment"># master:</span><br>      <span class="hljs-comment">#   volumeSize: 4Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-comment"># data:</span><br>      <span class="hljs-comment">#   volumeSize: 20Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">logMaxAge:</span> <span class="hljs-number">7</span><br>      <span class="hljs-attr">opensearchPrefix:</span> <span class="hljs-string">whizard</span><br>      <span class="hljs-attr">basicAuth:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">&quot;admin&quot;</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;admin&quot;</span><br>      <span class="hljs-attr">externalOpensearchHost:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalOpensearchPort:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">dashboard:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">alerting:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># thanosruler:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">auditing:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># operator:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># webhook:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">devops:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">jenkinsCpuReq:</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-attr">jenkinsCpuLim:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">jenkinsMemoryReq:</span> <span class="hljs-string">4Gi</span><br>    <span class="hljs-attr">jenkinsMemoryLim:</span> <span class="hljs-string">4Gi</span><br>    <span class="hljs-attr">jenkinsVolumeSize:</span> <span class="hljs-string">16Gi</span><br>  <span class="hljs-attr">events:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># operator:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># exporter:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-attr">ruler:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">logging:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">logsidecar:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>      <span class="hljs-comment"># resources: &#123;&#125;</span><br>  <span class="hljs-attr">metrics_server:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">monitoring:</span><br>    <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">node_exporter:</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">9100</span><br>      <span class="hljs-comment"># resources: &#123;&#125;</span><br>    <span class="hljs-comment"># kube_rbac_proxy:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># kube_state_metrics:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># prometheus:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   volumeSize: 20Gi</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   operator:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-comment"># alertmanager:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># notification_manager:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   operator:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   proxy:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-attr">gpu:</span><br>      <span class="hljs-attr">nvidia_dcgm_exporter:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>  <span class="hljs-attr">multicluster:</span><br>    <span class="hljs-attr">clusterRole:</span> <span class="hljs-string">none</span><br>  <span class="hljs-attr">network:</span><br>    <span class="hljs-attr">networkpolicy:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">ippool:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">none</span><br>    <span class="hljs-attr">topology:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">none</span><br>  <span class="hljs-attr">openpitrix:</span><br>    <span class="hljs-attr">store:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">servicemesh:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">istio:</span><br>      <span class="hljs-attr">components:</span><br>        <span class="hljs-attr">ingressGateways:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">istio-ingressgateway</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">cni:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">edgeruntime:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">kubeedge:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">cloudCore:</span><br>        <span class="hljs-attr">cloudHub:</span><br>          <span class="hljs-attr">advertiseAddress:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-attr">service:</span><br>          <span class="hljs-attr">cloudhubNodePort:</span> <span class="hljs-string">&quot;30000&quot;</span><br>          <span class="hljs-attr">cloudhubQuicNodePort:</span> <span class="hljs-string">&quot;30001&quot;</span><br>          <span class="hljs-attr">cloudhubHttpsNodePort:</span> <span class="hljs-string">&quot;30002&quot;</span><br>          <span class="hljs-attr">cloudstreamNodePort:</span> <span class="hljs-string">&quot;30003&quot;</span><br>          <span class="hljs-attr">tunnelNodePort:</span> <span class="hljs-string">&quot;30004&quot;</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>        <span class="hljs-comment"># hostNetWork: false</span><br>      <span class="hljs-attr">iptables-manager:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">mode:</span> <span class="hljs-string">&quot;external&quot;</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>      <span class="hljs-comment"># edgeService:</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">gatekeeper:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># controller_manager:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># audit:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">terminal:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">600</span><br><br><br><br></code></pre></td></tr></table></figure><h2 id="安装配置-harbor">5.9 安装配置 Harbor</h2><p>​arm64服务器上搭建harbor环境可以参考：https://jiangsanyin.github.io/2024/10/30/arm64%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E7%9A%84Harbor-v2-11-1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/。</p><p>​ 后续用法跟x86_64构架服务器上的harbor一样。</p><h1 id="六安装-kubesphere-和-k8s-集群">六、安装 KubeSphere 和 K8s集群</h1><h2 id="执行安装kubesphere-和-k8s-集群">6.1 执行安装KubeSphere 和 K8s集群</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建mkdir-copyfile.sh</span><br>root@node01:/opt/deploy-k8s-ksp# touch mkdir-copyfile.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">其内容如下</span><br>root@node01:/opt/deploy-k8s-ksp# cat mkdir-copyfile.sh<br>cd /opt/deploy-k8s-ksp<br>mkdir kubekey/kube<br>mkdir -p kubekey/kube/v1.23.17/arm64/ kubekey/helm/v3.9.0/arm64/ kubekey/cni/v1.2.0/arm64/ kubekey/crictl/v1.24.0/arm64/ kubekey/etcd/v3.4.13/arm64/ kubekey/docker/24.0.6/arm64/ kubekey/cni/v3.26.1/arm64/<br>cp -rp kubekey/v1.23.17/arm64/kube* kubekey/kube/v1.23.17/arm64/<br>cp -rp kubekey/v1.23.17/arm64/helm kubekey/helm/v3.9.0/arm64/<br>cp -rp kubekey/v1.23.17/arm64/cni-plugins-linux-arm64-v1.2.0.tgz kubekey/cni/v1.2.0/arm64/<br>cp -rp kubekey/v1.23.17/arm64/crictl-v1.24.0-linux-arm64.tar.gz kubekey/crictl/v1.24.0/arm64/<br>cp -rp kubekey/v1.23.17/arm64/etcd-v3.4.13-linux-arm64.tar.gz kubekey/etcd/v3.4.13/arm64/<br>cp -rp kubekey/v1.23.17/arm64/docker-24.0.6.tgz kubekey/docker/24.0.6/arm64/<br>cp -rp kubekey/v1.23.17/arm64/calicoctl-linux-arm64 kubekey/cni/v3.26.1/arm64/calicoctl<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果 /mnt/openebs/local 目录非空，请将此目录下的所有文件清空，否则安装将失败、提示如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">TASK [common : debug] **********************************************************</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ok: [localhost] =&gt; &#123;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   <span class="hljs-string">&quot;msg&quot;</span>: [</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;1. check the storage configuration and storage server&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;2. make sure the DNS address in /etc/resolv.conf is available&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;3. execute &#x27;kubectl logs -n kubesphere-system -l job-name=minio-make-bucket-job&#x27; to watch logs&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;4. execute &#x27;helm -n kubesphere-system uninstall ks-minio &amp;&amp; kubectl -n kubesphere-system delete job minio-make-bucket-job&#x27;&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;5. Restart the installer pod in kubesphere-system namespace&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   ]</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">&#125;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令，安装 KubeSphere 和 K8s 集群</span><br>root@node01:/opt/deploy-k8s-ksp# bash mkdir-copyfile.sh<br>root@node01:/opt/deploy-k8s-ksp# ./kk create cluster -f ksp-v341-v12317-offline.yaml --yes<br></code></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><ul><li><strong>ksp-v341-v12317-offline.yaml</strong>：离线环境集群的配置文件</li></ul><p>上面的命令执行后，首先 KubeKey 会检查部署 K8s的依赖及其他详细要求。检查合格后，系统将提示确认安装。输入<strong>yes</strong> 并按 ENTER 继续部署。</p><figure><img src="https://s2.loli.net/2024/12/30/3LfSJPVpq6zwTAe.png"alt="image-20241230205705028" /><figcaption aria-hidden="true">image-20241230205705028</figcaption></figure><h2 id="部署后置处理">6.2 部署后置处理</h2><h3id="poddefault-http-backend-75f5768976-6svwx-一直处于imagepullbackoff-状态">6.2.1pod/default-http-backend-75f5768976-6svwx 一直处于ImagePullBackOff状态</h3><figure><img src="https://s2.loli.net/2024/12/31/TkcI3ZlBXCdhmvA.png"alt="image-20241231095318516" /><figcaption aria-hidden="true">image-20241231095318516</figcaption></figure><ul><li>分析：</li></ul><p>因为安装程序尝试拉取与使用的镜像是amd64构架镜像，应该是安装程序（具体地说是kk工具）内部的错误。且在此处私有镜像镜像仓库中尝试拉取的镜像并不存在，所以一直拉取不成功。</p><ul><li>解决办法：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改 命名空间kubesphere-controls-system下的pod/default-http-backend-75f5768976-6svwx</span><br>root@node01:/opt/deploy-k8s-ksp# kubectl -n kubesphere-controls-system edit pod default-http-backend-75f5768976-6svwx<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将spec中使用的镜像修改为“dockerhub.kubekey.local/mirrorgooglecontainers/defaultbackend-arm64:1.4”</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/12/31/RKht1DJzk2FAogm.png"alt="image-20241231095456573" /><figcaption aria-hidden="true">image-20241231095456573</figcaption></figure><h2 id="控制节点配置keepalived">6.3 控制节点配置keepalived</h2><p>​暂略。配置keepalived相关方法可以参考：https://jiangsanyin.github.io/2024/08/10/%E6%90%AD%E5%BB%BA%E4%BA%92%E4%B8%BA%E4%B8%BB%E5%A4%87MySQL5-7%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2/#2-3-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEkeepalived</p><h1 id="七部署结果验证">七、部署结果验证</h1><p>​ 访问kubesphere3.4.1的web管理界面： http://172.25.253.93:30880/login。默认用户名：admin，其默认密码：P@88w0rd</p><p>登录成功后看到的界面：</p><figure><img src="https://s2.loli.net/2024/12/30/FuNh3jOedGBbZwC.png"alt="image-20241230205947409" /><figcaption aria-hidden="true">image-20241230205947409</figcaption></figure><p>查看节点状态：</p><figure><img src="https://s2.loli.net/2024/12/30/OsUv98dunWCNKJy.png"alt="image-20241230205929259" /><figcaption aria-hidden="true">image-20241230205929259</figcaption></figure><h1 id="八参考文档">八、参考文档</h1><ul><li>https://v3-1.docs.kubesphere.io/zh/docs/installing-on-linux/introduction/air-gapped-installation/</li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubekey 离线部署 arm64 k8s kubesphere</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s在线部署-使用kubeasz部署amd64高可用k8s1-23-17</title>
    <link href="/2024/12/01/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubeasz%E9%83%A8%E7%BD%B2amd64%E9%AB%98%E5%8F%AF%E7%94%A8k8s1-23-17/"/>
    <url>/2024/12/01/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubeasz%E9%83%A8%E7%BD%B2amd64%E9%AB%98%E5%8F%AF%E7%94%A8k8s1-23-17/</url>
    
    <content type="html"><![CDATA[<h1 id="二部署k8s高可用集群">二、部署k8s高可用集群</h1><h2 id="高可用集群规划">2.1 高可用集群规划</h2><p>高可用集群构架图大致如下（下图是从官网复制过来的，跟本文中k8s集群节点布局稍有差别，但大致不变）：</p><p><img src="https://s2.loli.net/2024/10/11/9pqcV4iXyCxbjsW.png" alt="image-20241011112321181" style="zoom: 50%;" /></p><ul><li>注意1：确保各节点时区设置一致、时间同步。 如果你的环境没有提供NTP时间同步，推荐集成安装<ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/guide/chrony.md">chrony</a></li><li>注意2：确保在干净的系统上开始安装，不要使用曾经装过kubeadm或其他k8s发行版的环境</li><li>注意3：建议操作系统升级到新的稳定内核，请结合阅读<ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/guide/kernel_upgrade.md">内核升级文档</a></li><li>注意4：在公有云上创建多主集群，请结合阅读<ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/setup/kubeasz_on_public_cloud.md">在公有云上部署kubeasz</a></li></ul><p>高可用集群所需节点配置如下：</p><table><thead><tr><th>角色</th><th>数量</th><th>描述</th></tr></thead><tbody><tr><td>部署节点</td><td>1</td><td>运行ansible/ezctl命令，一般复用第一个master节点</td></tr><tr><td>etcd节点</td><td>3</td><td>注意etcd集群需要1,3,5,...奇数个节点，一般复用master节点</td></tr><tr><td>master节点</td><td>3</td><td>高可用集群至少3个master节点（上图来自kubeasz官网，只画出两个master节点不准确）</td></tr><tr><td>node节点</td><td>n</td><td>运行应用负载的节点，可根据需要提升机器配置/增加节点数</td></tr></tbody></table><p>机器配置：</p><ul><li>master节点：4c/8g内存/50g硬盘</li><li>worker节点：建议8c/32g内存/200g硬盘以上</li></ul><p>注意：默认配置下容器运行时和kubelet会占用/var的磁盘空间，如果磁盘分区特殊，可以设置config.yml中的容器运行时和kubelet数据目录：<code>CONTAINERD_STORAGE_DIR</code><code>DOCKER_STORAGE_DIR</code> <code>KUBELET_ROOT_DIR</code></p><p>在 kubeasz 2x 版本，多节点高可用集群安装可以使用2种方式：</p><ul><li>1.按照本文步骤先规划准备，预先配置节点信息后，直接安装多节点高可用集群</li><li>2.先部署单节点集群 <ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/setup/quickStart.md">AllinOne部署</a>，然后通过<ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/op/op-index.md">节点添加</a>扩容成高可用集群</li></ul><h2 id="高可用集群部署步骤">2.2 高可用集群部署步骤</h2><p>以下示例创建一个5节点的多主高可用集群，最后添加一个节点k8s03-6，文档中命令默认都需要root权限运行。</p><table><thead><tr><th>主机名</th><th>IP</th><th>root密码</th><th>规格</th><th>磁盘</th><th>操作系统</th><th>备注</th></tr></thead><tbody><tr><td>k8s03-1</td><td>10.13.15.61</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>控制节点、Harbor服务器</td></tr><tr><td>k8s03-2</td><td>10.13.15.62</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>控制节点</td></tr><tr><td>k8s03-3</td><td>10.13.15.63</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>控制节点</td></tr><tr><td></td><td>10.13.15.70</td><td></td><td></td><td></td><td></td><td>多控制节点做keepalived与l4lb后的虚拟ip</td></tr><tr><td>k8s03-4</td><td>10.13.15.64</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>工作节点</td></tr><tr><td>k8s03-5</td><td>10.13.15.65</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>工作节点</td></tr><tr><td>k8s03-6</td><td>10.13.15.66</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td><td>控制节点（演示添加工作节点）</td></tr></tbody></table><h3 id="基础系统配置">2.2.1 基础系统配置</h3><ul><li>开发环境每个节点8C核心16G内核/50G磁盘+，生产环境的配置要更高（具体看业务数量。建议直接用128C256G+物理服务器）、磁盘空间建议1T+</li><li>最小化安装<code>Ubuntu 16.04+ server或者CentOS 7+ Minimal</code></li><li>配置基础网络、更新源、SSH登录等</li><li>推荐使用ansible in docker 容器化方式运行，无需安装额外依赖</li></ul><h3 id="在每个节点配置时间同步">2.2.2 在每个节点配置时间同步</h3><h4 id="配置时区">2.2.2.1 配置时区</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">所有节点时区都配置为东八区</span><br>timedatectl set-timezone Asia/Shanghai<br><span class="hljs-meta prompt_">#</span><span class="language-bash">手动设置时间为北京时间（尽量靠近准确的北京时间）</span><br>timedatectl set-time &quot;YYYY-MM-DD HH:MM:SS&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看时区与时间</span><br>timedatectl<br></code></pre></td></tr></table></figure><h4 id="安装配置时间同步服务">2.2.2.2 安装配置时间同步服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.安装 chrony 作为时间同步软件：</span><br>apt-get install chrony -qy<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">2.修改配置文件 /etc/chrony/chrony.conf，修改 ntp 服务器配置（以下3种方式任选其一）：</span><br>vi /etc/chrony/chrony.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2.1 使用默认的 pool 配置</span><br>pool ntp.ubuntu.com        iburst maxsources 4<br>pool 0.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 1.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 2.ubuntu.pool.ntp.org iburst maxsources 2<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2.2 增加国内的 ntp 服务器，或是指定其他常用的时间服务器</span><br>server ntp.aliyun.com iburst<br>server ntp1.aliyun.com iburst<br>server ntp2.aliyun.com iburst<br>server ntp1.cloud.aliyuncs.com iburst<br>server ntp2.cloud.aliyuncs.com iburst<br>server ntp3.cloud.aliyuncs.com iburst<br>server ntp7.cloud.aliyuncs.com iburst<br>server ntp8.cloud.aliyuncs.com iburst<br>server ntp9.cloud.aliyuncs.com iburst<br>server ntp.api.bz iburst<br><span class="hljs-meta prompt_"># </span><span class="language-bash">2.3 若要使用本地NTP服务器，可以将上面的删除，然后添加自己的NTP服务器（假设10.0.0.1是本地NTP服务器）：</span><br>server 10.0.0.1 iburst<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">重启 chrony 服务：</span><br>systemctl restart chrony<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">验证 chrony 同步状态：</span><br>chronyc sourcestats -v<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出内容大致如下</span><br>210 Number of sources = 8<br>                             .- Number of sample points in measurement set.<br>                            /    .- Number of residual runs with same sign.<br>                           |    /    .- Length of measurement set (time).<br>                           |   |    /      .- Est. clock freq error (ppm).<br>                           |   |   |      /           .- Est. error in freq.<br>                           |   |   |     |           /         .- Est. offset.<br>                           |   |   |     |          |          |   On the -.<br>                           |   |   |     |          |          |   samples. \<br>                           |   |   |     |          |          |             |<br>Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev<br>==============================================================================<br>prod-ntp-3.ntp1.ps5.cano&gt;   4   3     9   +704.136  21532.734    -17ms  4358us<br>prod-ntp-4.ntp1.ps5.cano&gt;   4   3    10  +1534.234  26545.184   +395us  5834us<br>alphyn.canonical.com        4   3    11   -633.039  22169.467  -3371us  4248us<br>prod-ntp-5.ntp4.ps5.cano&gt;   4   3     9   -218.393   5069.837    -28ms  1108us<br>tick.ntp.infomaniak.ch      4   3     9   +179.013  18164.828  +4135us  3693us<br>ntp5.flashdance.cx          0   0     0     +0.000   2000.000     +0ns  4000ms<br>ntp7.flashdance.cx          4   3     9  -2025.918  26238.625    -25ms  5856us<br>dns1.synet.edu.cn           4   3     8    +53.828   9119.362   +422us  1610us<br></code></pre></td></tr></table></figure><h3 id="在每个节点安装依赖工具">2.2.3 在每个节点安装依赖工具</h3><p>推荐使用ansible in docker 容器化方式运行，无需安装额外依赖</p><h3 id="安装k8s">2.2.4 安装k8s</h3><p>k8s与kubeasz推荐的匹配版本对照表：</p><table style="width:100%;"><thead><tr><th>Kubernetes version</th><th>1.19</th><th>1.20</th><th>1.21</th><th>1.22</th><th>1.23</th><th>1.24</th><th>1.25</th><th>1.26</th><th>1.27</th><th>1.28</th><th>1.29</th><th>1.30</th><th>1.31</th></tr></thead><tbody><tr><td>kubeasz version</td><td>2.2.2</td><td>3.0.1</td><td>3.1.0</td><td>3.1.1</td><td>3.2.0</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.3</td><td>3.6.4</td><td>3.6.5</td></tr></tbody></table><h4 id="下载项目源码二进制及离线镜像">2.2.4.1下载项目源码、二进制及离线镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载工具脚本ezdown，举例使用kubeasz版本3.2.0</span><br>root@k8s03-1:~# mkdir /opt/kubeasz-deployk8s<br>root@k8s03-1:~# cd /opt/kubeasz-deployk8s<br>root@k8s03-1:/opt/kubeasz-deployk8s# export release=3.2.0<br>root@k8s03-1:/opt/kubeasz-deployk8s# wget https://github.com/easzlab/kubeasz/releases/download/$&#123;release&#125;/ezdown<br>root@k8s03-1:/opt/kubeasz-deployk8s# chmod +x ./ezdown<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载kubeasz代码、二进制、默认容器镜像（更多关于ezdown的参数，运行./ezdown 查看）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">国内环境（-k指定k8s版本，其他参数执行“./ezdown”查看），以下命令会创建并启动local_registry容器</span><br>./ezdown -D -m &quot;CN&quot; -k &quot;v1.23.17&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">海外环境</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">./ezdown -D -m standard</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载harbor相关镜像</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# ./ezdown -R -m &quot;CN&quot;<br>root@k8s03-1:/opt/kubeasz-deployk8s# ls -alh /etc/kubeasz/down/harbor-offline-installer*<br>-rw-r--r-- 1 root root 534M Feb  6  2021 /etc/kubeasz/down/harbor-offline-installer-v2.1.3.tgz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">【可选】下载额外容器镜像（cilium,flannel,prometheus等）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">./ezdown -X -m <span class="hljs-string">&quot;CN&quot;</span> -k <span class="hljs-string">&quot;v1.23.17&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">【可选】下载离线系统包 (适用于无法使用yum/apt仓库情形)</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">./ezdown -P -m <span class="hljs-string">&quot;CN&quot;</span> -k <span class="hljs-string">&quot;v1.23.17&quot;</span></span><br></code></pre></td></tr></table></figure><p>上述脚本运行成功后，所有文件（kubeasz代码、二进制、离线镜像）均已整理好放入目录<code>/etc/kubeasz</code></p><h4 id="创建集群配置实例">2.2.4.2 创建集群配置实例</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">容器化运行kubeasz（会创建并启动kubeasz容器）</span><br>./ezdown -S<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新集群 k8s03</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# docker exec -it kubeasz ezctl new k8s03<br>2024-10-15 11:33:29 DEBUG generate custom cluster files in /etc/kubeasz/clusters/k8s03<br>2024-10-15 11:33:30 DEBUG set versions<br>2024-10-15 11:33:30 DEBUG cluster k8s03: files successfully created.<br>2024-10-15 11:33:30 INFO next steps 1: to config &#x27;/etc/kubeasz/clusters/k8s03/hosts&#x27;<br>2024-10-15 11:33:30 INFO next steps 2: to config &#x27;/etc/kubeasz/clusters/k8s03/config.yml&#x27;<br></code></pre></td></tr></table></figure><p>然后根据提示配置'/etc/kubeasz/clusters/k8s03/hosts' 和'/etc/kubeasz/clusters/k8s03/config.yml'：根据前面节点规划修改hosts文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml文件中修改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">按住alt键 + 鼠标左键，可以按列选择</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# vi /etc/kubeasz/clusters/k8s03/hosts<br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&#x27;etcd&#x27;</span> cluster should have odd member(s) (1,3,5,...)</span><br>[etcd]<br>10.13.15.61   #这个需要修改成控制节点ip<br>10.13.15.62   #这个需要修改成控制节点ip<br>10.13.15.63   #这个需要修改成控制节点ip<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">master node(s), <span class="hljs-built_in">set</span> unique <span class="hljs-string">&#x27;k8s_nodename&#x27;</span> <span class="hljs-keyword">for</span> each node</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CAUTION: <span class="hljs-string">&#x27;k8s_nodename&#x27;</span> must consist of lower <span class="hljs-keyword">case</span> alphanumeric characters, <span class="hljs-string">&#x27;-&#x27;</span> or <span class="hljs-string">&#x27;.&#x27;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">and must start and end with an alphanumeric character</span><br>[kube_master]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.13.15.61 k8s_nodename=<span class="hljs-string">&quot;k8s03-1&quot;</span>   <span class="hljs-comment">#这个需要修改（如果没有k8s_nodename配置，则安装后将直接使用ip作为k8s节点名）</span></span><br>10.13.15.61                          #这个需要修改成控制节点ip<br>10.13.15.62                          #这个需要修改成控制节点ip<br>10.13.15.63                          #这个需要修改成控制节点ip<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">work node(s), <span class="hljs-built_in">set</span> unique <span class="hljs-string">&#x27;k8s_nodename&#x27;</span> <span class="hljs-keyword">for</span> each node</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CAUTION: <span class="hljs-string">&#x27;k8s_nodename&#x27;</span> must consist of lower <span class="hljs-keyword">case</span> alphanumeric characters, <span class="hljs-string">&#x27;-&#x27;</span> or <span class="hljs-string">&#x27;.&#x27;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">and must start and end with an alphanumeric character</span><br>[kube_node]<br>10.13.15.64                          #这个需要修改成工作节点ip<br>10.13.15.65                          #这个需要修改成工作节点ip<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">[optional] harbor server, a private docker registry</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&#x27;NEW_INSTALL&#x27;</span>: <span class="hljs-string">&#x27;true&#x27;</span> to install a harbor server; <span class="hljs-string">&#x27;false&#x27;</span> to integrate with existed one</span><br>[harbor]<br>10.13.15.61 NEW_INSTALL=true        #需要在服务器上搭建harbor服务，就配置成此服务器的ip <br><span class="hljs-meta prompt_">#</span><span class="language-bash">192.168.1.8 NEW_INSTALL=<span class="hljs-literal">false</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">[optional] loadbalance <span class="hljs-keyword">for</span> accessing k8s from outside</span><br>[ex_lb]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">10.13.15.70是3个控制节点组成keepalived与l4lb集群后的虚拟ip</span><br>10.13.15.63 LB_ROLE=backup EX_APISERVER_VIP=10.13.15.70 EX_APISERVER_PORT=8443   <br>10.13.15.62 LB_ROLE=backup EX_APISERVER_VIP=10.13.15.70 EX_APISERVER_PORT=8443<br>10.13.15.61 LB_ROLE=master EX_APISERVER_VIP=10.13.15.70 EX_APISERVER_PORT=8443<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">[optional] ntp server <span class="hljs-keyword">for</span> the cluster</span><br>[chrony]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">192.168.1.1</span><br><br>[all:vars]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">--------- Main Variables ---------------</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Secure port <span class="hljs-keyword">for</span> apiservers</span><br>SECURE_PORT=&quot;6443&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Cluster container-runtime supported: docker, containerd</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-keyword">if</span> k8s version &gt;= 1.24, docker is not supported</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">CONTAINER_RUNTIME=<span class="hljs-string">&quot;containerd&quot;</span></span><br>CONTAINER_RUNTIME=&quot;docker&quot;   #这个需要修改<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s# vi /etc/kubeasz/clusters/k8s03/config.yml <br><span class="hljs-meta prompt_"># </span><span class="language-bash">k8s version</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">K8S_VER: <span class="hljs-string">&quot;1.23.1&quot;</span></span><br>K8S_VER: &quot;1.23.17&quot;  #修改<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">role:etcd</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置不同的wal目录，可以避免磁盘io竞争，提高性能</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ETCD_DATA_DIR: <span class="hljs-string">&quot;/var/lib/etcd&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ETCD_WAL_DIR: <span class="hljs-string">&quot;&quot;</span></span><br>ETCD_DATA_DIR: &quot;/var/lib/etcd/data&quot;  #修改<br>ETCD_WAL_DIR: &quot;/var/lib/etcd/wal&quot;    #修改<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">role:runtime [containerd,docker]</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">[containerd]..................</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">SANDBOX_IMAGE: <span class="hljs-string">&quot;easzlab/pause:3.6&quot;</span></span><br>SANDBOX_IMAGE: &quot;easzlab.io.local/easzlab/pause:3.6&quot;  #如果创建了docker registry就修改成此行配置，否则保持默认<br><span class="hljs-meta prompt_"># </span><span class="language-bash">[docker].........HTTP......</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">INSECURE_REG: <span class="hljs-string">&#x27;[&quot;127.0.0.1/8&quot;]&#x27;</span></span><br>INSECURE_REG: &#x27;[&quot;easzlab.io.local&quot;]&#x27;  #如果创建了docker registry就修改成此行配置，否则保持默认<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">nfs-provisioner ............</span><br>nfs_provisioner_install: &quot;yes&quot;  #修改为yes，可以自动安装nfs类型的sc（前提是先有一个可用的nfs服务端）<br>nfs_provisioner_namespace: &quot;kube-system&quot;<br>nfs_provisioner_ver: &quot;v4.0.2&quot;<br>nfs_storage_class: &quot;managed-nfs-storage&quot;<br>nfs_server: &quot;10.13.15.61&quot;  #修改（修改成nfs服务端的ip）<br>nfs_path: &quot;/nfs&quot;           #修改（修改成nfs服务端的共享目录）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span>   <br><span class="hljs-meta prompt_"># </span><span class="language-bash">role:harbor</span>    <br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">###########################</span></span>       <br><span class="hljs-meta prompt_"># </span><span class="language-bash">harbor version..................</span><br>HARBOR_VER: &quot;v2.1.3&quot;<br>HARBOR_DOMAIN: &quot;harbor.yourdomain.com&quot;<br>HARBOR_TLS_PORT: 8444                #8443改成8444<br></code></pre></td></tr></table></figure><h4 id="开始安装">2.2.4.3 开始安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以下操作是在k8s节点操作系统上，不是在容器内。也可以进容器kubeasz直接操作</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">建议使用<span class="hljs-built_in">alias</span>命令，查看~/.bashrc 文件应该包含：<span class="hljs-built_in">alias</span> dk=<span class="hljs-string">&#x27;docker exec -it kubeasz&#x27;</span></span><br>source ~/.bashrc<br></code></pre></td></tr></table></figure><h5 id="安装配置docker-registry">2.2.4.3.0 安装配置docker registry</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s# openssl req  -addext &quot;subjectAltName = DNS:easzlab.io.local&quot; \<br>  -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key \<br>  -x509 -days 36500 -out certs/domain.crt<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# docker run -d \<br> --restart=always \<br> --name local_registry \<br> -v &quot;$(pwd)&quot;/certs:/certs \<br> -v /mnt/registry:/var/lib/registry \<br> -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \<br> -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \<br> -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \<br> -p 443:443 \<br> registry:2<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# mkdir -p  /etc/docker/certs.d/easzlab.io.local<br>root@k8s03-1:/opt/kubeasz-deployk8s# cp certs/domain.crt  /etc/docker/certs.d/easzlab.io.local/ca.crt<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# docker tag registry:2 easzlab.io.local/registry:2<br>root@k8s03-1:/opt/kubeasz-deployk8s# docker push easzlab.io.local/registry:2<br>root@k8s03-1:/opt/kubeasz-deployk8s# docker pull easzlab.io.local/registry:2<br><br>docker tag registry:2 easzlab.io.local/library/registry:2<br>docker push easzlab.io.local/library/registry:2<br>docker pull easzlab.io.local/library/registry:2<br></code></pre></td></tr></table></figure><h5 id="配置ssh免密登录">2.2.4.3.1 配置ssh免密登录</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:~# cat /etc/hosts<br>...<br>10.13.15.61    k8s03-1<br>10.13.15.62    k8s03-2<br>10.13.15.63    k8s03-3<br>10.13.15.64    k8s03-4<br>10.13.15.65    k8s03-5<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-variable">$IP</span>为所有节点地址包括自身，按照提示输入<span class="hljs-built_in">yes</span> 和root密码</span><br>root@k8s03-1:~# ssh-keygen -P &quot;&quot;<br>root@k8s03-1:~# ssh-copy-id root@$IP<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">为每个节点设置python软链接</span><br>for i in &#123;61..65&#125;; do<br>  ssh root@10.13.15.$&#123;i&#125; &#x27;if [ ! -L /usr/bin/python ];then ln -s /usr/bin/python3 /usr/bin/python; fi&#x27;;<br>done<br></code></pre></td></tr></table></figure><h5 id="搭建nfs服务器">2.2.4.3.2 搭建nfs服务器</h5><p>本文以在k8s03-1节点上搭建nfs服务端为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##nfs服务端</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令安装 NFS 服务，</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">apt 会自动安装 nfs-common、rpcbind 等软件包</span><br>root@k8s03-1:~# apt install nfs-kernel-server -y<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建作为nfs服务端的根目录</span><br>root@k8s03-1:~# mkdir /nfs<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">编写配置文件</span><br>root@k8s03-1:~# vim /etc/exports<br><span class="hljs-meta prompt_">#</span><span class="language-bash">[任意主机所有权限]</span><br>root@k8s03-1:~# /nfs   *(rw,sync,insecure,no_subtree_check,no_root_squash)<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启 NFS 服务</span><br>root@k8s03-1:~# systemctl restart nfs-kernel-server<br>root@k8s03-1:~# systemctl enable nfs-kernel-server &amp;&amp; systemctl status nfs-kernel-server <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">常用命令工具</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在安装 NFS 服务器时，已包含常用的命令行工具，无需额外安装</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">显示已经 mount 到本机 NFS 目录的客户端机器</span><br>sudo showmount -e localhost<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将配置文件中的目录全部重新 <span class="hljs-built_in">export</span> 一次，无需重启服务</span><br>sudo exportfs -rv<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看 NFS 的运行状态</span><br>sudo nfsstat<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看 rpc 执行信息，可以用于检测 rpc 运行情况</span><br>sudo rpcinfo<br></code></pre></td></tr></table></figure><h5 id="一键部署与分步部署">2.2.4.3.3 一键部署与分步部署</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在k8s节点上操作，当然也可以进容器kubeasz内操作</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">建议使用<span class="hljs-built_in">alias</span>命令，查看~/.bashrc 文件应该包含：<span class="hljs-built_in">alias</span> dk=<span class="hljs-string">&#x27;docker exec -it kubeasz&#x27;</span></span><br>root@k8s03-1:~# source ~/.bashrc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">一键安装，等价于执行docker <span class="hljs-built_in">exec</span> -it kubeasz ezctl setup k8s03 all</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">对于不熟悉的操作者而言，建议分步执行，执行完一个步骤后查看此步骤的结果以熟悉整个部署流程</span><br>root@k8s03-1:~# dk ezctl setup k8s03 all<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者分步安装，具体使用 dk ezctl <span class="hljs-built_in">help</span> setup 查看分步安装帮助信息</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">dk ezctl setup k8s03 01</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">dk ezctl setup k8s03 02</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">dk ezctl setup k8s03 03</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">dk ezctl setup k8s03 04</span><br>...<br></code></pre></td></tr></table></figure><h5 id="创建证书和安装准备">2.2.4.3.4 01-创建证书和安装准备</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">容器内操作</span><br>k8s03-1:/# ezctl setup k8s03 01<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在k8s节点上操作</span><br>root@k8s03-1:~# source ~/.bashrc<br>root@k8s03-1:~# dk ezctl setup k8s03 01<br></code></pre></td></tr></table></figure><h5 id="安装etcd集群">2.2.4.3.5 02-安装etcd集群</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 02<br></code></pre></td></tr></table></figure><h5 id="安装容器运行时">2.2.4.3.6 03-安装容器运行时</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 03<br></code></pre></td></tr></table></figure><h5 id="安装master节点">2.2.4.3.7 04-安装master节点</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 04<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述安装master节点相关命令执行成功后，可以查看集群中的master节点，如下</span><br>k8s03-1:/etc/kubeasz/clusters/k8s03# kubectl get nodes<br>NAME      STATUS                     ROLES    AGE   VERSION<br>10.13.15.61   Ready,SchedulingDisabled   master   57s   v1.23.17<br>10.13.15.62   Ready,SchedulingDisabled   master   57s   v1.23.17<br>10.13.15.63   Ready,SchedulingDisabled   master   57s   v1.23.17<br></code></pre></td></tr></table></figure><h5 id="安装node节点">2.2.4.3.8 05-安装node节点</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 05<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述安装node节点相关命令执行成功后，可以查看集群中的所有节点，如下</span><br>k8s03-1:/etc/kubeasz/clusters/k8s03# kubectl get nodes   <br>NAME          STATUS                     ROLES    AGE     VERSION<br>10.13.15.61   Ready,SchedulingDisabled   master   4m59s   v1.23.17<br>10.13.15.62   Ready,SchedulingDisabled   master   4m59s   v1.23.17<br>10.13.15.63   Ready,SchedulingDisabled   master   4m59s   v1.23.17<br>10.13.15.64   Ready                      node     22s     v1.23.17<br>10.13.15.65   Ready                      node     22s     v1.23.17<br></code></pre></td></tr></table></figure><h5 id="安装集群网络">2.2.4.3.906-安装集群网络</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 06<br></code></pre></td></tr></table></figure><h5 id="安装集群插件">2.2.4.3.10 07-安装集群插件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 07<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看创建的sc</span><br>root@k8s03-1:/# kubectl get sc<br>NAME                  PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>managed-nfs-storage   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate              false                  7m47s<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将sc/managed-nfs-storage 设置为默认的sc</span><br>root@k8s03-1:/# kubectl patch storageclass managed-nfs-storage -p &#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;<br>root@k8s03-1:/# kubectl get sc<br>NAME                            PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>managed-nfs-storage (default)   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate              false                  9m13s<br></code></pre></td></tr></table></figure><h5 id="ex-lb">2.2.4.3.11 10-ex-lb</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl setup k8s03 10<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3个控制节点上现在应该都正常运行了以下两个服务</span><br>root@k8s03-1:~# systemctl status l4lb.service <br>root@k8s03-1:~# systemctl status keepalived.service <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">因为默认情况下，k8s03-1 是keepalived 集群的主节点，所以此时VIP 10.13.15.70 应该是在k8s03-1上</span><br>root@k8s03-1:~# ip a<br>...<br>2: ens3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000<br>    link/ether fa:16:3e:65:87:be brd ff:ff:ff:ff:ff:ff<br>    inet 10.13.15.61/24 brd 10.13.15.255 scope global dynamic ens3<br>       valid_lft 72162sec preferred_lft 72162sec<br>    inet 10.13.15.70/32 scope global ens3<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::f816:3eff:fe65:87be/64 scope link <br>       valid_lft forever preferred_lft forever<br>...<br></code></pre></td></tr></table></figure><h6 id="负载均衡相关设置">2.2.4.3.11.1 负载均衡相关设置</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#以下是OpenStack虚拟机特定操作，在openstack 控制节点上执行</span></span><br>root@controller01:~# docker exec -it kolla-ansible bash<br>root@controller01:~# source /root/admin-openrc.sh <br>root@controller01:~# openstack port list | egrep &quot;10.13.15.61|10.13.15.62|10.13.15.63&quot;<br>| 10194efa-abee-4f04-9638-dd7e554d0be9 | 10.13.15.61  | fa:16:3e:65:87:be | ip_address=&#x27;10.13.15.61&#x27;, subnet_id=&#x27;596d5b92-6db8-480c-a8b3-e672cc39b531&#x27;   | ACTIVE |<br>| 23ef271f-40ee-489c-a219-3f8ca6fab8e1 | 10.13.15.63  | fa:16:3e:87:3a:47 | ip_address=&#x27;10.13.15.63&#x27;, subnet_id=&#x27;596d5b92-6db8-480c-a8b3-e672cc39b531&#x27;   | ACTIVE |<br>| ec016664-03d5-45a2-94b2-c2306c3c0136 | 10.13.15.62  | fa:16:3e:97:af:b4 | ip_address=&#x27;10.13.15.62&#x27;, subnet_id=&#x27;596d5b92-6db8-480c-a8b3-e672cc39b531&#x27;   | ACTIVE |<br><br>root@controller01:~# openstack port set --allowed-address ip-address=10.13.15.70 10194efa-abee-4f04-9638-dd7e554d0be9<br>root@controller01:~# openstack port set --allowed-address ip-address=10.13.15.70 23ef271f-40ee-489c-a219-3f8ca6fab8e1<br>root@controller01:~# openstack port set --allowed-address ip-address=10.13.15.70 ec016664-03d5-45a2-94b2-c2306c3c0136<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">回到k8s节点上操作</span><br>root@k8s03-1:/var/data/harbor# kubectl -n kube-system get svc<br>NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE<br>dashboard-metrics-scraper   ClusterIP   10.68.38.156    &lt;none&gt;        8000/TCP                 49m<br>kube-dns                    ClusterIP   10.68.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   50m<br>kube-dns-upstream           ClusterIP   10.68.209.167   &lt;none&gt;        53/UDP,53/TCP            50m<br>kubernetes-dashboard        NodePort    10.68.173.217   &lt;none&gt;        443:32268/TCP            49m<br>metrics-server              ClusterIP   10.68.168.180   &lt;none&gt;        443/TCP                  50m<br>node-local-dns              ClusterIP   None            &lt;none&gt;        9253/TCP                 50m<br><span class="hljs-meta prompt_">#</span><span class="language-bash">NodePort类型的 service/kubernetes-dashboard 在k8s节点上映射的端口是 32268</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下使用vip + 32268 即 https://10.13.15.70:32268 来访问kuboard（建议使用 firefox 浏览器访问）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">另外，当然也可以使用k8s集群任何一个节点的IP+32268，以访问kubernetes原生dashboard即kuboard（建议使用 firefox 浏览器访问）</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/31/IMNoUuGV98bCBir.png"alt="image-20241031173526066" /><figcaption aria-hidden="true">image-20241031173526066</figcaption></figure><h4 id="查看集群信息与状态">2.2.4.4 查看集群信息与状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s节点列表</span><br>root@k8s03-1:/var/data/harbor# kubectl get nodes<br>NAME      STATUS                     ROLES    AGE   VERSION<br>k8s03-1   Ready,SchedulingDisabled   master   32m   v1.23.17<br>k8s03-2   Ready,SchedulingDisabled   master   32m   v1.23.17<br>k8s03-3   Ready,SchedulingDisabled   master   32m   v1.23.17<br>k8s03-4   Ready                      node     16m   v1.23.17<br>k8s03-5   Ready                      node     16m   v1.23.17<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看集群中pod列表</span><br>root@k8s03-1:/var/data/harbor# kubectl get pods -A<br>NAMESPACE     NAME                                         READY   STATUS    RESTARTS   AGE<br>kube-system   calico-kube-controllers-754966f84c-mmsdm     1/1     Running   0          15m<br>kube-system   calico-node-5dgf7                            1/1     Running   0          15m<br>kube-system   calico-node-c2gn5                            1/1     Running   0          15m<br>kube-system   calico-node-j5xbk                            1/1     Running   0          15m<br>kube-system   calico-node-rfdbh                            1/1     Running   0          15m<br>kube-system   calico-node-s9r9k                            1/1     Running   0          15m<br>kube-system   coredns-596755dbff-d6ds5                     1/1     Running   0          4m36s<br>kube-system   dashboard-metrics-scraper-799d786dbf-rc4kn   1/1     Running   0          3m56s<br>kube-system   kubernetes-dashboard-9f8c8b989-448zj         1/1     Running   0          3m56s<br>kube-system   metrics-server-5d648558d9-npj5m              1/1     Running   0          4m25s<br>kube-system   nfs-client-provisioner-f97c77ddd-ltrdv       1/1     Running   0          4m25s<br>kube-system   node-local-dns-5zxbn                         1/1     Running   0          4m34s<br>kube-system   node-local-dns-jt7hh                         1/1     Running   0          4m34s<br>kube-system   node-local-dns-p52ck                         1/1     Running   0          4m34s<br>kube-system   node-local-dns-vk2sc                         1/1     Running   0          4m34s<br>kube-system   node-local-dns-vr87v                         1/1     Running   0          4m34s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看component status</span><br>root@k8s03-1:/var/data/harbor# kubectl get cs<br>Warning: v1 ComponentStatus is deprecated in v1.19+<br>NAME                 STATUS    MESSAGE                         ERROR<br>controller-manager   Healthy   ok                              <br>scheduler            Healthy   ok                              <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;   <br>etcd-2               Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;   <br>etcd-1               Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125; <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看namespace/kube-system下的svc</span><br>root@k8s03-1:/var/data/harbor# kubectl -n kube-system get svc<br>NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE<br>dashboard-metrics-scraper   ClusterIP   10.68.38.156    &lt;none&gt;        8000/TCP                 49m<br>kube-dns                    ClusterIP   10.68.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   50m<br>kube-dns-upstream           ClusterIP   10.68.209.167   &lt;none&gt;        53/UDP,53/TCP            50m<br>kubernetes-dashboard        NodePort    10.68.173.217   &lt;none&gt;        443:32268/TCP            49m<br>metrics-server              ClusterIP   10.68.168.180   &lt;none&gt;        443/TCP                  50m<br>node-local-dns              ClusterIP   None            &lt;none&gt;        9253/TCP                 50m<br></code></pre></td></tr></table></figure><h4 id="登录kubernetes-dashboard">2.2.4.5 登录kubernetes-dashboard</h4><figure><img src="https://s2.loli.net/2025/01/10/9mbfwSHUe7C5ozy.png"alt="image-20250110145004619" /><figcaption aria-hidden="true">image-20250110145004619</figcaption></figure><p>选择Kubeconfig时，如果提示“Internal error (500): Not enough data tocreate auth info structure.”，请参照如下方式处理：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建如下3个文件，然后分别apply或bash执行</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# cat 01-ServiceAccount-admin-user.yaml <br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  name: admin-user<br>  namespace: kubernetes-dashboard<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# cat 02-ClusterRoleBinding-admin-user.yaml <br>apiVersion: rbac.authorization.k8s.io/v1<br>kind: ClusterRoleBinding<br>metadata:<br>  name: admin-user<br>roleRef:<br>  apiGroup: rbac.authorization.k8s.io<br>  kind: ClusterRole<br>  name: cluster-admin<br>subjects:<br>- kind: ServiceAccount<br>  name: admin-user<br>  namespace: kubernetes-dashboard<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl apply -f 01-ServiceAccount-admin-user.yaml <br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl apply -f 02-ClusterRoleBinding-admin-user.yaml <br>root@k8s03-1:/opt/kubeasz-deployk8s# cat 03-Getting-a-Bearer-Token-for-ServiceAccount.sh <br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath=&quot;&#123;.secrets[0].name&#125;&quot;) -o go-template=&quot;&#123;&#123;.data.token | base64decode&#125;&#125;&quot;<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# bash 03-Getting-a-Bearer-Token-for-ServiceAccount.sh <br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述脚本文件执行时输出如下内容</span><br>eyJhbGciOiJSUzI1NiIsImtpZCI6IkJyV2xQLWZ5REZ6cUtOb1VBVzB0ZVZCUzBoVElWcWNyVVhtM1lhZnpGVjgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi11c2VyLXRva2VuLWRnYmJsIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFkbWluLXVzZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI2N2ViMWIzZi0wYjU0LTQ5M2ItOWQ4Mi00MWU0OGMxNzRmMDQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZXJuZXRlcy1kYXNoYm9hcmQ6YWRtaW4tdXNlciJ9.ieO-n3yTYnz7Z0PkGLvaoNq_0VxO9ENWh5gJXK6qzf3h7ifUC4kbSbr5M7ksF7A3Z6pGl9w7ZLnGuXF7Hguva7NmF_-3gXKQYRstDePrZNo0pBZFO13SZmCOKiLIMNyJFYv93WYJYwLeXhfRf61bi1BNxMapGC62oVyyjQ0UTpbqIzVbWElkhKPzwYl_shp_nyCXwDO0KVZsq8z0Tln-Xne7CwQGjDcoZBtqFfaRalTolS7iUwKBkXqp98luShk-Tecik11ICacCQLpYRMgi-3NE-WR4bnbAe2PKwYkYMv0TlfNL1MSA4-9zhQD9gHOik-eWfscPG_a6s7tknRaaWQ<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将上述输出内容复制，按如下形式粘贴到/root/.kube/config文件中</span><br>apiVersion: v1<br>clusters:<br>- cluster:<br>    server: https://XXXX<br>  name: kubernetes<br>contexts:<br>- context:<br>    cluster: kubernetes<br>    user: YOUR UER<br>  name: kubernetes<br>current-context: &quot;kubernetes&quot;<br>kind: Config<br>preferences: &#123;&#125;<br>users:<br>- name: YOUR USER<br>  user:<br>    client-certificate-data: CODED<br>    client-key-data: CODED<br>    token: CODED  #粘贴到这里，替换此处的CODED<br><br></code></pre></td></tr></table></figure><p>使用上述/root/.kube/config 文件即可登录kubernetes-dashboard 。</p><h3 id="安装harbor">2.2.5 安装harbor</h3><h4 id="使用默认配置安装harbor">2.2.5.1 使用默认配置安装Harbor</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果是彻底重新安装harbor，要先删除harbor服务器上 /var/data/database /var/data/registry /var/data/redis /var/data/job_logs /var/data/harbor 这几个目录</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">k8s节点上、kubeasz容器外执行如下命令，查看harbor相关容器</span><br>root@k8s03-1:~# rm -rf /var/data/database /var/data/registry /var/data/redis /var/data/job_logs /var/data/harbor<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装harbor（kubeasz容器内执行）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果是前面安装了ex-lb，则k8s03-1节点上的8443端口将被占用了。而安装harbor时也尝试去使用8443端口，此时此步骤就会在最后阶段失败，即“TASK [harbor : 安装 harbor]”任务失败，<span class="hljs-string">&quot;msg&quot;</span>: <span class="hljs-string">&quot;non-zero return code&quot;</span>。</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所以使用kubeasz安装harbor之前要先将 clusters/k8s03/config.yml 文件中的 HARBOR_TLS_PORT 参数值修改为其他值，比如修改为8444</span><br>k8s03-1:/etc/kubeasz/clusters/k8s03# ezctl setup k8s03 11 或 ezctl setup k8s03 harbor                      <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">k8s节点上、kubeasz容器外执行如下命令，查看harbor相关容器</span><br>root@k8s03-1:~# cd /var/data/harbor<br>root@k8s03-1:/var/data/harbor# docker-compose ps<br>chartmuseum         ./docker-entrypoint.sh           Up (healthy)                                                                                 <br>harbor-core         /harbor/entrypoint.sh            Up (healthy)                                                                                 <br>harbor-db           /docker-entrypoint.sh            Up (healthy)                                                                                 <br>harbor-jobservice   /harbor/entrypoint.sh            Up (healthy)                                                                                 <br>harbor-log          /bin/sh -c /usr/local/bin/ ...   Up (healthy)   127.0.0.1:1514-&gt;10514/tcp                                                     <br>harbor-portal       nginx -g daemon off;             Up (healthy)                                                                                 <br>nginx               nginx -g daemon off;             Up (healthy)   0.0.0.0:80-&gt;8080/tcp,:::80-&gt;8080/tcp, 0.0.0.0:8444-&gt;8443/tcp,:::8444-&gt;8443/tcp<br>redis               redis-server /etc/redis.conf     Up (healthy)                                                                                 <br>registry            /home/harbor/entrypoint.sh       Up (healthy)                                                                                 <br>registryctl         /home/harbor/start.sh            Up (healthy)   <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">harbor的安装目录默认在：/var/data，它由“/etc/kubeasz/clusters/k8s03/config.yml”中的 HARBOR_PATH 配置项决定</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">harbor系统admin用户的密码，在harbor部署服务器的如下文件中查看：/var/data/harbor/harbor.yml</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Dgyj08NOYtvhMc7x</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">在k8s集群所有节点上，可以登录此harbor仓库。用户：admin，密码就是在harbor部署服务器的如下文件/var/data/harbor/harbor.yml中harbor_admin_password 配置值</span><br>root@k8s03-1:/etc/kubeasz# docker login harbor.easzlab.io.local:8444<br>Username: admin<br>Password: <br>WARNING! Your password will be stored unencrypted in /root/.docker/config.json.<br>Configure a credential helper to remove this warning. See<br>https://docs.docker.com/engine/reference/commandline/login/#credentials-store<br><br>Login Succeeded<br></code></pre></td></tr></table></figure><h4 id="修改harbor服务的端口">2.2.5.2 修改Harbor服务的端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:~# cd /var/data/harbor<br><span class="hljs-meta prompt_">#</span><span class="language-bash">先停掉harbor相关容器</span><br>root@k8s03-1:/var/data/harbor# docker-compose down<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将所有 8444 字符串替换成 8445</span><br>root@k8s03-1:/var/data/harbor# sed -i &quot;s/8444/8445/g&quot; `grep 8444 -rl ./`<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重新启动harbor相关容器</span><br>root@k8s03-1:/var/data/harbor# docker-compose up -d<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改证书目录</span><br>root@k8s03-1:/var/data/harbor# cd /etc/docker/certs.d/<br>root@k8s03-1:/etc/docker/certs.d# mkdir harbor.yourdomain.com\:8445<br>root@k8s03-1:/etc/docker/certs.d# docker cp kubeasz:/etc/kubeasz/down/ca.pem ./harbor.yourdomain.com:8445/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">登录</span><br>root@k8s03-1:/etc/docker/certs.d# docker login harbor.yourdomain.com:8445<br><span class="hljs-meta prompt_">#</span><span class="language-bash">尝试提交镜像...</span><br></code></pre></td></tr></table></figure><h3 id="继续安装kubesphere">2.2.6 继续安装Kubesphere</h3><p>​ 本文已经使用kubeasz3.2.0安装好kubernetes1.23.17，现准备部署kubesphere3.4.1。</p><p><strong>前提条件</strong></p><blockquote><ul><li>安装之前，Kubernetes 集群已配置<strong>默认</strong>存储类型(StorageClass)；</li><li>当使用 <code>--cluster-signing-cert-file</code> 和<code>--cluster-signing-key-file</code> 参数启动时，在<code>kube-apiserver</code> 中会激活 CSR 签名功能。请参见 <ahref="https://github.com/kubesphere/kubesphere/issues/1925#issuecomment-591698309">RKE安装问题</a>；（暂时无需关注）</li><li>有关在 Kubernetes 上安装 KubeSphere 的准备工作，请参见<ahref="https://kubesphere.io/zh/docs/installing-on-kubernetes/introduction/prerequisites/">准备工作</a>。</li></ul></blockquote><h4 id="手动创建sclocal">2.2.6.1 手动创建sc/local</h4><p>​ 使用kubeadm或kubeasz部署的k8s环境，没有创建任何storageclass资源对象，需要自己创建。一个默认的sc是部署的kubesphere的前提条件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:~# cd /etc/kubeasz/clusters/k8s03/<br>root@k8s03-1:/etc/kubeasz/clusters/k8s03# cat &gt;&gt; default-storage-class.yaml &lt;&lt;-EOF<br>kind: StorageClass<br>apiVersion: storage.k8s.io/v1<br>metadata:<br>  name: local<br>  annotations:<br>    cas.openebs.io/config: |<br>      - name: StorageType<br>        value: &quot;hostpath&quot;<br>      - name: BasePath<br>        value: &quot;/var/openebs/local/&quot;<br>    openebs.io/cas-type: local<br>    storageclass.beta.kubernetes.io/is-default-class: &#x27;false&#x27;<br>    storageclass.kubesphere.io/supported-access-modes: &#x27;[&quot;ReadWriteOnce&quot;]&#x27;<br>provisioner: openebs.io/local<br>reclaimPolicy: Delete<br>volumeBindingMode: WaitForFirstConsumer<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用上述yaml文件，创建<span class="hljs-built_in">local</span> sc</span><br>root@k8s03-1:/etc/kubeasz/clusters/k8s03# kubectl get sc<br>No resources found<br>root@k8s03-1:/etc/kubeasz/clusters/k8s03# kubectl apply -f default-storage-class.yaml<br>storageclass.storage.k8s.io/local created<br>root@k8s03-1:/etc/kubeasz/clusters/k8s03# kubectl get sc<br>NAME              PROVISIONER        RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>local             openebs.io/local   Delete          WaitForFirstConsumer   false                  1s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置为默认StorageClass</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">kubectl patch storageclass <span class="hljs-built_in">local</span> -p <span class="hljs-string">&#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">集群中创建默认StorageClass</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认没有，可以自建</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 StorageClass：https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置默认 StorageClass：https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/change-default-storage-class/</span><br></code></pre></td></tr></table></figure><h4 id="手动创建scnfs">2.2.6.2 手动创建sc/nfs</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在k8s03-1节点上搭建nfs服务端：参考“2.2.4.3.2 搭建nfs服务器”章节</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1 下载并创建storageclass</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# mkdir sc-nfs &amp;&amp; cd sc-nfs<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# wget https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/class.yaml<br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# mv class.yaml storageclass-nfs.yml<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# cat storageclass-nfs.yml <br>apiVersion: storage.k8s.io/v1<br>kind: StorageClass # 类型<br>metadata:<br>  name: nfs-client # 名称,要使用就需要调用此名称<br>provisioner: k8s-sigs.io/nfs-subdir-external-provisioner # or choose another name, must match deployment&#x27;s env PROVISIONER_NAME&#x27;<br>parameters:<br>  archiveOnDelete: &quot;false&quot; # 删除数据时是否存档，false表示不存档，true表示存档<br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl apply -f storageclass-nfs.yml<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get sc<br>NAME         PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>local        kubernetes.io/no-provisioner                  Delete          WaitForFirstConsumer   false                  2m16s<br>nfs-client   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate              false                  4s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将nfs-client sc设置为默认sc</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl patch storageclass nfs-client -p &#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get sc<br>NAME                   PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE<br>local                  kubernetes.io/no-provisioner                  Delete          WaitForFirstConsumer   false                  2m40s<br>nfs-client (default)   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate              false                  28s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">RECLAIMPOLICY pv回收策略，pod或pvc被删除后，pv是否删除还是保留。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">VOLUMEBINDINGMODE Immediate 模式下PVC与PV立即绑定，主要是不等待相关Pod调度完成，不关心其运行节点，直接完成绑定。相反的 WaitForFirstConsumer模式下需要等待Pod调度完成后进行PV绑定。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ALLOWVOLUMEEXPANSION pvc扩容</span><br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2 下载并创建rbac</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">因为storage自动创建pv需要经过kube-apiserver，所以需要授权</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# wget https://raw.githubusercontent.com/kubernetes-sigs/nfs-subdir-external-provisioner/master/deploy/rbac.yaml<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# mv rbac.yaml storageclass-nfs-rbac.yaml<br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl apply -f storageclass-nfs-rbac.yaml<br>serviceaccount/nfs-client-provisioner created<br>clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created<br>clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created<br>role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created<br>rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3 创建动态供给的deployment</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">需要一个deployment来专门实现pv与pvc的自动创建</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# cat deploy-nfs-client-provisioner.yml<br>apiVersion: apps/v1<br>kind: Deployment<br>metadata:<br>  name: nfs-client-provisioner<br>spec:<br>  replicas: 1<br>  strategy:<br>    type: Recreate<br>  selector:<br>    matchLabels:<br>      app: nfs-client-provisioner<br>  template:<br>    metadata:<br>      labels:<br>        app: nfs-client-provisioner<br>    spec:<br>      serviceAccount: nfs-client-provisioner<br>      containers:<br>        - name: nfs-client-provisioner<br>          image: registry.cn-beijing.aliyuncs.com/pylixm/nfs-subdir-external-provisioner:v4.0.0<br>          volumeMounts:<br>            - name: nfs-client-root<br>              mountPath: /persistentvolumes<br>          env:<br>            - name: PROVISIONER_NAME<br>              value: k8s-sigs.io/nfs-subdir-external-provisioner<br>            - name: NFS_SERVER<br>              value: 10.13.15.61          #nfs服务器ip<br>            - name: NFS_PATH<br>              value: /nfs          #nfs服务器共享盘挂载在nfs服务器上的目录<br>      volumes:<br>        - name: nfs-client-root<br>          nfs:<br>            server: 10.13.15.61<br>            path: /nfs<br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl apply -f deploy-nfs-client-provisioner.yml <br>deployment.apps/nfs-client-provisioner created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get pods -o wide<br>NAME                                      READY   STATUS    RESTARTS   AGE   IP               NODE          NOMINATED NODE   READINESS GATES<br>nfs-client-provisioner-7cdb58c49d-4slt7   1/1     Running   0          44s   172.20.197.147   10.13.15.65   &lt;none&gt;           &lt;none&gt;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">4 测试存储动态供给是否可用</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# cat nginx-sc.yaml<br>---<br>apiVersion: v1<br>kind: Service<br>metadata:<br>  name: nginx<br>  labels:<br>    app: nginx<br>spec:<br>  ports:<br>  - port: 80<br>    name: web<br>  clusterIP: None<br>  selector:<br>    app: nginx<br>---<br>apiVersion: apps/v1<br>kind: StatefulSet<br>metadata:<br>  name: web<br>spec:<br>  selector:<br>    matchLabels:<br>      app: nginx<br>  serviceName: &quot;nginx&quot;<br>  replicas: 2<br>  template:<br>    metadata:<br>      labels:<br>        app: nginx<br>    spec:<br>      imagePullSecrets:<br>      - name: huoban-harbor<br>      terminationGracePeriodSeconds: 10<br>      containers:<br>      - name: nginx<br>        image: nginx:latest<br>        ports:<br>        - containerPort: 80<br>          name: web<br>        volumeMounts:<br>        - name: www<br>          mountPath: /usr/share/nginx/html<br>  volumeClaimTemplates:<br>  - metadata:<br>      name: www<br>    spec:<br>      accessModes: [ &quot;ReadWriteOnce&quot; ]<br>      storageClassName: &quot;nfs-client&quot;<br>      resources:<br>        requests:<br>          storage: 1Gi<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl apply -f nginx-sc.yaml <br>service/nginx created<br>statefulset.apps/web created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pv与pvc创建情况</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get pv<br>NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM               STORAGECLASS   REASON   AGE<br>pvc-0a9b8046-b364-4146-816d-815dd5696ac5   1Gi        RWO            Delete           Bound    default/www-web-0   nfs-client              64s<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get pvc<br>NAME        STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE<br>www-web-0   Bound    pvc-0a9b8046-b364-4146-816d-815dd5696ac5   1Gi        RWO            nfs-client     60s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl get pods -o wide | egrep &quot;NAME|web&quot;<br>NAME                           READY   STATUS    RESTARTS   AGE     IP               NODE          NOMINATED NODE   READINESS GATES<br>web-0                          1/1     Running   0          5m11s   172.20.46.31     10.13.15.64   &lt;none&gt;           &lt;none&gt;<br>web-1                          1/1     Running   0          3m23s   172.20.197.148   10.13.15.65   &lt;none&gt;           &lt;none&gt;<br></code></pre></td></tr></table></figure><p>如果要删除stoarageclass/nfs-client相关资源对象与配置，执行如下操作：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl delete -f deploy-nfs-client-provisioner.yml<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl delete -f storageclass-nfs-rbac.yaml<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341/sc-nfs# kubectl delete -f storageclass-nfs.yml<br></code></pre></td></tr></table></figure><h4 id="手动创建scceph">2.2.6.3 手动创建sc/ceph</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">暂略，后续可能更新在个人github博客：https://jiangsanyin.github.io/archives/</span><br></code></pre></td></tr></table></figure><h4 id="下载kubesphere安装文件">2.2.6.4 下载kubesphere安装文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# wget https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/kubesphere-installer.yaml<br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# wget https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/cluster-configuration.yaml<br></code></pre></td></tr></table></figure><h4 id="准备安装镜像">2.2.6.5 准备安装镜像</h4><h5 id="准备镜像清单文件">2.2.6.5.1 准备镜像清单文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建镜像清单文件 images-list-aliyuncs.txt</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# touch images-list-aliyuncs.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">images-list-aliyuncs.txt文件内容如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用经验告诉笔者，如果只使用最基础的kubesphere功能，下列镜像列表可以进一步被裁剪（笔者暂未做裁剪）</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# cat images-list-aliyuncs.txt<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/ks-apiserver:v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/ks-console:v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/ks-controller-manager:v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.20.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.22.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kubefed:v0.8.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/tower:v0.2.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/minio:RELEASE.2019-08-07T01-59-21Z<br>registry.cn-beijing.aliyuncs.com/kubesphereio/mc:RELEASE.2019-08-07T23-14-43Z<br>registry.cn-beijing.aliyuncs.com/kubesphereio/snapshot-controller:v4.0.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/nginx-ingress-controller:v1.3.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/defaultbackend-amd64:1.4<br>registry.cn-beijing.aliyuncs.com/kubesphereio/metrics-server:v0.4.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/redis:5.0.14-alpine<br>registry.cn-beijing.aliyuncs.com/kubesphereio/haproxy:2.0.25-alpine<br>registry.cn-beijing.aliyuncs.com/kubesphereio/alpine:3.14<br>registry.cn-beijing.aliyuncs.com/kubesphereio/openldap:1.3.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/netshoot:v1.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubeedge-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/cloudcore:v1.13.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/iptables-manager:v1.13.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/edgeservice:v0.3.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#gatekeeper-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/gatekeeper:v3.5.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#openpitrix-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/openpitrix-jobs:v3.3.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-devops-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/devops-apiserver:ks-v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/devops-controller:ks-v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/devops-tools:ks-v3.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/ks-jenkins:v3.4.0-2.319.3-1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/inbound-agent:4.10-2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-base:v3.2.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-nodejs:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.1-jdk11<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-python:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.16<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.17<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.18<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-base:v3.2.2-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-nodejs:v3.2.0-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.0-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.1-jdk11-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-python:v3.2.0-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.0-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.16-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.17-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.18-podman<br>registry.cn-beijing.aliyuncs.com/kubesphereio/s2ioperator:v3.2.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/s2irun:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/s2i-binary:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java11-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java11-runtime:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java8-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java8-runtime:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/java-11-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/java-8-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/java-8-runtime:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/java-11-runtime:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-8-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-6-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-4-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/python-36-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/python-35-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/python-34-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/python-27-centos7:v3.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/argocd:v2.3.3<br>registry.cn-beijing.aliyuncs.com/kubesphereio/argocd-applicationset:v0.4.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/dex:v2.30.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/redis:6.2.6-alpine<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-monitoring-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/configmap-reload:v0.7.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus:v2.39.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus-config-reloader:v0.55.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus-operator:v0.55.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-rbac-proxy:v0.11.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-state-metrics:v2.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/node-exporter:v1.3.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/alertmanager:v0.23.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/thanos:v0.31.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/grafana:8.3.3<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-rbac-proxy:v0.11.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/notification-manager-operator:v2.3.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/notification-manager:v2.3.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/notification-tenant-sidecar:v3.2.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#kubesphere-logging-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/elasticsearch-curator:v5.7.6<br>registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch-curator:v0.0.5<br>registry.cn-beijing.aliyuncs.com/kubesphereio/elasticsearch-oss:6.8.22<br>registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch:2.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch-dashboards:2.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/fluentbit-operator:v0.14.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/docker:19.03<br>registry.cn-beijing.aliyuncs.com/kubesphereio/fluent-bit:v1.9.4<br>registry.cn-beijing.aliyuncs.com/kubesphereio/log-sidecar-injector:v1.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/filebeat:6.7.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-operator:v0.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-exporter:v0.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-ruler:v0.6.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-auditing-operator:v0.2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kube-auditing-webhook:v0.2.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#istio-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/pilot:1.14.6<br>registry.cn-beijing.aliyuncs.com/kubesphereio/proxyv2:1.14.6<br>registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-operator:1.29<br>registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-agent:1.29<br>registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-collector:1.29<br>registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-query:1.29<br>registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-es-index-cleaner:1.29<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kiali-operator:v1.50.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/kiali:v1.50<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#example-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/busybox:1.31.1<br>registry.cn-beijing.aliyuncs.com/kubesphereio/nginx:1.14-alpine<br>registry.cn-beijing.aliyuncs.com/kubesphereio/wget:1.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/hello:plain-text<br>registry.cn-beijing.aliyuncs.com/kubesphereio/wordpress:4.8-apache<br>registry.cn-beijing.aliyuncs.com/kubesphereio/hpa-example:latest<br>registry.cn-beijing.aliyuncs.com/kubesphereio/fluentd:v1.4.2-2.0<br>registry.cn-beijing.aliyuncs.com/kubesphereio/perl:latest<br>registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-productpage-v1:1.16.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-reviews-v1:1.16.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-reviews-v2:1.16.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-details-v1:1.16.2<br>registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-ratings-v1:1.16.3<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#weave-scope-images</span></span><br>registry.cn-beijing.aliyuncs.com/kubesphereio/scope:1.13.0<br></code></pre></td></tr></table></figure><h5 id="下载-offline-installation-tool.sh">2.2.6.5.2 下载<code>offline-installation-tool.sh</code></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载offline-installation-tool.sh</span> <br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# curl -L -O https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/offline-installation-tool.sh<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果不能正常下载，此处准备了此文件的内容，如下</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# cat offline-installation-tool.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Copyright 2018 The KubeSphere Authors.</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">you may not use this file except <span class="hljs-keyword">in</span> compliance with the License.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">You may obtain a copy of the License at</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">distributed under the License is distributed on an <span class="hljs-string">&quot;AS IS&quot;</span> BASIS,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">See the License <span class="hljs-keyword">for</span> the specific language governing permissions and</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">limitations under the License.</span><br><br><br>CurrentDIR=$(cd &quot;$(dirname &quot;$0&quot;)&quot; || exit;pwd)<br>ImagesDirDefault=$&#123;CurrentDIR&#125;/kubesphere-images<br>save=&quot;false&quot;<br>registryurl=&quot;&quot;<br>reposUrl=(&quot;quay.azk8s.cn&quot; &quot;gcr.azk8s.cn&quot; &quot;docker.elastic.co&quot; &quot;quay.io&quot; &quot;k8s.gcr.io&quot;)<br>KUBERNETES_VERSION=$&#123;KUBERNETES_VERSION:-&quot;v1.21.5&quot;&#125;<br>HELM_VERSION=$&#123;HELM_VERSION:-&quot;v3.6.3&quot;&#125;<br>CNI_VERSION=$&#123;CNI_VERSION:-&quot;v0.9.1&quot;&#125;<br>ETCD_VERSION=$&#123;ETCD_VERSION:-&quot;v3.4.13&quot;&#125;<br>CRICTL_VERSION=$&#123;CRICTL_VERSION:-&quot;v1.22.0&quot;&#125;<br>DOCKER_VERSION=$&#123;DOCKER_VERSION:-&quot;20.10.8&quot;&#125;<br><br>func() &#123;<br>    echo &quot;Usage:&quot;<br>    echo<br>    echo &quot;  $0 [-l IMAGES-LIST] [-d IMAGES-DIR] [-r PRIVATE-REGISTRY] [-v KUBERNETES_VERSION ]&quot;<br>    echo<br>    echo &quot;Description:&quot;<br>    echo &quot;  -b                     : save kubernetes&#x27; binaries.&quot;<br>    echo &quot;  -d IMAGES-DIR          : the dir of files (tar.gz) which generated by \`docker save\`. default: $&#123;ImagesDirDefault&#125;&quot;<br>    echo &quot;  -l IMAGES-LIST         : text file with list of images.&quot;<br>    echo &quot;  -r PRIVATE-REGISTRY    : target private registry:port.&quot;<br>    echo &quot;  -s                     : save model will be applied. Pull the images in the IMAGES-LIST and save images as a tar.gz file.&quot;<br>    echo &quot;  -v KUBERNETES_VERSION  : download kubernetes&#x27; binaries. default: v1.21.5&quot;<br>    echo &quot;  -h                     : usage message&quot;<br>    echo<br>    echo &quot;Examples:&quot;<br>    echo<br>    echo &quot;# Download the default kubernetes version dependency binaries.(default: [kubernetes: v1.21.5], [helm: v3.6.3], [cni: v0.9.1], [etcd: v3.4.13])&quot;<br>    echo &quot;./offline-installtion-tool.sh -b&quot;<br>    echo<br>    echo &quot;# Custom download the kubernetes version dependecy binaries.&quot;<br>    echo &quot;export KUBERNETES_VERSION=v1.22.1;export HELM_VERSION=v3.6.3;&quot;<br>    echo &quot;./offline-installtion-tool.sh -b&quot;<br>    exit<br>&#125;<br><br>while getopts &#x27;bsl:r:d:v:h&#x27; OPT; do<br>    case $OPT in<br>        b) binary=&quot;true&quot;;;<br>        d) ImagesDir=&quot;$OPTARG&quot;;;<br>        l) ImagesList=&quot;$OPTARG&quot;;;<br>        r) Registry=&quot;$OPTARG&quot;;;<br>        s) save=&quot;true&quot;;;<br>        v) KUBERNETES_VERSION=&quot;$OPTARG&quot;;;<br>        h) func;;<br>        ?) func;;<br>        *) func;;<br>    esac<br>done<br><br>if [ -z &quot;$&#123;ImagesDir&#125;&quot; ]; then<br>    ImagesDir=$&#123;ImagesDirDefault&#125;<br>fi<br><br>if [ -n &quot;$&#123;Registry&#125;&quot; ]; then<br>   registryurl=$&#123;Registry&#125;<br>fi<br><br>if [ -z &quot;$&#123;ARCH&#125;&quot; ]; then<br>  case &quot;$(uname -m)&quot; in<br>  x86_64)<br>    ARCH=amd64<br>    ;;<br>  armv8*)<br>    ARCH=arm64<br>    ;;<br>  aarch64*)<br>    ARCH=arm64<br>    ;;<br>  armv*)<br>    ARCH=armv7<br>    ;;<br>  *)<br>    echo &quot;$&#123;ARCH&#125;, isn&#x27;t supported&quot;<br>    exit 1<br>    ;;<br>  esac<br>fi<br><br>binariesDIR=$&#123;CurrentDIR&#125;/kubekey/$&#123;KUBERNETES_VERSION&#125;/$&#123;ARCH&#125;<br><br>if [[ $&#123;binary&#125; == &quot;true&quot; ]]; then<br>  mkdir -p $&#123;binariesDIR&#125;<br>  if [ -n &quot;$&#123;KKZONE&#125;&quot; ] &amp;&amp; [ &quot;x$&#123;KKZONE&#125;&quot; == &quot;xcn&quot; ]; then<br>     echo &quot;Download kubeadm ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubeadm https://kubernetes-release.pek3b.qingstor.com/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubeadm<br>     echo &quot;Download kubelet ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubelet https://kubernetes-release.pek3b.qingstor.com/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubelet<br>     echo &quot;Download kubectl ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubectl https://kubernetes-release.pek3b.qingstor.com/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubectl<br>     echo &quot;Download helm ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/helm https://kubernetes-helm.pek3b.qingstor.com/linux-$&#123;ARCH&#125;/$&#123;HELM_VERSION&#125;/helm<br>     echo &quot;Download cni plugins ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/cni-plugins-linux-$&#123;ARCH&#125;-$&#123;CNI_VERSION&#125;.tgz https://containernetworking.pek3b.qingstor.com/plugins/releases/download/$&#123;CNI_VERSION&#125;/cni-plugins-linux-$&#123;ARCH&#125;-$&#123;CNI_VERSION&#125;.tgz<br>     echo &quot;Download etcd ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/etcd-$&#123;ETCD_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz https://kubernetes-release.pek3b.qingstor.com/etcd/release/download/$&#123;ETCD_VERSION&#125;/etcd-$&#123;ETCD_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz<br>     echo &quot;Download crictl ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/crictl-$&#123;CRICTL_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz https://kubernetes-release.pek3b.qingstor.com/cri-tools/releases/download/$&#123;CRICTL_VERSION&#125;/crictl-$&#123;CRICTL_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz<br>     echo &quot;Download docker ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/docker-$&#123;DOCKER_VERSION&#125;.tgz https://mirrors.aliyun.com/docker-ce/linux/static/stable/$&#123;ARCH&#125;/docker-$&#123;DOCKER_VERSION&#125;.tgz<br>  else<br>     echo &quot;Download kubeadm ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubeadm https://storage.googleapis.com/kubernetes-release/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubeadm<br>     echo &quot;Download kubelet ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubelet https://storage.googleapis.com/kubernetes-release/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubelet<br>     echo &quot;Download kubectl ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/kubectl https://storage.googleapis.com/kubernetes-release/release/$&#123;KUBERNETES_VERSION&#125;/bin/linux/$&#123;ARCH&#125;/kubectl<br>     echo &quot;Download helm ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/helm-$&#123;HELM_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz https://get.helm.sh/helm-$&#123;HELM_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz &amp;&amp; cd $&#123;binariesDIR&#125; &amp;&amp; tar -zxf helm-$&#123;HELM_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz &amp;&amp; mv linux-$&#123;ARCH&#125;/helm . &amp;&amp; rm -rf *linux-$&#123;ARCH&#125;* &amp;&amp; cd -<br>     echo &quot;Download cni plugins ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/cni-plugins-linux-$&#123;ARCH&#125;-$&#123;CNI_VERSION&#125;.tgz https://github.com/containernetworking/plugins/releases/download/$&#123;CNI_VERSION&#125;/cni-plugins-linux-$&#123;ARCH&#125;-$&#123;CNI_VERSION&#125;.tgz<br>     echo &quot;Download etcd ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/etcd-$&#123;ETCD_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz https://github.com/coreos/etcd/releases/download/$&#123;ETCD_VERSION&#125;/etcd-$&#123;ETCD_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz<br>     echo &quot;Download crictl ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/crictl-$&#123;CRICTL_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz https://github.com/kubernetes-sigs/cri-tools/releases/download/$&#123;CRICTL_VERSION&#125;/crictl-$&#123;CRICTL_VERSION&#125;-linux-$&#123;ARCH&#125;.tar.gz<br>     echo &quot;Download docker ...&quot;<br>     curl -L -o $&#123;binariesDIR&#125;/docker-$&#123;DOCKER_VERSION&#125;.tgz https://download.docker.com/linux/static/stable/$&#123;ARCH&#125;/docker-$&#123;DOCKER_VERSION&#125;.tgz<br>  fi<br>fi<br><br>if [[ $&#123;save&#125; == &quot;true&quot; ]] &amp;&amp; [[ -n &quot;$&#123;ImagesList&#125;&quot; ]]; then<br>    if [ ! -d $&#123;ImagesDir&#125; ]; then<br>       mkdir -p $&#123;ImagesDir&#125;<br>    fi<br>    ImagesListLen=$(cat $&#123;ImagesList&#125; | wc -l)<br>    name=&quot;&quot;<br>    images=&quot;&quot;<br>    index=0<br>    for image in $(&lt;$&#123;ImagesList&#125;); do<br>        if [[ $&#123;image&#125; =~ ^\#\#.* ]]; then<br>           if [[ -n $&#123;images&#125; ]]; then<br>              echo &quot;&quot;<br>              echo &quot;Save images: &quot;$&#123;name&#125;&quot; to &quot;$&#123;ImagesDir&#125;&quot;/&quot;$&#123;name&#125;&quot;.tar.gz  &lt;&lt;&lt;&quot;<br>              docker save $&#123;images&#125; | gzip -c &gt; $&#123;ImagesDir&#125;&quot;/&quot;$&#123;name&#125;.tar.gz<br>              echo &quot;&quot;<br>           fi<br>           images=&quot;&quot;<br>           name=$(echo &quot;$&#123;image&#125;&quot; | sed &#x27;s/#//g&#x27; | sed -e &#x27;s/[[:space:]]//g&#x27;)<br>           ((index++))<br>           continue<br>        fi<br><br>        image=$(echo &quot;$&#123;image&#125;&quot; |tr -d &#x27;\r&#x27;)<br>        docker pull &quot;$&#123;image&#125;&quot;<br>        images=$&#123;images&#125;&quot; &quot;$&#123;image&#125;<br><br>        if [[ $&#123;index&#125; -eq $&#123;ImagesListLen&#125;-1 ]]; then<br>           if [[ -n $&#123;images&#125; ]]; then<br>              docker save $&#123;images&#125; | gzip -c &gt; $&#123;ImagesDir&#125;&quot;/&quot;$&#123;name&#125;.tar.gz<br>           fi<br>        fi<br>        ((index++))<br>    done<br>elif [ -n &quot;$&#123;ImagesList&#125;&quot; ]; then<br>    # shellcheck disable=SC2045<br>    for image in $(ls $&#123;ImagesDir&#125;/*.tar.gz); do<br>      echo &quot;Load images: &quot;$&#123;image&#125;&quot;  &lt;&lt;&lt;&quot;<br>      docker load  &lt; $image<br>    done<br><br>    if [[ -n $&#123;registryurl&#125; ]]; then<br>       for image in $(&lt;$&#123;ImagesList&#125;); do<br>          if [[ $&#123;image&#125; =~ ^\#\#.* ]]; then<br>             continue<br>          fi<br>          url=$&#123;image%%/*&#125;   # $&#123;image&#125;第一个/左边的所有字符串<br>          ImageName=$&#123;image#*/&#125;   # $&#123;image&#125;第一个/右边的所有字符串<br>          echo $image<br><br>          if echo &quot;$&#123;reposUrl[@]&#125;&quot; | grep -Fx &quot;$url&quot; &amp;&gt;/dev/null; then<br>            imageurl=$registryurl&quot;/&quot;$&#123;image#*/&#125;<br>          elif [ $url == $registryurl ]; then<br>              if [[ $ImageName != */* ]]; then<br>                 imageurl=$registryurl&quot;/library/&quot;$ImageName<br>              else<br>                 imageurl=$image<br>              fi<br>          elif [ &quot;$(echo $url | grep &#x27;:&#x27;)&quot; != &quot;&quot; ]; then<br>              imageurl=$registryurl&quot;/library/&quot;$image<br>          else<br>              imageurl=$registryurl&quot;/&quot;$image<br>          fi<br><br>          ## push image<br>          image=$(echo &quot;$&#123;image&#125;&quot; |tr -d &#x27;\r&#x27;)<br>          imageurl=$(echo &quot;$&#123;imageurl&#125;&quot; |tr -d &#x27;\r&#x27;)<br>          echo $imageurl<br>          docker tag $image $imageurl<br>          docker push $imageurl<br>       done<br>    fi<br>fi<br><br></code></pre></td></tr></table></figure><p>使 <code>.sh</code> 文件可执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod +x offline-installation-tool.sh<br></code></pre></td></tr></table></figure><p>查看如何使用脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./offline-installation-tool.sh -h<br></code></pre></td></tr></table></figure><h5 id="拉取镜像">2.2.6.5.3 拉取镜像</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# ./offline-installation-tool.sh -s -l images-list-aliyuncs.txt -d ./kubesphere-images<br></code></pre></td></tr></table></figure><h4 id="推送镜像至私有仓库">2.2.6.6 推送镜像至私有仓库</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">推送到docker registry中</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# ./offline-installation-tool.sh -l images-list-aliyuncs.txt -d ./kubesphere-images -r easzlab.io.local<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果你已经按照前面的步骤安装了Harbor（默认已经创建一个library项目），此处还可以将镜像推送到Harbor仓库中</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# ./offline-installation-tool.sh -l images-list-aliyuncs.txt -d ./kubesphere-images -r harbor.yourdomain.com:8444</span><br></code></pre></td></tr></table></figure><h4 id="修改ks-installerv3.4.1镜像">2.2.6.7修改ks-installer:v3.4.1镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">不修改的话，的会提示“after connection broken by ‘SSLError(SSLCertVerificationError(1, ’[SSL: CERTIFICATE_VERIFY_FAILED] certifica”报错</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建Dockerfile文件，内容如下</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# cat Dockerfile <br>FROM registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1<br>USER root<br>RUN sed -i &#x27;s/self.verify_ssl = True/self.verify_ssl = False/g&#x27; /usr/local/lib/python3.10/site-packages/kubernetes/client/configuration.py<br>USER kubesphere<br><br><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# docker build -f Dockerfile ./ -t easzlab.io.local/registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# docker push easzlab.io.local/registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# docker tag easzlab.io.local/registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1 easzlab.io.local/library/ks-installer:v3.4.1<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# docker push easzlab.io.local/library/ks-installer:v3.4.1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改kubesphere-installer.yaml 文件中使用的ks-installer镜像</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# sed -i &#x27;s#image: kubesphere/ks-installer:v3.4.1#image: easzlab.io.local/library/ks-installer:v3.4.1#g&#x27; kubesphere-installer.yaml<br></code></pre></td></tr></table></figure><h4 id="上传镜像到指定registry项目下">2.2.6.8上传镜像到指定registry项目下</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建push-image-to-easzlab.io.local.sh 文件</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# touch push-image-to-easzlab.io.local.sh <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">push-image-to-easzlab.io.local.sh 文件内容如下</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# cat push-image-to-easzlab.io.local.sh <br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>images=`docker images | egrep &quot;^registry.cn-beijing.aliyuncs.com&quot;`<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">上传所有镜像到library项目下</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">使用 <span class="hljs-keyword">while</span> 循环遍历每一行</span><br>while IFS= read -r line; do<br>  echo &quot;$line&quot;<br>  image=`echo $line | awk &#x27;&#123;print $1&#125;&#x27;`<br>  tag=`echo $line | awk &#x27;&#123;print $2&#125;&#x27;`<br>  ImageName=$&#123;image##*/&#125;  #镜像名，不包含前面的所有repository名及斜线<br>  newImageTag=&quot;easzlab.io.local/library/$&#123;ImageName&#125;:$&#123;tag&#125;&quot;<br>  echo $&#123;newImageTag&#125;<br>  docker tag &quot;$&#123;image&#125;:$&#123;tag&#125;&quot; $&#123;newImageTag&#125;<br>  docker push $&#123;newImageTag&#125;<br>  echo &quot;---------------&quot;<br>done &lt;&lt;&lt; &quot;$images&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">经验证给部署kubesphere3.4.1过程中需要用到的镜像重新命名</span><br>docker tag easzlab.io.local/library/snapshot-controller:v4.0.0 easzlab.io.local/csiplugin/snapshot-controller:v4.0.0<br>docker push easzlab.io.local/csiplugin/snapshot-controller:v4.0.0<br>docker tag easzlab.io.local/library/defaultbackend-amd64:1.4 easzlab.io.local/mirrorgooglecontainers/defaultbackend-amd64:1.4<br>docker push easzlab.io.local/mirrorgooglecontainers/defaultbackend-amd64:1.4<br>docker tag easzlab.io.local/library/ks-console:v3.4.1 easzlab.io.local/kubesphere/ks-console:v3.4.1<br>docker push easzlab.io.local/kubesphere/ks-console:v3.4.1<br>docker tag easzlab.io.local/library/kube-state-metrics:v2.6.0 easzlab.io.local/kubesphere/kube-state-metrics:v2.6.0<br>docker push easzlab.io.local/kubesphere/kube-state-metrics:v2.6.0<br>docker tag easzlab.io.local/library/kube-rbac-proxy:v0.11.0 easzlab.io.local/kubesphere/kube-rbac-proxy:v0.11.0<br>docker push easzlab.io.local/kubesphere/kube-rbac-proxy:v0.11.0<br>docker tag easzlab.io.local/library/node-exporter:v1.3.1 easzlab.io.local/prom/node-exporter:v1.3.1<br>docker push easzlab.io.local/prom/node-exporter:v1.3.1<br>docker tag easzlab.io.local/library/ks-apiserver:v3.4.1 easzlab.io.local/kubesphere/ks-apiserver:v3.4.1<br>docker push easzlab.io.local/kubesphere/ks-apiserver:v3.4.1<br>docker tag easzlab.io.local/library/ks-controller-manager:v3.4.1 easzlab.io.local/kubesphere/ks-controller-manager:v3.4.1<br>docker push easzlab.io.local/kubesphere/ks-controller-manager:v3.4.1<br>docker tag easzlab.io.local/library/prometheus-operator:v0.55.1 easzlab.io.local/kubesphere/prometheus-operator:v0.55.1<br>docker push easzlab.io.local/kubesphere/prometheus-operator:v0.55.1<br>docker tag easzlab.io.local/library/kubectl:v1.22.0 easzlab.io.local/kubesphere/kubectl:v1.22.0<br>docker push easzlab.io.local/kubesphere/kubectl:v1.22.0<br>docker tag easzlab.io.local/library/alertmanager:v0.23.0 easzlab.io.local/prom/alertmanager:v0.23.0<br>docker push easzlab.io.local/prom/alertmanager:v0.23.0<br>docker tag easzlab.io.local/library/prometheus-config-reloader:v0.55.1 easzlab.io.local/kubesphere/prometheus-config-reloader:v0.55.1<br>docker push easzlab.io.local/kubesphere/prometheus-config-reloader:v0.55.1<br>docker tag easzlab.io.local/library/prometheus:v2.39.1 easzlab.io.local/prom/prometheus:v2.39.1<br>docker push easzlab.io.local/prom/prometheus:v2.39.1<br>docker tag easzlab.io.local/library/notification-manager-operator:v2.3.0 easzlab.io.local/kubesphere/notification-manager-operator:v2.3.0<br>docker push easzlab.io.local/kubesphere/notification-manager-operator:v2.3.0<br>docker tag easzlab.io.local/library/notification-manager:v2.3.0 easzlab.io.local/kubesphere/notification-manager:v2.3.0<br>docker push easzlab.io.local/kubesphere/notification-manager:v2.3.0<br>docker tag easzlab.io.local/library/notification-tenant-sidecar:v3.2.0 easzlab.io.local/kubesphere/notification-tenant-sidecar:v3.2.0<br>docker push easzlab.io.local/kubesphere/notification-tenant-sidecar:v3.2.0<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行push-image-to-easzlab.io.local.sh 文件</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# bash push-image-to-easzlab.io.local.sh<br></code></pre></td></tr></table></figure><h4 id="执行安装kubesphere">2.2.6.9 执行安装kubesphere</h4><p>执行以下命令部署 KubeSphere：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用以下两个文件，以安装kubesphere</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# kubectl apply -f kubesphere-installer.yaml <br>customresourcedefinition.apiextensions.k8s.io/clusterconfigurations.installer.kubesphere.io created<br>namespace/kubesphere-system created<br>serviceaccount/ks-installer created<br>clusterrole.rbac.authorization.k8s.io/ks-installer created<br>clusterrolebinding.rbac.authorization.k8s.io/ks-installer created<br>deployment.apps/ks-installer created<br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# kubectl apply -f cluster-configuration.yaml <br>clusterconfiguration.installer.kubesphere.io/ks-installer created<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看安装进度与日志</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# kubectl -n kubesphere-system logs ks-installer-64c97c9dc5-nbrlt -f<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">给k8s集群的控制平台节点打标签</span><br>kubectl label node 10.13.15.61 node-role.kubernetes.io/control-plane=&quot;&quot;<br>kubectl label node 10.13.15.61 node-role.kubernetes.io/master=&quot;&quot;<br>kubectl label node 10.13.15.61 node.kubernetes.io/exclude-from-external-load-balancers=&quot;&quot;<br>kubectl label node 10.13.15.62 node-role.kubernetes.io/control-plane=&quot;&quot;<br>kubectl label node 10.13.15.62 node-role.kubernetes.io/master=&quot;&quot;<br>kubectl label node 10.13.15.62 node.kubernetes.io/exclude-from-external-load-balancers=&quot;&quot;<br>kubectl label node 10.13.15.63 node-role.kubernetes.io/control-plane=&quot;&quot;<br>kubectl label node 10.13.15.63 node-role.kubernetes.io/master=&quot;&quot;<br>kubectl label node 10.13.15.63 node.kubernetes.io/exclude-from-external-load-balancers=&quot;&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s集群的节点列表</span><br>root@k8s03-1:/opt/kubeasz-deployk8s/deploy-kubesphere341# kubectl get nodes<br>NAME          STATUS                     ROLES                  AGE     VERSION<br>10.13.15.61   Ready,SchedulingDisabled   control-plane,master   4d17h   v1.23.17<br>10.13.15.62   Ready,SchedulingDisabled   control-plane,master   4d17h   v1.23.17<br>10.13.15.63   Ready,SchedulingDisabled   control-plane,master   4d17h   v1.23.17<br>10.13.15.64   Ready                      node                   4d17h   v1.23.17<br>10.13.15.65   Ready                      node                   4d17h   v1.23.17<br>10.13.15.66   Ready                      node                   4d17h   v1.23.17<br></code></pre></td></tr></table></figure><p>使用vip+30880端口，可以正常访问kubesphere的web系统：</p><figure><img src="https://s2.loli.net/2024/11/05/cjUZ7E3v8epDVdg.png"alt="image-20241105111401577" /><figcaption aria-hidden="true">image-20241105111401577</figcaption></figure><h4 id="从k8s中卸载kubesphere">2.2.6.10 从k8s中卸载kubesphere</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">参考：https://kubesphere.io/zh/docs/v3.4/installing-on-kubernetes/uninstall-kubesphere-from-k8s/</span><br><br>wget https://raw.githubusercontent.com/kubesphere/ks-installer/release-3.1/scripts/kubesphere-delete.sh<br>bash kubesphere-delete.sh<br></code></pre></td></tr></table></figure><h2 id="删除节点">2.3 删除节点</h2><p>参考：https://github.com/easzlab/kubeasz/blob/3.2.0/docs/op/op-node.md</p><p>删除 node 节点流程：(参考ezctl 里面del-node函数 和playbooks/32.delnode.yml)</p><ul><li>检测是否可以删除</li><li>迁移节点上的 pod</li><li>删除 node 相关服务及文件</li><li>从集群删除 node</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">删除节点前</span><br>k8s03-1:~# kubectl get nodes<br>NAME          STATUS                     ROLES    AGE     VERSION<br>10.13.15.61   Ready,SchedulingDisabled   master   3h23m   v1.23.17<br>10.13.15.62   Ready,SchedulingDisabled   master   3h23m   v1.23.17<br>10.13.15.63   Ready,SchedulingDisabled   master   3h23m   v1.23.17<br>10.13.15.64   Ready                      node     3h7m    v1.23.17<br>10.13.15.65   Ready                      node     3h7m    v1.23.17<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除节点（一次只能删除一个节点），它的IP是10.13.15.65</span><br>k8s03-1:~# ezctl del-node k8s03 10.13.15.65    # 假设待删除节点为 10.13.15.65<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除节点成功后</span><br>k8s03-1:~# kubectl get nodes               <br>NAME          STATUS                     ROLES    AGE     VERSION<br>10.13.15.61   Ready,SchedulingDisabled   master   3h25m   v1.23.17<br>10.13.15.62   Ready,SchedulingDisabled   master   3h25m   v1.23.17<br>10.13.15.63   Ready,SchedulingDisabled   master   3h25m   v1.23.17<br>10.13.15.64   Ready                      node     3h9m    v1.23.17<br></code></pre></td></tr></table></figure><h2 id="添加节点">2.4 添加节点</h2><p>新增<code>kube_node</code>节点大致流程为：(参考ezctl 里面add-node函数和 playbooks/22.addnode.yml)</p><ul><li>[可选]新节点安装 chrony 时间同步</li><li>新节点预处理 prepare</li><li>新节点安装 docker 服务</li><li>新节点安装 kube_node 服务</li><li>新节点安装网络插件相关</li></ul><p><strong>操作步骤</strong>：</p><p><strong><em>首先配置 ssh 免密码登录新增节点</em></strong>，然后执行(假设k8s集群名为 k8s03，待增加节点为10.13.15.66、它的IP同时也是其节点名)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">一次只能添加一个节点（添加k8s节点前记得配置ssh免密登录）</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">ezctl add-node k8s03 10.13.15.66</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">要添加多个节点，就执行添加节点命令多次</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">可能需要在新节点上执行：<span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;10.13.15.61    easzlab.io.local&quot;</span> &gt;&gt; /etc/hosts</span><br></code></pre></td></tr></table></figure><p><strong>验证</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">验证新节点状态</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl get node</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证新节点的网络插件calico 或flannel 的Pod 状态</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">kubectl get pod -n kube-system -o wide</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证新建pod能否调度到新节点，略</span><br></code></pre></td></tr></table></figure><h2 id="卸载集群">2.5 卸载集群</h2><p>在宿主机上，按照如下步骤清理</p><ul><li>清理集群<code>docker exec -it kubeasz ezctl destroy &lt;集群名称&gt;</code></li><li>重启节点，以确保清理残留的虚拟网卡、路由等信息</li></ul><p><strong>操作步骤：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">k8s03-1:/# ezctl destroy k8s03<br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后重启所有k8s节点</span><br></code></pre></td></tr></table></figure><h2 id="报错与处理">2.6 报错与处理</h2><h3 id="添加节点时task-kube-node-轮询等待kubelet启动执行失败">2.6.1添加节点时“TASK [kube-node : 轮询等待kubelet启动]”执行失败</h3><figure><img src="https://s2.loli.net/2025/01/16/3HMXsCEwkSGOerm.png"alt="image-20250116143621421" /><figcaption aria-hidden="true">image-20250116143621421</figcaption></figure><p><strong>问题定位：</strong></p><p>t1-gpu节点的ip是10.12.62.25，查看其上kubelet服务有如下报错信息：</p><figure><img src="https://s2.loli.net/2025/01/16/sbqv1Z24eEdfKmn.png"alt="image-20250116143749619" /><figcaption aria-hidden="true">image-20250116143749619</figcaption></figure><p>可知，使用kubeasz部署k8s时，安装的kubelet使用的 cgroupdriver是"systemd"，但t1-gpu上现有docker cgroup driver使用cgroupfs，修改t1-gpu上wget r docker cgroup driver为systemd即可。</p><p><strong>处理办法：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在t1-gpu服务器的/etc/docker/daemon.json文件中添加如下内容</span><br>root@t1-gpu:~# vi /etc/docker/daemon.json <br>&#123;<br>    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>    ...<br>&#125;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启t1-gpu服务器的docker服务</span><br>root@t1-gpu:~# systemctl daemon-reload &amp;&amp; systemctl restart docker<br><br>root@t1-gpu:~# docker info | grep &quot;Cgroup Driver&quot;<br> Cgroup Driver: systemd<br><span class="hljs-meta prompt_"> </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后在部署节点再次尝试添加k8s节点</span><br></code></pre></td></tr></table></figure><h3 id="添加k8s节点时失败再次添加此节点时提示node已在hosts文件中">2.6.2添加k8s节点时失败再次添加此节点时提示node已在hosts文件中</h3><figure><img src="https://s2.loli.net/2025/01/16/ilxqfoKnpQC6S32.png"alt="image-20250116144450943" /><figcaption aria-hidden="true">image-20250116144450943</figcaption></figure><p>处理办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在部署节点修改/etc/kubeasz/clusters/集群名/hosts</span><br>root@controller01:/etc/kubeasz# vi /etc/kubeasz/clusters/cluster01/hosts<br>...<br><span class="hljs-meta prompt_"># </span><span class="language-bash">work node(s)</span><br>[kube_node]<br>10.12.62.25     #将此行内容删除<br><span class="hljs-meta prompt_">#</span><span class="language-bash">192.168.1.3</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">192.168.1.4</span><br>172.20.0.21<br>...<br></code></pre></td></tr></table></figure><p>然后在部署节点再次尝试添加k8s节点</p>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubeasz k8s在线部署 二进制 高可用 kubesphere harbor k8s扩容 k8s缩容 k8s卸载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s在线部署-使用kubeasz部署amd64单机版k8s1-26-0</title>
    <link href="/2024/11/28/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubeasz%E9%83%A8%E7%BD%B2amd64%E5%8D%95%E6%9C%BA%E7%89%88k8s1-26-0/"/>
    <url>/2024/11/28/k8s%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubeasz%E9%83%A8%E7%BD%B2amd64%E5%8D%95%E6%9C%BA%E7%89%88k8s1-26-0/</url>
    
    <content type="html"><![CDATA[<h1 id="一单机快速部署-allinone部署">一、单机快速部署-AllinOne部署</h1><p>​ kubeasz 致力于提供快速部署高可用k8s集群的工具,同时也努力成为k8s实践、使用的参考书；基于二进制方式部署和利用ansible-playbook实现自动化；既提供一键安装脚本,也可以根据安装指南分步执行安装各个组件。kubeasz从每一个单独部件组装到完整的集群，提供最灵活的配置能力，几乎可以设置任何组件的任何参数；同时又为集群创建预置一套运行良好的默认配置，甚至自动化创建适合大规模集群的BGPRoute Reflector网络模式。</p><p>​kubeasz支持多个不同的k8s版本，大致如下，具体支持细节请查看官网。如果不使用匹配的kubeasz部署k8s可能会报错，需要自己解决，所以建议还是按照如下表格使用kubeasz。</p><table><thead><tr><th>Kubernetes</th><th>1.22</th><th>1.23</th><th>1.24</th><th>1.25</th><th>1.26</th><th>1.27</th><th>1.28</th><th>1.29</th><th>1.30</th><th>1.31</th></tr></thead><tbody><tr><td>kubeasz</td><td>3.1.1</td><td>3.2.0</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.2</td><td>3.6.3</td><td>3.6.4</td><td>3.6.5</td></tr></tbody></table><p>​kubeasz它支持amd64与arm64两种不同的服务器构架平台。支持用来部署常用插件：DNSdashboard metrics-server prometheus efk，也支持用来常见周边生态：harborhelm jenkins gitlab argocd。如果官网现有功能不能满足自己的需求，还可以自己继续编写playbook进一步丰富kubeasz。</p><p>​kubeasz不像青云的kubekey工具是对kubeadm工具的封装，kubeasz是使用二进制方式的部署形式，所以相关k8s服务都是以操作系统服务的形式部署在服务器上，但部署服务如网络解决方案、dashboard等是以容器形式部署的。</p><h2 id="安装步骤">1.1 安装步骤</h2><h3 id="基础系统配置">1.1.1 基础系统配置</h3><ul><li>准备一台虚机配置内存2G/硬盘30G以上</li><li>最小化安装<code>Ubuntu 16.04+ server或者CentOS 7+ Minimal</code></li><li>配置基础网络、更新源、SSH登录等</li></ul><p><strong>注意:</strong>确保在干净的系统上开始安装，不能使用曾经装过kubeadm或其他k8s发行版的环境</p><table><thead><tr><th>主机名</th><th>IP</th><th>root密码</th><th>规格</th><th>磁盘</th><th>操作系统</th></tr></thead><tbody><tr><td>k8s03-1</td><td>10.13.15.61</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu20.04.3 LTS-amd64</td></tr></tbody></table><h3 id="下载文件">1.1.2 下载文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">参考文档：https://github.com/easzlab/kubeasz/blob/3.5.3/docs/setup/quickStart.md</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下文档示例，使用kubeasz3.5.0部署k8s1.26.0，k8s环境使用的默认容器运行时是containerd</span><br>root@k8s03-1:~# mkdir -p /opt/kubeasz-deployk8s<br>root@k8s03-1:~# cd /opt/kubeasz-deployk8s<br>root@k8s03-1:/opt/kubeasz-deployk8s# export release=3.5.0<br>root@k8s03-1:/opt/kubeasz-deployk8s# wget https://github.com/easzlab/kubeasz/releases/download/$&#123;release&#125;/ezdown<br>root@k8s03-1:/opt/kubeasz-deployk8s# chmod +x ./ezdown<br><span class="hljs-meta prompt_">#</span><span class="language-bash">ezdown其实就是一个shell脚本文件，可以修改此文件内容，比如修改其中对/etc/docker/daemon.json文件内容的定制</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# vi ezdown<br>...<br><span class="hljs-meta prompt_">  # </span><span class="language-bash">configuration <span class="hljs-keyword">for</span> dockerd</span><br>  mkdir -p /etc/docker<br>  DOCKER_VER_MAIN=$(echo &quot;$DOCKER_VER&quot;|cut -d. -f1)<br>  CGROUP_DRIVER=&quot;cgroupfs&quot;<br><span class="hljs-meta prompt_">  ((DOCKER_VER_MAIN&gt;</span><span class="language-bash">=20)) &amp;&amp; CGROUP_DRIVER=<span class="hljs-string">&quot;systemd&quot;</span></span><br>  logger debug &quot;generate docker config: /etc/docker/daemon.json&quot;<br>  if [[ &quot;$REGISTRY_MIRROR&quot; == CN ]];then<br>    logger debug &quot;prepare register mirror for $REGISTRY_MIRROR&quot;<br>    cat &gt; /etc/docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=$CGROUP_DRIVER&quot;],<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;http://hub-mirror.c.163.com&quot;<br>  ],<br>  &quot;max-concurrent-downloads&quot;: 10,<br>  &quot;log-driver&quot;: &quot;json-file&quot;,<br>  &quot;log-level&quot;: &quot;warn&quot;,<br>  &quot;log-opts&quot;: &#123;<br>    &quot;max-size&quot;: &quot;10m&quot;,<br>    &quot;max-file&quot;: &quot;3&quot;<br>    &#125;,<br>  &quot;data-root&quot;: &quot;/var/lib/docker&quot;<br>&#125;<br>EOF<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载kubeasz代码、二进制、默认容器镜像</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# ./ezdown -D -m &quot;CN&quot;<br>...<br>Digest: sha256:6ef53c7bd8b73841c5e10698d21f5616c3c2f329afeca7f342d7471cae6af310<br>Status: Image is up to date for easzlab/kubeasz:3.5.0<br>docker.io/easzlab/kubeasz:3.5.0<br>2024-10-10 16:45:35 INFO Action successed: download_all<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# ./ezdown -S<br>2024-10-10 16:49:12 INFO Action begin: start_kubeasz_docker<br>2024-10-10 16:49:12 INFO try to run kubeasz in a container<br>2024-10-10 16:49:12 DEBUG get host IP: 10.13.15.61<br>2024-10-10 16:49:12 DEBUG generate ssh key pair<br><span class="hljs-meta prompt_"># </span><span class="language-bash">10.13.15.61:22 SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11</span><br>2024-10-10 16:49:12 DEBUG create a soft link &#x27;/usr/bin/python&#x27;<br>a9db032e35a0a43f6d5bdf293feef657a4b6b92cb8d1e1786398ec5ea8f3505d<br>2024-10-10 16:49:13 INFO Action successed: start_kubeasz_docker<br></code></pre></td></tr></table></figure><h3 id="安装集群">1.1.3 安装集群</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">容器化运行 kubeasz</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# ./ezdown -S<br>2024-10-10 16:49:12 INFO Action begin: start_kubeasz_docker<br>2024-10-10 16:49:12 INFO try to run kubeasz in a container<br>2024-10-10 16:49:12 DEBUG get host IP: 10.13.15.61<br>2024-10-10 16:49:12 DEBUG generate ssh key pair<br><span class="hljs-meta prompt_"># </span><span class="language-bash">10.13.15.61:22 SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.11</span><br>2024-10-10 16:49:12 DEBUG create a soft link &#x27;/usr/bin/python&#x27;<br>a9db032e35a0a43f6d5bdf293feef657a4b6b92cb8d1e1786398ec5ea8f3505d<br>2024-10-10 16:49:13 INFO Action successed: start_kubeasz_docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看已创建容器</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# docker ps -a<br>CONTAINER ID   IMAGE                   COMMAND                  CREATED          STATUS          PORTS     NAMES<br>a9db032e35a0   easzlab/kubeasz:3.5.0   &quot;sleep 36000&quot;            4 minutes ago    Up 4 minutes              kubeasz<br>7feaec7a91fc   registry:2              &quot;/entrypoint.sh /etc…&quot;   27 minutes ago   Up 27 minutes             local_registry<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用默认配置安装 aio 集群（部署单节点k8s环境，大概花费5min）</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# docker exec -it kubeasz ezctl start-aio<br>PLAY RECAP ********************************************************************************************************************<br>10.13.15.61                : ok=110  changed=101  unreachable=0    failed=0    skipped=188  rescued=0    ignored=0   <br>localhost                  : ok=43   changed=40   unreachable=0    failed=0    skipped=42   rescued=0    ignored=0   <br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果安装失败，查看日志排除后，使用如下命令重新安装aio集群</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">docker <span class="hljs-built_in">exec</span> -it kubeasz ezctl setup default all</span><br><br></code></pre></td></tr></table></figure><h3 id="验证安装">1.1.4 验证安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s03-1:/opt/kubeasz-deployk8s# source ~/.bashrc<br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl version         # 验证集群版本<br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl get node        # 验证节点就绪 (Ready) 状态<br>NAME          STATUS   ROLES    AGE     VERSION<br>10.13.15.61   Ready    master   2m38s   v1.26.0<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl get pod -A      # 验证集群pod状态，默认已安装网络插件、coredns、metrics-server等<br>NAMESPACE     NAME                                         READY   STATUS    RESTARTS   AGE<br>kube-system   calico-kube-controllers-89b744d6c-csmv5      1/1     Running   0          2m32s<br>kube-system   calico-node-52tdd                            1/1     Running   0          2m32s<br>kube-system   coredns-6665999d97-lcpdr                     1/1     Running   0          2m2s<br>kube-system   dashboard-metrics-scraper-57566685b4-5k8sl   1/1     Running   0          114s<br>kube-system   kubernetes-dashboard-57db9bfd5b-5pqs8        1/1     Running   0          114s<br>kube-system   metrics-server-6bd9f986fc-rqtq7              1/1     Running   0          118s<br>kube-system   node-local-dns-tbzqv                         1/1     Running   0          2m<br><br>root@k8s03-1:/opt/kubeasz-deployk8s# kubectl get svc -A      # 验证集群服务状态<br>NAMESPACE     NAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                  AGE<br>default       kubernetes                  ClusterIP   10.68.0.1       &lt;none&gt;        443/TCP                  3m19s<br>kube-system   dashboard-metrics-scraper   ClusterIP   10.68.149.37    &lt;none&gt;        8000/TCP                 2m<br>kube-system   kube-dns                    ClusterIP   10.68.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   2m8s<br>kube-system   kube-dns-upstream           ClusterIP   10.68.74.235    &lt;none&gt;        53/UDP,53/TCP            2m6s<br>kube-system   kubernetes-dashboard        NodePort    10.68.224.175   &lt;none&gt;        443:30033/TCP            2m1s<br>kube-system   metrics-server              ClusterIP   10.68.57.219    &lt;none&gt;        443/TCP                  2m5s<br>kube-system   node-local-dns              ClusterIP   None            &lt;none&gt;        9253/TCP                 2m6s<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有containerd容器</span><br>root@k8s03-1:/opt/kubeasz-deployk8s# crictl ps<br>CONTAINER           IMAGE               CREATED             STATE               NAME                        ATTEMPT             POD ID              POD<br>98f418ea2b5ae       115053965e86b       3 minutes ago       Running             dashboard-metrics-scraper   0                   ca4d7ade6cd66       dashboard-metrics-scraper-57566685b4-5k8sl<br>3f267e5ad38c8       07655ddf2eebe       3 minutes ago       Running             kubernetes-dashboard        0                   ddd9fca9b3fde       kubernetes-dashboard-57db9bfd5b-5pqs8<br>2f980e0974596       f965999d664b1       3 minutes ago       Running             metrics-server              0                   888d8720dc5a8       metrics-server-6bd9f986fc-rqtq7<br>182a39d21a858       7b3b529c5a5ac       3 minutes ago       Running             node-cache                  0                   a8b15ecf9ae75       node-local-dns-tbzqv<br>41f63fb1329d7       5185b96f0becf       3 minutes ago       Running             coredns                     0                   84336de34a8ac       coredns-6665999d97-lcpdr<br>66a0024a1c6e6       b6e6ee0788f20       4 minutes ago       Running             calico-node                 0                   867af30138653       calico-node-52tdd<br>df75b01d5a24b       ea5536b1fa4a8       4 minutes ago       Running             calico-kube-controllers     0                   5eddd6e6e960d       calico-kube-controllers-89b744d6c-csmv5<br></code></pre></td></tr></table></figure><ul><li>登录 <code>dashboard</code>可以查看和管理集群，更多内容请查阅<ahref="https://github.com/easzlab/kubeasz/blob/3.5.3/docs/guide/dashboard.md">dashboard文档</a></li></ul><p>此k8s环境中，dashboard的访问地址是：https://10.13.15.61:30033/#/login，其中30033端口来自上述svc：kube-system/kubernetes-dashboard</p><h2 id="卸载集群">1.2 卸载集群</h2><p>在宿主机上，按照如下步骤清理</p><ul><li>清理集群<code>docker exec -it kubeasz ezctl destroy default</code></li><li>重启节点，以确保清理残留的虚拟网卡、路由等信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">清理集群</span> <br>root@k8s03-1:/opt/kubeasz-deployk8s# docker exec -it kubeasz ezctl destroy default<br>ansible-playbook -i clusters/default/hosts -e @clusters/default/config.yml playbooks/99.clean.yml<br>2024-10-10 09:31:06 INFO cluster:default destroy begins in 5s, press any key to abort:<br>...<br>TASK [clean : 重启提示 WARNNING] ********************************************************************************************************************************<br>ok: [10.13.15.61] =&gt; &#123;<br>    &quot;msg&quot;: &quot;[重要]: 请重启节点以确保清除系统残留的虚拟网卡、路由信息、iptalbes|ipvs规则等 [IMPORTANT]: please reboot nodes, makesure to clean out net interfaces, routes and iptables/ipvs rules&quot;<br>&#125;<br><br>PLAY RECAP ********************************************************************************************************************************<br>10.13.15.61                : ok=14   changed=12   unreachable=0    failed=0    skipped=14   rescued=0    ignored=0  <br><br>root@k8s03-1:/opt/kubeasz-deployk8s# reboot<br></code></pre></td></tr></table></figure><h2 id="问题">1.3 问题</h2><h3 id="执行.ezdown--d下载镜像easzlabkubeasz3.5.0失败">1.3.1执行"./ezdown -D"下载镜像easzlab/kubeasz:3.5.0失败</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">报错大致如下</span><br>Unable to find image &#x27;easzlab/kubeasz:3.5.0&#x27; locally<br>docker: Error response from daemon: Get &quot;https://registry-1.docker.io/v2/&quot;: dial tcp 199.16.158.12:443: i/o timeout.<br>See &#x27;docker run --help&#x27;.<br>2024-10-10 14:08:58 ERROR download failed.<br></code></pre></td></tr></table></figure><h4 id="解决办法1推荐">解决办法1（推荐）：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">此方法是为docker设置多个镜像网站，从而增加拉取镜像的可能性</span><br>root@k8s03-1:~# cat &gt; /etc/docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://kuamavit.mirror.aliyuncs.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://mirror.aliyuncs.com&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://mirror.baidubce.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.nju.edu.cn&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ],<br>  &quot;insecure-registries&quot;: [<br>    &quot;http://easzlab.io.local:5000&quot;<br>  ],<br>  &quot;max-concurrent-downloads&quot;: 10,<br>  &quot;log-driver&quot;: &quot;json-file&quot;,<br>  &quot;log-level&quot;: &quot;warn&quot;,<br>  &quot;log-opts&quot;: &#123;<br>    &quot;max-size&quot;: &quot;10m&quot;,<br>    &quot;max-file&quot;: &quot;3&quot;<br>    &#125;,<br>  &quot;data-root&quot;: &quot;/var/lib/docker&quot;<br>&#125;<br>EOF<br><br>root@k8s03-1:~# systemctl daemon-reload &amp;&amp; systemctl restart docker<br><span class="hljs-meta prompt_">#</span><span class="language-bash">此命令运行过程上会下载多个镜像(kubeasz:3.5.0，默认安装k8s1.26.0，此步骤共下载13个镜像)，需要的执行较长，我总共大概花费了20分钟</span><br>root@k8s03-1:~# ./ezdown -D<br></code></pre></td></tr></table></figure><h4 id="解决办法2">解决办法2：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">先在其他能使用魔法的服务器上将此镜像下载下来，上传到自己的harbor仓库：docker push 10.10.10.1:8196/kubeasz/easzlab/kubeasz:3.5.0 （假设<span class="hljs-string">&quot;10.10.10.1:8196&quot;</span>自己的harbor镜像仓库地址）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后在需要使用上述镜像的服务器上下载自己harbor仓库中的镜像，再执行上述命令一般就会成功了。从使用经验来看，已有相同镜像的话（即使已经被tag成不同的镜像名与标签名），再直接从docker hub官网拉取此镜像大概率能成功。</span><br></code></pre></td></tr></table></figure><h4 id="解决办法3">解决办法3：</h4><p>如果上述方法都不凑效，可以直接修改“ezdown”文件，它其实就是一个shell脚本文件。可以直接在此文件中修改为直接使用自己harbor镜像仓库中的镜像。</p>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubeasz 在线部署 k8s 二进制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手机端与PC端微信聊天记录未同步+减肥健身入门建议</title>
    <link href="/2024/11/24/%E6%89%8B%E6%9C%BA%E7%AB%AF%E4%B8%8EPC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E6%9C%AA%E5%90%8C%E6%AD%A5-%E5%87%8F%E8%82%A5%E5%81%A5%E8%BA%AB%E5%85%A5%E9%97%A8%E5%BB%BA%E8%AE%AE/"/>
    <url>/2024/11/24/%E6%89%8B%E6%9C%BA%E7%AB%AF%E4%B8%8EPC%E7%AB%AF%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95%E6%9C%AA%E5%90%8C%E6%AD%A5-%E5%87%8F%E8%82%A5%E5%81%A5%E8%BA%AB%E5%85%A5%E9%97%A8%E5%BB%BA%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<p>笔者开设此本订阅号的动机是分享学习笔记、健身、摄影与生活随想。今天也记录下技术之外的一些东西，如微信使用、健身</p><h1id="一手机端与pc端微信聊天记录同步">一、手机端与PC端微信聊天记录同步</h1><h2 id="背景">1.1 背景</h2><p>最近发现，2024年11月22日下午PC关机，电脑端微信也随之下线。之后11月22日下午及晚上、23日上午使用手机微信在某个微信群聊天，2024年11月24日打开PC重新登录电脑端微信，发现那个微信群的微信聊天记录并没有在PC端微信上同步。但其他部分微信群与个人聊天记录又同步到了PC端微信上。</p><p>也就是说PC端微信聊天记录与手机端微信聊天记录只同步了大部分，个别群聊记录没同步。</p><h2 id="可行处理办法">1.2 可行处理办法</h2><h3 id="方法一强制同步">1.2.1 方法一：强制同步</h3><p>目前发现此方法最简便，具体操作如下。</p><h4 id="退出pc端微信">1.2.1.1 退出PC端微信</h4><h4 id="切换账号">1.2.1.2 切换账号</h4><figure><img src="https://s2.loli.net/2024/11/24/9i8utQILEX6SwGg.png"alt="image-20241124111725372" /><figcaption aria-hidden="true">image-20241124111725372</figcaption></figure><h4 id="使用手机微信扫描">1.2.1.3 使用手机微信扫描</h4><figure><img src="https://s2.loli.net/2024/11/24/IvQ3jcefPAidhwZ.png"alt="image-20241124111818073" /><figcaption aria-hidden="true">image-20241124111818073</figcaption></figure><h4 id="选择同步最近消息">1.2.1.4 选择“同步最近消息”</h4><figure><img src="https://s2.loli.net/2024/11/24/hqsb2oQAXPR9f43.png"alt="image-20241124112017648" /><figcaption aria-hidden="true">image-20241124112017648</figcaption></figure><h4 id="查看pc端的聊天记录">1.2.1.5 查看PC端的聊天记录</h4><p>因为上一步已经指明将手机端微信最近的聊天记录同步到PC端微信，所以正常情况下，此时PC端会同步手机端微信的最近（这个最近具体是什么时间范围，还不清楚）所有聊天记录。笔者的问题此时就已经解决了。</p><h3 id="其他方法暂时没研究">1.2.2 其他方法暂时没研究</h3><p>^_^</p><h1 id="二减肥健身入门建议">二、减肥健身入门建议</h1><p>以下主要是以笔者自己的减肥与健身经验来说，笔者目前健身的主要目的是“保持形体、释放压力与锻炼身体”，普通的减肥健身、暂时没想去参与健身健美类比赛的人可以参考下。所以严格上来说，就谈不上非常专业^_^。</p><h2 id="饮食">2.1 饮食</h2><ul><li>少吃油炸、高脂食物，多吃高蛋白类食物如鱼肉、牛肉、鸡胸肉、豆类食物。</li><li>有条件与毅力的可以一周吃几次减脂餐（个人觉得：一般人一周偶尔吃几餐辅助一下，长期吃这个让人觉得脱离人间烟火。如果你有志参考健身健美比赛，那就另说了）</li><li>早上可以喝牛奶与豆类制品与饮品，可以吃点鸡蛋、紫薯、坚果、全麦面包、粗麦片。中午正常饮食，减肥前期五分饱即可，维持期间七八分饱最好。晚餐可以吃玉米、少量碳水类食物，减肥期间可以吃点水果如苹果、香蕉、火龙果来代替，少吃夜宵。</li><li>有条件自己做饭的，做菜时少盐少油，稍微清淡点</li><li>少饮酒，不论是啤酒还是白酒。红酒自己接触得少所以不是很了解，据说适量饮用有益</li></ul><h2 id="工作期间的习惯">2.2 工作期间的习惯</h2><ul><li>适当多喝水</li><li>可以每隔一段时间仰头，拉伸颈部（笔者曾经颈椎出现疼痛，无法正常入睡与学习办公，最后只能去医院拍CT，医生说笔者颈椎比正常人颈椎要老10多年，就是提前损伤了，所以真得要注意保护颈椎，没有健康其他的如财富、家庭、旅游等都是浮云）</li><li>适时站起来走动一两分钟，拉伸脊椎</li><li>如果工作与健康冲突了，那就暂停下工作，向自己的健健康让步</li></ul><h2 id="健身">2.3 健身</h2><ul><li>笔者一般是有氧运动与负重无氧运动都做</li><li>一周跑步一两次，一次5公里，一般耗时30min~35min</li><li>每周负重锻炼三次左右，锻炼前先慢跑10min。负重锻炼完记得拉伸当天锻炼的部位</li><li>笔者将自己的重量锻炼分为几个部位，轮流反复进行：胸部、手臂与肩膀、背部、腿部</li><li>笔者一般是晚上锻炼，锻炼前一定要吃晚餐且晚餐一小时后再锻炼。周末不时也会在下午进行锻炼。</li><li>锻炼前可以喝点肌酸、氮泵，大概10~20分钟再锻炼</li><li>锻炼后回家尽快喝蛋白粉。其他的氨基酸等补给笔者暂时还没用过，等待探索中</li></ul><h2 id="写在最后">2.4 写在最后</h2><p>笔者去年在40天减重20斤，达到下图状态，记录一下自己当时的健身照。欢迎健身爱好者一起学习讨论。</p><figure><img src="https://s2.loli.net/2024/11/24/lHVsbWzKTPpN2xQ.jpg"alt="笔者健身照" /><figcaption aria-hidden="true">笔者健身照</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>运动健身</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信聊天记录 同步 减肥 健身</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用kubeadm将k8s从1.23.x升级到1.24.x</title>
    <link href="/2024/11/18/%E4%BD%BF%E7%94%A8kubeadm%E5%B0%86k8s%E4%BB%8E1-23-x%E5%8D%87%E7%BA%A7%E5%88%B01-24-x/"/>
    <url>/2024/11/18/%E4%BD%BF%E7%94%A8kubeadm%E5%B0%86k8s%E4%BB%8E1-23-x%E5%8D%87%E7%BA%A7%E5%88%B01-24-x/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景描述">一、背景描述</h1><p>​现有k8s环境是使用kubeadm部署的k8s1.23.9环境，使用的网络解决方案是flannel，k8s节点使用的Centos7.9.2009-amd64虚拟机，k8s节点的容器运行时使用是的Docker。k8s1.23.9集群一共有3个节点，详情如下（升级前集群是否正常可用的，图是后面临时截取的，所以状态可以忽略）：</p><figure><img src="https://s2.loli.net/2024/11/18/RfmFejCV1Y2DB37.png"alt="image-20241118190306646" /><figcaption aria-hidden="true">image-20241118190306646</figcaption></figure><p>​目的是在联网的情况下，使用kubeadm升级到k8s1.24.2。但Kubernetes从1.20版本开始已经弃用了DockerShim，并在1.24版本移除了DockerShim，后续如果需要使用Docker作为容器运行时（ContainerRuntime），需要安装cri-docker，即一个CRI（Container RuntimeInterface）的实现。因为并不能直接使用kubeadm将集群升级到k8s1.24.2，但在执行一些针对容器运行时的安装配置后就可以了。具体步骤如下。</p><p>​同时还需注意，使用kubeadm升级k8s集群时不支持跨大版本升级。打个比方，如果要从k8s1.23.x升级到k8s1.25.x，就需要先从k8s1.23.x 升级到k8s1.24.x，然后再从k8s1.24.x升级到k8s1.25.x。如果想在此文档的基础上将k8s升级到更版本，就需要一级一级往上升，不能跳级（可能kubeadm不承认天才吧，哈哈^_^）！</p><p>​参考：https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/</p><h1 id="二升级步骤">二、升级步骤</h1><h2 id="安装cri-dockerd所有节点">2.1 安装cri-dockerd(所有节点)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">访问：https://github.com/Mirantis/cri-dockerd/releases</span><br><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.2/cri-dockerd-0.3.2.amd64.tgz<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# gunzip cri-dockerd-0.3.2.amd64.tgz<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# tar -xf cri-dockerd-0.3.2.amd64.tar<br><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# cp cri-dockerd/cri-dockerd /usr/local/bin/<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# chmod 755 /usr/local/bin/cri-dockerd<br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除先前存在的文件</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# rm -f /usr/lib/systemd/system/cri-docker*<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">封装cri-dockerd.service</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# cat /usr/lib/systemd/system/cri-dockerd.service<br>[Unit]<br>Description=CRI Interface for Docker Application Container Engine<br>Documentation=https://docs.mirantis.com<br>After=network-online.target firewalld.service docker.service<br>Wants=network-online.target<br>Requires=cri-dockerd.socket<br><br>[Service]<br>Type=notify<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ExecStart=/usr/local/bin/cri-dockerd --network-plugin=cni --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.7</span><br>ExecStart=/usr/local/bin/cri-dockerd --network-plugin=cni --pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.9 --cni-conf-dir=/etc/cni/net.d --cni-bin-dir=/opt/cni/bin --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --cri-dockerd-root-directory=/var/ib/dockershim --docker-endpoint=unix:///var/run/docker.sock --cri-dockerd-root-directory=/var/1ib/docker<br><br>ExecReload=/bin/kill -s HUP $MAINPID<br>TimeoutSec=0<br>RestartSec=2<br>Restart=always<br><br>StartLimitBurst=3<br><br>StartLimitInterval=60s<br><br>LimitNOFILE=infinity<br>LimitNPROC=infinity<br>LimitCORE=infinity<br><br>TasksMax=infinity<br>Delegate=yes<br>KillMode=process<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">封装cri-dockerd.socket</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# cat /usr/lib/systemd/system/cri-dockerd.socket<br>[Unit]<br>Description=CRI Docker Socket for the API<br>PartOf=cri-dockerd.service<br><br>[Socket]<br>ListenStream=/var/run/cri-dockerd.sock<br>SocketMode=0660<br>SocketUser=root<br>SocketGroup=docker<br><br>[Install]<br>WantedBy=sockets.target<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置Kubernetes使用cri-docker：</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# vi /var/lib/kubelet/kubeadm-flags.env<br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加参数或修改参数为如下</span><br>KUBELET_KUBEADM_ARGS=&quot;--cgroup-driver=system -pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.7 --container-runtime=remote --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动cri-dockerd服务</span><br>systemctl daemon-reload<br>systemctl restart cri-dockerd.service cri-dockerd.socket<br>systemctl status cri-dockerd.service cri-dockerd.socket<br></code></pre></td></tr></table></figure><h2 id="master-节点操作">2.2 Master 节点操作</h2><h3 id="升级-kubeadm">2.2.1 升级 kubeadm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">kubeadm版本与目的k8s版本要一致</span><br>[root@k8s-master01 ~]# yum install -y kubeadm-1.24.2-0 --disableexcludes=kubernetes<br>[root@k8s-master01 ~]# kubeadm version<br></code></pre></td></tr></table></figure><h3 id="查看升级计划">2.2.2 查看升级计划</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">k8s不支持跨大版本升级</span><br>[root@k8s-master01 ~]# kubeadm upgrade plan<br><span class="hljs-meta prompt_">#</span><span class="language-bash">下图转存过一次，所以有点模糊。可以看到，输出内容提示现在的k8s.1.23.9最高只能升级到k8s.1.24.17，而且还需要升级kubeadm</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/3N9O7BbQmyVpXU6.png"alt="image-20241118184701703" /><figcaption aria-hidden="true">image-20241118184701703</figcaption></figure><h3 id="执行master节点升级">2.2.3 执行Master节点升级</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master01 ~]# kubeadm upgrade apply v1.24.2<br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果执行失败并提示：Error <span class="hljs-keyword">while</span> dialing dial unix /var/run/dockershim.sock，参考“2.4 问题处理”-&gt;“2.4.1 xxx章节”内容进行处理</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">如果有多个控制节点，后续控制节点请执行：kubeadm upgrade node</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">参考：https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/jtbh3DgFzPZUr7I.png"alt="image-20241118185005730" /><figcaption aria-hidden="true">image-20241118185005730</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl get nodes --show-labels<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/kioEC92BZcArsJe.png"alt="image-20241118185157241" /><figcaption aria-hidden="true">image-20241118185157241</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">将k8s-master01节点设置为不可调度，然后将将其上现有pod迁移到其他节点上去</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl drain k8s-master01 --ignore-daemonsets<br><span class="hljs-meta prompt_">#</span><span class="language-bash">升级client端的kubectl版本</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# yum install kubectl-1.24.2<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl version --short<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/5KaFLOk63w4ySGV.png"alt="image-20241118185720354" /><figcaption aria-hidden="true">image-20241118185720354</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">升级kubelet</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# yum install kubelet-1.24.2<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubelet –version<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启kubelet服务</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# systemctl daemon-reload <br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# systemctl restart kubelet<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/iWgwrjpQ1sXq4ck.png"alt="image-20241118185814268" /><figcaption aria-hidden="true">image-20241118185814268</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl uncordon k8s-master01<br><span class="hljs-meta prompt_">#</span><span class="language-bash">uncordon此节点后，此节点上kubelet服务才变成Running状态</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# systemctl status kubelet<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/sPeXuLvaDnA2VpU.png"alt="image-20241118185943405" /><figcaption aria-hidden="true">image-20241118185943405</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看各节点，可以看到当前显示集群版本还是1.23.9</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl get nodes<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/TQ2Wz8cJeLxDs1f.png"alt="image-20241118190029580" /><figcaption aria-hidden="true">image-20241118190029580</figcaption></figure><h3 id="后续配置">2.2.4 后续配置</h3><p>​ k8s1.24 弃用了 node-role.kubernetes.io/master， 替换成了node-role.kubernetes.io/control-plane , 所以需要手动添加 master 相关的lable 和 taint，否则之前使用了该 label，taint 的应用会出问题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl label nodes k8s-master01 node-role.kubernetes.io/master=<br><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl taint nodes k8s-master01 node-role.kubernetes.io/control-plane-<br><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl taint nodes k8s-master01 node-role.kubernetes.io/master:NoSchedule --overwrite<br></code></pre></td></tr></table></figure><h2 id="worker-节点操作">2.3 Worker 节点操作</h2><h3 id="升级-kubeadm-1">2.3.1 升级 kubeadm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-worker01 ~]# yum install -y kubeadm-1.24.2-0 --disableexcludes=Kubernetes<br>[root@k8s-worker01 ~]# kubeadm version<br></code></pre></td></tr></table></figure><h3 id="升级工作节点">2.3.2 升级工作节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-worker01 ~]# kubeadm upgrade node<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/htp6UgM8y4ILYbc.png"alt="image-20241118190900487" /><figcaption aria-hidden="true">image-20241118190900487</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-worker01 ~]# yum install kubectl-1.24.2 kubelet-1.24.2 -y<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/r7vUfkptloyubjF.png"alt="image-20241118190925463" /><figcaption aria-hidden="true">image-20241118190925463</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-worker01 ~]# systemctl daemon-reload<br>[root@k8s-worker01 ~]# systemctl restart kubelet<br><span class="hljs-meta prompt_">#</span><span class="language-bash">uncordon此节点后，此节点上kubelet服务才变成Running状态</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl uncordon k8s-worker01<br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl get nodes<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/xlyCmRFfwueAa1K.png"alt="image-20241118191051445" /><figcaption aria-hidden="true">image-20241118191051445</figcaption></figure><h3 id="工作节点生成config文件">2.3.3 工作节点生成config文件</h3><p>​ 上述操作完成后，在工作节点无法执行kubectl命令，报错如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@k8s-worker01 ~]# kubectl get nodes<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/B75ZOdthCPTfVpQ.png"alt="image-20241118191753051" /><figcaption aria-hidden="true">image-20241118191753051</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在所有工作节点上创建目录</span><br>[root@k8s-worker01 ~]# mkdir -p $HOME/.kube<br><span class="hljs-meta prompt_">#</span><span class="language-bash">从主节点复制文件到工作节点指定目录</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# scp /etc/kubernetes/admin.conf root@k8s-worker01:/root/.kube/config<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">之后在此工作节点就可以正常执行kubectl命令</span><br></code></pre></td></tr></table></figure><h3 id="注意">2.3.4 注意</h3><p>​ 其他k8s工作节点都要执行上述操作。</p><p>​所有工作执行完上述操作后，此时所有k8s节点的状态仍是处于NotReady状态，所有节点keubelet服务activating(auto-restart)，请参考以下章节“问题处理”解决。</p><p>​升级所有操作都完成后，k8s1.24.2集群的所有节点都会处于Ready状态，k8s集群版本显示为v1.24.2：</p><figure><img src="https://s2.loli.net/2024/11/18/wYLPAKD5JvCopcQ.png"alt="image-20241118224834915" /><figcaption aria-hidden="true">image-20241118224834915</figcaption></figure><h2 id="问题处理">2.4 问题处理</h2><h3id="控制节点升级时报error-while-dialing-dial-unix-varrundockershim.sock">2.4.1控制节点升级时，报“Error while dialing dial unix/var/run/dockershim.sock”</h3><figure><img src="https://s2.loli.net/2024/11/18/sG4WQDX1BoYva8U.png"alt="image-20241118223816806" /><figcaption aria-hidden="true">image-20241118223816806</figcaption></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">编辑所有节点</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl edit nodes k8s-master01 <br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl edit nodes k8s-worker01 <br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# kubectl edit nodes k8s-worker02<br><span class="hljs-meta prompt_">#</span><span class="language-bash">做如下修改：</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/A6HFoIDcMvk9WBP.png"alt="image-20241118224008028" /><figcaption aria-hidden="true">image-20241118224008028</figcaption></figure><h3id="升级操作完成后所有节点都是notready状态所有节点keubelet服务activating-auto-restart">2.4.2升级操作完成后，所有节点都是NotReady状态，所有节点keubelet服务activating(auto-restart)</h3><figure><img src="https://s2.loli.net/2024/11/18/qQFNxa6HjRPZ2Ay.png"alt="image-20241118224047709" /><figcaption aria-hidden="true">image-20241118224047709</figcaption></figure><figure><img src="https://s2.loli.net/2024/11/18/HxZkC9NJyXMuti1.png"alt="image-20241118224208751" /><figcaption aria-hidden="true">image-20241118224208751</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">分析定位：</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# journalctl -xeu kubelet &gt; kubelet.log<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看kubelet的相关日志</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# vi kubelet.log<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/ZphI32MCdzlei8t.png"alt="image-20241118224327843" /><figcaption aria-hidden="true">image-20241118224327843</figcaption></figure><p>发现kubelet无法识别"--network-plugin"这个参数，因为该配置和"DockerShim"一起在Kubernetes的1.24版本被移除了。</p><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">找到 <span class="hljs-string">&quot;--network-plugin&quot;</span> 删除即可</span><br>[root@k8s-master01 upgrade-k8s1.23.9-to-1.24.2]# vi /var/lib/kubelet/kubeadm-flags.env<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/okGdNUQBxLE6KDs.png"alt="image-20241118224524590" /><figcaption aria-hidden="true">image-20241118224524590</figcaption></figure><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@k8s-master01 upgrade-k8s1.<span class="hljs-number">23.9</span>-<span class="hljs-keyword">to</span>-<span class="hljs-number">1.24</span>.<span class="hljs-number">2</span>]<span class="hljs-comment"># source /var/lib/kubelet/kubeadm-flags.env                                                                                                                     </span><br>[root@k8s-master01 upgrade-k8s1.<span class="hljs-number">23.9</span>-<span class="hljs-keyword">to</span>-<span class="hljs-number">1.24</span>.<span class="hljs-number">2</span>]<span class="hljs-comment"># systemctl restart kubelet</span><br>[root@k8s-master01 upgrade-k8s1.<span class="hljs-number">23.9</span>-<span class="hljs-keyword">to</span>-<span class="hljs-number">1.24</span>.<span class="hljs-number">2</span>]<span class="hljs-comment"># systemctl status kubelet -l</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/11/18/NYnPLoQvpMSTUut.png"alt="image-20241118224556425" /><figcaption aria-hidden="true">image-20241118224556425</figcaption></figure><p>其他节点也是这样修改与操作后，重启kubelet服务，之后kubelet服务处于Running状态。</p><p>之后K8s集群中所有节点都是Ready状态：</p><figure><img src="https://s2.loli.net/2024/11/18/891feAnlkdjO2hp.png"alt="image-20241118224702797" /><figcaption aria-hidden="true">image-20241118224702797</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s kubeadm 1.23.x 1.24.x 升级 docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>arm64服务器下的Harbor-v2.11.1环境搭建</title>
    <link href="/2024/10/30/arm64%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E7%9A%84Harbor-v2-11-1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/10/30/arm64%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E7%9A%84Harbor-v2-11-1%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="一搭建过程">一、搭建过程</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@ubuntu20:~# mkdir -p /opt/installPkgs/installHarbor<br>root@ubuntu20:~# cd /opt/installPkgs/installHarbor<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载编排文件docker-compose.yml</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# curl -LO https://raw.githubusercontent.com/bitnami/containers/main/bitnami/harbor-portal/docker-compose.yml<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">下载安装文件，解压然后移动文件</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# curl -L https://github.com/bitnami/containers/archive/main.tar.gz | tar xz --strip=2 containers-main/bitnami/harbor-portal &amp;&amp; cp -RL harbor-portal/2/debian-12/config ./ &amp;&amp; rm -rf harbor-portal<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">编译docker配置文件，添加如下镜像代理网站（不一定非常好用，但比没有时效果好）</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# vi /etc/docker/daemon.json<br>...<br>  &quot;registry-mirrors&quot;: [<br>    &quot;https://docker.nju.edu.cn/&quot;,<br>    &quot;https://kuamavit.mirror.aliyuncs.com&quot;,<br>    &quot;https://docker.chenby.cn&quot;,<br>    &quot;https://docker.registry.cyou&quot;,<br>    &quot;https://docker-cf.registry.cyou&quot;,<br>    &quot;https://dockercf.jsdelivr.fyi&quot;,<br>    &quot;https://docker.jsdelivr.fyi&quot;,<br>    &quot;https://dockertest.jsdelivr.fyi&quot;,<br>    &quot;https://mirror.aliyuncs.com&quot;,<br>    &quot;https://dockerproxy.com&quot;,<br>    &quot;https://mirror.baidubce.com&quot;,<br>    &quot;https://docker.m.daocloud.io&quot;,<br>    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,<br>    &quot;https://docker.mirrors.ustc.edu.cn&quot;,<br>    &quot;https://mirror.iscas.ac.cn&quot;,<br>    &quot;https://docker.rainbond.cc&quot;<br>  ],<br>...<br><br>root@ubuntu20:/opt/installPkgs/installHarbor# systemctl daemon-reload &amp;&amp; systemctl restart docker<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">封装pull-images.sh</span> <br>root@ubuntu20:/opt/installPkgs/installHarbor# touch pull-images.sh <br>root@ubuntu20:/opt/installPkgs/installHarbor# cat pull-images.sh <br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>docker pull docker.io/bitnami/harbor-registry:2<br>docker pull docker.io/bitnami/harbor-registryctl:2<br>docker pull docker.io/bitnami/postgresql:13<br>docker pull docker.io/bitnami/harbor-core:2<br>docker pull docker.io/bitnami/harbor-portal:2<br>docker pull docker.io/bitnami/harbor-jobservice:2<br>docker pull docker.io/bitnami/redis:7.4<br>docker pull docker.io/bitnami/nginx:1.27<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">拉取搭建Harbor时需要用到的镜像（如果上述daemon.json配置还无效，请先想办法将这些镜像下载到手）</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# bash pull-images.sh <br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建Harbor相关容器</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# docker-compose up -d<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看容器列表</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# docker-compose ps<br>NAME                          IMAGE                                    COMMAND                  SERVICE        CREATED        STATUS        PORTS<br>harbor-core                   docker.io/bitnami/harbor-core:2          &quot;/opt/bitnami/script…&quot;   core           2 months ago   Up 2 months   8080/tcp<br>harbor-db                     docker.io/bitnami/postgresql:13          &quot;/opt/bitnami/script…&quot;   postgresql     2 months ago   Up 2 months   5432/tcp<br>harbor-jobservice             docker.io/bitnami/harbor-jobservice:2    &quot;/opt/bitnami/script…&quot;   jobservice     2 months ago   Up 2 months   8080/tcp, 8443/tcp<br>harbor-portal                 docker.io/bitnami/harbor-portal:2        &quot;/opt/bitnami/script…&quot;   portal         2 months ago   Up 2 months   8080/tcp, 8443/tcp<br>installharbor-redis-1         docker.io/bitnami/redis:7.4              &quot;/opt/bitnami/script…&quot;   redis          2 months ago   Up 2 months   6379/tcp<br>installharbor-registry-1      docker.io/bitnami/harbor-registry:2      &quot;/opt/bitnami/script…&quot;   registry       2 months ago   Up 2 months   5000/tcp<br>installharbor-registryctl-1   docker.io/bitnami/harbor-registryctl:2   &quot;/opt/bitnami/script…&quot;   registryctl    2 months ago   Up 2 months   8080/tcp, 8443/tcp<br>nginx                         docker.io/bitnami/nginx:1.27             &quot;/opt/bitnami/script…&quot;   harbor-nginx   2 months ago   Up 2 months   8443/tcp, 0.0.0.0:80-&gt;8080/tcp, :::80-&gt;8080/tcp<br></code></pre></td></tr></table></figure><h1 id="二harbor仓库web界面">二、Harbor仓库web界面</h1><p>​ Harbor仓库的web界面访问地址是：http://{服务器IP}:80 。默认超级管理员用户：admin，密码：bitnami</p><p>​ 相关用法跟AMD64构架服务器下时Harbor的用法一样。</p><figure><img src="https://s2.loli.net/2024/12/03/TgnCRyWIEhXY1cj.png"alt="image-20241030224957136" /><figcaption aria-hidden="true">image-20241030224957136</figcaption></figure><p>​ 查看Harbor版本：</p><figure><img src="https://s2.loli.net/2024/12/03/8rHVqGBC1EfgkKn.png"alt="image-20241030225416541" /><figcaption aria-hidden="true">image-20241030225416541</figcaption></figure><h1 id="三其他说明">三、其他说明</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">相关主要配置比如登录harbor服务的web界面时admin用户的密码，在docker-compose.yml 进行配置</span><br>root@ubuntu20:/opt/installPkgs/installHarbor# vi docker-compose.yml<br>...<br>HARBOR_ADMIN_PASSWORD=bitnami<br>...<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>arm64 Harbor-v2.11.1 镜像仓库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>开源监控系统夜莺V6-7-2介绍-部署-使用入门</title>
    <link href="/2024/10/27/%E5%BC%80%E6%BA%90%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%A4%9C%E8%8E%BAV6-7-2%E4%BB%8B%E7%BB%8D-%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <url>/2024/10/27/%E5%BC%80%E6%BA%90%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E5%A4%9C%E8%8E%BAV6-7-2%E4%BB%8B%E7%BB%8D-%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一介绍">一、介绍</h1><h2 id="简介">1.1 简介</h2><p>​ 夜莺监控是一款开源云原生观测分析工具，采用 All-in-One的设计理念，集数据采集、可视化、监控告警、数据分析于一体，与云原生生态紧密集成，提供开箱即用的企业级监控分析和告警能力。夜莺于2020 年 3 月 20 日，在 github 上发布 v1 版本，已累计迭代 100多个版本。它最初由滴滴开发和开源，并于 2022 年 5 月 11日，捐赠予中国计算机学会开源发展委员会（CCF ODC），为 CCF ODC成立后接受捐赠的第一个开源项目。夜莺的核心研发团队，也是 Open-Falcon项目原核心研发人员。</p><p>​夜莺的代码库分前端代码库与后端代码库，已经托管址在github平台，后端主要实现语言是Go，前端主要实现语言是TypeScript。</p><ul><li>后端：<a href="https://github.com/ccfos/nightingale">💡https://github.com/ccfos/nightingale</a></li><li>前端：<a href="https://github.com/n9e/fe">💡https://github.com/n9e/fe</a></li></ul><h2 id="思考与分析">1.2 思考与分析</h2><p>​在夜莺监控这个软件之前，监控告警、告警自愈与图表展示已经有了一套可行的开源解决方案即“Prometheus+Grafana+AlertManager”组合。那为什么还需要再开发一套“重复的”、有着相同功能的软件解决方案呢？其实它们主体功能是重复的，但它们的优势与可组合性不一样，这样用户可以根据自己的实际需求来选择适合自己的解决方案。</p><p>​为了叙述的简洁性，以下使用“PGA组合”代替“Prometheus+Grafana+AlertManager”组合。</p><table><thead><tr><th>功能特征或实际需求</th><th>“PGA组合”</th><th>夜莺</th></tr></thead><tbody><tr><td>先前已经使用“PGA组合”搭建好自己监控告警与图表展示，功能已经基本满足需求且没有痛点</td><td>+1'</td><td></td></tr><tr><td>需要使用Grafana社区中庞大而炫酷的图表</td><td>+1'</td><td>（夜Grafana中一般常见的基础的图表图表在夜莺都是有的或可重用的）</td></tr><tr><td>需要使用多个TSDB如Prometheus、VictoriaMetrics、Thanos等，需要一个统一的平台来管理告警、看图</td><td></td><td>+1'</td></tr><tr><td>让多个团队自行采用图形化方式灵活方便地定制自己的告警规则与图表</td><td></td><td>+1'</td></tr><tr><td>让多个团队自行采用图形化方式灵活方便地定制自己的告警策略配置，比如控制生效时间、一套规则生效多个集群</td><td></td><td>+1'</td></tr><tr><td>需要告警自愈能力，如告警之后自动执行个脚本</td><td></td><td>+1'</td></tr><tr><td>以图形化方式开箱即用内置告警规则和内置仪表盘</td><td></td><td>+1'</td></tr></tbody></table><p>​可以看到，“PGA组合”由于产生的时间更早，可能已在相当一部企业或场景的生产环境中使用，如其功能已能基本满足需求、使用中确实没有痛点、需要Grafana社区中庞大而炫酷的图表，可以继续使用“PGA组合”。否则就可以尝试夜莺这一套解决方案。</p><h2 id="构架介绍">1.3 构架介绍</h2><figure><img src="https://s2.loli.net/2024/10/28/chCmQ8bKjwTZN4V.png"alt="20230531103435" /><figcaption aria-hidden="true">20230531103435</figcaption></figure><p>​ 首先上图中间的飞鸟代表夜莺的核心进程 n9e （下文以 n9e代替），它的集群方式非常简单只需部署多节点即可实现。</p><p>​ 对于 n9e 来说，它本身依赖的存储有两个</p><ul><li>Mysql : 存放配置类别信息，如用户，监控大盘，告警规则等</li><li>Redis : 存放访问令牌(JWTToken)，心跳信息，如机器列表中CPU、内存、时间偏移、核数、操作系统、CPU架构等</li></ul><p>​ 从 v6 版本开始，夜莺尝试转型为统一可观测性平台，n9e不再仅支持接入时序数据源(Prometheus、Victoriametrics、M3DB、Thanos)，也可以接入日志类数据源（Elasticsearch，Loki【预】），链路追踪数据源（Jaeger）。</p><p>​ 左侧就是 n9e 的数据来源，n9e 可以支持多种采集器 agent，比如Datadog-Agent，Telegraf，Grafana-Agent，OpenTSDBagent，Node-Exporter，vmagent 都可以对接，不过最推荐的还是Categraf。比如在 n9e 中机器列表页面的心跳信息都是 Categraf才会去采集并上报的，所以为了更丝滑使用更推荐使用 Categraf，并且 Categraf采用 All-In-One 的设计，采集日志，指标，链路追踪，所有的采集工作使用一个agent 来解决。</p><p>​介绍完中心部署架构，我们再来描述一下它的数据流：假设是时序指标数据的采集，agent把采集到的数据推送给 n9e （端口:17000），然后经由 n9e加工（自动添加附加标签）转发给对应的时序数据库保存。另外在 n9e把数据的转发给时序数据库之前，会先从监控数据中提取出 ident 标签写入mysql 的 target 表（机器列表）中，同时如果 agent 用的是 Categraf并且配置了心跳(heartbeat=true)，则会把心跳上报的 metadata 存入Redis（就是那些核数、操作系统、CPU架构等）。</p><p>​更复杂的部署方案请查看官方文档：https://flashcat.cloud/docs/content/flashcat-monitor/nightingale-v6/arch/。</p><h1 id="二部署">二、部署</h1><h2 id="基础环境">2.1 基础环境</h2><h3 id="环境信息">2.1.1 环境信息</h3><table><thead><tr><th>主机名</th><th>IP</th><th>操作系统</th><th>规格</th><th>磁盘</th><th>root用户密码</th></tr></thead><tbody><tr><td>k8s03-1</td><td>10.13.15.61</td><td>Ubuntu 20.04.3 LTS-amd64</td><td>8c16g</td><td>400G</td><td>Changeme@123</td></tr></tbody></table><h3 id="安装要求说明">2.1.2 安装要求说明</h3><p>（1）服务器构架：支持x84_64，也支持 arm64构架。amd64 是 x84的包，下载站点也提供 arm64的包。如果需要其他平台的包则要自行编译验证。</p><p>（2）操作系统：笔者在centos7.9-amd64与Ubuntu20.04.xLTS-amd64上都验证过，可行。其他基于Linux内核的操作系统理论上都支持，具体要验证。</p><p>（3）操作系统规格：如果就是用来检验一下、不上生产环境，2核CPU+4G内存+50G磁盘空间即可。如果上生产环境，建议8C16G及以上+300G磁盘以上，且最好搭建一个夜莺高可用集群，搭建夜莺高可用集群方法见其官网。</p><p>（4）夜莺官网安装文档：https://flashcat.cloud/docs/content/flashcat-monitor/nightingale-v6/install/intro/</p><h2 id="下载安装包">2.2 下载安装包</h2><p>以下假设安装文件与安装目录分别在：/data/softs、/data/server</p><h3 id="夜莺下载地址">2.2.1 夜莺下载地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用n9e-v6.7.2</span><br>cd /data/softs<br>wget https://github.com/ccfos/nightingale/releases/download/v6.7.2/n9e-v6.7.2-linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><h3 id="categraf下载地址">2.2.2 categraf下载地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以categraf-v0.3.61-linux-amd64为例</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Linux上categraf：https://github.com/flashcatcloud/categraf/releases/download/v0.3.61/categraf-v0.3.61-linux-amd64.tar.gz</span><br>cd /data/softs<br>wget https://github.com/flashcatcloud/categraf/releases/download/v0.3.61/categraf-v0.3.61-linux-amd64.tar.gz<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">Windows上categraf：https://github.com/flashcatcloud/categraf/releases/download/v0.3.61/categraf-v0.3.61-windows-amd64.zip</span><br></code></pre></td></tr></table></figure><h3 id="victoria-metrics下载地址">2.2.3 victoria-metrics下载地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用单机版VM-v1.93.10</span><br>cd /data/softs<br>wget https://github.com/VictoriaMetrics/VictoriaMetrics/releases/download/v1.93.10/victoria-metrics-linux-amd64-v1.93.10.tar.gz<br></code></pre></td></tr></table></figure><h2 id="部署夜莺相关各服务">2.3 部署夜莺相关各服务</h2><p>依赖 mysql 存储用户配置类数据，依赖 redis 存储 jwt token和机器心跳上报的 metadata，所以，先准备 mysql 和 redis。</p><h3 id="安装victoriametrics">2.3.1 安装victoriametrics</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxf victoria-metrics-linux-amd64-v1.93.10.tar.gz -C /data/server<br>chown root:root /data/server/victoria-metrics-prod<br>chmod 755 /data/server/victoria-metrics-prod<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建用户和用户组</span><br>useradd -u 1003 victoriametrics<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">部署二进制文件</span><br>cd /data/server<br>install -o victoriametrics -g victoriametrics -m 0755 victoria-metrics-prod /usr/local/bin/victoriametrics<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建进程文件与数据存储目录</span><br>mkdir -p /run/victoriametrics &amp;&amp; chown victoriametrics:victoriametrics /run/victoriametrics<br>mkdir -p /data/server/victoriametrics/data/ &amp;&amp; chown -R victoriametrics:victoriametrics /data/server/victoriametrics/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">配置systemd管理服务</span><br>cat &gt; /etc/systemd/system/victoriametrics.service &lt;&lt;EOF<br>[Unit]<br>Description=VictoriaMetrics<br>After=network.target<br><br>[Service]<br>Type=simple<br>StartLimitBurst=5<br>StartLimitInterval=0<br>Restart=on-failure<br>RestartSec=1<br>PIDFile=/run/victoriametrics/victoriametrics.pid<br>ExecStart=/usr/local/bin/victoriametrics -storageDataPath /data/server/victoriametrics/data/ -retentionPeriod 1098 <br>ExecStop=/bin/kill -s SIGTERM $MAINPID<br>User=victoriametrics<br><br>[Install]<br>WantedBy=multi-user.target<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-built_in">ulimit</span></span> <br>mkdir -p /etc/systemd/system/victoriametrics.service.d<br><br>cat &gt; /etc/systemd/system/victoriametrics.service.d/ulimit.conf &lt;&lt; EOF<br>[Service]<br>LimitNOFILE=32000<br>LimitNPROC=32000<br>EOF<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl start victoriametrics.service<br><br>systemctl enable victoriametrics.service<br>systemctl status victoriametrics.service<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/jDpqwNy35HKJ79V.png"alt="image-20241028111538618" /><figcaption aria-hidden="true">image-20241028111538618</figcaption></figure><h3 id="安装mysql">2.3.2 安装mysql</h3><p>对于夜莺来说，它本身依赖的存储有两个</p><ul><li>Mysql : 存放配置类别信息，如用户，监控大盘，告警规则等</li><li>Redis : 存放访问令牌(JWTToken)，心跳信息，如机器列表中CPU、内存、时间偏移、核数、操作系统、CPU架构等</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt -y install mariadb*<br>systemctl enable mariadb<br>systemctl status mariadb<br><br>mysql -e &quot;SET PASSWORD FOR &#x27;root&#x27;@&#x27;localhost&#x27; = PASSWORD(&#x27;1234&#x27;);&quot;<br>mysql -uroot -p1234<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/Udo7cpgYxGsNt18.png"alt="image-20241028111612351" /><figcaption aria-hidden="true">image-20241028111612351</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果远程登录mysql服务端的话，需要修改50-server.cnf文件的bind-address为0.0.0.0(否则只能从本机登录)</span><br>vi /etc/mysql/mariadb.conf.d/50-server.cnf<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/WFdu9zw3rAhpvKL.png"alt="image-20241028111915017" /><figcaption aria-hidden="true">image-20241028111915017</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改cracklib_password_check.cnf以修改 mysql密码校验策略</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将cracklib_password_check 插件注释</span><br>vi /etc/mysql/mariadb.conf.d/cracklib_password_check.cn<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/D4vRBUHp2mICWuQ.png"alt="image-20241028112132636" /><figcaption aria-hidden="true">image-20241028112132636</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">重启数据库服务</span><br>systemctl restart mariadb.service<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">不加-h参数，默认以本机为客户端登录数据库</span><br>mysql -uroot -p1234<br><span class="hljs-meta prompt_">#</span><span class="language-bash">允许root用户可以从任意机器上登入mysql的任意数据库、操作任意数据库的任意表</span><br>GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &quot;1234&quot;;<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">远程登录数据库内，修改root用户的登录密码</span><br>mysql -hxxx -uroot -p1234<br><span class="hljs-meta prompt_">#</span><span class="language-bash">允许root用户可以从任意机器上登入mysql的任意数据库、操作任意数据库的任意表</span><br>GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &quot;1234&quot;;<br></code></pre></td></tr></table></figure><h3 id="安装redis">2.3.3 安装redis</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install -y redis<br><br>systemctl enable redis<br>systemctl status redis<br></code></pre></td></tr></table></figure><h3 id="安装n9e">2.3.4 安装n9e</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p mkdir /data/server/n9e-v6.7.2<br>tar -zxf ztmonitor-v2.0.tar.gz -C /data/server/n9e-v6.7.2/<br><br>cd /data/server/n9e-v6.7.2/ <br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压缩之后，可以看到 n9e.sql 是建表语句，导入数据库</span> <br>mysql -uroot -p1234 &lt; n9e.sql<br></code></pre></td></tr></table></figure><h4 id="封装n9e.service">2.3.4.1 封装n9e.service</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat &gt;&gt; /usr/lib/systemd/system/n9e.service &lt;&lt;EOF<br>[Unit]<br>Description=&quot;n9e&quot;<br>After=network.target mariadb.service<br>[Service]<br>Type=simple<br>ExecStart=/data/server/n9e-v6.7.2/n9e<br>WorkingDirectory=/data/server/n9e-v6.7.2/<br>Restart=on-failure<br>SuccessExitStatus=0<br>LimitNOFILE=65536<br>StandardOutput=syslog<br>StandardError=syslog<br>SyslogIdentifier=n9e<br>[Install]<br>WantedBy=multi-user.target<br>EOF<br></code></pre></td></tr></table></figure><h4 id="修改n9e配置文件">2.3.4.2 修改n9e配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改./etc/config.toml文件</span><br>vi ./etc/config.toml<br>...<br>[[Pushgw.Writers]]<br>Url = &quot;http://10.13.15.61:8428/api/v1/write&quot;<br>...<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/eb235h9dNAgHlX1.png"alt="image-20241028140727607" /><figcaption aria-hidden="true">image-20241028140727607</figcaption></figure><h4 id="启动n9e服务">2.3.4.3 启动n9e服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload <br>systemctl restart n9e &amp;&amp; systemctl enable n9e<br>systemctl status n9e<br></code></pre></td></tr></table></figure><h4 id="访问n9e的web界面">2.3.4.4 访问n9e的web界面</h4><p>链接是：http://10.13.15.61:17000/login</p><figure><img src="https://s2.loli.net/2024/10/28/HTvd5pO21ZgGAi3.png"alt="image-20241028141145325" /><figcaption aria-hidden="true">image-20241028141145325</figcaption></figure><h4 id="添加数据源">2.3.4.5 添加数据源</h4><figure><img src="https://s2.loli.net/2024/10/28/76VrEiwyYq1f5PX.png"alt="image-20241028141904842" /><figcaption aria-hidden="true">image-20241028141904842</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/28/Bj6JRhFetmykoIl.png"alt="image-20241028141958225" /><figcaption aria-hidden="true">image-20241028141958225</figcaption></figure><h1 id="三使用入门">三、使用入门</h1><h2 id="夜莺能监控什么">3.1 夜莺能监控什么</h2><p>​夜莺能够监控的对象有很多，但它本身并没有采集被监控的数据。它是一个服务端组件，类似Grafana，可以接入不同的数据源，比如 Prometheus、VictoriaMetrics、Thanos等等，只要数据进到这些库里了，夜莺就可以对数据源的数据进行分析、告警、可视化，以及后续的事件处理、告警自愈。</p><h2 id="夜莺如何获取监控数据">3.2 夜莺如何获取监控数据</h2><p>​夜莺有端口接收监控数据，只要各监控采集器跟夜莺打通了就能将数据推送给夜莺，夜莺接收到采集数据后，可能会进行少量处理如添加少许标签，然后会保存到n9e配置文件中配置的时序数据库中（如上述./etc/config.toml文件中[Pushgw.Writers]组下Url配置的victoria-metrics）。然后在夜莺的web界面，可以创建夜莺中的数据源，数据源是各仪表盘可视化与告警分析的数据来源。</p><p>​ 常用的开源采集器如Telegraf、Categraf、Grafana-agent、Datadog-agent、Prometheus 生态的各类Exporter 等等，都是可以跟夜莺结合一起使用的。这些 agent（也就是采集器）采集了数据推给夜莺，夜莺适配了这些 agent的数据传输协议，所以可以接收这些 agent上报的监控数据，转存到后端对接的时序数据库，之后就可以对这些数据做告警分析、可视化。</p><p>​ Categraf 是一个开源的监控采集Agent，由快猫星云技术团队（也就是夜莺的开发团队）研发并开源，提供了对所有常见监控对象如Linux/Windows服务器、MySQl数据库、k8s、容器、NVIDIAGPU等等提供高质量的监控数据采集能力，采用了 All-in-one的设计理念，可以同时支持指标、日志、链路追踪数据的采集。以下以 categraf采集器为例进行说明与操作。</p><p>​ 一般来说，被监控对象都有一个对应 Categraf 进程。比如说要监控10.13.15.61 这个服务器的NVIDIAGPU、cpu、内存、磁盘、上传下载网速等这类服务器固有信息，或这其上部署的软件如MySQL、k8s等，就需要在10.13.15.61这个服务器的操作系统上安装categraf，并进行配置。Categraf目前支持的操作系统包括Windows、Linux及macOS，具体的版本细节请查看官方文档。</p><h2 id="安装与配置-categraf">3.3 安装与配置 categraf</h2><p>​ categraf其实是一个采集插件集合，其中包含了多个针对常见被监控对象的插件，如input.cpu、input.disk、input.mysql等等，这些插件都放在categraf安装目录下的conf 子目录下，每个以 ”input.“ 开头的子目录就是categraf的一个采集插件。</p><p>​ 如果要禁用某个插件，把 input.xx 改个其他前缀(或者删除这个目录)，比如bak.input.xx，categraf 就会忽略这个采集器。</p><p>​categraf安装好后，如果不对默认插件配置目录及文件进行修改，它默认也会启用常基本的插件如input.cpu、input.disk等，以采集最常见的服务器与操作系统数指标数据如cpu、内存、磁盘大小与io、上传下载速率等。默认没有采集的指标数据就需要使用其他Categraf 插件来客制化采集。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxf /data/softs/categraf-v0.3.61-linux-amd64.tar.gz -C /data/server/<br>cd /data/server<br>cp categraf-v0.3.61-linux-amd64/conf/categraf.service /usr/lib/systemd/system/<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /usr/lib/systemd/system/categraf.service<br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改后内容如下</span><br>[Unit]<br>Description=&quot;Categraf&quot;<br>After=network.target<br><br>[Service]<br>Type=simple<br><br>ExecStart=/data/server/categraf-v0.3.61-linux-amd64/categraf  #这里<br>WorkingDirectory=/data/server/categraf-v0.3.61-linux-amd64    #这里<br><br>Restart=on-failure<br>SuccessExitStatus=0<br>LimitNOFILE=65536<br>StandardOutput=syslog<br>StandardError=syslog<br>SyslogIdentifier=categraf<br><br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi categraf-v0.3.61-linux-amd64/conf/config.toml <br><span class="hljs-meta prompt_">#</span><span class="language-bash">以下修改后的几点</span><br>[global]<br>...<br>hostname = &quot;$ip&quot;   #夜莺中以自动获取到的服务器ip标识服务器<br>...<br>[[writers]]<br>url = &quot;http://10.13.15.61:17000/prometheus/v1/write&quot;       #夜莺接收监控数据的url<br>...<br>[heartbeat]<br>...<br><span class="hljs-meta prompt_"># </span><span class="language-bash">report os version cpu.util mem.util metadata</span><br>url = &quot;http://10.13.15.61:17000/v1/n9e/heartbeat?gid=1&quot;    #夜莺中接收监控对象心跳的url。最后加上&quot;gid=1&quot;会自动将被监控服务器归到默认业务组内<br>...<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">启动categraf服务</span><br>systemctl daemon-reload <br>systemctl start categraf.service &amp;&amp; systemctl enable categraf.service<br>systemctl status categraf.service<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/28/RiErvmyUs4oqbMA.png"alt="image-20241028145210919" /><figcaption aria-hidden="true">image-20241028145210919</figcaption></figure><h2 id="监控">3.4 监控</h2><h3 id="监控服务器信息">3.4.1 监控服务器信息</h3><p>​categraf安装好后，默认会启用常基本的插件如input.cpu、input.disk等，以采集最常见的服务器与操作系统数指标数据如cpu、内存、磁盘大小与io、上传下载速率等。</p><figure><img src="https://s2.loli.net/2024/10/28/F8zGBrDYpkyLmqn.png"alt="image-20241028145414264" /><figcaption aria-hidden="true">image-20241028145414264</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/28/mO6IC8TtDlE5B2b.png"alt="image-20241028145442200" /><figcaption aria-hidden="true">image-20241028145442200</figcaption></figure><p>查看刚刚克隆的仪表盘及其中数据：</p><figure><img src="https://s2.loli.net/2024/10/28/NxRH1UczZeoiDMB.png"alt="image-20241028145535733" /><figcaption aria-hidden="true">image-20241028145535733</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/29/eugmKTJybG53l8q.png"alt="image-20241029095051041" /><figcaption aria-hidden="true">image-20241029095051041</figcaption></figure><h3 id="监控k8s及容器">3.5.1 监控k8s及容器</h3><p>​参考笔者以前写的文章：https://jiangsanyin.github.io/2024/05/26/%E5%A4%9C%E8%8E%BAnightingalev6-7-2%E9%80%9A%E8%BF%87kubelet%E9%87%87%E9%9B%86docker%E5%AE%B9%E5%99%A8%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE/</p><h3 id="采集监控其他对象数据">3.6.1 采集监控其他对象数据</h3><p>​关于其他插件的用法，参考官方文档：https://flashcat.cloud/docs/content/flashcat-monitor/categraf/plugin/introduction/</p><h2 id="基础设施-机器列表">3.5 基础设施-机器列表</h2><p>​ n9e 把数据的转发给时序数据库之前，会先从监控数据中提取出 ident标签写入 mysql 的 target 表（机器列表）中，同时 Categraf 会把心跳上报的metadata 存入Redis（就是那些核数、操作系统、CPU架构等）。这些数据就是就是展示在“基础设施-机器列表”页面的服务器。</p><figure><img src="https://s2.loli.net/2024/10/28/rbKXLuyedAvsg1S.png"alt="image-20241028220233328" /><figcaption aria-hidden="true">image-20241028220233328</figcaption></figure><h2 id="人员组织">3.6 人员组织</h2><h3 id="用户管理">3.6.1 用户管理</h3><p>​此页面的用户是夜莺系统中的用户，更直观地讲就是可以登录此web系统的用户。ta可能是某个使用者的逻辑映射，也可能是某个机器人如钉钉机器人。仅有一个默认的root用户也可以继续使用此系统。</p><figure><img src="https://s2.loli.net/2024/10/28/UJmPW1NqKIgdCYw.png"alt="image-20241028224349420" /><figcaption aria-hidden="true">image-20241028224349420</figcaption></figure><h3 id="团队管理">3.6.2 团队管理</h3><p>​ 团队就是多个用户的集合。</p><figure><img src="https://s2.loli.net/2024/10/29/Ttglb6deoSiRUNc.png"alt="image-20241029095403547" /><figcaption aria-hidden="true">image-20241029095403547</figcaption></figure><h3 id="业务组管理">3.6.3 业务组管理</h3><p>​业务组下面包含多个团队，每个团队又有各自的成员。这样划分结构，在使用告警规则非常有用，即某个业务组下的可能有多个告警规则，而这些告警则检查的对象如服务器可能是由不同的团队负责的，这样一来，相应的报警就应该发送给对应团队下面的用户，有利于避免打扰与权责的界定。</p><figure><img src="https://s2.loli.net/2024/10/28/HWapfo31FODgvLy.png"alt="image-20241028225018637" /><figcaption aria-hidden="true">image-20241028225018637</figcaption></figure><h2 id="告警管理">3.7 告警管理</h2><h3 id="内置规则">3.6.1 内置规则</h3><p>​内置规则是夜莺默认已经内置的一些常用或基础的告警规则，用户开箱即用的。</p><p>​将其进行克隆即可形成自己的告警规则，可以对内置规则进行克隆再进行修改，创建满足自己实际需求的告警规则。如下两张图的操作，从内置告警组克隆一个告警规则到默认业务组下，但并没有启用。当然也可查看“内置规则”的内容，从而确定是否是自己想要的准告警规则。</p><figure><img src="https://s2.loli.net/2024/10/28/LGI8snSCHqipePo.png"alt="image-20241028220625744" /><figcaption aria-hidden="true">image-20241028220625744</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/28/9Z7xFYG46aWfw2s.png"alt="image-20241028221656103" /><figcaption aria-hidden="true">image-20241028221656103</figcaption></figure><h3 id="告警规则">3.6.2 告警规则</h3><p>​克隆得到的告警规则在如下的“告警规则”页面，点击规则名称可以再次对其进行编辑。编辑好的告警规则一定确认已经启用，否则相当于被禁用了。</p><figure><img src="https://s2.loli.net/2024/10/28/bGmkQZgFqBRnTUX.png"alt="image-20241028221953883" /><figcaption aria-hidden="true">image-20241028221953883</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/28/tCNmaKYVIfuUZFP.png"alt="image-20241028222701515" /><figcaption aria-hidden="true">image-20241028222701515</figcaption></figure><figure><img src="https://s2.loli.net/2024/10/28/2gaTSyFUW1LwvPp.png"alt="image-20241028224050927" /><figcaption aria-hidden="true">image-20241028224050927</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>监控</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开源 监控系统 夜莺V6.7.2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>异构算力虚拟化中间件HAMi介绍与简单使用</title>
    <link href="/2024/10/22/%E5%BC%82%E6%9E%84%E7%AE%97%E5%8A%9B%E8%99%9A%E6%8B%9F%E5%8C%96%E4%B8%AD%E9%97%B4%E4%BB%B6HAMi%E4%BB%8B%E7%BB%8D%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/10/22/%E5%BC%82%E6%9E%84%E7%AE%97%E5%8A%9B%E8%99%9A%E6%8B%9F%E5%8C%96%E4%B8%AD%E9%97%B4%E4%BB%B6HAMi%E4%BB%8B%E7%BB%8D%E4%B8%8E%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一介绍">一、介绍</h1><h2 id="概述">概述</h2><p>​ HAMi，英文全称是“Heterogeneous AI Computing VirtualizationMiddleware”，是一个GPU与加速卡（支持的GPU与国产加速卡型号与具体特性请查看此项目官网：https://github.com/Project-HAMi/HAMi/）虚拟化国产开源项目，实现了以kubernetes为基础的容器场景下GPU或加速卡虚拟化。此项目最初由第四范式公司开源，原名“k8s-vGPU-scheduler”，后改名为HAMi（中文名为哈蜜），经过两三年的发展，现已在国内与国际上愈加流行，成为小型或科研机构提供容器场景下GPU或加速卡设备虚拟化的解决方案雏形或基础。它提供了管理多种不同类型的异构设备（目前支持NVIDIAGPU、寒武纪MLU、天数智芯GPU、中科署光DCU、华为昇腾NPU、摩尔线程GPU）的能力，能够在Pod之间共享异构设备，根据设备的拓扑信息和调度策略做出更好的调度决策。</p><p>​考虑到当前国内人工智能、高性能计算、机器学习等需要大量计算任务的工作负载对NVIDIAGPU及其他国产加速卡如海光DCU、昇腾NPU、寒武纪MLU等的使用特点。第一，其中一个显著的特点就是一个加速卡最多只能分配给一个任务，这个加速卡的资源如计算核心与显存并未被充分复用，其中很大一部分内存可能被浪费掉了，HAMi这一开源项目能够解决这一问题。第二，HAMi使得能够在同一个k8s环境中同时支持对多个不同品牌的加速设备（异构加速设备）的虚拟共享，这就是HAMi名称中异构的来源。（笔者目前的理解，其他功能如“动态MIG切片”还有待进一起深入研究学习中）。</p><h2 id="能力与特性">能力与特性</h2><p>​ HAMi 提供了针对包括NVIDIAGPU在内的等异构设备的虚拟化能力，能力主要包括两个方面即设备复用与资源隔离。</p><ul><li>设备复用:<ul><li>允许通过指定显存来申请虚拟算力设备</li><li>允许通过指定算力使用比例来申请虚拟算力设备</li></ul></li><li>资源隔离:<ul><li>算力资源的硬隔离</li></ul></li></ul><p>​ HAMi调度器提供了管理GPU集群的能力，具体包括如下功能特性（不同GPU或加速卡支持的功能特性可能会稍有差别，我只用过少数几种，此处未能完整归纳总结。以前官网提供了功能特性支持矩阵，最近删除了）：</p><ul><li><strong><em>GPU 共享</em></strong>:每个任务可以只占用一部分显卡，多个任务可以共享一张显卡</li><li><strong><em>可限制分配的显存大小</em></strong>:可以用显存值（例如3000M）或者显存比例（例如50%）来分配GPU，vGPU调度器会确保任务使用的显存不会超过分配数值</li><li><strong><em>可限制分配的计算核心数</em></strong>:可以用计算核心比例（例如30%）来分配GPU</li><li><strong><em>虚拟显存</em></strong>:你可以超额使用显存，并将内存当作显存的交换区使用</li><li><strong><em>指定GPU型号</em></strong>：当前任务可以通过设置annotation的方式，来选择使用或者不使用某些具体型号的GPU</li><li><strong><em>无侵入</em></strong>:vGPU调度器兼容nvidia官方插件的显卡分配方式，所以安装完毕后，你不需要修改原有的任务文件就可以使用vGPU的功能。当然，你也可以自定义的资源名称</li></ul><h2 id="构架设计">构架设计</h2><p>​ HAMi项目官网是：https://github.com/Project-HAMi/HAMi/tree/master，目前（2025年1月初）稳定版本是v2.4.1 。</p><p>​ HAMi包含以下几个组件，一个统一的mutatingwebhook，一个统一的调度器，以及针对各种不同的异构算力设备对应的设备插件和容器内的控制组件，整体的架构特性如下图所示。</p><figure><img src="https://s2.loli.net/2024/10/23/tv3nYlgoJLxkRc2.png"alt="hami-arch.png" /><figcaption aria-hidden="true">hami-arch.png</figcaption></figure><h1 id="二部署升级与卸载">二、部署升级与卸载</h1><h2 id="安装要求">安装要求</h2><ul><li>NVIDIA drivers &gt;= 440</li><li>nvidia-docker version &gt; 2.0</li><li>docker/containerd/cri-o，已配置nvidia作为默认runtime</li><li>Kubernetes version &gt;= 1.16</li><li>glibc &gt;= 2.17 &amp; glibc &lt; 2.3.0</li><li>kernel version &gt;= 3.10</li><li>helm &gt; 3.0</li></ul><h2 id="安装">安装</h2><p>​ 以下以安装与使用HAMi2.4.0为例进行说明。</p><h3 id="执行安装">执行安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s版本</span><br>root@controller01:~# kubectl version --short<br>Client Version: v1.23.10<br>Server Version: v1.23.10<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">首先需要将所有要使用到的GPU节点打上gpu=on标签，没有此标签的k8s节点会被HAMi忽略</span> <br>root@controller01:~# kubectl label node &#123;nodename&#125; gpu=on<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在 helm 中添加hami chart仓库</span><br>root@controller01:~# helm repo add hami-charts https://project-hami.github.io/HAMi/<br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用以下命令进行部署#并客制化参数,resourceName是申请vgpu个数的资源名，默认值是<span class="hljs-string">&quot;nvidia.com/gpu&quot;</span>，它跟NVIDIA device pulgin安装后生成的资源名一样，为了区别二者，此处将其客制化为<span class="hljs-string">&quot;nvidia.com/vgpu&quot;</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">参数“--version 2.4.0“是指定此次安装的 HAMi 版本，如果不指定的话，默认安装最新版本2.4.1</span><br>root@controller01:~# helm install hami hami-charts/hami --set resourceName=nvidia.com/vgpu -n kube-system --version 2.4.0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">安装耗时可能要几分钟，安装完成时输出如下</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/R97Z1IEfsA82gop.png"alt="image-20250104180859741" /><figcaption aria-hidden="true">image-20250104180859741</figcaption></figure><p>​ 上述“helm install”命令可以客制化的参数较多，比如：</p><ul><li><p>devicePlugin.deviceSplitCount:</p><p>整数类型，预设值是10。GPU的分割数，每一张GPU都不能分配超过其配置数目的任务。若其配置为N的话，每个GPU上最多可以同时存在N个任务</p></li><li><p>resourceMemPercentage:</p><p>字符串类型，申请vgpu显存比例资源名，默认:"nvidia.com/gpumem-percentage"</p></li><li><p>其他可客制化参数</p><p>可以直接参考官方文档：https://github.com/Project-HAMi/HAMi/blob/v2.4.0/docs/config_cn.md</p></li></ul><h3 id="确认安装情况">确认安装情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.查看已发布版本</span><br>root@controller01:~# helm -n kube-system list<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/ctSBKe8RwQLW2Go.png"alt="image-20250104180953889" /><figcaption aria-hidden="true">image-20250104180953889</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2.查看k8s集群内资源对象，正常情况类似如下</span><br>root@controller01:~# kubectl -n kube-system get all -l app.kubernetes.io/component<br><span class="hljs-meta prompt_">#</span><span class="language-bash">每个被打了标签“gpu=on”的k8s节点上都会有一个名为hami-device-plugin-xxx的pod；</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">同时会有一个名为hami-scheduler-xxx 的pod</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会有hami-device-plugin-monitor、hami-scheduler两个service</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会有一个名为hami-device-plugin的daemonset</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会有一个名为hami-scheduler的deployment</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">会有一个名为hami-scheduler-yyy的replicaset</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/CjbYI6nHcsidKX2.png"alt="image-20250104181215738" /><figcaption aria-hidden="true">image-20250104181215738</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3.查看k8s节点拥有的属性</span><br>root@controller01:~# kubectl describe node controller01 | more<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/PSahwdCeDMj4TOX.png"alt="image-20250104181300572" /><figcaption aria-hidden="true">image-20250104181300572</figcaption></figure><h2 id="升级">升级</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">比如先前安装了HAMi2.4.0版本，现在想升级到HAMi2.4.1版本</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行升级HAMi版本</span><br>root@controller01:~# helm upgrade hami hami-charts/hami  -n kube-system --version 2.4.1<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/MP7qVZ3nfDpQC2s.png"alt="image-20250104181337643" /><figcaption aria-hidden="true">image-20250104181337643</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看升级后的HAMi版本</span><br>root@controller01:~# helm -n kube-system list<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/04/oAMYhT835d4jFqm.png"alt="image-20250104181359099" /><figcaption aria-hidden="true">image-20250104181359099</figcaption></figure><h2 id="卸载">卸载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在任意目录直接执行如下命令即可</span><br>root@controller01:~# helm uninstall hami -n kube-system<br></code></pre></td></tr></table></figure><h1 id="三简单使用">三、简单使用</h1><h2 id="简单用法讲解">简单用法讲解</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@controller01:~# vi gpu-test3.yaml<br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-test3-01<br>spec:<br>  restartPolicy: OnFailure<br>  nodeSelector:<br>    gpu: &quot;on&quot;<br>  containers:<br>    - name: gpu-test<br>      imagePullPolicy: IfNotPresent<br>      #此镜像中封装的是一个基于pytorch2.2.2的图像识别模型训练程序<br>      image: monkjiang/ubuntu2004:pytorch2.2.2-classification-example<br>      command:<br>        - python3<br>        - /opt/classification/train.py<br>      resources:<br>        limits:<br>          nvidia.com/vgpu: 2 # 请求2个vGPUs<br>          #nvidia.com/gpumem: 3000 # 每个vGPU申请的显存大小（只能是整数值，单位是MB）<br>          nvidia.com/gpumem-percentage: 50 # 每个vGPU申请的显存是所在物理GPU的50%（不能跟nvidia.com/gpumem一起用）<br>          nvidia.com/gpucores: 30 # 每个vGPU的利用率上限为物理GPU的30%<br>          #nvidia.com/priority: 0 # 只有两种优先级：0表示高优先级，1表示低优先级，默认是1<br>          #除非与其他高优先级task共享同一个GPU节点，否则高优先级task的resourceCores没有软上限（The utilization of high priority task won&#x27;t be limited to resourceCores unless sharing GPU node with other high priority tasks.）<br>          #如果没有其他task共享同一个物理GPU，低优先级task的resourceCores没有软上限（The utilization of low priority task won&#x27;t be limited to resourceCores if no other tasks sharing its GPU.）<br><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">可以在上述yaml文件的 metadata 中添加annotations，实现对异构资源的自定义使用   annotations:</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">metadata:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"> annotations:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   nvidia.com/nouse-gputype: <span class="hljs-string">&quot;A40&quot;</span> <span class="hljs-comment">#指定GPU型号黑名单</span></span>     <br><span class="hljs-meta prompt_"># </span><span class="language-bash">   nvidia.com/use-gputype: <span class="hljs-string">&quot;A40&quot;</span> <span class="hljs-comment">#指定GPU型号白名单</span></span>     <br><span class="hljs-meta prompt_"># </span><span class="language-bash">   nvidia.com/nouse-gpuuuid: <span class="hljs-string">&quot;GPU-cfca7d85-be74-7c22-4385-6fd15d698cb4&quot;</span> <span class="hljs-comment">#指定GPU uuid使用黑名单</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   nvidia.com/use-gpuuuid: <span class="hljs-string">&quot;GPU-2e240d3e-69be-8cec-3ffc-d9da5cc7b8c3&quot;</span>   <span class="hljs-comment">#指定GPU uuid使用白名单</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   hami.io/node-scheduler-policy: <span class="hljs-string">&quot;spread&quot;</span> <span class="hljs-comment">#预设值为&quot;binpack&quot;, 表示GPU节点调度策略，&quot;binpack&quot;表示尽量将任务分配到同一个GPU节点上，&quot;spread&quot;表示尽量将任务分配到不同GPU节点上</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   hami.io/gpu-scheduler-policy: <span class="hljs-string">&quot;binpack&quot;</span> <span class="hljs-comment">#预设值为&quot;spread&quot;,表示GPU调度策略，&quot;binpack&quot;表示尽量将任务分配到同一个GPU上，&quot;spread&quot;表示尽量将任务分配到不同GPU上</span></span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用上述文件</span><br>root@controller01:~# kubectl apply -f gpu-test3.yaml <br>pod/gpu-test3-01 created<br><br>root@controller01:~# kubectl get pods -o wide<br>NAME                  READY   STATUS    RESTARTS        AGE   IP              NODE           NOMINATED NODE   READINESS GATES<br>gpu-test3-01          1/1     Running   0               11s   10.233.81.115   controller01   &lt;none&gt;           &lt;none&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到pod/gpu-test3-01的宿主机是controller01，上面有一个GPU进程</span><br>root@controller01:~# nvidia-smi <br>Wed Oct 23 15:35:58 2024       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA XXX                     Off |   00000000:41:00.0 Off |                    0 |<br>|  0%   45C    P0            111W /  300W |     682MiB /  46068MiB |     16%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>|   1  NVIDIA XXX                     Off |   00000000:C1:00.0 Off |                    0 |<br>|  0%   35C    P8             29W /  300W |       3MiB /  46068MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>|    0   N/A  N/A     28054      C   python3                                       674MiB |<br>+-----------------------------------------------------------------------------------------+<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">进入pod的容器内部查看，可以看到有两个vGPU，它们的显存都只有23034MiB。虽然申请了两个vGPU，但其实只有0号vGPU被使用了，它的GPU使用率是15%，临时功率是113W</span><br>root@controller01:/opt/installPkgs/k8s-vgpu-basedon-HAMi# kubectl exec -it gpu-test3-01 -- bash<br>root@gpu-test3-01:/opt/classification# nvidia-smi <br>[HAMI-core Msg(281:140275770877760:libvgpu.c:836)]: Initializing.....<br>Wed Oct 23 07:36:22 2024       <br>+-----------------------------------------------------------------------------------------+<br>| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |<br>|-----------------------------------------+------------------------+----------------------+<br>| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |<br>| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |<br>|                                         |                        |               MIG M. |<br>|=========================================+========================+======================|<br>|   0  NVIDIA XXX                     Off |   00000000:41:00.0 Off |                    0 |<br>|  0%   49C    P0            113W /  300W |     612MiB /  23034MiB |     15%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>|   1  NVIDIA XXX                     Off |   00000000:C1:00.0 Off |                    0 |<br>|  0%   35C    P8             29W /  300W |       0MiB /  23034MiB |      0%      Default |<br>|                                         |                        |                  N/A |<br>+-----------------------------------------+------------------------+----------------------+<br>                                                                                         <br>+-----------------------------------------------------------------------------------------+<br>| Processes:                                                                              |<br>|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |<br>|        ID   ID                                                               Usage      |<br>|=========================================================================================|<br>+-----------------------------------------------------------------------------------------+<br>[HAMI-core Msg(281:140275770877760:multiprocess_memory_limit.c:468)]: Calling exit handler 281<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看pod日志</span><br>root@controller01:~# kubectl logs gpu-test3-01 | more<br>[HAMI-core Msg(1:140168594040448:libvgpu.c:836)]: Initializing.....<br>2024-10-23 07:35:46.333 | INFO     | __main__:&lt;module&gt;:97 - Namespace(batch_size=32, epochs=10, lr=0.01, save_dir=&#x27;./output&#x27;, train_data_dir=&#x27;./data/cifar10/train&#x27;, val_data<br>_dir=&#x27;./data/cifar10/val&#x27;, weights=None)<br>[HAMI-core Warn(1:140168594040448:utils.c:183)]: get default cuda from (null)<br>[HAMI-core Msg(1:140168594040448:libvgpu.c:855)]: Initialized<br>2024-10-23 07:35:46.643 | INFO     | __main__:main:21 - Using device: cuda<br>2024-10-23 07:35:47.103 | INFO     | __main__:main:50 - Epoch: 1/10<br>2024-10-23 07:35:47.104 | INFO     | __main__:main:52 - Training<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47283240960 total=47608692736 limit=24152899584 usage=310526720<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47216132096 total=47608692736 limit=24152899584 usage=331498240<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47195160576 total=47608692736 limit=24152899584 usage=352469760<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47060942848 total=47608692736 limit=24152899584 usage=486687488<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=46924627968 total=47608692736 limit=24152899584 usage=623002368<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47056748544 total=47608692736 limit=24152899584 usage=488784640<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47054651392 total=47608692736 limit=24152899584 usage=490881792<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=46916239360 total=47608692736 limit=24152899584 usage=629293824<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47031582720 total=47608692736 limit=24152899584 usage=513950464<br>[HAMI-core Msg(1:140168594040448:memory.c:511)]: orig free=47029485568 total=47608692736 limit=24152899584 usage=516047616<br>2024-10-23 07:35:47.801 | INFO     | __main__:main:60 - Step: 1 Loss: 2.342037<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46995931136 total=47608692736 limit=24152899584 usage=543723008<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46998028288 total=47608692736 limit=24152899584 usage=541625856<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46995931136 total=47608692736 limit=24152899584 usage=541625856<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46863810560 total=47608692736 limit=24152899584 usage=673746432<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46995931136 total=47608692736 limit=24152899584 usage=541625856<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46998028288 total=47608692736 limit=24152899584 usage=539528704<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46998028288 total=47608692736 limit=24152899584 usage=539528704<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47012708352 total=47608692736 limit=24152899584 usage=524848640<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47012708352 total=47608692736 limit=24152899584 usage=524848640<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=46880587776 total=47608692736 limit=24152899584 usage=656969216<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47014805504 total=47608692736 limit=24152899584 usage=522751488<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47033679872 total=47608692736 limit=24152899584 usage=501779968<br>[HAMI-core Msg(1:140164068443904:memory.c:511)]: orig free=47033679872 total=47608692736 limit=24152899584 usage=501779968<br>2024-10-23 07:35:48.273 | INFO     | __main__:main:60 - Step: 2 Loss: 2.255279<br>2024-10-23 07:35:48.308 | INFO     | __main__:main:60 - Step: 3 Loss: 2.317460<br>2024-10-23 07:35:48.329 | INFO     | __main__:main:60 - Step: 4 Loss: 2.280499<br>...<br></code></pre></td></tr></table></figure><h2 id="更多官方示例">更多官方示例</h2><p>​ 参考：https://github.com/Project-HAMi/HAMi/tree/v2.4.0/examples</p><h1 id="四问题或faq">四、问题或faq</h1><p>参考官网issues：https://github.com/Project-HAMi/HAMi/issues</p><h1 id="五资源监控">五、资源监控</h1><p>可以参考笔者归纳总结的这篇文章：https://jiangsanyin.github.io/2024/10/07/GPU%E8%99%9A%E6%8B%9F%E5%8C%96%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AEHAMi%E4%B8%AD%E4%BD%BF%E7%94%A8prometheus%E4%B8%8Egrafana%E5%81%9A%E7%9B%91%E6%8E%A7/，建议直接看官方文档。此监控相关文档由笔者自己编写，已经提交给HAMi官方项目仓库、当前被HAMi官方项目仓库接受并合入主线分支中。</p><h1 id="六更新与参考">六、更新与参考</h1><p>后续如有修正或完善，将继续更新。可能后续会发表HAMi系列学习记录。</p><h1 id="七参考资源">七、参考资源</h1><ul><li>HAMi代码仓库：https://github.com/Project-HAMi/HAMi</li><li>项目官网：https://project-hami.io/</li><li>官方公众号：“HAMi Project”</li><li>KubeSphere B站官方账号发表的一个以HAMi为主题的推讲视频，在2024-12-31下午发布</li></ul>]]></content>
    
    
    <categories>
      
      <category>算力虚拟化中间件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HAMi GPU 加速卡 虚拟化 异构算力虚拟化中间件 kubernetes k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在PC上下载应用安卓版安装包</title>
    <link href="/2024/10/21/%E5%9C%A8PC%E4%B8%8A%E4%B8%8B%E8%BD%BD%E5%BA%94%E7%94%A8%E5%AE%89%E5%8D%93%E7%89%88%E5%AE%89%E8%A3%85%E5%8C%85/"/>
    <url>/2024/10/21/%E5%9C%A8PC%E4%B8%8A%E4%B8%8B%E8%BD%BD%E5%BA%94%E7%94%A8%E5%AE%89%E5%8D%93%E7%89%88%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h1id="方法一使用网站cn.aptoide.com">方法一、使用网站cn.aptoide.com</h1><p>访问https://cn.aptoide.com/，输入自己想要安装的安卓应用名称进行搜索，然后下载</p><h1 id="方法二使用网站apk.support">方法二、使用网站apk.support</h1><p>1、当尝试去谷歌应用商店（网址：https://play.google.com/store/apps）下载某软件的android版本就会提示如下信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">比如<span class="hljs-string">&quot;Google Chrome 浏览器&quot;</span>在谷歌应用商店的下载页面是如下</span><br>https://play.google.com/store/apps/details?id=com.android.chrome<br><span class="hljs-meta prompt_">#</span><span class="language-bash">但当尝试下载安装时，就会提示如下信息</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/22/IwLMgGJoq15clOX.png"alt="image-20241022154431990" /><figcaption aria-hidden="true">image-20241022154431990</figcaption></figure><p>2、打开如下网页，将上述url复制到如下输入框中，回车解析</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta">#PC google浏览器中打开如下网站</span><br><span class="hljs-symbol">https:</span>//apk.support/apk-downloader?screen=welcome&amp;utm_source=chrome-extension<span class="hljs-meta">#google_vignette</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/10/22/wIG5sYDPpWb4KZu.png"alt="image-20241022154811789" /><figcaption aria-hidden="true">image-20241022154811789</figcaption></figure><p>3、单击上图中的“google-chrome.apk”即可下载软件的apk安装包，此安装包即可在android手机上安装。</p><p>4、但也遇到过有时下载的apk无法成功在android手机上安装成功，可尝试去找其他版本的apk安装包，具体方法暂时未知：</p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PC 下载andorid安装包</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPU虚拟化开源项目HAMi中使用prometheus与grafana做监控</title>
    <link href="/2024/10/07/GPU%E8%99%9A%E6%8B%9F%E5%8C%96%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AEHAMi%E4%B8%AD%E4%BD%BF%E7%94%A8prometheus%E4%B8%8Egrafana%E5%81%9A%E7%9B%91%E6%8E%A7/"/>
    <url>/2024/10/07/GPU%E8%99%9A%E6%8B%9F%E5%8C%96%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AEHAMi%E4%B8%AD%E4%BD%BF%E7%94%A8prometheus%E4%B8%8Egrafana%E5%81%9A%E7%9B%91%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="背景与说明">背景与说明</h1><p>​HAMi，是一个国产的GPU与国产加速卡（支持的GPU与国产加速卡型号与具体特性请查看此项目官网：https://github.com/Project-HAMi/HAMi/）虚拟化开源项目，实现以kubernetes为基础的容器场景下GPU或加速卡虚拟化。HAMi原名“k8s-vGPU-scheduler”，最初由第四范式公司开源，现已在国内与国际上愈加流行，是管理Kubernetes中异构设备的中间件。它可以管理不同类型的异构设备（如GPU、NPU等），在Pod之间共享异构设备，根据设备的拓扑信息和调度策略做出更好的调度决策。</p><p>​为了阐述的简明性，本文只提供一种可行的办法，最终实现使用prometheus抓取监控指标并作为数据源、使用grafana来展示监控信息的目的。</p><p>​本文假定已经部署好Kubernetes集群、HAMi。以下涉及到的相关组件都是在kubernetes集群内安装的，相关组件或软件版本信息如下：</p><table><thead><tr><th>组件或软件名称</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>kubernetes集群</td><td>v1.23.10</td><td>AMD64构架服务器环境下</td></tr><tr><td>HAMi</td><td>根据向开源作者提问，当前HAMi版本发行机制还不够成熟，暂以安装HAMi的scheduler.kubeScheduler.imageTag参数值为其版本，此值要跟kubernetes版本看齐</td><td>项目地址：https://github.com/Project-HAMi/HAMi/</td></tr><tr><td>kube-prometheus stack</td><td>分支 release-0.11</td><td></td></tr><tr><td>dcgm-exporter</td><td>tag 3.2.5-3.1.7</td><td></td></tr></tbody></table><h1 id="部署与配置kube-prometheus-stack">部署与配置kube-prometheusstack</h1><h2 id="部署kube-prometheus-stack">部署kube-prometheus stack</h2><p><strong>注：</strong>kubernetes与kube-prometheusstack的版本兼容矩阵请查看https://github.com/prometheus-operator/kube-prometheus?tab=readme-ov-file#compatibility，请根据自己的kubernetes版本选择合适版本的kube-prometheus stack</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载kube-prometheus代码仓库（此处使用分支 release-0.11）</span><br>git clone -b release-0.11 https://github.com/prometheus-operator/kube-prometheus.git<br>cd kube-prometheus<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改下grafana的service类型为NodePort。即在spec下添加<span class="hljs-built_in">type</span>配置项</span><br>vi manifests/grafana-service.yaml<br>...<br>spec:<br>  type: NodePort<br>...<br><span class="hljs-meta prompt_">#</span><span class="language-bash">类似的方法修改prometheus与alertmanager service类型为NodePort，它们的配置文件分别是manifests目录下的prometheus-service.yaml与alertmanager-service.yaml</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行部署</span><br>kubectl create -f manifests/setup/<br>kubectl create -f manifests/.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建的所有资源对象都在monitorin命名空间下，使用如下命令查看资源对象的运行状态</span><br>kubectl -n monitoring get all<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">等monitorin命名空间下所有资源对象处于正常运行状态后，使用如下方式获取grafana、prometheus与alertmanager的svc信息</span><br>root@controller01:~/kube-prometheus# kubectl -n monitoring get svc | egrep &quot;NAME|grafana|prometheus-k8s|alertmanager-main&quot;<br>NAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)                         AGE<br>alertmanager-main       NodePort    10.233.5.65     &lt;none&gt;        9093:30093/TCP,8080:30401/TCP   19h<br>grafana                 NodePort    10.233.56.112   &lt;none&gt;        3000:30300/TCP                  19h<br>prometheus-k8s          NodePort    10.233.38.113   &lt;none&gt;        9090:30090/TCP,8080:31273/TCP   19h<br></code></pre></td></tr></table></figure><p>​此时，假如控制节点的ip是10.0.0.21，则可以分别使用如下url访问grafana、prometheus与alertmanager：http://10.0.0.21:30300、http://10.0.0.21:30090 、http://10.0.0.21:30093，其中访问grafana的默认用户名与密码都是admin</p><p>​ 笔者后来在部署好上述 kube-prometheus stack后，发现自己笔记本电脑访问prometheus的nodeport-service+port时提示连接超时，但在k8s集群内部访问控制节点+service/prometheus-k8s加port、service/prometheus-k8s的cluster-ip加port、pod/prometheus-k8s-xxx加3000端口都没有问题。此时可以检查下networkpolicies，如果你知道修改networkpolicies规则请直接修改，否则可以直接删除相关networkpolicies，之后在自己笔记本电脑上访问grafana、prometheus与alertmanager相关界面就正常了。</p><figure><img src="https://s2.loli.net/2025/01/10/MQaK3mRcvFzUxfC.png"alt="image-20250110161557368" /><figcaption aria-hidden="true">image-20250110161557368</figcaption></figure><h2 id="配置grafana">配置grafana</h2><h3 id="创建数据源all">创建数据源ALL</h3><p>​ 访问”Configuration“-&gt;“Datasoutces”页面，创建一个名为"ALL"的数据源，其中HTTP.URL的值保持跟默认创建的数据源“prometheus”中的一样即可为“http://prometheus-k8s.monitoring.svc:9090”，然后保存上述数据源“ALL”</p><h3 id="导入hami默认的dashboard">导入HAMi默认的dashboard</h3><p>​ 访问“Dashboards”-&gt;“Browse”页面，导入此dashboard：https://grafana.com/grafana/dashboards/22043-hami-vgpu-metrics-dashboard/，grafana中将创建一个名为“hami-vgpu-metrics-dashboard”的dashboard，此时此页面中有一些Panel如vGPUCorePercentage还没有数据，请继续看完此文档，执行完"部署dcgm-exporter"与“创建ServiceMonitor”中的步骤之后Panel数据将正常显示。</p><h1 id="部署dcgm-exporter">部署dcgm-exporter</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">下载dcgm-exporter代码仓库（未看到与kubernetes的兼容矩阵说明，此处使用tag 3.2.5-3.1.7）</span><br>git clone -b 3.2.5-3.1.7 https://github.com/NVIDIA/dcgm-exporter.git<br>cd dcgm-exporter<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改 deployment/values.yaml 文件，为其中的serviceMonitor添加relabelings配置，这样dcgm-exporter的监控指标才有node_name与ip属性</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">只有这一处serviceMonitor，relabelings内的内容都是添加的，添加后内容如下</span><br>root@controller01:~/dcgm-exporter# vi deployment/values.yaml<br>...<br>serviceMonitor:<br>  enabled: true<br>  interval: 15s<br>  honorLabels: false<br>  additionalLabels: &#123;&#125;<br>    #monitoring: prometheus<br>  relabelings:<br>  - sourceLabels: [__meta_kubernetes_endpoints_name]<br>    regex: dcgm-exporter<br>    replacement: $1<br>    action: keep<br>  - sourceLabels: [__meta_kubernetes_pod_node_name]<br>    regex: (.*)<br>    targetLabel: node_name<br>    replacement: $&#123;1&#125;<br>    action: replace<br>  - sourceLabels: [__meta_kubernetes_pod_host_ip]<br>    regex: (.*)<br>    targetLabel: ip<br>    replacement: $1<br>    action: replace<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">使用helm工具在monitoring空间下安装dcgm-exporter</span><br>root@controller01:~/dcgm-exporter# helm install dcgm-exporter deployment/ -n monitoring<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看helm install结果</span><br>root@controller01:~/dcgm-exporter# helm list -n monitoring<br>NAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION<br>dcgm-exporter   monitoring      1               2024-10-02 16:32:35.691073696 +0800 CST deployed        dcgm-exporter-3.1.7     3.1.7<br><span class="hljs-meta prompt_">#</span><span class="language-bash">还需确认dcgm-exporter 相关的pod已经处于running状态</span><br>root@controller01:~/dcgm-exporter# kubectl -n monitoring get pods | egrep &quot;NAME|dcgm-exporter&quot;<br>NAME                                  READY   STATUS             RESTARTS         AGE<br>dcgm-exporter-p4fdp                   1/1     Running            0                4h14m<br></code></pre></td></tr></table></figure><h1 id="创建servicemonitor">创建ServiceMonitor</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建文件hami-device-plugin-svc-monitor.yaml</span><br>root@controller01:~# touch hami-device-plugin-svc-monitor.yaml<br><span class="hljs-meta prompt_">#</span><span class="language-bash">文件hami-device-plugin-svc-monitor.yaml内容如下</span><br>root@controller01:~# cat hami-device-plugin-svc-monitor.yaml<br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  name: hami-device-plugin-svc-monitor<br>  namespace: kube-system<br>spec:<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-device-plugin<br>  namespaceSelector:<br>    matchNames:<br>      - &quot;kube-system&quot;<br>  endpoints:<br>  - path: /metrics<br>    port: monitorport<br>    interval: &quot;15s&quot;<br>    honorLabels: false<br>    relabelings:<br>    - sourceLabels: [__meta_kubernetes_endpoints_name]<br>      regex: hami-.*<br>      replacement: $1<br>      action: keep<br>    - sourceLabels: [__meta_kubernetes_pod_node_name]<br>      regex: (.*)<br>      targetLabel: node_name<br>      replacement: $&#123;1&#125;<br>      action: replace<br>    - sourceLabels: [__meta_kubernetes_pod_host_ip]<br>      regex: (.*)<br>      targetLabel: ip<br>      replacement: $1<br>      action: replace<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>root@controller01:~# kubectl apply -f hami-device-plugin-svc-monitor.yaml<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建文件hami-scheduler-svc-monitor.yaml</span><br>root@controller01:~# touch hami-scheduler-svc-monitor.yaml<br><span class="hljs-meta prompt_">#</span><span class="language-bash">文件hami-scheduler-svc-monitor.yaml内容如下</span><br>root@controller01:~# cat hami-scheduler-svc-monitor.yaml<br>apiVersion: monitoring.coreos.com/v1<br>kind: ServiceMonitor<br>metadata:<br>  name: hami-scheduler-svc-monitor<br>  namespace: kube-system<br>spec:<br>  selector:<br>    matchLabels:<br>      app.kubernetes.io/component: hami-scheduler<br>  namespaceSelector:<br>    matchNames:<br>      - &quot;kube-system&quot;<br>  endpoints:<br>  - path: /metrics<br>    port: monitor<br>    interval: &quot;15s&quot;<br>    honorLabels: false<br>    relabelings:<br>    - sourceLabels: [__meta_kubernetes_endpoints_name]<br>      regex: hami-.*<br>      replacement: $1<br>      action: keep<br>    - sourceLabels: [__meta_kubernetes_pod_node_name]<br>      regex: (.*)<br>      targetLabel: node_name<br>      replacement: $&#123;1&#125;<br>      action: replace<br>    - sourceLabels: [__meta_kubernetes_pod_host_ip]<br>      regex: (.*)<br>      targetLabel: ip<br>      replacement: $1<br>      action: replace<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>root@controller01:~# kubectl apply -f hami-scheduler-svc-monitor.yaml<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">确认创建的ServiceMonitor</span><br>root@controller01:~# kubectl -n kube-system get servicemonitor<br>NAME                             AGE<br>hami-device-plugin-svc-monitor   28h<br>hami-scheduler-svc-monitor       28h<br></code></pre></td></tr></table></figure><h1 id="确认最终监控效果">确认最终监控效果</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建文件gpu-pod.yaml，尝试使用HAMi虚拟出来的NVIDIA vGPU</span><br>root@controller01:~# touch gpu-pod.yaml<br>root@controller01:~# cat gpu-pod.yaml<br>apiVersion: v1<br>kind: Pod<br>metadata:<br>  name: gpu-pod-01<br>spec:<br>  restartPolicy: Never<br>  containers:<br>  - name: cuda-container<br>    image: nvcr.io/nvidia/k8s/cuda-sample:vectoradd-cuda10.2<br>    resources:<br>      limits:<br>        nvidia.com/vgpu: 2 # 请求2个vGPUs<br>        nvidia.com/gpumem: 3000 # 每个vGPU申请3000m显存 （可选，整数类型）<br>        nvidia.com/gpucores: 10 # 每个vGPU的算力为10%实际显卡的算力 （可选，整数类型）<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>root@controller01:~# kubectl apply -f gpu-pod.yaml<br>root@controller01:~# kubectl get pods -o wide<br>NAME           READY   STATUS        RESTARTS   AGE   IP               NODE           NOMINATED NODE   READINESS GATES<br>gpu-pod-01     0/1     Completed     0          52s   10.233.81.70     controller01   &lt;none&gt;           &lt;none&gt;<br></code></pre></td></tr></table></figure><p>​ 此时，应该可以dashboard中看到监控详情。</p><p>​ 导入dashboard时少许panel如“GPUTotal”的内容可能未被正确解析，将造成其内容不能正常显示，此时请将dashboard文件下载下来，手动编辑对应内容，将数据源“Datasource”修改为"ALL"，同时将“Metricsbrowser”修改正确的promQL语句（可以从下载下来的dashboard中查找），其他默认即可。<strong>如果不会修改，这里也提供一份在grafana8.5.5中可用的dashboard，阿里云盘分享链接https://www.alipan.com/s/1X8fTqisx6y提取码: r48s</strong></p><p>​ 正常时，内容大概如下</p><figure><img src="https://s2.loli.net/2024/10/03/RFJuthzAGYw5UHk.png"alt="image-20241003215400685" /><figcaption aria-hidden="true">image-20241003215400685</figcaption></figure>]]></content>
    
    
    
    <tags>
      
      <tag>HAMi prometheus grafana 监控</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>k8s离线部署-使用kubekey部署amd64高可用版k8s1.23.17-ksp3.4.1</title>
    <link href="/2024/09/27/k8s%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubekey%E9%83%A8%E7%BD%B2amd64%E9%AB%98%E5%8F%AF%E7%94%A8%E7%89%88k8s1-23-17-ksp3-4-1/"/>
    <url>/2024/09/27/k8s%E7%A6%BB%E7%BA%BF%E9%83%A8%E7%BD%B2-%E4%BD%BF%E7%94%A8kubekey%E9%83%A8%E7%BD%B2amd64%E9%AB%98%E5%8F%AF%E7%94%A8%E7%89%88k8s1-23-17-ksp3-4-1/</url>
    
    <content type="html"><![CDATA[<h1 id="一环境信息介绍">一、环境信息介绍</h1><p>（1） 相关服务器信息：</p><table><thead><tr><th><strong>主机名</strong></th><th><strong>IP</strong></th><th><strong>root密码</strong></th><th><strong>规格</strong></th><th><strong>磁盘</strong></th><th><strong>操作系统</strong></th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>prepare</td><td>10.13.15.6</td><td>cloud@2020</td><td>8c16g</td><td>400G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>联网，生成artifact等</td></tr><tr><td>k8s01-1</td><td>10.13.15.16</td><td>cloud@2020</td><td>8c16g</td><td>400G+960G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>K8s节点，未联网</td></tr><tr><td>k8s01-2</td><td>10.13.15.17</td><td>cloud@2020</td><td>8c16g</td><td>400G+960G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>K8s节点，未联网</td></tr><tr><td>k8s01-3</td><td>10.13.15.161</td><td>cloud@2020</td><td>8c16g</td><td>400G+960G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>K8s节点，未联网</td></tr><tr><td>k8s01-4</td><td>10.13.15.99</td><td>cloud@2020</td><td>8c16g</td><td>400G+960G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>K8s节点，未联网</td></tr><tr><td>registry</td><td>10.13.15.71</td><td>cloud@2020</td><td>4c8g</td><td>400G</td><td>Ubuntu 20.04.3 LTS -amd64</td><td>Harbor仓库，未联网</td></tr></tbody></table><p>根据官方文档建议：仓库与集群分离部署，减少相互影响，所以多了一个registry 服务器。</p><p>服务器IP本来想规划成连续着的，后来因为不是一次创建的且此文件不是一次性完成，遂没有关注了。</p><p>如果是自己搭建着学习或实验，服务器规格减半也是可以的。</p><p>（2） 环境涉及软件版本信息：</p><ul><li>操作系统：<strong>Ubuntu 20.04.3 LTS -amd64</strong></li><li>KubeSphere：<strong>v3.4.1</strong></li><li>K8s：<strong>v1.23.17</strong></li><li>Docker：<strong>24.0.6</strong></li><li>KubeKey: <strong>v3.0.13</strong></li><li>Harbor：<strong>2.5.3</strong></li></ul><h1 id="二离线安装介绍">二、离线安装介绍</h1><p>KubeKey 是一个用于部署 Kubernetes集群的开源轻量级工具。它提供了一种灵活、快速、便捷的方式来仅安装Kubernetes/K3s，或同时安装 Kubernetes/K3s 和KubeSphere，以及其他云原生插件。除此之外，它也是扩展和升级集群的有效工具。</p><p>KubeKey v2.1.0版本新增了清单（manifest）和制品（artifact）的概念，为用户离线部署Kubernetes 集群提供了一种解决方案。manifest 是一个描述当前 Kubernetes集群信息和定义 artifact 制品中需要包含哪些内容的文本文件。</p><p>使用 KubeKey，用户只需使用清单 manifest文件来定义将要离线部署的集群环境需要的内容，再通过该 manifest 来导出制品artifact 文件即可完成准备工作。离线部署时只需要 KubeKey 和 artifact就可快速、简单的在环境中部署镜像仓库和 Kubernetes 集群。</p><p>根据 <ahref="https://www.kubesphere.io/zh/docs/v3.4/installing-on-linux/introduction/air-gapped-installation/">青云官网的离线部署文档</a>，使用生成manifest 文件有两种方式：</p><ul><li>参考官方文档，在示例的基础稍作修改（文档中有修改说明）生成满足自己需求的manifest 文件。</li><li>在已有集群中执行 KubeKey 命令生成 manifest文件，如有需要可再参考官网文档进行修改定制（不修改的话，可想而知生成的制品及最后搭建的环境相关软件版本及镜像跟当前集群一样）。</li></ul><p>本文中使用第1种方式生成 manifest文件以及创建后续需要使用到的制品（artifact）。</p><p><strong>整个离线部署K8S+KSP的过程的主线就是制作制品、使用制品，其他操作基本上都是围绕它展开的。</strong></p><h1 id="三服务器的前置操作">三、服务器的前置操作</h1><p>建议所有服务器都要执行。</p><h2 id="设置各服务器时区">3.1 设置各服务器时区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">所有服务器设置时区</span><br>timedatectl set-timezone Asia/Shanghai<br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有未联网服务器关闭网络时间同步</span><br>timedatectl set-ntp false<br><span class="hljs-meta prompt_">#</span><span class="language-bash">所有服务器设置北京时间，尽量相同或靠近</span><br>timedatectl set-time &quot;11:08:30&quot;<br></code></pre></td></tr></table></figure><h2 id="设置各服务器主机名">3.2 设置各服务器主机名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hostnamectl set-hostname xxx<br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后退出终端并重新创建一个终端会话</span><br></code></pre></td></tr></table></figure><h2 id="安装配置时间同步服务">3.4 安装配置时间同步服务</h2><p>强烈建议提前做好如下准备（否则，安装配置时间同步服务无法采用如下方法完成）：</p><ul><li>搭建操作系统组件安装源仓库</li><li>部署了自己的本地NTP服务器</li></ul><p>一般在搭建软件解决方案前就做好所有服务器的时间同步。如果没有搭建操作系统组件安装源仓库，后面使用kk正式部署k8s+ksp时，也会在所有节点上部署chrony服务，但不会部署本地NTP服务器。所以还是需要自己提前部署本地 NTP服务器，自己想办法</p><h3 id="安装时间同步服务">安装时间同步服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.安装 chrony 作为时间同步软件</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">正常情况下内网环境下搭建软件解决方案，应该会先自行搭建操作系统组件安装源仓库；</span><br>apt-get install chrony -qy<br></code></pre></td></tr></table></figure><h3 id="配置时间同步服务">配置时间同步服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2.修改配置文件 /etc/chrony/chrony.conf，修改 ntp 服务配置</span><br>vi /etc/chrony/chrony.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将如下认的 pool 配置删除（离线环境中也用不上）</span><br>pool ntp.ubuntu.com        iburst maxsources 4<br>pool 0.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 1.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 2.ubuntu.pool.ntp.org iburst maxsources 2<br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后配置自己本地的NTP服务器（最好是一台可以访问外网的服务器），NTP服务器步骤此文未涉及</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">假如10.13.15.20是本地NTP服务器，则添加如下配置</span><br>server 10.13.15.20 iburst<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3.重启 chrony 服务：</span><br>systemctl restart chrony<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.验证 chrony 同步状态：</span><br>chronyc sourcestats -v<br></code></pre></td></tr></table></figure><h2 id="数据盘配置可选">3.5 数据盘配置（可选）</h2><p>此次用来搭建k8s环境的三个服务器都配置了一个400G大小的系统盘、一个960G的数据盘。</p><figure><img src="https://s2.loli.net/2024/09/27/O2KsM3ZyeQWf5wB.png"alt="image-20240927113654261" /><figcaption aria-hidden="true">image-20240927113654261</figcaption></figure><p>本文演示每台服务器新增一块数据盘<strong>/dev/vdb</strong>（就是说下面的操作要在每个ks8节点服务器上执行）</p><h3 id="方法1-裸盘">3.5.1 方法1-裸盘</h3><p>将数据盘格式化后挂载到服务器指定目录上（明显，此种方式不支再次扩容），作为<strong>docker</strong> 和 <strong>Kubernetes Pod</strong>的专用存储盘（此处应该指明的是笔者得接触到的环境中，业务数据存储一般是对接ceph等独立的分布式存储系统，所以只有日志文件会存储在本地）。</p><p>下面是在k8s01-1服务器上操作为例进行阐述，其他节点也需要进行此操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">mklabel 定义分区表格式（常用的有msdos和gpt分区表格式，msdos不支持2TB以上容量的磁盘，所以大于2TB的磁盘选gpt分区表格式）</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">mkpart 创建一个分区，名称为data_k8s，此处不支持声明ext4分区格式（所以下行需要用mkfs.ext4），1表示分区起始位置是距离磁盘起始点1 MB，-1表示分区结束位置是磁盘结束位置</span><br>root@k8s01-1:~# parted /dev/vdb -s -- mklabel gpt mkpart data_k8s 1 -1<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将分区格式化为ext4格式</span><br>root@k8s01-1:~# mkfs.ext4 /dev/vdb1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">手动挂载磁盘分区</span><br>root@k8s01-1:/# mkdir /data/<br>root@k8s01-1:/# mount /dev/vdb1 /data/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置开机自动挂载方法1</span><br>root@k8s01-1:/# tail -1 /etc/mtab<br>root@k8s01-1:/# tail -1 /etc/mtab &gt;&gt; /etc/fstab<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看某分区的uuid： blkid /dev/vdb1</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置开机自动挂载的第2种方法：可以手动编辑/etc/fstab，添加如下内容</span><br>root@k8s01-1:/# vi /etc/fstab<br>/dev/vdb1 /data ext4 rw,relatime 0 0<br></code></pre></td></tr></table></figure><h3 id="方法2-lvm">3.5.2 方法2-LVM</h3><p>以LVM（逻辑卷管理）的方式扩容挂载到服务器指定目录上，作为<strong>docker</strong> 和 <strong>Kubernetes Pod</strong>的专用存储盘（此处应该指明的是笔者得接触到的环境中，业务数据存储一般是对接ceph等独立的分布式存储系统，所以只有日志文件会存储在本地）。</p><p>下面是在k8s01-1服务器上操作为例进行阐述，其他节点也需要进行此操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 PV 物理卷</span><br>root@k8s01-1:~# pvcreate /dev/vdb<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 VG 卷组vgk8s，将物理卷 /dev/vdb 添加到此卷组中。卷组是一种逻辑存储单元，它可以由一个或多个物理卷组成。</span><br>root@k8s01-1:~# vgcreate vgk8s /dev/vdb<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有的卷组</span><br>root@k8s01-1:~# vgdisplay<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 LV 逻辑卷(使用卷组vgk8s的100%所有空间，vgk8s 是VG 名字，lvk8s 是LV 名字)，此处一个逻辑卷对应一个卷组（理论上来说，一个卷组可以被划分为一个或多个逻辑卷）</span><br>root@k8s01-1:~# lvcreate -l 100%VG vgk8s -n lvk8s<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看逻辑卷的挂载目录</span><br>root@k8s01-1:~# lvdisplay<br>...<br>  LV Path                /dev/vgk8s/lvk8s<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看并格式化逻辑卷</span><br>root@k8s01-1:~# ll /dev/vgk8s/lvk8s<br>root@k8s01-1:~# mkfs.ext4 /dev/vgk8s/lvk8s<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">使用LVM的好处就是后续可以根据需要再向此逻辑卷中增加空间，比如现有需要再增加空间且有一个新的磁盘/dev/vdc</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">但此情况一般不会出现，正如前面所述，业务数据存储一般是对接ceph等独立的分布式存储系统，所以只有日志文件会存储在本地，一般不会需要如此大空间、存储这么久的日志信息（至少笔者未遇到）</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">首先创建物理卷</span><br>root@k8s01-1:~# pvcreate /dev/vdc<br>root@k8s01-1:~# vgextend vgk8s /dev/vdc<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将逻辑卷 /dev/vgk8s/lvk8s 所在卷组（即vgk8s）中所有(100%)剩余可用容量(FREE)扩容给逻辑卷/dev/vgk8s/lvk8s</span><br>root@k8s01-1:~# lvextend -l +100%FREE /dev/vgk8s/lvk8s<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看逻辑卷</span><br>root@k8s01-1:~# lvscan<br>  ACTIVE            &#x27;/dev/vgk8s/lvk8s&#x27; [1.87 TiB] inherit<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或者，使用 lvdisplay 可以看到其更详细的信息</span><br>root@k8s01-1:~# lvdisplay<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">手动挂载逻辑卷</span><br>root@k8s01-1:/# mkdir /data/<br>root@k8s01-1:/# mount /dev/vgk8s/lvk8s /data/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置开机自动挂载方法1</span><br>root@k8s01-1:/# tail -1 /etc/mtab<br>root@k8s01-1:/# tail -1 /etc/mtab &gt;&gt; /etc/fstab<br><span class="hljs-meta prompt_">#</span><span class="language-bash">配置开机自动挂载的第2种方法：可以手动编辑/etc/fstab，添加如下内容</span><br>root@k8s01-1:/# vi /etc/fstab<br>/dev/vgk8s/lvk8s /data ext4 rw,relatime 0 0<br></code></pre></td></tr></table></figure><h1 id="四离线部署资源文件制作">四、离线部署资源文件制作</h1><p>制作离线部署资源文件需要有一个能连接外网的服务器（本文中是prepare），本文中是服务器<strong>prepare</strong> 。</p><p>在该服务器上下载 KubeKey v3.0.13 文件。</p><h2 id="准备-kubekey-文件">4.1 准备 KubeKey 文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@prepare:~# mkdir /opt/prepare<br>root@prepare:~# cd /opt/prepare<br><span class="hljs-meta prompt_"># </span><span class="language-bash">选择中文区下载(访问 GitHub 受限时使用)</span><br>root@prepare:/opt/prepare# export KKZONE=cn<br><span class="hljs-meta prompt_"># </span><span class="language-bash">执行下载命令，获取指定版本的 kk（受限于网络，有时需要执行多次）</span><br>root@prepare:/opt/prepare# curl -sfL https://get-kk.kubesphere.io | VERSION=v3.0.13 sh -<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@prepare:/opt/prepare# chown root:root kk<br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看kubekey3.0.13版本</span><br>root@prepare:/opt/prepare# ./kk version<br>kk version: &amp;version.Info&#123;Major:&quot;3&quot;, Minor:&quot;0&quot;, GitVersion:&quot;v3.0.13&quot;, GitCommit:&quot;ac75d3ef3c22e6a9d999dcea201234d6651b3e72&quot;, GitTreeState:&quot;clean&quot;, BuildDate:&quot;2023-11-07T08:42:04Z&quot;, GoVersion:&quot;go1.19.2&quot;, Compiler:&quot;gc&quot;, Platform:&quot;linux/amd64&quot;&#125;<br></code></pre></td></tr></table></figure><h2 id="准备-ubuntu-20.04-debs-amd64.iso">4.2 准备ubuntu-20.04-debs-amd64.iso</h2><p>本实验环境使用的操作系统是 x86_64 的 Ubuntu 20.04.3 LTS，所以只下载Ubuntu 20.04.3 LTS的操作系统依赖组件包，其他操作系统在 <ahref="https://link.zhihu.com/?target=https%3A//github.com/kubesphere/kubekey/releases">KubeKeyreleases 页面</a>下载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行下面的命令，在能联网的部署服务器上执行下载。网络访问受限时，也可以通过其他方式，将该 ISO 下载后放到制作离线镜像的服务器的 /opt/prepare 目录下。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">KubeKey v3.0.13 的 release 中没包，只能在 v3.0.12 的 releases 中下载。</span><br>root@prepare:/opt/prepare# wget https://github.com/kubesphere/kubekey/releases/download/v3.0.12/ubuntu-20.04-debs-amd64.iso<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证 <span class="hljs-built_in">sha256sum</span>，确保 ISO 在下载过程中没出问题（官方提供的 <span class="hljs-built_in">sha256sum</span> 信息在 https://github.com/kubesphere/kubekey/releases/download/v3.0.12/ubuntu-20.04-debs.iso.sha256sum.txt）</span><br>root@prepare:/opt/prepare# sha256sum ubuntu-20.04-debs-amd64.iso<br>9c35697e4192c57a9195a8d216beda71058a420444c89b895147f27339c369b9  ubuntu-20.04-debs-amd64.iso<br>root@ksp-deploy:/opt/prepare# cat ubuntu-20.04-debs.iso.sha256sum.txt <br>9c35697e4192c57a9195a8d216beda71058a420444c89b895147f27339c369b9  ubuntu-20.04-debs-amd64.iso<br>99152a2675d334cf4d17a32bd99ca1fa21616b5bfe45bb5c93f5175ebca472a0  ubuntu-20.04-debs-arm64.iso<br></code></pre></td></tr></table></figure><h2 id="准备-manifest-文件">4.3 准备 manifest 文件</h2><p>前文已经说过，本文是在官方示例的基础上经过修改生成 manifest文件。官方示例的话，笔者知道有两个页面可以看到：青云官网的离线部署文档与 <ahref="https://github.com/kubesphere/kubekey/blob/master/docs/manifest-example.md">manifest-example</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">ksp v3.4.1 对应的完整镜像列表可以通过如下连接下载得到</span><br>root@prepare:/opt/prepare# wget https://github.com/kubesphere/ks-installer/releases/download/v3.4.1/images-list.txt<br><span class="hljs-meta prompt_">#</span><span class="language-bash">但其中包含的是 docker.io 上的镜像，可以在上述“青云官网的离线部署文档https://www.kubesphere.io/zh/docs/v3.4/installing-on-linux/introduction/air-gapped-installation/”中看到其中示例使用的是aliyuncs镜像仓库中的对应镜像，通过参考两处的镜像列表并进行修改，同时修改了镜像列表之外的其他配置，最终得到如下k8sV12317-kspV341-manifest.yaml</span><br><br>root@prepare:/opt/prepare# vi k8sV12317-kspV341-manifest.yaml<br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改后的文件内容如下：</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubekey.kubesphere.io/v1alpha2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Manifest</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">sample</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">arches:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">amd64</span><br>  <span class="hljs-attr">operatingSystems:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">arch:</span> <span class="hljs-string">amd64</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">linux</span><br>    <span class="hljs-attr">id:</span> <span class="hljs-string">ubuntu</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">&quot;20.04&quot;</span><br>    <span class="hljs-attr">osImage:</span> <span class="hljs-string">Ubuntu</span> <span class="hljs-number">20.04</span><span class="hljs-number">.3</span> <span class="hljs-string">LTS</span><br>    <span class="hljs-attr">repository:</span><br>      <span class="hljs-attr">iso:</span><br>        <span class="hljs-attr">localPath:</span> <span class="hljs-string">/opt/prepare/ubuntu-20.04-debs-amd64.iso</span><br>        <span class="hljs-attr">url:</span> <br>  <span class="hljs-attr">kubernetesDistributions:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">kubernetes</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v1.23.17</span><br>  <span class="hljs-attr">components:</span><br>    <span class="hljs-attr">helm:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v3.9.0</span><br>    <span class="hljs-attr">cni:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v1.2.0</span><br>    <span class="hljs-attr">etcd:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v3.4.13</span><br>    <span class="hljs-attr">calicoctl:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v3.26.1</span><br>   <span class="hljs-comment">## For now, if your cluster container runtime is containerd, KubeKey will add a docker 20.10.8 container runtime in the below list.</span><br>   <span class="hljs-comment">## The reason is KubeKey creates a cluster with containerd by installing a docker first and making kubelet connect the socket file of containerd which docker contained.</span><br>    <span class="hljs-attr">containerRuntimes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">docker</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-number">24.0</span><span class="hljs-number">.6</span><br>    <span class="hljs-attr">crictl:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v1.24.0</span><br>    <span class="hljs-attr">docker-registry:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">&quot;2&quot;</span><br>    <span class="hljs-attr">harbor:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v2.5.3</span><br>    <span class="hljs-attr">docker-compose:</span><br>      <span class="hljs-attr">version:</span> <span class="hljs-string">v2.2.2</span><br>  <span class="hljs-attr">images:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-apiserver:v1.23.17</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-controller-manager:v1.23.17</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-proxy:v1.23.17</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-scheduler:v1.23.17</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/pause:3.6</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/coredns:1.8.6</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/cni:v3.26.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-controllers:v3.26.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/node:v3.26.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/pod2daemon-flexvol:v3.26.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/typha:v3.23.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/flannel:v0.12.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/provisioner-localpv:3.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/linux-utils:3.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/haproxy:2.3</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nfs-subdir-external-provisioner:v4.0.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/k8s-dns-node-cache:1.15.12</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/ks-installer:v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/ks-apiserver:v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/ks-console:v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/ks-controller-manager:v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.22.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.21.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kubectl:v1.20.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kubefed:v0.8.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/tower:v0.2.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/minio:RELEASE.2019-08-07T01-59-21Z</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/mc:RELEASE.2019-08-07T23-14-43Z</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/snapshot-controller:v4.0.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nginx-ingress-controller:v1.3.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/defaultbackend-amd64:1.4</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/metrics-server:v0.4.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/redis:5.0.14-alpine</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/haproxy:2.0.25-alpine</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/alpine:3.14</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/openldap:1.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/netshoot:v1.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/cloudcore:v1.13.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/iptables-manager:v1.13.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/edgeservice:v0.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/gatekeeper:v3.5.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/openpitrix-jobs:v3.3.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/devops-apiserver:ks-v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/devops-controller:ks-v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/devops-tools:ks-v3.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/ks-jenkins:v3.4.0-2.319.3-1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/inbound-agent:4.10-2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-base:v3.2.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-nodejs:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.1-jdk11</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-python:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.16</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.17</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.18</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-base:v3.2.2-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-nodejs:v3.2.0-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.0-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-maven:v3.2.1-jdk11-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-python:v3.2.0-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.0-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.16-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.17-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/builder-go:v3.2.2-1.18-podman</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/s2ioperator:v3.2.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/s2irun:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/s2i-binary:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java11-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java11-runtime:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java8-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/tomcat85-java8-runtime:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/java-11-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/java-8-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/java-8-runtime:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/java-11-runtime:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-8-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-6-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nodejs-4-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/python-36-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/python-35-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/python-34-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/python-27-centos7:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/argocd:v2.3.3</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/argocd-applicationset:v0.4.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/dex:v2.30.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/redis:6.2.6-alpine</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/configmap-reload:v0.7.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus:v2.39.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus-config-reloader:v0.55.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/prometheus-operator:v0.55.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-rbac-proxy:v0.11.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-state-metrics:v2.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/node-exporter:v1.3.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/alertmanager:v0.23.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/thanos:v0.31.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/grafana:8.3.3</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-rbac-proxy:v0.11.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/notification-manager-operator:v2.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/notification-manager:v2.3.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/notification-tenant-sidecar:v3.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/elasticsearch-curator:v5.7.6</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/elasticsearch-oss:6.8.22</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch:2.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch-dashboards:2.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/opensearch-curator:v0.0.5</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/fluentbit-operator:v0.14.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/docker:19.03</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/fluent-bit:v1.9.4</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/log-sidecar-injector:v1.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/filebeat:6.7.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-operator:v0.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-exporter:v0.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-events-ruler:v0.6.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-auditing-operator:v0.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kube-auditing-webhook:v0.2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/pilot:1.14.6</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/proxyv2:1.14.6</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-operator:1.29</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-agent:1.29</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-collector:1.29</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-query:1.29</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/jaeger-es-index-cleaner:1.29</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kiali-operator:v1.50.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/kiali:v1.50</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/busybox:1.31.1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/nginx:1.14-alpine</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/wget:1.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/hello:plain-text</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/wordpress:4.8-apache</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/hpa-example:latest</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/fluentd:v1.4.2-2.0</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/perl:latest</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-productpage-v1:1.16.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-reviews-v1:1.16.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-reviews-v2:1.16.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-details-v1:1.16.2</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/examples-bookinfo-ratings-v1:1.16.3</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">registry.cn-beijing.aliyuncs.com/kubesphereio/scope:1.13.0</span><br>  <span class="hljs-attr">kubectl:</span> <span class="hljs-string">v1.22.0</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-attr">auths:</span> &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="生成制品文件">4.4 生成制品文件</h2><p>制品（artifact）是一个根据指定的 manifest 文件内容导出的包含镜像 tar包和相关二进制文件的 tgz 包。 在 KubeKey初始化镜像仓库、创建集群、添加节点和升级集群的命令中均可指定一个artifact，KubeKey 将自动解包该 artifact并在执行命令时直接使用解包出来的文件。</p><p><strong>注意</strong></p><ul><li>导出时请确保网络连接正常（如果中断就需要全部重新来过）。</li><li>KubeKey会解析镜像列表中的镜像名，若镜像名中的镜像仓库需要鉴权信息，可在manifest 文件中的 <strong>.registry.auths</strong>字段中进行配置（因为此处使用的是aliyuncs的公共容器镜像，所以无需鉴权）。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">国内一般服务器访问 GitHub/Googleapis 受限，强烈建议执行使用此环境变量</span><br>root@prepare:/opt/prepare# export KKZONE=cn<br><span class="hljs-meta prompt_">#</span><span class="language-bash">根据上述制作的的 manifest，在prepare服务器上执行下面的命令制作制品（artifact）</span><br>root@prepare:/opt/prepare# ./kk artifact export -m k8sV12317-kspV341-manifest.yaml -o k8sV12317-kspV341-artifact.tar.gz<br><span class="hljs-meta prompt_">#</span><span class="language-bash">上述命名执行时，会在当前目录创建一个 kubekey 子目录</span><br></code></pre></td></tr></table></figure><p>此命令需要较长时间，执行完成时如下图。</p><figure><img src="https://s2.loli.net/2025/01/12/h9FTtslICbfSEJa.png"alt="image-20250112124715488" /><figcaption aria-hidden="true">image-20250112124715488</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">制作过程中，创建 kubekey/artifact目录其中存放临时下载的文件与镜像，制品制作完成后 kubekey/artifact 目录会被清理</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">制作完成后，会在当前目录生成一个 k8sV12317-kspV341-artifact.tar.gz 文件</span><br>root@prepare:/opt/prepare# ls -alh k8sV12317-kspV341-artifact.tar.gz<br>-rw-r--r-- 1 root root 13G Jan 12 12:41 k8sV12317-kspV341-artifact.tar.gz<br></code></pre></td></tr></table></figure><h2 id="离线部署资源文件汇总">4.5 离线部署资源文件汇总</h2><p>至此，我们已经准备了如下两个离线部署文件：</p><ul><li>KubeKey：<strong>kubekey-v3.0.13-linux-amd64.tar.gz（35M）</strong></li><li>制品artifact：<strong>k8sV12317-kspV341-artifact.tar.gz（13G）</strong></li></ul><h1 id="五离线部署执行前准备">五、离线部署执行前准备</h1><h2 id="上传离线部署资源文件">5.1 上传离线部署资源文件</h2><p>将 KubeKey 和制品 artifact ，上传至离线环境部署节点 (此处是<strong>k8s01-1</strong> 节点，所有节点信息参考文档最开始处的描述) 的/opt/ 目录。</p><ul><li>KubeKey：<strong>kubekey-v3.0.13-linux-amd64.tar.gz（35M）</strong></li><li>制品artifact：<strong>k8sV12317-kspV341-artifact.tar.gz（13G）</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">创建离线资源存放的数据目录</span><br>root@k8s01-1:/# mkdir /opt/offline-deployk8sksp<br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令，解压 KubeKey：</span><br>root@k8s01-1:/# mv /opt/k8sV12317-kspV341-artifact.tar.gz /opt/offline-deployk8sksp<br>root@k8s01-1:/# tar -zxf /opt/kubekey-v3.0.13-linux-amd64.tar.gz -C /opt/offline-deployk8sksp<br>root@k8s01-1:/# cd /opt/offline-deployk8sksp<br></code></pre></td></tr></table></figure><h2 id="创建离线集群配置文件">5.2 创建离线集群配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令创建离线集群配置文件</span><br>root@k8s01-1:/opt/offline-deployk8sksp# ./kk create config --with-kubesphere v3.4.1 --with-kubernetes v1.23.17 -f k8sV12317-kspV341-offlineconfig.yaml<br></code></pre></td></tr></table></figure><p>命令执行成功后，在同目录会生成一个k8sV12317-kspV341-offlineconfig.yaml 文件。</p><h2 id="修改-k8s-部署相关配置">5.3 修改 K8S 部署相关配置</h2><p>k8sV12317-kspV341-offlineconfig.yaml 文件中 <strong>“kind:Cluster”</strong> 部分是部署 k8s 集群的相关配置，只需要修改 spec内的内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@k8s01-1:/opt/offline-deployk8sksp# vi k8sV12317-kspV341-offlineconfig.yaml<br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改离线集群配置文件 k8sV12317-kspV341-offlineconfig.yaml，修改说明及修改后的截图如下</span><br></code></pre></td></tr></table></figure><p>spec 内需要修改处说明如下（其余未说明处保持默认）：</p><ul><li>hosts部分：指定所有k8s节点的主机主机名、IP、用户、密码此外还新增一个 registry 节点的配置</li><li>roleGroups部分：指定 3 个节点同时作为 etcd、control-plane 和 worker节点，同时还有一个服务器k8s01-4只做工作节点。另外 <code>registry</code>部分指定镜像仓库的服务器主机名，用于 KubeKey 部署自建 Harbor 仓库</li><li>controlPlaneEndpoint部分：启用并设置内置的负载均衡器（internalLoadbalancer）为 HAProxy</li><li>新增了storage.openebs.basePath 部分：指定 openebs默认存储路径（就是默认创建的sc/local的存储路径）为<strong>/data/openebs/local</strong></li><li>registry：添加 type 类型为 harbor，否则后面执行“initregistry”时会安装 docker registry作为镜像仓库，还有<code>auths</code>部分与<code>privateRegistry</code>与<code>namespaceOverride</code>参数（auths部分有参考：<ahref="https://github.com/kubesphere/kubekey/blob/master/docs/config-example.md">kubesphere关于部署配置文件的描述</a>）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs shell">apiVersion: kubekey.kubesphere.io/v1alpha2<br>kind: Cluster<br>metadata:<br>  name: sample<br>spec:<br>  hosts:<br>  - &#123;name: k8s01-1, address: 10.13.15.16, internalAddress: 10.13.15.16, user: root, password: &quot;cloud@2020&quot;&#125;<br>  - &#123;name: k8s01-2, address: 10.13.15.17, internalAddress: 10.13.15.17, user: root, password: &quot;cloud@2020&quot;&#125;<br>  - &#123;name: k8s01-3, address: 10.13.15.161, internalAddress: 10.13.15.161, user: root, password: &quot;cloud@2020&quot;&#125;<br>  - &#123;name: k8s01-4, address: 10.13.15.99, internalAddress: 10.13.15.99, user: root, password: &quot;cloud@2020&quot;&#125;<br>  - &#123;name: registry, address: 10.13.15.71, internalAddress: 10.13.15.71, user: root, password: &quot;cloud@2020&quot;&#125;<br>  roleGroups:<br>    etcd:<br>    - k8s01-1<br>    - k8s01-2<br>    - k8s01-3<br>    control-plane:<br>    - k8s01-1<br>    - k8s01-2<br>    - k8s01-3<br>    worker:<br>    - k8s01-1<br>    - k8s01-2<br>    - k8s01-3<br>    - k8s01-4<br>    registry:    # 如需使用 kk 自动部署镜像仓库，请设置该主机组 （建议仓库与集群分离部署，减少相互影响）<br>    - registry<br>  controlPlaneEndpoint:<br>    ## Internal loadbalancer for apiservers <br>    internalLoadbalancer: haproxy<br><br>    domain: lb.kubesphere.local<br>    address: &quot;&quot;<br>    port: 6443<br>  kubernetes:<br>    version: v1.23.17<br>    clusterName: cluster.local<br>    autoRenewCerts: true<br>    containerManager: docker<br>  etcd:<br>    type: kubekey<br>  network:<br>    plugin: calico<br>    kubePodsCIDR: 10.233.64.0/18<br>    kubeServiceCIDR: 10.233.0.0/18<br>    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni<br>    multusCNI:<br>      enabled: false<br>  storage:<br>    openebs:<br>      basePath: /data/openebs/local # 默认没有的新增配置，base path of the local PV provisioner<br>  registry:<br>    # 如需使用 kk 部署 harbor, 可将该参数设置为 harbor，不设置该参数且需使用 kk 创建容器镜像仓库，将默认使用docker registry。<br>    type: harbor<br>    # 如使用 kk 部署的 harbor 或其他需要登录的仓库，可设置对应仓库的auths，如使用 kk 创建的 docker registry 仓库，则无需配置该参数。<br>    # 注意：如使用 kk 部署 harbor，该参数请于 harbor 启动后设置。<br>    #auths:<br>    #  &quot;registry.syjiang.com&quot;:<br>    #    username: admin<br>    #    password: Harbor12345<br>    #    certsPath: &quot;/etc/docker/certs.d/registry.syjiang.com&quot;<br>    #    skipTLSVerify: false # 即使 TLS校验失败了，仍允许通过HTTPS协议连接registry<br>    #    plainHTTP: false # 允许通过HTTP协议连接registry<br>    # 设置集群部署时使用的私有仓库<br>    privateRegistry: &quot;registry.syjiang.com&quot;<br>    namespaceOverride: &quot;kubesphereio&quot;<br>    registryMirrors: []<br>    insecureRegistries: []<br>  addons: []<br></code></pre></td></tr></table></figure><h2 id="修改-ksp-部署相关配置">5.4 修改 KSP 部署相关配置</h2><p>k8sV12317-kspV341-offlineconfig.yaml 文件中 <strong>kind:ClusterConfiguration</strong> 部分是关于部署 KubeSphere及相关插件的配置。</p><h3 id="必须要新增的参数">5.4.1 必须要新增的参数</h3><ul><li>添加ClusterConfiguration.spec.namespace_override参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">82 spec:<br>83   namespace_override: &quot;kubesphereio&quot;<br></code></pre></td></tr></table></figure><p>此参数的意义跟K8S部署配置中的<code>spec.registry.namespaceOverride</code>类似，要确认是配置成<strong><code>kubesphereio</code></strong>，且要加双引号（笔者先前没加双引号时没生效，但kubesphere官方cnblogs博客文章中是没有加双引号的）。它的作用就是<code>Kubesphere</code>本身使用到的镜像只到<strong><code>registry.syjiang.com/kubesphereio</code></strong>下面去拉取，如果不配置的话有些镜像是会到另外的项目下拉取的比如<code>kubesphere-system</code>空间中<code>pod/ks-apiserver-xxx</code>用到的镜像就是<strong><code>registry.syjiang.com/kubesphere/ks-apiserver:v3.4.1</code></strong>。</p><p>据Kubeshpere的官方博文介绍，2.x 版本的 KubeKey 没这个问题，3.x 的到v3.1.1 为止，都存在这个问题。</p><h3 id="可修改的参数可选">5.4.2 可修改的参数（可选）</h3><p>前面准备的制品文件非常之大有10多G，就是因为其中包含相关可选组件的全量镜像。如果不想启用可选插件，这部分直接保持默认配置也可。</p><p>如果有需要或想学习一下，可以启用相关插件配置。以下是启用了除 Kubeedge、gatekeeper以外的所有插件后的配置（很多内容笔者并没有用过，只是参考了kubesphere在cnblogs上的博文<a href="https://www.cnblogs.com/kubesphere/p/18208852">一文搞定 KubeKey3.1.1 离线部署 KubeSphere 3.4.1 和 Kubernetes v1.28</a>）。</p><ul><li>启用 etcd 监控</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">90   etcd:<br>91     monitoring: true #将false改为true<br>92     endpointIps: localhost<br>93     port: 2379<br>94     tlsEnable: true<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere 告警系统</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">162   alerting:<br>163     enabled: true #将false改为true<br>164     # thanosruler:<br>165     #   replicas: 1<br>166     #   resources: &#123;&#125;<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere 审计日志</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">167   auditing:<br>168     enabled: true #将false改为true<br>169     # operator:<br>170     #   resources: &#123;&#125;<br>171     # webhook:<br>172     #   resources: &#123;&#125;<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere DevOps 系统</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">173   devops:<br>174     enabled: true #将false改为true<br>175     jenkinsCpuReq: 0.5<br>176     jenkinsCpuLim: 1<br>177     jenkinsMemoryReq: 4Gi<br>178     jenkinsMemoryLim: 4Gi<br>179     jenkinsVolumeSize: 16Gi<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere 事件系统</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">180   events:<br>181     enabled: true #将false改为true<br>182     # operator:<br>183     #   resources: &#123;&#125;<br>184     # exporter:<br>185     #   resources: &#123;&#125;<br>186     ruler:<br>187       enabled: true<br>188       replicas: 2<br>189     #   resources: &#123;&#125;<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere 日志系统（v3.4.0 开始默认启用 opensearch）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">190   logging:<br>191     enabled: true #将false改为true<br>192     logsidecar:<br>193       enabled: true<br>194       replicas: 2<br>195       # resources: &#123;&#125;<br></code></pre></td></tr></table></figure><ul><li>启用 Metrics Server</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">196   metrics_server:<br>197     enabled: true #将false改为true<br></code></pre></td></tr></table></figure><p><strong>说明：</strong>KubeSphere支持用于<em>deployments</em>的容器组（Pod）弹性伸缩程序 (HPA)。在KubeSphere 中，Metrics Server 控制着 HPA 是否启用。</p><ul><li>启用网络策略、容器组 IP 池，服务拓扑图</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">228   network:<br>229     networkpolicy:<br>230       enabled: true #将false改为true<br>231     ippool:<br>232       type: calico #将none改为 calico<br>233     topology:<br>234       type: weave-scope #将none 改为 weave-scope<br></code></pre></td></tr></table></figure><ul><li>启用应用商店</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">235   openpitrix:<br>236     store:<br>237       enabled: true #将false改为true<br></code></pre></td></tr></table></figure><ul><li>启用 KubeSphere 服务网格（Istio）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">238   servicemesh:<br>239     enabled: true #将false改为true<br>240     istio:<br>241       components:<br>242         ingressGateways:<br>243         - name: istio-ingressgateway<br>244           enabled: false<br>245         cni:<br>246           enabled: false<br></code></pre></td></tr></table></figure><p>此时，修改后的 k8sV12317-kspV341-offlineconfig.yaml文件完整内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">kubekey.kubesphere.io/v1alpha2</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Cluster</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">sample</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">hosts:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">k8s01-1</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.16</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.16</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@2020&quot;</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">k8s01-2</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.17</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.17</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@2020&quot;</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">k8s01-3</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.161</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.161</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@2020&quot;</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">k8s01-4</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.99</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.99</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@2020&quot;</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">registry</span>, <span class="hljs-attr">address:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.71</span>, <span class="hljs-attr">internalAddress:</span> <span class="hljs-number">10.13</span><span class="hljs-number">.15</span><span class="hljs-number">.71</span>, <span class="hljs-attr">user:</span> <span class="hljs-string">root</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;cloud@2020&quot;</span>&#125;<br>  <span class="hljs-attr">roleGroups:</span><br>    <span class="hljs-attr">etcd:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-3</span><br>    <span class="hljs-attr">control-plane:</span> <br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-3</span><br>    <span class="hljs-attr">worker:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-2</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-3</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">k8s01-4</span><br>    <span class="hljs-attr">registry:</span>    <span class="hljs-comment"># 如需使用 kk 自动部署镜像仓库，请设置该主机组 （建议仓库与集群分离部署，减少相互影响）</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">registry</span><br>  <span class="hljs-attr">controlPlaneEndpoint:</span><br>    <span class="hljs-comment">## Internal loadbalancer for apiservers </span><br>    <span class="hljs-attr">internalLoadbalancer:</span> <span class="hljs-string">haproxy</span><br><br>    <span class="hljs-attr">domain:</span> <span class="hljs-string">lb.kubesphere.local</span><br>    <span class="hljs-attr">address:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6443</span><br>  <span class="hljs-attr">kubernetes:</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v1.23.17</span><br>    <span class="hljs-attr">clusterName:</span> <span class="hljs-string">cluster.local</span><br>    <span class="hljs-attr">autoRenewCerts:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">containerManager:</span> <span class="hljs-string">docker</span><br>  <span class="hljs-attr">etcd:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">kubekey</span><br>  <span class="hljs-attr">network:</span><br>    <span class="hljs-attr">plugin:</span> <span class="hljs-string">calico</span><br>    <span class="hljs-attr">kubePodsCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.64</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>    <span class="hljs-attr">kubeServiceCIDR:</span> <span class="hljs-number">10.233</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><span class="hljs-string">/18</span><br>    <span class="hljs-comment">## multus support. https://github.com/k8snetworkplumbingwg/multus-cni</span><br>    <span class="hljs-attr">multusCNI:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">storage:</span><br>    <span class="hljs-attr">openebs:</span><br>      <span class="hljs-attr">basePath:</span> <span class="hljs-string">/data/openebs/local</span> <span class="hljs-comment"># 默认没有的新增配置，base path of the local PV provisioner</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-comment"># 如需使用 kk 部署 harbor, 可将该参数设置为 harbor，不设置该参数且需使用 kk 创建容器镜像仓库，将默认使用docker registry。</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">harbor</span><br>    <span class="hljs-comment"># 如使用 kk 部署的 harbor 或其他需要登录的仓库，可设置对应仓库的auths，如使用 kk 创建的 docker registry 仓库，则无需配置该参数。</span><br>    <span class="hljs-comment"># 注意：如使用 kk 部署 harbor，该参数请于 harbor 启动后设置。</span><br>    <span class="hljs-comment">#auths:</span><br>    <span class="hljs-comment">#  &quot;registry.syjiang.com&quot;:</span><br>    <span class="hljs-comment">#    username: admin</span><br>    <span class="hljs-comment">#    password: Harbor12345</span><br>    <span class="hljs-comment">#    certsPath: &quot;/etc/docker/certs.d/registry.syjiang.com&quot;</span><br>    <span class="hljs-comment">#    skipTLSVerify: false # 即使 TLS校验失败了，仍允许通过HTTPS协议连接registry</span><br>    <span class="hljs-comment">#    plainHTTP: false # 允许通过HTTP协议连接registry</span><br>    <span class="hljs-comment"># 设置集群部署时使用的私有仓库</span><br>    <span class="hljs-attr">privateRegistry:</span> <span class="hljs-string">&quot;registry.syjiang.com&quot;</span><br>    <span class="hljs-attr">namespaceOverride:</span> <span class="hljs-string">&quot;kubesphereio&quot;</span><br>    <span class="hljs-attr">registryMirrors:</span> []<br>    <span class="hljs-attr">insecureRegistries:</span> []<br>  <span class="hljs-attr">addons:</span> []<br><br><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">installer.kubesphere.io/v1alpha1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterConfiguration</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">ks-installer</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kubesphere-system</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-string">v3.4.1</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">namespace_override:</span> <span class="hljs-string">&quot;kubesphereio&quot;</span><br>  <span class="hljs-attr">persistence:</span><br>    <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">authentication:</span><br>    <span class="hljs-attr">jwtSecret:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">local_registry:</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-comment"># dev_tag: &quot;&quot;</span><br>  <span class="hljs-attr">etcd:</span><br>    <span class="hljs-attr">monitoring:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-attr">endpointIps:</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">2379</span><br>    <span class="hljs-attr">tlsEnable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">common:</span><br>    <span class="hljs-attr">core:</span><br>      <span class="hljs-attr">console:</span><br>        <span class="hljs-attr">enableMultiLogin:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">port:</span> <span class="hljs-number">30880</span><br>        <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br>    <span class="hljs-comment"># apiserver:</span><br>    <span class="hljs-comment">#  resources: &#123;&#125;</span><br>    <span class="hljs-comment"># controllerManager:</span><br>    <span class="hljs-comment">#  resources: &#123;&#125;</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">enableHA:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">2Gi</span><br>    <span class="hljs-attr">openldap:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">2Gi</span><br>    <span class="hljs-attr">minio:</span><br>      <span class="hljs-attr">volumeSize:</span> <span class="hljs-string">20Gi</span><br>    <span class="hljs-attr">monitoring:</span><br>      <span class="hljs-comment"># type: external</span><br>      <span class="hljs-attr">endpoint:</span> <span class="hljs-string">http://prometheus-operated.kubesphere-monitoring-system.svc:9090</span><br>      <span class="hljs-attr">GPUMonitoring:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">gpu:</span><br>      <span class="hljs-attr">kinds:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">resourceName:</span> <span class="hljs-string">&quot;nvidia.com/gpu&quot;</span><br>        <span class="hljs-attr">resourceType:</span> <span class="hljs-string">&quot;GPU&quot;</span><br>        <span class="hljs-attr">default:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">es:</span><br>      <span class="hljs-comment"># master:</span><br>      <span class="hljs-comment">#   volumeSize: 4Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-comment"># data:</span><br>      <span class="hljs-comment">#   volumeSize: 20Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">logMaxAge:</span> <span class="hljs-number">7</span><br>      <span class="hljs-attr">elkPrefix:</span> <span class="hljs-string">logstash</span><br>      <span class="hljs-attr">basicAuth:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalElasticsearchHost:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalElasticsearchPort:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">opensearch:</span><br>      <span class="hljs-comment"># master:</span><br>      <span class="hljs-comment">#   volumeSize: 4Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-comment"># data:</span><br>      <span class="hljs-comment">#   volumeSize: 20Gi</span><br>      <span class="hljs-comment">#   replicas: 1</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">logMaxAge:</span> <span class="hljs-number">7</span><br>      <span class="hljs-attr">opensearchPrefix:</span> <span class="hljs-string">whizard</span><br>      <span class="hljs-attr">basicAuth:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">&quot;admin&quot;</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;admin&quot;</span><br>      <span class="hljs-attr">externalOpensearchHost:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">externalOpensearchPort:</span> <span class="hljs-string">&quot;&quot;</span><br>      <span class="hljs-attr">dashboard:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">alerting:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-comment"># thanosruler:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">auditing:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-comment"># operator:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># webhook:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">devops:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-attr">jenkinsCpuReq:</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-attr">jenkinsCpuLim:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">jenkinsMemoryReq:</span> <span class="hljs-string">4Gi</span><br>    <span class="hljs-attr">jenkinsMemoryLim:</span> <span class="hljs-string">4Gi</span><br>    <span class="hljs-attr">jenkinsVolumeSize:</span> <span class="hljs-string">16Gi</span><br>  <span class="hljs-attr">events:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-comment"># operator:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># exporter:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-attr">ruler:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">logging:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-attr">logsidecar:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">replicas:</span> <span class="hljs-number">2</span><br>      <span class="hljs-comment"># resources: &#123;&#125;</span><br>  <span class="hljs-attr">metrics_server:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>  <span class="hljs-attr">monitoring:</span><br>    <span class="hljs-attr">storageClass:</span> <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-attr">node_exporter:</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">9100</span><br>      <span class="hljs-comment"># resources: &#123;&#125;</span><br>    <span class="hljs-comment"># kube_rbac_proxy:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># kube_state_metrics:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># prometheus:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   volumeSize: 20Gi</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   operator:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-comment"># alertmanager:</span><br>    <span class="hljs-comment">#   replicas: 1</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># notification_manager:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   operator:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-comment">#   proxy:</span><br>    <span class="hljs-comment">#     resources: &#123;&#125;</span><br>    <span class="hljs-attr">gpu:</span><br>      <span class="hljs-attr">nvidia_dcgm_exporter:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>  <span class="hljs-attr">multicluster:</span><br>    <span class="hljs-attr">clusterRole:</span> <span class="hljs-string">none</span><br>  <span class="hljs-attr">network:</span><br>    <span class="hljs-attr">networkpolicy:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-attr">ippool:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">calico</span> <span class="hljs-comment">#将none改为 calico</span><br>    <span class="hljs-attr">topology:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">weave-scope</span> <span class="hljs-comment">#将none 改为 weave-scope</span><br>  <span class="hljs-attr">openpitrix:</span><br>    <span class="hljs-attr">store:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>  <span class="hljs-attr">servicemesh:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span> <span class="hljs-comment">#将false改为true</span><br>    <span class="hljs-attr">istio:</span><br>      <span class="hljs-attr">components:</span><br>        <span class="hljs-attr">ingressGateways:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">istio-ingressgateway</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">cni:</span><br>          <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">edgeruntime:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">kubeedge:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">cloudCore:</span><br>        <span class="hljs-attr">cloudHub:</span><br>          <span class="hljs-attr">advertiseAddress:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-attr">service:</span><br>          <span class="hljs-attr">cloudhubNodePort:</span> <span class="hljs-string">&quot;30000&quot;</span><br>          <span class="hljs-attr">cloudhubQuicNodePort:</span> <span class="hljs-string">&quot;30001&quot;</span><br>          <span class="hljs-attr">cloudhubHttpsNodePort:</span> <span class="hljs-string">&quot;30002&quot;</span><br>          <span class="hljs-attr">cloudstreamNodePort:</span> <span class="hljs-string">&quot;30003&quot;</span><br>          <span class="hljs-attr">tunnelNodePort:</span> <span class="hljs-string">&quot;30004&quot;</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>        <span class="hljs-comment"># hostNetWork: false</span><br>      <span class="hljs-attr">iptables-manager:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">mode:</span> <span class="hljs-string">&quot;external&quot;</span><br>        <span class="hljs-comment"># resources: &#123;&#125;</span><br>      <span class="hljs-comment"># edgeService:</span><br>      <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">gatekeeper:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># controller_manager:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>    <span class="hljs-comment"># audit:</span><br>    <span class="hljs-comment">#   resources: &#123;&#125;</span><br>  <span class="hljs-attr">terminal:</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">600</span><br></code></pre></td></tr></table></figure><h2 id="创建配置数据目录">5.5 创建配置数据目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">集群所有节点都操作</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 openebs 本地数据根目录</span><br>root@k8s01-1:/# mkdir -p /data/openebs/local<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 docker 数据目录</span><br>root@k8s01-1:/# mkdir -p /data/docker<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建 docker数据目录软连接</span><br>root@k8s01-1:/# ln -s /data/docker /var/lib/docker<br></code></pre></td></tr></table></figure><h2 id="安装依赖组件">5.6 安装依赖组件</h2><p>使用Kubekey在线方式部署k8s+ksp时，需要使用执行"./kk clusterxxx"之前安装操作系统依赖组件，部署过程中校验其未安装就报错而中断部署。但离线部署时，通过给kk传递“-ak8sV12317-kspV341-artifact.tar.gz”参数可以自动完成这些依赖组件的安装。</p><p>所以此处无需手动操作。</p><h2 id="安装配置-harbor">5.7、安装配置 Harbor</h2><p>采用 KubeKey 工具在 registry 服务器上部署Harbor、创建项目、向其中推送镜像。</p><p>请注意，以下操作涉及到两个服务器（<code>k8s01-1</code>是部署节点，<code>registry</code>是Harbor服务所在服务器）且可能会来回切换，请根据命令前的主机名进行区分具体是在哪个服务器上执行相关命令。上执行。</p><h3 id="安装-harbor">5.7.1 安装 Harbor</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在部署节点执行如下命令，安装镜像仓库（本文中是 Harbor）</span><br>root@k8s01-1:/opt/offline-deployk8sksp# ./kk init registry -f k8sV12317-kspV341-offlineconfig.yaml -a k8sV12317-kspV341-artifact.tar.gz<br></code></pre></td></tr></table></figure><p>此处一定不要将k8s01-1节点（其他k8s节点笔者没有尝试，不知是否会报类似错误，可能需要查看kk源码才知道具体的逻辑）同时作为Harbor服务所在服务器，否则将提示找不到“/tmp/kubekey/etc/docker/certs.d/registry.syjiang.com/ca.crt”而中断执行：</p><figure><img src="https://s2.loli.net/2025/01/12/9DOjugW2Gxcdsvy.png"alt="image-20250112161653908" /><figcaption aria-hidden="true">image-20250112161653908</figcaption></figure><p>可以看到在安装harbor过程中会做如下事情：</p><ul><li>为所有节点配置ntp服务器（这个ntp服务器在哪里，还不确定）</li><li>推送私有证书到registry服务器</li><li>在registry服务器上安装docker、安装docker-compose、启动harbor</li></ul><figure><img src="https://s2.loli.net/2025/01/12/jLsZ9bpvfydHUGq.png"alt="image-20250112162718819" /><figcaption aria-hidden="true">image-20250112162718819</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">在registry服务器查看（harbor的安装文件与配置文件默认被放置在 /opt/harbor 目录）</span><br>root@registry:~# ls -lh /opt/harbor/<br>total 633M<br>-rw-r--r-- 1 root root  12K Jul  7  2022 LICENSE<br>drwxr-xr-x 3 root root 4.0K Jan 12 16:26 common<br>-rw-r--r-- 1 root root 3.3K Jul  7  2022 common.sh<br>-rw-r--r-- 1 root root 9.3K Jan 12 16:26 docker-compose.yml<br>-rw-r--r-- 1 root root 633M Jul  7  2022 harbor.v2.5.3.tar.gz<br>-rw-r--r-- 1 root root 3.4K Jan 12 16:25 harbor.yml<br>-rw-r--r-- 1 root root 9.7K Jul  7  2022 harbor.yml.tmpl<br>-rwxr-xr-x 1 root root 2.5K Jul  7  2022 install.sh<br>-rwxr-xr-x 1 root root 1.9K Jul  7  2022 prepare<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看容器列表</span><br>root@registry:~# cd /opt/harbor/<br>root@registry:/opt/harbor# docker-compose ps -a<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/12/ZPpxCvWJHVTFGNo.png"alt="image-20250112163452340" /><figcaption aria-hidden="true">image-20250112163452340</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看 /opt/harbor/harbor.yml 配置的域名</span><br>root@registry:/opt/harbor# cat /opt/harbor/harbor.yml | grep hostname:<br>hostname: registry.syjiang.com<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看 Docker 是否配置了私有证书</span><br>root@registry:/opt/harbor# ll /etc/docker/certs.d<br>total 12<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ./<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ../<br>drwxrwxr-x 2 root root 4096 Jan 12 16:24 registry.syjiang.com/<br>root@registry:/opt/harbor# ll /etc/docker/certs.d/registry.syjiang.com/<br>total 20<br>drwxrwxr-x 2 root root 4096 Jan 12 16:24 ./<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ../<br>-rw-r--r-- 1 root root 1103 Jan 12 16:24 ca.crt<br>-rw-r--r-- 1 root root 1249 Jan 12 16:24 registry.syjiang.com.cert<br>-rw------- 1 root root 1675 Jan 12 16:24 registry.syjiang.com.key<br><span class="hljs-meta prompt_">#</span><span class="language-bash">KubeKey 部署 Harbor 时，在registry服务器上安装docker、docker-compose、同步私有证书</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">k8s集群所有节点此时还不会安装docker，但会创建 /etc/docker/certs.d 目录并同步私有证书</span><br>root@k8s01-1:/opt/offline-deployk8sksp# ll /etc/docker/certs.d<br>total 12<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ./<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ../<br>drwxrwxr-x 2 root root 4096 Jan 12 16:24 registry.syjiang.com/<br>root@k8s01-1:/opt/offline-deployk8sksp# ll /etc/docker/certs.d/registry.syjiang.com/<br>total 20<br>drwxrwxr-x 2 root root 4096 Jan 12 16:24 ./<br>drwxr-xr-x 3 root root 4096 Jan 12 16:24 ../<br>-rw-r--r-- 1 root root 1103 Jan 12 16:24 ca.crt<br>-rw-r--r-- 1 root root 1249 Jan 12 16:24 registry.syjiang.com.cert<br>-rw------- 1 root root 1675 Jan 12 16:24 registry.syjiang.com.key<br></code></pre></td></tr></table></figure><h3 id="在-harbor-中创建项目">5.7.2 在 Harbor 中创建项目</h3><p>由于<code>Harbor</code>项目存在访问控制（<code>RBAC</code>）的限制，即只有指定角色的用户才能执行某些操作。如果未创建项目，则镜像不能被推送到Harbor。</p><p><code>Harbor</code>中有两种类型的项目：</p><ul><li>公共项目（Public）：任何用户都可以从这个项目中拉取镜像。</li><li>私有项目（Private）：只有作为项目成员的用户可以拉取镜像。</li></ul><p>使用 KubeKey 作为工具来部署的 Harbor 镜像仓库的一些默认信息如下：</p><ul><li><code>Harbor</code>管理员账号：<strong>admin</strong>，密码：<strong>Harbor12345</strong>。</li><li><code>Harbor</code> 安装与配置文件在registry服务器的<strong>/opt/harbor</strong> 目录, 如需运维 Harbor，可至该目录下。</li></ul><p>目前我们只是在<code>registry</code>服务器上部署了<code>Harbor</code>镜像仓库，此时只有一个默认的<code>library</code>项目，其余内容是空的。还需要进一步进行配置以作为离线部署k8s+ksp环境时使用的镜像仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令下载指定脚本，后面用来初始化 Harbor 仓库（但使用时发现其中少了一个项目 kubesphereio ）</span><br>root@registry:/opt/harbor# wget https://raw.githubusercontent.com/kubesphere/ks-installer/master/scripts/create_project_harbor.sh<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">于是结合 https://www.kubesphere.io/zh/docs/v3.4/installing-on-linux/introduction/air-gapped-installation/#%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E9%9B%86%E7%BE%A4 此文档中给出的create_project_harbor.sh 示例，将两者进行合并，修改得到如下 create_project_harbor.sh 文件</span><br></code></pre></td></tr></table></figure><p>修改点包含如下：</p><ul><li>修改 <strong>url</strong> 的值为 <strong><ahref="https://registry.syjiang.com">https://registry.syjiang.com</a></strong>。</li><li>需要指定仓库项目名称列表，包含镜像列表（manifest文件的镜像列表）中的项目名称。</li><li>脚本末尾 <code>curl</code> 命令末尾加上<code>-k</code>，表示允许不使用证书到SSL站点。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">合并与修改后，最终得到的 create_project_harbor.sh 文件内容如下</span><br>root@registry:/opt/harbor# cat create_project_harbor.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span><br><br>url=&quot;https://registry.syjiang.com&quot;<br>user=&quot;admin&quot;<br>passwd=&quot;Harbor12345&quot;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此处其实有点奇怪，后面其实将所有镜像只推送到 kubesphereio 这一个项目下。但此处又列表了26个项目，不知道青云的kk工具是不是有其他设计还没有实现</span><br>harbor_projects=(<br>    library<br>    kubesphereio<br>    kubesphere<br>    argoproj<br>    calico<br>    coredns<br>    openebs<br>    csiplugin<br>    minio<br>    mirrorgooglecontainers<br>    osixia<br>    prom<br>    thanosio<br>    jimmidyson<br>    grafana<br>    elastic<br>    istio<br>    jaegertracing<br>    jenkins<br>    weaveworks<br>    openpitrix<br>    joosthofman<br>    nginxdemos<br>    fluent<br>    kubeedge<br>    openpolicyagent<br>)<br><br>for project in &quot;$&#123;harbor_projects[@]&#125;&quot;; do<br>    echo &quot;creating $project&quot;<br>    curl -u &quot;$&#123;user&#125;:$&#123;passwd&#125;&quot; -X POST -H &quot;Content-Type: application/json&quot; &quot;$&#123;url&#125;/api/v2.0/projects&quot; -d &quot;&#123; \&quot;project_name\&quot;: \&quot;$&#123;project&#125;\&quot;, \&quot;public\&quot;: true&#125;&quot; -k<br>done<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行create_project_harbor.sh创建项目</span><br>root@registry:/opt/harbor# bash create_project_harbor.sh<br><span class="hljs-meta prompt_">#</span><span class="language-bash">提示“The project named library already exists”可以忽略，因为使用kk部署的Harbor中会创建一个默认的项目library</span><br></code></pre></td></tr></table></figure><h3 id="再次修改集群配置文件">5.7.3 再次修改集群配置文件</h3><p>正如官方离线部署文档中所述，使用kk部署harbor前需要前将<code>auths</code>部分注释掉，部署后启用并配置好正确的值。其余内容不变。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">修改k8sV12317-kspV341-offlineconfig.yaml 文件</span><br>root@k8s01-1:/opt/offline-deployk8sksp# vi k8sV12317-kspV341-offlineconfig.yaml<br>...<br>  registry:<br>    # 如需使用 kk 部署 harbor, 可将该参数设置为 harbor，不设置该参数且需使用 kk 创建容器镜像仓库，将默认使用docker registry。<br>    type: harbor<br>    # 如使用 kk 部署的 harbor 或其他需要登录的仓库，可设置对应仓库的auths，如使用 kk 创建的 docker registry 仓库，则无需配置该参数。<br>    # 注意：如使用 kk 部署 harbor，该参数请于 harbor 启动后设置。<br>    auths:<br>      &quot;registry.syjiang.com&quot;:<br>        username: admin<br>        password: Harbor12345<br>        certsPath: &quot;/etc/docker/certs.d/registry.syjiang.com&quot;<br>        skipTLSVerify: false # 即使 TLS校验失败了，仍允许通过HTTPS协议连接registry<br>        plainHTTP: false # 允许通过HTTP协议连接registry<br>    # 设置集群部署时使用的私有仓库<br>    privateRegistry: &quot;registry.syjiang.com&quot;<br>    namespaceOverride: &quot;kubesphereio&quot;<br>    registryMirrors: []<br>    insecureRegistries: []<br>...<br></code></pre></td></tr></table></figure><p>相关参数的解释如下：</p><ul><li>新增 <strong>auths</strong> 配置增加<strong>registry.syjiang.com</strong> 和账号密码。</li><li><strong>certsPath</strong> 配置docker连接 harbor时私有证书的存放目录。</li><li><strong>skipTLSVerify </strong>配置成false，即使 TLS校验失败了，仍允许通过HTTPS协议连接registry。</li><li><strong>plainHTTP</strong>配置成false，允许通过HTTP协议连接registry。</li><li><strong>privateRegistry</strong> 确认是配置成<strong>registry.syjiang.com</strong>。</li><li><strong>namespaceOverride</strong> 确认是配置成<strong><code>kubesphereio</code></strong>，它的作用就是K8S本身使用到的镜像只到<strong><code>registry.syjiang.com/kubesphereio</code></strong>下面去拉取，如果不配置的话有些镜像是会到另外的项目下拉取的比如<code>kube-system</code>空间中<code>pod/snapshot-controller-0</code>用到的镜像就是<strong><code>registry.syjiang.com/csiplugin/snapshot-controller:v4.0.0</code></strong>。</li></ul><h3 id="提前推送镜像到-harbor-仓库">5.7.4 提前推送镜像到 Harbor仓库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">执行如下命令推送镜像到 Harbor 仓库（全部会推送到kubesphereio 项目下）</span><br>root@k8s01-1:/opt/offline-deployk8sksp# ./kk artifact image push -f k8sV12317-kspV341-offlineconfig.yaml -a k8sV12317-kspV341-artifact.tar.gz<br></code></pre></td></tr></table></figure><h3 id="查看harbor镜像仓库">5.7.5 查看Harbor镜像仓库</h3><p>访问harbor镜像仓库的web管理界面，<code>url</code>是https://10.13.15.71，默认的用户名与密码分别是：admin、Harbor12345</p><p>可以看到如下26个项目，所有镜像都在 kubesphereio项目下，一共有121个不同名称镜像（标签不同另算）</p><figure><img src="https://s2.loli.net/2025/01/12/FYCbxXzr1iyqW2P.png"alt="image-20250112203033095" /><figcaption aria-hidden="true">image-20250112203033095</figcaption></figure><h1 id="六安装-kubesphere-和-k8s-集群">六、安装 KubeSphere 和 K8s集群</h1><h2 id="安装-k8s-与-ksp">6.1 安装 K8S 与 KSP</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">如果重复部署，/data/openebs/local 目录非空，请将此目录下的所有文件清空，否则安装可能失败、提示如下</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">TASK [common : debug] **********************************************************</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">ok: [localhost] =&gt; &#123;</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   <span class="hljs-string">&quot;msg&quot;</span>: [</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;1. check the storage configuration and storage server&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;2. make sure the DNS address in /etc/resolv.conf is available&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;3. execute &#x27;kubectl logs -n kubesphere-system -l job-name=minio-make-bucket-job&#x27; to watch logs&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;4. execute &#x27;helm -n kubesphere-system uninstall ks-minio &amp;&amp; kubectl -n kubesphere-system delete job minio-make-bucket-job&#x27;&quot;</span>,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">       <span class="hljs-string">&quot;5. Restart the installer pod in kubesphere-system namespace&quot;</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">   ]</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">&#125;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">执行以下命令，安装 KubeSphere 和 K8s 集群</span><br>root@k8s01-1:/opt/offline-deployk8sksp# ./kk create cluster -f k8sV12317-kspV341-offlineconfig.yaml -a k8sV12317-kspV341-artifact.tar.gz --with-packages --skip-push-images<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">另外打开一个终端，执行如下命令查看集群部署状态：</span><br>root@k8s01-1:~# kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l &#x27;app in (ks-install, ks-installer)&#x27; -o jsonpath=&#x27;&#123;.items[0].metadata.name&#125;&#x27;) -f<br></code></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><ul><li><strong>k8sV12317-kspV341-offlineconfig.yaml</strong>：离线环境集群的配置文件</li><li><strong>k8sV12317-kspV341-artifact.tar.gz</strong>：源集群打包出来的tar 包镜像</li><li><strong>--with-packages</strong>：表示安装安装操作系统依赖组件</li><li><strong>--skip-push-images：</strong>表示跳过推送镜像的操作（因为前文已经操作过了）</li></ul><p>安装成功完成后，会输出如下信息：</p><figure><img src="https://s2.loli.net/2025/01/13/TWuogpE9vHMLIhD.png"alt="image-20250113095155884" /><figcaption aria-hidden="true">image-20250113095155884</figcaption></figure><h2 id="配置时间同步服务-1">6.2 配置时间同步服务</h2><p>集群所有节点都要操作。在正式部署k8s+ksp集群过程中，会在集群所有节点上安装chrony服务并启动与开机自启动，但使用的默认时间同步服务器需要联网才能访问，离线环境肯定访问不了这些时间同步服务器。故需要使用自己本地的时间同步服务器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">1.查看节点chrony服务状态</span><br>root@k8s01-1:~# systemctl status chrony<br></code></pre></td></tr></table></figure><p>此时必须要有自己的本地部署的NTP时间同步服务器，自己想办法搭建（可以是k8s集群中任意节点，也可以是其他服务器）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">2.修改配置文件 /etc/chrony/chrony.conf，修改 ntp 服务配置</span><br>vi /etc/chrony/chrony.conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">将如下认的 pool 配置删除（离线环境中也用不上）</span><br>pool ntp.ubuntu.com        iburst maxsources 4<br>pool 0.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 1.ubuntu.pool.ntp.org iburst maxsources 1<br>pool 2.ubuntu.pool.ntp.org iburst maxsources 2<br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后配置自己本地的NTP服务器（最好是一台可以访问外网的服务器，这样它可以跟世界范围内的NTP服务器同步时间），NTP服务器步骤此文未涉及</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">假如10.13.15.20是本地NTP服务器，则添加如下配置（如果没有自己本地的时间同步服务器，最后所有节点是没有做严格时间同步的）</span><br>server 10.13.15.20 iburst<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">3.重启 chrony 服务：</span><br>systemctl restart chrony<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">4.验证 chrony 同步状态：</span><br>chronyc sourcestats -v<br></code></pre></td></tr></table></figure><h2 id="问题">6.3 问题</h2><h3 id="task-monitoring-执行失败">6.3.1 Task 'monitoring' 执行失败</h3><p>部署过程中此任务执行失败，但不影响部署主线过程成功完成，所以仍提示部署成功完成。只需要在部署完成后再处理下此任务相关资源对象即可</p><figure><img src="https://s2.loli.net/2025/01/13/N5K6mEL3iOxDCJT.png"alt="image-20250113095337670" /><figcaption aria-hidden="true">image-20250113095337670</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">具体报错文字形式描述如下</span>  <br>  &quot;stdout&quot;: &quot;fatal: [localhost]: FAILED! =&gt; &#123;\&quot;attempts\&quot;: 3, \&quot;changed\&quot;: true, \&quot;cmd\&quot;: \&quot;/usr/local/bin/helm upgrade --install notification-manager /kubesphere/kubesphere/notification-manager -f /kubesphere/kubesphere/notification-manager/custom-values-notification.yaml -n kubesphere-monitoring-system --force\\n\&quot;, \&quot;delta\&quot;: \&quot;0:05:06.023787\&quot;, \&quot;end\&quot;: \&quot;2025-01-12 23:08:54.785785\&quot;, \&quot;msg\&quot;: \&quot;non-zero return code\&quot;, \&quot;rc\&quot;: 1, \&quot;start\&quot;: \&quot;2025-01-12 23:03:48.761998\&quot;, \&quot;stderr\&quot;: \&quot;Error: UPGRADE FAILED: post-upgrade hooks failed: timed out waiting for the condition\&quot;, \&quot;stderr_lines\&quot;: [\&quot;Error: UPGRADE FAILED: post-upgrade hooks failed: timed out waiting for the condition\&quot;], \&quot;stdout\&quot;: \&quot;\&quot;, \&quot;stdout_lines\&quot;: []&#125;&quot;,<br>  &quot;uuid&quot;: &quot;4af3661f-0690-49dd-befe-2b1bdf6d1974&quot;<br></code></pre></td></tr></table></figure><p><strong>解决办法：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">当前现状</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system get pods<br>...<br>opensearch-cluster-data-0                                      0/1     Init:ImagePullBackOff   0          11h<br>opensearch-cluster-data-1                                      0/1     Init:ImagePullBackOff   0          11h<br>opensearch-cluster-master-0                                    0/1     Init:ImagePullBackOff   0          11h<br>opensearch-logging-curator-opensearch-curator-28945020-725qp   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-9rprk   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-h2rpk   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-kpm45   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-p2dl9   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-q82qn   0/1     Error                   0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-xkczm   0/1     Error                   0          8h<br><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system describe pod opensearch-cluster-master-0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">发现此pod中尝试拉取与使用镜像 busybox:latest ，竟然是尝试去docker.io 中拉取镜像</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">修改此pod/opensearch-cluster-master-0中使用的镜像为 registry.syjiang.com/kubesphereio/busybox:1.31.1</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system edit pod opensearch-cluster-master-0<br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后使用同样的方法修改 pod/opensearch-cluster-data-x 中使用的busybox:latest镜像为 registry.syjiang.com/kubesphereio/busybox:1.31.1</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system edit pod opensearch-cluster-data-xxx<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后可以看到pod/opensearch-cluster-master与pod/opensearch-cluster-data 都变成正常运行状态</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system get pods<br>NAME                                                           READY   STATUS    RESTARTS   AGE<br>...<br>opensearch-cluster-data-0                                      1/1     Running   0          11h<br>opensearch-cluster-data-1                                      1/1     Running   0          11h<br>opensearch-cluster-master-0                                    1/1     Running   0          11h<br>opensearch-logging-curator-opensearch-curator-28945020-725qp   0/1     Error     0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-9rprk   0/1     Error     0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-h2rpk   0/1     Error     0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-kpm45   0/1     Error     0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-p2dl9   0/1     Error     0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-q82qn   0/1     Error     0          8h<br>opensearch-logging-curator-opensearch-curator-28945020-xkczm   0/1     Error     0          9h<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####################################################################</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#附带问题1：pod/opensearch-logging-curator-opensearch-curator 仍然是 Error 状态</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####################################################################</span></span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/13/dJ8rIeTRNDsG5ph.png"alt="image-20250113100910415" /><figcaption aria-hidden="true">image-20250113100910415</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看其中一个pod/opensearch-logging-curator-opensearch-curator-28945020-725qp</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system describe pod opensearch-logging-curator-opensearch-curator-28945020-725qp<br>...<br>Controlled By:  Job/opensearch-logging-curator-opensearch-curator-28945020<br>...<br><span class="hljs-meta prompt_">#</span><span class="language-bash">过去了8个小时，此时事件已经为None</span><br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">发现上述pod/opensearch-logging-curator-opensearch-curator-28945020-725qp由Job/opensearch-logging-curator-opensearch-curator-28945020 控制</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">于是查看 Job/opensearch-logging-curator-opensearch-curator-28945020</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system describe job opensearch-logging-curator-opensearch-curator-28945020<br>Name:             opensearch-logging-curator-opensearch-curator-28945020<br>Namespace:        kubesphere-logging-system<br>Selector:         controller-uid=d759cadd-c7d9-46aa-9e1a-a2dada8a8597<br>Labels:           app=opensearch-curator<br>                  release=opensearch-logging-curator<br>Annotations:      revisions:<br>                    &#123;&quot;1&quot;:&#123;&quot;status&quot;:&quot;failed&quot;,&quot;reasons&quot;:[&quot;BackoffLimitExceeded&quot;],&quot;messages&quot;:[&quot;Job has reached the specified backoff limit&quot;],&quot;desire&quot;:1,&quot;failed&quot;:...<br>Controlled By:    CronJob/opensearch-logging-curator-opensearch-curator<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看CronJob/opensearch-logging-curator-opensearch-curator</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system describe cronjobs.batch opensearch-logging-curator-opensearch-curator <br>Name:                          opensearch-logging-curator-opensearch-curator<br>Namespace:                     kubesphere-logging-system<br>Labels:                        app=opensearch-curator<br>                               app.kubernetes.io/managed-by=Helm<br>                               chart=opensearch-curator-0.0.5<br>                               heritage=Helm<br>                               release=opensearch-logging-curator<br>Annotations:                   meta.helm.sh/release-name: opensearch-logging-curator<br>                               meta.helm.sh/release-namespace: kubesphere-logging-system<br>Schedule:                      0 1 * * *<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">由上可知，上述失败7个pod由Job/opensearch-logging-curator-opensearch-curator-28945020 控制，而Job/opensearch-logging-curator-opensearch-curator-28945020 由 CronJob/opensearch-logging-curator-opensearch-curator 控制。它每1个小时执行一次</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所以暂时可以不用理会上述报错的7个pod，如果想迅速看到成功的记录，可以去 kubesphere的web管理界面重新执行上述job</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2025/01/13/tbTjiM39XGsBowg.png"alt="image-20250113104345346" /><figcaption aria-hidden="true">image-20250113104345346</figcaption></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">可以看到新创建的 pod/opensearch-logging-curator-opensearch-curator-28945020-7r6ql 是Completed状态，表示正常完成</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system get pods<br>NAME                                                           READY   STATUS      RESTARTS   AGE<br>...<br>opensearch-logging-curator-opensearch-curator-28945020-725qp   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-7r6ql   0/1     Completed   0          24s<br>opensearch-logging-curator-opensearch-curator-28945020-9rprk   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-h2rpk   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-kpm45   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-p2dl9   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-q82qn   0/1     Error       0          9h<br>opensearch-logging-curator-opensearch-curator-28945020-xkczm   0/1     Error       0          9h<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看其日志</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system logs opensearch-logging-curator-opensearch-curator-28945020-7r6ql<br><span class="hljs-meta prompt_">#</span><span class="language-bash">其他7个处于Error 状态的pod/opensearch-logging-curator-opensearch-curator-28945020-xxx 是由job不断创建新pod直到达到尝试上限7而生成（spec.backoffLimit默认为6，即重试6次，共7个pod）pod都失败后，认为job失败</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">此时可以删除上述处于Error 状态的pod/opensearch-logging-curator-opensearch-curator-28945020-xxx，也可以不理会</span><br>root@k8s01-1:~# kubectl -n kubesphere-logging-system get pod | grep opensearch-logging-curator-opensearch-curator-28945020 | grep -v &quot;opensearch-logging-curator-opensearch-curator-28945020-7r6ql&quot; | awk &#x27;&#123;print $1&#125;&#x27; | xargs kubectl -n kubesphere-logging-system delete pod<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####################################################################</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#附带问题2：istio-system空间中pod/jaeger-es-index-cleaner-xxx 仍然是 Error 状态</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#####################################################################</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">root@k8s01-1:~# kubectl -n istio-system get pods</span><br>NAME                                     READY   STATUS    RESTARTS        AGE<br>istiod-1-14-6-775dfd88cd-jhc69           1/1     Running   0               12h<br>jaeger-collector-b4555bcd4-s9b9w         1/1     Running   139 (60m ago)   12h<br>jaeger-es-index-cleaner-28944955-52ggg   0/1     Error     0               11h<br>jaeger-es-index-cleaner-28944955-5fdln   0/1     Error     0               11h<br>jaeger-es-index-cleaner-28944955-6crz4   0/1     Error     0               10h<br>jaeger-es-index-cleaner-28944955-7hkwt   0/1     Error     0               11h<br>jaeger-es-index-cleaner-28944955-brdhh   0/1     Error     0               10h<br>jaeger-es-index-cleaner-28944955-dmrtx   0/1     Error     0               10h<br>jaeger-es-index-cleaner-28944955-mzx44   0/1     Error     0               11h<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">通过查看pod/jaeger-es-index-cleaner-28944955-52ggg 日志，发现其也是因为不能正常使用 ns/kubesphere-logging-system 下opensearch-cluster-data 相关svc与pod提供的服务而造成相关job执行失败</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">所以同样也可以去kubesphere的web界面重新执行 job/jaeger-es-index-cleaner-28944955 即可</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">然后将创建一个新的pod/jaeger-es-index-cleaner-28944955-tznkj 并是处于Completed 状态</span><br>root@k8s01-1:~# kubectl -n istio-system get pods<br>NAME                                     READY   STATUS      RESTARTS        AGE<br>istiod-1-14-6-775dfd88cd-jhc69           1/1     Running     0               12h<br>jaeger-collector-b4555bcd4-s9b9w         1/1     Running     139 (62m ago)   12h<br>jaeger-es-index-cleaner-28944955-52ggg   0/1     Error       0               11h<br>jaeger-es-index-cleaner-28944955-5fdln   0/1     Error       0               11h<br>jaeger-es-index-cleaner-28944955-6crz4   0/1     Error       0               11h<br>jaeger-es-index-cleaner-28944955-7hkwt   0/1     Error       0               11h<br>jaeger-es-index-cleaner-28944955-brdhh   0/1     Error       0               10h<br>jaeger-es-index-cleaner-28944955-dmrtx   0/1     Error       0               10h<br>jaeger-es-index-cleaner-28944955-mzx44   0/1     Error       0               11h<br>jaeger-es-index-cleaner-28944955-tznkj   0/1     Completed   0               9s<br>jaeger-operator-846bc67879-hwc7r         1/1     Running     0               12h<br>jaeger-query-579b5c5f7c-hhwk8            2/2     Running     137 (59m ago)   12h<br>kiali-6cd665f559-2g8mx                   1/1     Running     0               12h<br>kiali-operator-745866d585-xvfwh          1/1     Running     0               12h<br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除先前遗留下来的垃圾pod(可选)</span><br>root@k8s01-1:~# kubectl -n istio-system get pods  | grep Error | awk &#x27;&#123;print $1&#125;&#x27; | xargs kubectl -n istio-system delete pod<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">到目前为止 ，集群中所有pod都是正常运行状态或正常结束状态</span><br></code></pre></td></tr></table></figure><h2 id="部署结果验证">6.4 部署结果验证</h2><h3 id="命令行查看">6.4.1 命令行查看</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s集群节点列表</span><br>root@k8s01-1:~# kubectl get node<br>NAME      STATUS   ROLES                         AGE   VERSION<br>k8s01-1   Ready    control-plane,master,worker   12h   v1.23.17<br>k8s01-2   Ready    control-plane,master,worker   12h   v1.23.17<br>k8s01-3   Ready    control-plane,master,worker   12h   v1.23.17<br>k8s01-4   Ready    worker                        12h   v1.23.17<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看k8s集群组件状态</span><br>root@k8s01-1:~# kubectl get cs<br>Warning: v1 ComponentStatus is deprecated in v1.19+<br>NAME                 STATUS    MESSAGE             ERROR<br>controller-manager   Healthy   ok                  <br>scheduler            Healthy   ok                  <br>etcd-1               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   <br>etcd-2               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;   <br>etcd-0               Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125; <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看calico 节点</span><br>root@k8s01-1:~# calicoctl node status<br>Calico process is running.<br><br>IPv4 BGP status<br>+--------------+-------------------+-------+----------+-------------+<br>| PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |    INFO     |<br>+--------------+-------------------+-------+----------+-------------+<br>| 10.13.15.17  | node-to-node mesh | up    | 14:43:14 | Established |<br>| 10.13.15.161 | node-to-node mesh | up    | 14:43:15 | Established |<br>| 10.13.15.99  | node-to-node mesh | up    | 14:43:13 | Established |<br>+--------------+-------------------+-------+----------+-------------+<br>...<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">查看所有pod(集群中所有pod都是正常运行状态或正常结束状态)</span><br>root@k8s01-1:~# kubectl get pods -A -o wide<br></code></pre></td></tr></table></figure><h3 id="查看ksp3.4.1的web管理界面">6.4.2 查看ksp3.4.1的web管理界面</h3><p>访问kubesphere3.4.1的web管理界面：http://10.13.15.16:30880/login，默认用户名：admin，其默认密码：P@88w0rd</p><figure><img src="https://s2.loli.net/2025/01/13/uAV8QrZEKHyX35t.png"alt="image-20250113145359197" /><figcaption aria-hidden="true">image-20250113145359197</figcaption></figure><h2 id="控制节点配置keepalived">6.5 控制节点配置keepalived</h2><p>参考https://jiangsanyin.github.io/2024/08/10/%E6%90%AD%E5%BB%BA%E4%BA%92%E4%B8%BA%E4%B8%BB%E5%A4%87MySQL5-7%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2/#2-3-%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEkeepalived</p><h1 id="七参考文章">七、参考文章</h1><ul><li><p>kubesphere官网离线部署文档：https://www.kubesphere.io/zh/docs/v3.4/installing-on-linux/introduction/air-gapped-installation</p></li><li><p>kubesphere关于部署配置文件的描述：https://github.com/kubesphere/kubekey/blob/master/docs/config-example.md</p></li><li><p>kubesphere在cnblogs上的博文：https://www.cnblogs.com/kubesphere/p/18208852</p></li><li><p>运维博主运维有术文章：https://zhuanlan.zhihu.com/p/672059287</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>k8s云原生</category>
      
    </categories>
    
    
    <tags>
      
      <tag>amd64构架 k8s1.23.17 kubesphere3.4.1 离线部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>M3芯片MacOS14.6.1系统安装配置破解版SecureCRT与SecureFX</title>
    <link href="/2024/09/07/M3%E8%8A%AF%E7%89%87MacOS14-6-1%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E7%A0%B4%E8%A7%A3%E7%89%88SecureCRT%E4%B8%8ESecureFX/"/>
    <url>/2024/09/07/M3%E8%8A%AF%E7%89%87MacOS14-6-1%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E7%A0%B4%E8%A7%A3%E7%89%88SecureCRT%E4%B8%8ESecureFX/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景">一、背景</h1><p>​笔者平时工作、学习、生活以前使用图形化的Windows7/8/10/11操作系统居多，所以平时对Windows上的软件使用比较熟悉、习惯了。比如平时需要访问与使用Linux服务器时，就是在Windows系统上使用终端连接工具SecureCRT与文件传输工具SecureFX，最近有了使用M3芯片的Mac电脑的需求，还是想将在Mac电脑上安装这两个软件的Mac版。</p><p>相关软硬件版本：</p><table><thead><tr><th></th><th>软硬件名称</th><th>版本</th></tr></thead><tbody><tr><td>硬件</td><td>电脑</td><td>MacBook Pro</td></tr><tr><td></td><td>芯片</td><td>M3</td></tr><tr><td>软件</td><td>电脑操作系统</td><td>macOS Sonoma 版本14.6.1</td></tr><tr><td></td><td>SecureCRT</td><td>9.1.1</td></tr><tr><td></td><td>SecureFX</td><td>9.1.1</td></tr></tbody></table><h1 id="二实施步骤">二、实施步骤</h1><h2 id="下载安装文件">2.1 下载安装文件</h2><p>下载需要用到的SecureCRT9.1.1与SecureFX9.1.1安装文件，笔者已经保存在百度网盘，分离链接如下：</p><p>链接：https://pan.baidu.com/s/17XFbILxW63Jg7j43CLXlmw?pwd=zs41提取码：zs41</p><p>比如，我将下载得到的两个文件保存在家目录下的“Downloads”即“下载”目录下：</p><figure><img src="https://s2.loli.net/2024/09/07/1h2ISsATrbz68dn.png"alt="image-20240907215529191" /><figcaption aria-hidden="true">image-20240907215529191</figcaption></figure><h2 id="安装与配置securecrt9.1.1">2.2 安装与配置SecureCRT9.1.1</h2><h3 id="安装securecrt9.1.1">2.2.1 安装SecureCRT9.1.1</h3><p>双击“SecureCRT_9.1.1_macyy.cn.dmg”，选择同意后，将看到如下窗口。按照下图中提示操作。</p><figure><img src="https://s2.loli.net/2024/09/07/hoqDXFWcIMSjzH3.png"alt="image-20240907220524436" /><figcaption aria-hidden="true">image-20240907220524436</figcaption></figure><p>然后进入MacBookPro的”应用程序“窗口，双击尝试打开SecureCRT，但此时SecureCRT会提示导入license文件或直接输入license，我们现在直接选择“close”关闭此软件。</p><h3 id="破解securecrt9.1.1">2.2.2 破解SecureCRT9.1.1</h3><p>打开上图中“激活步骤”，按照其中说明操作。在 Mac电脑中使用"command +shift +g"组合键，打开“前往”窗口，输入“~/Library/ApplicationSupport/VanDyke/”</p><figure><img src="https://s2.loli.net/2024/09/07/i498nLujyp5gZKd.png"alt="image-20240907220839326" /><figcaption aria-hidden="true">image-20240907220839326</figcaption></figure><p>在打开的文件夹窗口，双击“SecureCRT”文件夹，将前面提到的"SecureCRT_SecureFX.lic"文件拷贝到此文件夹下。拷贝完成后如下：</p><figure><img src="https://s2.loli.net/2024/09/07/VaAG7L1lPxNzbu3.png"alt="image-20240907221349322" /><figcaption aria-hidden="true">image-20240907221349322</figcaption></figure><p>此时再打开SecureCRT软件，就不会再提示你输入license了，而是直接进入SecureCRT使用界面了，大致如下：</p><figure><img src="https://s2.loli.net/2024/09/07/TUbpjIGAf2ODLaV.png"alt="image-20240907221856712" /><figcaption aria-hidden="true">image-20240907221856712</figcaption></figure><p>至此，SecureCRT9.1.1破解版已经安装好，功能上已经能够正常使用。</p><h3 id="配置securecrt9.1.1">2.2.3 配置SecureCRT9.1.1</h3><p>Mac版的SecureCRT的配置菜单是不显示出来的，在SecureCRT使用界面边缘空白处“鼠标右键”或者“Mac触摸屏上食指+中指轻击”，将弹出如下小弹窗，单击它。</p><figure><img src="https://s2.loli.net/2024/09/07/NuOnDLTmbJjr5yI.png"alt="image-20240907222206709" /><figcaption aria-hidden="true">image-20240907222206709</figcaption></figure><p>单击后，将弹出如下窗口。将其中常用的工具拖放到“SecureCRT使用界面边缘空白处”</p><figure><img src="https://s2.loli.net/2024/09/07/CuVwyfv3zSig2Gn.png"alt="image-20240907222429909" /><figcaption aria-hidden="true">image-20240907222429909</figcaption></figure><p>之后将在“SecureCRT使用界面边缘空白处”看到如下一个“扳手+起子的图标”，这就是配置窗口的入口处</p><figure><img src="https://s2.loli.net/2024/09/07/Ikr49BJTb6fjtNv.png"alt="image-20240907223244480" /><figcaption aria-hidden="true">image-20240907223244480</figcaption></figure><h4 id="配置终端窗口背景色为豆沙绿">2.2.3.1配置终端窗口背景色为豆沙绿</h4><figure><img src="https://s2.loli.net/2024/09/07/bTe9JHUcwkf2umy.png"alt="image-20240907223117166" /><figcaption aria-hidden="true">image-20240907223117166</figcaption></figure><figure><img src="https://s2.loli.net/2024/09/07/W7XimBIjPlL2uKU.png"alt="image-20240907222959748" /><figcaption aria-hidden="true">image-20240907222959748</figcaption></figure><p>这样，创建Session后，打开的会话中背景色就是豆沙绿的（听说这样有助于保护眼睛，不论真假反正笔者已经用习惯这种背景色）</p><h4 id="配置终端窗口字符样式如大小">2.2.3.2配置终端窗口字符样式如大小</h4><figure><img src="https://s2.loli.net/2024/09/07/GdmUC78haWKYnib.png"alt="image-20240907223619566" /><figcaption aria-hidden="true">image-20240907223619566</figcaption></figure><p>设置字符的字体与大小。笔者下图字体保持默认，只设置了字符大小：</p><figure><img src="https://s2.loli.net/2024/09/07/jsNRgXFtOwPMqWy.png"alt="image-20240907223930227" /><figcaption aria-hidden="true">image-20240907223930227</figcaption></figure><p>之后新创建的终端窗口就是如下样式：</p><figure><img src="https://s2.loli.net/2024/09/07/qbTCntJPDBskXem.png"alt="image-20240907224136221" /><figcaption aria-hidden="true">image-20240907224136221</figcaption></figure><h4 id="设置会话文件传输协议为sftp">2.2.3.3设置会话文件传输协议为sftp</h4><figure><img src="https://s2.loli.net/2024/09/07/YHCVmNgUFo6t2pS.png"alt="image-20240907225419343" /><figcaption aria-hidden="true">image-20240907225419343</figcaption></figure><h2 id="安装与配置securefx9.1.1">2.3 安装与配置SecureFX9.1.1</h2><h3 id="安装与破解securefx9.1.1">2.3.1 安装与破解SecureFX9.1.1</h3><p>双击“SecureFX_9.1.1_macyy.cn.dmg”，选择同意后，将看到如下窗口。按照下图中提示操作。</p><p>其实，如果你先前按照前述步骤安装、破解了SecureCRT9.1.1的话，只需要执行下图中的步骤1即可，因为SecureCRT9.1.1与SecureFX_9.1.1的破解文件文件与内容是一样的，且放在同一个目录下</p><figure><img src="https://s2.loli.net/2024/09/07/IeXNm7OARfpzQno.png"alt="image-20240907224319446" /><figcaption aria-hidden="true">image-20240907224319446</figcaption></figure><p>此时就可以正常打开SecureFX软件来传输文件了。</p><h3 id="从securecrt9.1.1会话中直接打开securefx9.1.1会话">2.3.2从SecureCRT9.1.1会话中直接打开SecureFX9.1.1会话</h3><p>此时，你创建了一个SecureCRT会话后，在会话tab标题上右键，可以看到”OpenSecureFX“选项，但如果现在直接点击并不能连接对应的服务器成功，显示如下：</p><figure><img src="https://s2.loli.net/2024/09/07/Fr3PMTKUDZjfuGd.png"alt="image-20240907225301379" /><figcaption aria-hidden="true">image-20240907225301379</figcaption></figure><p>解决方法是修改SecureCRT中的配置，具体见SecureCRT”设置会话文件传输协议为sftp“章节内容。然后重新创建SecureCRT会话，再操作就成功。</p><figure><img src="https://s2.loli.net/2024/09/07/6TRDgvJMCXdiblL.png"alt="image-20240907225837472" /><figcaption aria-hidden="true">image-20240907225837472</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>软件破解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>M3芯片 MacOS14.6.1 破解 SecureCRT SecureFX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建互为主备MySQL5.7集群并实现自动切换</title>
    <link href="/2024/08/10/%E6%90%AD%E5%BB%BA%E4%BA%92%E4%B8%BA%E4%B8%BB%E5%A4%87MySQL5-7%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2/"/>
    <url>/2024/08/10/%E6%90%AD%E5%BB%BA%E4%BA%92%E4%B8%BA%E4%B8%BB%E5%A4%87MySQL5-7%E9%9B%86%E7%BE%A4%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景">一、背景</h1><p>服务器：两个x86服务器（本文使用的是两个OpenStack虚拟机）</p><p>MySQL版本信息：mysql-5.7.36-linux-glibc2.12-x86_64</p><p>其中，两个服务器及操作系统的信息如下：</p><table><thead><tr><th>主机名</th><th>IP</th><th>用途</th><th>规格</th><th>磁盘空间</th><th>操作系统</th></tr></thead><tbody><tr><td>ztmonitor01</td><td>172.20.180.44</td><td>互为主从数据库中的节点1</td><td>4c16g</td><td>500G</td><td>Centos7.9-amd64</td></tr><tr><td>ztmonitor02</td><td>172.20.180.165</td><td>互为主从数据库中的节点2</td><td>4c16g</td><td>500G</td><td>Centos7.9-amd64</td></tr><tr><td>~</td><td>172.20.180.43</td><td>Keepalived的虚拟IP</td><td>~</td><td>~</td><td>~</td></tr></tbody></table><p>如无特殊说明，所有终端命令操作都是以root用户执行的。</p><p>按照此文档最终实现的效果：两个MySQL数据库实例组成一个互为主备MySQL集群，同一时间只有一个数据库会对提供服务。两个数据库实例分别在不同的节点1与节点2上，在两个节点上部署了keepalived服务（两个节点的优先级相同，先运行的即为keepalived集群master节点，后面只有当角色为master的节点上的keepalived停掉才会出现keepalived角色切换），通过针对keepalived的notify_master、notify_backup、notify_stop与vrrp_script编写自定义脚本程序实现两个节点上的数据库实例中数据的同步。</p><h1 id="二搭建配置步骤">二、搭建配置步骤</h1><h2 id="安装-mysql-实例">2.1 安装 MySQL 实例</h2><p>MySQL5.7安装文件下载地址：https://mirrors.aliyun.com/mysql/MySQL-5.7/mysql-5.7.36-linux-glibc2.12-x86_64.tar.gz</p><h3 id="节点1上安装数据库实例">2.1.1 节点1上安装数据库实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#1解压MySQL5.7.36</span><br>[root@ztmonitor01 ~]# <span class="hljs-built_in">cd</span> /data/softs<br>[root@ztmonitor01 softs]# wget https://mirrors.aliyun.com/mysql/MySQL-5.7/mysql-5.7.36-linux-glibc2.12-x86_64.tar.gz<br>[root@ztmonitor01 softs]# tar xf mysql-5.7.36-linux-glibc2.12-x86_64.tar.gz -C /usr/local/<br>[root@ztmonitor01 softs]# <span class="hljs-built_in">mv</span> /usr/local/mysql-5.7.36-linux-glibc2.12-x86_64 /usr/local/mysql<br><br><span class="hljs-comment">#2设置MySQL的环境变量</span><br>[root@ztmonitor01 softs]# vi /etc/profile<br><span class="hljs-built_in">export</span> MYSQL_HOME=/usr/local/mysql<br>PATH=<span class="hljs-variable">$MYSQL_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=:<span class="hljs-variable">$MYSQL_HOME</span>/lib<br><br><span class="hljs-comment">#3创建mysql用户组与用户</span><br>[root@ztmonitor01 softs]# groupadd -r mysql<br>[root@ztmonitor01 softs]# useradd -M -r -s /sbin/nologin -g mysql mysql<br><br><span class="hljs-comment">#4准备数据目录、设置属主与属组为mysql:mysql</span><br>[root@ztmonitor01 softs]# <span class="hljs-built_in">mkdir</span> /data/mysql<br>[root@ztmonitor01 softs]# <span class="hljs-built_in">chown</span> -R mysql. /data/mysql<br><br><span class="hljs-comment">#5初始化数据库</span><br>[root@ztmonitor01 softs]# <span class="hljs-built_in">source</span> /etc/profile<br>[root@ztmonitor01 softs]# mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql<br><br><span class="hljs-comment">#6准备mysql配置文件（#每个MySQL数据库的server_id都设置成不同的）</span><br>[root@ztmonitor01 softs]# vi /etc/my.cnf                                                                                         <br>[mysqld]<br>user=mysql<br>port=3306<br>server_id=1   <span class="hljs-comment">#各个MySQL数据库服务端都有一个唯一id</span><br>basedir=/usr/local/mysql<br>datadir=/data/mysql<br>log_bin=mysql-bin        <span class="hljs-comment">#开启binlog，binlog日志文件只对增删改有记录，查询操作是没有记录的</span><br>gtid-mode=on<br>enforce-gtid-consistency=<span class="hljs-literal">true</span><br>socket=/data/mysql.sock<br>log_error=/data/mysql/mysql_err.log<br>character-set-server=utf8<br>symbolic-links=0<br>expire_logs_days=10<br>default_password_lifetime=0     <span class="hljs-comment">#设置密码不过期</span><br>[mysql]<br>socket=/data/mysql.sock<br><br><span class="hljs-comment">#7使用systemd托管mysql服务</span><br>[root@ztmonitor01 softs]# <span class="hljs-built_in">cat</span> /usr/lib/systemd/system/mysqld.service<br>[Unit]<br>Description=MySQL Server<br>Documentation=man:mysqld(8)<br>Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html<br>After=network.target<br>After=syslog.target<br>[Install]<br>WantedBy=multi-user.target<br>[Service]<br>User=mysql<br>Group=mysql<br>ExecStart=/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf<br>LimitNOFILE=5000<br><br><span class="hljs-comment">#8启动数据库</span><br>[root@ztmonitor01 softs]# systemctl daemon-reload <br>[root@ztmonitor01 softs]# systemctl start mysqld<br>[root@ztmonitor01 softs]# systemctl <span class="hljs-built_in">enable</span> mysqld<br>[root@ztmonitor01 softs]# systemctl status mysqld<br><br><span class="hljs-comment">#9设置root密码(此处设置为123456)</span><br>[root@ztmonitor01 softs]# mysqladmin -u root -P 3306 password <span class="hljs-string">&#x27;123456&#x27;</span><br><br><span class="hljs-comment">#10登录数据库</span><br>[root@ztmonitor01 softs]# mysql -uroot -p123456<br><span class="hljs-comment">#下面的%表示允许任何ip访问此mysql数据库</span><br>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;123456&#x27;</span> WITH GRANT OPTION;<br>mysql&gt; flush privileges;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br><br></code></pre></td></tr></table></figure><h3 id="节点2上安装数据库实例">2.1.2 节点2上安装数据库实例</h3><p>注意，ztmonitor02上的操作与ztmonitor01上的几乎一样，但/etc/my.cnf文件中[mysqld]下面的server_id配置项的值一定要不同。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#1解压MySQL5.7.36</span><br>[root@ztmonitor02 ~]# tar xf /data/softs/mysql-5.7.36-linux-glibc2.12-x86_64.tar.gz -C /usr/local/<br>[root@ztmonitor02 ~]# <span class="hljs-built_in">mv</span> /usr/local/mysql-5.7.36-linux-glibc2.12-x86_64 /usr/local/mysql<br><br><span class="hljs-comment">#2设置MySQL的环境变量</span><br>[root@ztmonitor02 ~]# vi /etc/profile<br><span class="hljs-built_in">export</span> MYSQL_HOME=/usr/local/mysql<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$MYSQL_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=:/usr/local/mysql/lib<br><br><span class="hljs-comment">#3创建mysql用户组与用户</span><br>[root@ztmonitor02 ~]# groupadd -r mysql<br>[root@ztmonitor02 ~]# useradd -M -r -s /sbin/nologin -g mysql mysql<br><br><span class="hljs-comment">#4准备数据目录</span><br>[root@ztmonitor02 ~]# <span class="hljs-built_in">mkdir</span> /data/mysql<br>[root@ztmonitor02 ~]# <span class="hljs-built_in">chown</span> -R mysql.mysql /data/mysql<br><br><span class="hljs-comment">#5准备mysql配置文件</span><br>[root@ztmonitor02 ~]# vi /etc/my.cnf<br>[mysqld]<br>user=mysql<br>port=3306<br>server_id=2   <span class="hljs-comment">#各个MySQL数据库服务端都有一个唯一id</span><br>basedir=/usr/local/mysql<br>datadir=/data/mysql<br>log_bin=mysql-bin        <span class="hljs-comment">#开启binlog，binlog日志文件只对增删改有记录，查询操作是没有记录的</span><br>gtid-mode=on<br>enforce-gtid-consistency=<span class="hljs-literal">true</span><br>socket=/data/mysql.sock<br>log_error=/data/mysql/mysql_err.log<br>character-set-server=utf8<br>symbolic-links=0<br>expire_logs_days=10<br>default_password_lifetime=0     <span class="hljs-comment">#设置密码不过期</span><br>[mysql]<br>socket=/data/mysql.sock<br><br><span class="hljs-comment">#6初始化数据库</span><br>[root@ztmonitor02 ~]# <span class="hljs-built_in">source</span> /etc/profile<br>[root@ztmonitor02 ~]# mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysql<br><br><span class="hljs-comment">#7使用systemd托管mysql服务</span><br>[root@ztmonitor02 ~]# vi /usr/lib/systemd/system/mysqld.service<br>[Unit]<br>Description=MySQL Server<br>Documentation=man:mysqld(8)<br>Documentation=http://dev.mysql.com/doc/refman/en/using-systemd.html<br>After=network.target<br>After=syslog.target<br>[Install]<br>WantedBy=multi-user.target<br>[Service]<br>User=mysql<br>Group=mysql<br>ExecStart=/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf<br>LimitNOFILE = 5000<br><br><span class="hljs-comment">#8启动数据库</span><br>[root@ztmonitor02 ~]# systemctl daemon-reload <br>[root@ztmonitor02 ~]# systemctl start mysqld<br>[root@ztmonitor02 ~]# systemctl <span class="hljs-built_in">enable</span> mysqld<br>[root@ztmonitor02 ~]# systemctl status mysqld<br><br><span class="hljs-comment">#9设置root密码</span><br>[root@ztmonitor02 ~]# mysqladmin -u root password <span class="hljs-string">&#x27;123456&#x27;</span><br><br><span class="hljs-comment">#10登录数据库</span><br>[root@ztmonitor02 ~]# mysql -uroot -p123456<br><br><span class="hljs-comment">#下面的%表示允许任何ip访问此mysql数据库</span><br>mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;123456&#x27;</span> WITH GRANT OPTION;<br>mysql&gt; flush privileges;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br></code></pre></td></tr></table></figure><h3 id="确认两数据库实例id">2.1.3 确认两数据库实例id</h3><p>如下可以看到两个数据库实例的id是不同的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#节点1</span><br>[root@ztmonitor01 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;select @@server_id&quot;</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>+-------------+<br>| @@server_id |<br>+-------------+<br>|           1 |<br>+-------------+<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#节点2</span><br>[root@ztmonitor02 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;select @@server_id&quot;</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>+-------------+<br>| @@server_id |<br>+-------------+<br>|           2 |<br>+-------------+<br></code></pre></td></tr></table></figure><h2 id="配置互为主备mysql集群">2.2 配置互为主备MySQL集群</h2><p>上面，MySQL数据库集群的两个实例节点已经搭建完成了，下面将这些搭建的数据库实例配置成互为主备复制集群。</p><p>配置 MySQL 主备复制集群的大致步骤：</p><ul><li>主库开启 Binlog 日志，从库复制主库数据要通过 Binlog 进行复制。</li><li>主库创建专门用作主从复制的用户。</li><li>将主库数据进行备份，再从库中恢复（如果主库与从库都是新搭建的，无内容需要恢复，此步骤可跳过）。</li><li>配置从库连接主库的复制信息。</li><li>启动主从复制集群。</li></ul><h3 id="确认数据库节点已开启-binlog">2.2.1 确认数据库节点已开启Binlog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;show variables like &#x27;%log_bin%&#x27;;&quot;</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>+---------------------------------+-----------------------------+<br>| Variable_name                   | Value                       |<br>+---------------------------------+-----------------------------+<br>| log_bin                         | ON                          |<br>| log_bin_basename                | /data/mysql/mysql-bin       |<br>| log_bin_index                   | /data/mysql/mysql-bin.index |<br>| log_bin_trust_function_creators | OFF                         |<br>| log_bin_use_v1_row_events       | OFF                         |<br>| sql_log_bin                     | ON                          |<br>+---------------------------------+-----------------------------+<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor02 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;show variables like &#x27;%log_bin%&#x27;;&quot;</span><br>mysql: [Warning] Using a password on the <span class="hljs-built_in">command</span> line interface can be insecure.<br>+---------------------------------+-----------------------------+<br>| Variable_name                   | Value                       |<br>+---------------------------------+-----------------------------+<br>| log_bin                         | ON                          |<br>| log_bin_basename                | /data/mysql/mysql-bin       |<br>| log_bin_index                   | /data/mysql/mysql-bin.index |<br>| log_bin_trust_function_creators | OFF                         |<br>| log_bin_use_v1_row_events       | OFF                         |<br>| sql_log_bin                     | ON                          |<br>+---------------------------------+-----------------------------+<br></code></pre></td></tr></table></figure><p>可以看到，两个数据库实例的log_bin都是开启的。从库复制主库（主库与从库是可以切换的，比如节点1在某情况下是主库，但在某情况又会切换成备库）数据与恢复数据，都是通过Binlog 进行的。</p><h3 id="创建主从复制的用户">2.2.2 创建主从复制的用户</h3><p>两个数据库实例上都要执行，执行的如下相同的命令即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#创建用户replication，密码是replication，此用户能从任何ip登录进主库，对所有数据库的所有成员拥有replication slave权限<br>mysql&gt; GRANT REPLICATION SLAVE,REPLICATION CLIENT ON *.* TO replication@&#x27;%&#x27; IDENTIFIED BY &#x27;replication&#x27;;<br>mysql&gt; flush  privileges;<br>mysql&gt; exit;<br></code></pre></td></tr></table></figure><h3 id="在节点1上执行同步操作">2.2.3 在节点1上执行同步操作</h3><p>首先在节点2上查询其上的数据库实例状态信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; show master status;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/Gc35WMoYOBq1VdN.png"alt="image-20240810231040169" /><figcaption aria-hidden="true">image-20240810231040169</figcaption></figure><p>记住此File列与Position列的值mysql-bin.000002、1327</p><p>以下命令在节点1上执行（节点1数据库实例的主库是节点2上的数据库实例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; change master to master_host=&#x27;172.20.180.165&#x27;,master_port=3306,master_user=&#x27;replication&#x27;,master_password=&#x27;replication&#x27;,master_log_file=&#x27;mysql-bin.000002&#x27;,master_log_pos=1327;<br>mysql&gt; start slave;<br>mysql&gt; show slave status\G<br>mysql&gt; exit;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/xhAfS13TQPMV8CX.png"alt="image-20240810231319922" /><figcaption aria-hidden="true">image-20240810231319922</figcaption></figure><figure><img src="https://s2.loli.net/2024/08/10/wtzhCG8RNcvbOYQ.png"alt="image-20240810231352704" /><figcaption aria-hidden="true">image-20240810231352704</figcaption></figure><h3 id="在节点2上执行同步操作">2.2.4 在节点2上执行同步操作</h3><p>首先在节点1上查询其上的数据库实例状态信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; show master status;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/UpgA36Oad1PWfqi.png"alt="image-20240810231523835" /><figcaption aria-hidden="true">image-20240810231523835</figcaption></figure><p>记住此File列与Position列的值mysql-bin.000002、1327</p><p>以下命令在节点2上执行（节点2数据库实例的主库是节点1上的数据库实例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; change master to master_host=&#x27;172.20.180.44&#x27;,master_port=3306,master_user=&#x27;replication&#x27;,master_password=&#x27;replication&#x27;,master_log_file=&#x27;mysql-bin.000002&#x27;,master_log_pos=1327;<br>mysql&gt; start slave;<br>mysql&gt; show slave status\G<br>mysql&gt; exit;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/3QTtGlup4D9gXAw.png"alt="image-20240810231640870" /><figcaption aria-hidden="true">image-20240810231640870</figcaption></figure><h3 id="验证互为主从数据库生效">2.2.5 验证互为主从数据库生效</h3><p>在节点1上的MySQL数据库实例中创建数据库db01。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;create database db01;&quot;</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/mWdKCJLaDy13Rol.png"alt="image-20240810231810961" /><figcaption aria-hidden="true">image-20240810231810961</figcaption></figure><p>在节点2上的MySQL数据库实例中创建数据库db02。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor02 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;create database db02;&quot;</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/10/safScmyirpjn3XT.png"alt="image-20240810231906754" /><figcaption aria-hidden="true">image-20240810231906754</figcaption></figure><p>#在节点1或节点2上的MySQL数据库实例上查看现有的所有数据库名称（正常情况下，在任何一方对所有数据库的所有操作都会同步）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">mysql&gt; show databases;<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/T4HmEsuwS8i3A9J.png"alt="image-20240810232108875" /><figcaption aria-hidden="true">image-20240810232108875</figcaption></figure><h3 id="创建切换脚本">2.2.6 创建切换脚本</h3><p>这些脚本只存在于MySQL集群的节点1与节点2上。</p><p>切换脚本规划，将所有切换脚本放在/data/server/mysql目录下，相关脚本说明如下：</p><p>创建并进入/data/server/mysql目录，如下文件：</p><ul><li>Logs 　 //存储日志的文件目录</li><li>mybackup.sh//清空slave配置，重新获取远程日志文件及Pos,并开启同步</li><li>mycheck.sh//检查mysql运行状态，如果运行正常，退出。如果运行不正常调用pkillkeepalived</li><li>mymaster.sh//先判断同步复制是否执行完成，如果未执行完成等待1分钟后，停止同步（stopslave;），并且记录切换后的日志和pos</li><li>.mysqlenv //脚本运行环境文件</li><li>mystop.sh//设置参数保证数据不丢失，最后检查看是否还有写操作，最后1分钟退出</li><li>syncposfile //每次切换后，Master最后一次File值和Position值。</li></ul><p><strong>注</strong>：这些脚本参考自此文章https://www.cnblogs.com/saneri/p/11423059.html（感谢），但自己做了少许改动与验证</p><h3 id="环境变量文件">2.2.7 环境变量文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在两个节点上都执行如下操作</span><br><span class="hljs-built_in">mkdir</span> /data/server/mysql<br><span class="hljs-built_in">cd</span> /data/server/mysql<br></code></pre></td></tr></table></figure><h4 id="节点1上的环境文件">2.2.7.1 节点1上的环境文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#节点1的ip是172.20.180.44，下面REMOTE_IP应该配置成节点2的ip（172.20.180.165）</span><br>[root@ztmonitor01 mysql]# vi .mysqlenv<br>MYSQL=/usr/local/mysql/bin/mysql<br>MYSQL_CMD=<span class="hljs-string">&quot;-uroot -p123456&quot;</span><br><span class="hljs-comment">#远端主机的IP地址</span><br>REMOTE_IP=172.20.180.165<br><span class="hljs-built_in">export</span> mysql=<span class="hljs-string">&quot;<span class="hljs-variable">$MYSQL</span> <span class="hljs-variable">$MYSQL_CMD</span> &quot;</span><br></code></pre></td></tr></table></figure><h4 id="节点2上的环境文件">2.2.7.2 节点2上的环境文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#节点2的ip是172.20.180.165，下面REMOTE_IP应该配置成节点1的ip（172.20.180.44）</span><br>[root@ztmonitor02 mysql]# vi .mysqlenv<br>MYSQL=/usr/local/mysql/bin/mysql<br>MYSQL_CMD=<span class="hljs-string">&quot;-uroot -p123456&quot;</span><br><span class="hljs-comment">#远端主机的IP地址</span><br>REMOTE_IP=172.20.180.44<br><span class="hljs-built_in">export</span> mysql=<span class="hljs-string">&quot;<span class="hljs-variable">$MYSQL</span> <span class="hljs-variable">$MYSQL_CMD</span> &quot;</span><br></code></pre></td></tr></table></figure><h3 id="服务检查脚本">2.2.8 服务检查脚本</h3><p>在两个节点上，以下4个脚本文件的内容是一样的。</p><h4 id="检查脚本mycheck.sh">2.2.8.1 检查脚本mycheck.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# <span class="hljs-built_in">cat</span> mycheck.sh<br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment">##################################################</span><br><span class="hljs-comment">#File Name  : mycheck.sh</span><br><span class="hljs-comment">#Description: mysql is working MYSQL_OK is 1</span><br><span class="hljs-comment">#             mysql is down MYSQL_OK is 0</span><br><span class="hljs-comment">##################################################</span><br><br>BASEPATH=/data/server/mysql<br>LOGSPATH=<span class="hljs-variable">$BASEPATH</span>/logs<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$BASEPATH</span>/.mysqlenv<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-variable">$LOGSPATH</span> ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$LOGSPATH</span><br><span class="hljs-keyword">fi</span><br><br>CHECK_TIME=3<br>MYSQL_OK=1<br><span class="hljs-comment">##################################################################</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">check_mysql_helth</span></span> ()&#123;<br>  <span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show status;&quot;</span> &gt;/dev/null 2&gt;&amp;1<br>  <span class="hljs-keyword">if</span> [ $? == 0 ]<br>  <span class="hljs-keyword">then</span> <br>    MYSQL_OK=1<br>  <span class="hljs-keyword">else</span><br>    MYSQL_OK=0<br>    <span class="hljs-comment">#systemctl status keepalived</span><br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-built_in">return</span> <span class="hljs-variable">$MYSQL_OK</span><br>&#125;<br><br><span class="hljs-comment">#check_mysql_helth</span><br><span class="hljs-keyword">while</span> [ <span class="hljs-variable">$CHECK_TIME</span> -ne 0 ] <span class="hljs-comment">#不等于</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-built_in">let</span> <span class="hljs-string">&quot;CHECK_TIME -= 1&quot;</span><br>  check_mysql_helth<br>  <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$MYSQL_OK</span> = 1 ];<span class="hljs-keyword">then</span><br>    CHECK_TIME=0<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The scripts mycheck.sh is running ...&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>    <span class="hljs-built_in">exit</span> 0<br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$MYSQL_OK</span> -eq 0 ] &amp;&amp; [ <span class="hljs-variable">$CHECK_TIME</span> -eq 0 ]<br>  <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The mycheck.sh, mysql is down, after switch...&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>    systemctl stop keepalived<br>    <span class="hljs-built_in">exit</span> 1<br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-built_in">sleep</span> 1<br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h4 id="切换脚本mymaster.sh">2.2.8.2 切换脚本mymaster.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# vi mymaster.sh<br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment">##################################################</span><br><span class="hljs-comment">#File Name  : mymaster.sh</span><br><span class="hljs-comment">#Description: First determine whether synchronous</span><br><span class="hljs-comment">#             replication is performed, and if no</span><br><span class="hljs-comment">#             execution is completed, wait for 1</span><br><span class="hljs-comment">#             minutes. Log logs and POS after</span><br><span class="hljs-comment">#             switching, and record files synchronously.</span><br><span class="hljs-comment">##################################################</span><br><br>BASEPATH=/data/server/mysql<br>LOGSPATH=<span class="hljs-variable">$BASEPATH</span>/logs<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$BASEPATH</span>/.mysqlenv<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-variable">$LOGSPATH</span> ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$LOGSPATH</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show slave status\G&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/mysqlslave.states<br>Master_Log_File=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlslave.states | grep -w Master_Log_File | awk -F<span class="hljs-string">&quot;: &quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>Relay_Master_Log_File=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlslave.states | grep -w Relay_Master_Log_File | awk -F<span class="hljs-string">&quot;: &quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>Read_Master_Log_Pos=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlslave.states | grep -w Read_Master_Log_Pos | awk -F<span class="hljs-string">&quot;: &quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>Exec_Master_Log_Pos=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlslave.states | grep -w Exec_Master_Log_Pos | awk -F<span class="hljs-string">&quot;: &quot;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>i=1<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$Master_Log_File</span> = <span class="hljs-variable">$Relay_Master_Log_File</span> ] &amp;&amp; [ <span class="hljs-variable">$Read_Master_Log_Pos</span> -eq <span class="hljs-variable">$Exec_Master_Log_Pos</span> ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The mymaster.sh, slave sync ok... &quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>    <span class="hljs-built_in">break</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">sleep</span> 1<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$i</span> -gt 60 ];<span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">break</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">continue</span><br>    <span class="hljs-built_in">let</span> i++<br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment">#$mysql -e &quot;stop slave;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_support_xa=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global sync_binlog=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_flush_log_at_trx_commit=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;flush logs;GRANT ALL PRIVILEGES ON *.* TO &#x27;replication&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;replication&#x27;;flush privileges;&quot;</span><br>timestr=`<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%y%m%d-%H%M&quot;</span>`<br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show master status;&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/master_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt<br><br><span class="hljs-comment"># sync pos file</span><br>ssh -t root@<span class="hljs-variable">$REMOTE_IP</span> <span class="hljs-string">&quot;if [ ! -d <span class="hljs-variable">$BASEPATH</span>/syncposfile ];then mkdir -p <span class="hljs-variable">$BASEPATH</span>/syncposfile; fi&quot;</span> &gt;&gt; /dev/null<br>/usr/bin/scp <span class="hljs-variable">$LOGSPATH</span>/master_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt root@<span class="hljs-variable">$REMOTE_IP</span>:<span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The mymaster.sh, Sync pos file sucess.&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br></code></pre></td></tr></table></figure><h4 id="回切脚本mybackup.sh">2.2.8.3 回切脚本mybackup.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# vi mybackup.sh<br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment">##################################################</span><br><span class="hljs-comment">#File Name  : mybackup.sh</span><br><span class="hljs-comment">#Description: Empty the slave configuration, retrieve</span><br><span class="hljs-comment">#             the remote log file and Pos, and open</span><br><span class="hljs-comment">#             the synchronization</span><br><span class="hljs-comment">##################################################</span><br><br>BASEPATH=/data/server/mysql<br>LOGSPATH=<span class="hljs-variable">$BASEPATH</span>/logs<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$BASEPATH</span>/.mysqlenv<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-variable">$LOGSPATH</span> ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$LOGSPATH</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;replication&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;replication&#x27;;flush privileges;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_support_xa=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global sync_binlog=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_flush_log_at_trx_commit=0;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;flush logs;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;reset slave all;&quot;</span><br><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status ];<span class="hljs-keyword">then</span><br>  New_ReM_File=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status | grep -v File |awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>`<br>  New_ReM_Position=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status | grep -v File |awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>`<br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> This mybackup.sh, New_ReM_File:<span class="hljs-variable">$New_ReM_File</span>,New_ReM_Position:<span class="hljs-variable">$New_ReM_Position</span>&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>  <span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;change master to master_host=&#x27;<span class="hljs-variable">$REMOTE_IP</span>&#x27;,master_port=3306,master_user=&#x27;replication&#x27;,master_password=&#x27;replication&#x27;,master_log_file=&#x27;<span class="hljs-variable">$New_ReM_File</span>&#x27;,master_log_pos=<span class="hljs-variable">$New_ReM_Position</span>;&quot;</span><br>  <span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;start slave;&quot;</span><br>  timestr=`<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%y%m%d-%H%M&quot;</span>`<br>  <span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show slave status\G;&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/slave_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt<br>  <span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/slave_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>  <span class="hljs-built_in">rm</span> -f <span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status<br><br>  timestr=`<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%y%m%d-%H%M&quot;</span>`<br>  <span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show master status;&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/master_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt<br>  <span class="hljs-comment"># sync pos file to master node</span><br>  ssh -t root@<span class="hljs-variable">$REMOTE_IP</span> <span class="hljs-string">&quot;if [ ! -d <span class="hljs-variable">$BASEPATH</span>/syncposfile ];then mkdir -p <span class="hljs-variable">$BASEPATH</span>/syncposfile; fi&quot;</span> &gt;&gt; /dev/null<br>  /usr/bin/scp <span class="hljs-variable">$LOGSPATH</span>/master_status_<span class="hljs-variable">$&#123;timestr&#125;</span>.txt root@<span class="hljs-variable">$REMOTE_IP</span>:<span class="hljs-variable">$BASEPATH</span>/syncposfile/backup_master.status<br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The scripts mybackup.sh running error...&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h4 id="停止脚本mystop.sh">2.2.8.4 停止脚本mystop.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# vi mystop.sh<br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment">##################################################</span><br><span class="hljs-comment">#File Name  : mystop.sh</span><br><span class="hljs-comment">#Description: Set parameters to ensure that the data</span><br><span class="hljs-comment">#             is not lost, and finally check to see</span><br><span class="hljs-comment">#             if there are still write operations,</span><br><span class="hljs-comment">#             the last 1 minutes to exit</span><br><br><span class="hljs-comment">##################################################</span><br><br>BASEPATH=/data/server/mysql<br>LOGSPATH=<span class="hljs-variable">$BASEPATH</span>/logs<br><span class="hljs-built_in">source</span> <span class="hljs-variable">$BASEPATH</span>/.mysqlenv<br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-variable">$LOGSPATH</span> ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$LOGSPATH</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;GRANT ALL PRIVILEGES ON *.* TO &#x27;replication&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;replication&#x27;;flush privileges;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_support_xa=1;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global sync_binlog=1;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;set global innodb_flush_log_at_trx_commit=1;&quot;</span><br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show master status\G&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster0.states<br>M_File1=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster0.states | awk -F<span class="hljs-string">&#x27;: &#x27;</span> <span class="hljs-string">&#x27;/File/&#123;print $2&#125;&#x27;</span>`<br>M_Position1=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster0.states | awk -F<span class="hljs-string">&#x27;: &#x27;</span> <span class="hljs-string">&#x27;/Position/&#123;print $2&#125;&#x27;</span>`<br><span class="hljs-built_in">sleep</span> 2<br><span class="hljs-variable">$mysql</span> -e <span class="hljs-string">&quot;show master status\G&quot;</span> &gt; <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster1.states<br>M_File2=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster1.states | awk -F<span class="hljs-string">&#x27;: &#x27;</span> <span class="hljs-string">&#x27;/File/&#123;print $2&#125;&#x27;</span>`<br>M_Position2=`<span class="hljs-built_in">cat</span> <span class="hljs-variable">$LOGSPATH</span>/mysqlmaster1.states | awk -F<span class="hljs-string">&#x27;: &#x27;</span> <span class="hljs-string">&#x27;/Position/&#123;print $2&#125;&#x27;</span>`<br><br>i=1<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span><br><span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$M_File1</span> = <span class="hljs-variable">$M_File2</span> ] &amp;&amp; [ <span class="hljs-variable">$M_Position1</span> -eq <span class="hljs-variable">$M_Position2</span> ];<span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The mystop.sh, master sync ok..&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br>    <span class="hljs-built_in">exit</span> 0<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">sleep</span> 1<br>    <span class="hljs-keyword">if</span> [<span class="hljs-variable">$i</span> -gt 60 ];<span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">break</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-built_in">continue</span><br>    <span class="hljs-built_in">let</span> i++<br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(date <span class="hljs-string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span> The mystop.sh, master sync exceed one minutes...&quot;</span> &gt;&gt; <span class="hljs-variable">$LOGSPATH</span>/mysql_switch.log<br></code></pre></td></tr></table></figure><h3 id="给服务检查脚本赋予执行权限">2.2.9给服务检查脚本赋予执行权限</h3><p>在两个节点上都要执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /data/server/mysql <br><span class="hljs-built_in">chmod</span> a+x my*.sh<br><span class="hljs-built_in">chmod</span> a+x .mysqlenv<br></code></pre></td></tr></table></figure><h2 id="安装与配置keepalived">2.3 安装与配置keepalived</h2><h3 id="安装keepalived">2.3.1 安装keepalived</h3><p>以下操作在两个节点都需要执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#安装gcc、OpenSSL</span><br>yum install -y gcc-c++ openssl openssl-devel<br><br><span class="hljs-comment">#二进制安装文件安装keepalived</span><br><span class="hljs-built_in">cd</span> /data/softs/<br>wget http://www.keepalived.org/software/keepalived-2.0.7.tar.gz<br>tar -zxf keepalived-2.0.7.tar.gz<br><span class="hljs-built_in">cd</span> keepalived-2.0.7<br>./configure --bindir=/usr/bin --sbindir=/usr/sbin --sysconfdir=/etc --mandir=/usr/share<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h3 id="openstack中关于vip的配置">2.3.2 OpenStack中关于vip的配置</h3><h4 id="创建虚拟ipimage-20240811114458647">2.3.2.1 创建虚拟IP<imgsrc="https://s2.loli.net/2024/08/11/xDYUWpLQ4N8cwAH.png"alt="image-20240811114458647" /></h4><h4 id="虚拟机启用vip">2.3.2.2 虚拟机启用VIP</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在OpenStack中执行</span><br>root@control01:~# openstack port list | egrep <span class="hljs-string">&quot;172.20.180.44|172.20.180.165&quot;</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/AV7Js98Zu5Wg3qz.png"alt="image-20240811114754762" /><figcaption aria-hidden="true">image-20240811114754762</figcaption></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@control01:~# neutron port-update 90b6b1c7-4c4d-42fc-a1f9-3fd814711551 --allowed_address_pairs list=<span class="hljs-literal">true</span> <span class="hljs-built_in">type</span>=dict ip_address=172.20.180.43<br>root@control01:~# neutron port-update 926ca68d-ef07-4243-bc02-f2600c3a68ff --allowed_address_pairs list=<span class="hljs-literal">true</span> <span class="hljs-built_in">type</span>=dict ip_address=172.20.180.43<br></code></pre></td></tr></table></figure><h4 id="安全组允许vrrp协议">2.3.2.3 安全组允许VRRP协议</h4><p>直接在OpenStack的horizon组件的dashborad界面中操作：项目-&gt;网络-&gt;安全组，确定上述两个节点对应虚拟机所使用的安全组，然后点击后面的”管理规则“按钮进入规则列表；点击”添加规则“按钮，弹出窗口中，在规则的下拉选里选择”其他协议“，然后在“IP协议”文本框输入”112“，最后点击添加按钮即可（其余未说明的保持默认设置；VRRP协议的编号是112）</p><figure><img src="https://s2.loli.net/2024/08/11/3PZ6ASdhBVtivwJ.png"alt="image-20240811115636444" /><figcaption aria-hidden="true">image-20240811115636444</figcaption></figure><h3 id="配置keepalived">2.3.3 配置keepalived</h3><p>Keepalived可实现将虚拟IP地址在实体物理机上来回漂移。Keepalived在转换状态时会依照状态来呼叫配置文件中内置的定义。</p><ul><li>当进入Master状态时会呼叫notify_master定义的脚本。</li><li>当进入Backup状态时会呼叫notify_backup定义的脚本。</li><li>当keepalived程序终止时呼叫notify_stop定义的脚本。</li><li>当发现异常情况时进入Fault状态呼叫notify_fault定义的脚本。</li></ul><p>切换的过程如下：</p><ol type="1"><li>在Master主机上keepalived运行时执行mycheck.sh脚本不停的检查mysql的运行状态，当发现mysql停止后将keepalived进程杀掉。</li><li>此时Slave主机上会接管虚拟IP地址，并调用notify_master定义的脚本</li><li>当原Master主机上的mysql和keepalived进程恢复正常后，会调用notify_backup定义的脚本，此时数据库的主端还在Savle主机上。</li><li>回切，关闭Slave端的keepavlied进程，会调用notify_stop脚本，同时Master主机上会调用notify_master定义的脚本。此时数据库的主端在Master主机上</li><li>启动Slave端的keepavlied进程，会调用notify_backup脚本，此时完成数据同步。</li></ol><p><strong>如果按照如下服务器顺序启动keepalived服务，则节点1上的数据库实例是MySQL集群中的主库，节点2的则是备库，：</strong></p><p><strong>ztmonitor01-&gt;ztmonitor02</strong></p><h4 id="节点1上的keepalived配置">2.3.3.1 节点1上的keepalived配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 ~]# vi /etc/keepalived/keepalived.conf<br>[root@ztmonitor01 ~]# <span class="hljs-built_in">cat</span> /etc/keepalived/keepalived.conf<br>! Configuration File <span class="hljs-keyword">for</span> keepalived, 172.20.180.44 - keepalived.conf - master default<br>global_defs &#123;<br>  router_id LVS_DEVEL<br>  vrrp_skip_check_adv_addr<br>  script_user root<br>  enable_script_security<br>&#125;<br><br>vrrp_script check_mysql &#123;<br>  script <span class="hljs-string">&quot;/data/server/mysql/mycheck.sh&quot;</span><br>  interval 10<br>  weight 2<br>&#125;<br><br>vrrp_script chk_state_down &#123;<br>  script <span class="hljs-string">&quot;/etc/keepalived/scripts/chk_state_down.sh&quot;</span><br>  interval 2<br>  weight 3<br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>  state BACKUP         <span class="hljs-comment">#都设置为BACKUP，首先启动的作为Master</span><br>  nopreempt            <span class="hljs-comment"># 非抢占模式</span><br>  interface eth0 <br>  virtual_router_id 123   <span class="hljs-comment">#所有节点的此值是一样的，表示是同一keepalived集群</span><br>  priority 120          <span class="hljs-comment">#两个服务器的优先级一样高，都是120</span><br>  advert_int 1<br><br>  track_interface &#123;<br>    eth0 <br>  &#125;<br><br>  unicast_src_ip 172.20.180.44<br><br>  unicast_peer&#123;<br>    172.20.180.165<br>  &#125;<br><br>  authentication &#123;<br>    auth_type PASS<br>    auth_pass 1111<br>  &#125;<br>  track_script &#123;<br>    check_mysql<br>    chk_state_down<br>  &#125;<br>  notify_master /data/server/mysql/mymaster.sh<br>  notify_backup /data/server/mysql/mybackup.sh<br>  notify_stop /data/server/mysql/mystop.sh<br><br>  virtual_ipaddress &#123;<br>    172.20.180.43/24<br>  &#125;<br>&#125;<br><br>[root@ztmonitor01 ~]# <span class="hljs-built_in">mkdir</span> -p /etc/keepalived/scripts/<br>[root@ztmonitor01 ~]# <span class="hljs-built_in">cat</span> /etc/keepalived/scripts/chk_state_down.sh<br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-keyword">if</span> [ -f /etc/keepalived/down ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">fi</span><br>[root@ztmonitor01 ~]# <span class="hljs-built_in">chmod</span> a+x /etc/keepalived/scripts/chk_state_down.sh<br><br><span class="hljs-comment">#在如下文件中如下位置添加“--log-file=/tmp/keepalived.log”，设置其日志输出位置</span><br>[root@ztmonitor01 ~]# vi /usr/lib/systemd/system/keepalived.service<br>[Unit]<br>Description=LVS and VRRP High Availability Monitor<br>After= network-online.target syslog.target<br>Wants=network-online.target<br><br>[Service]<br>Type=forking<br>PIDFile=/var/run/keepalived.pid<br>KillMode=process<br>EnvironmentFile=-/etc/sysconfig/keepalived<br>ExecStart=/usr/sbin/keepalived --log-file=/tmp/keepalived.log <span class="hljs-variable">$KEEPALIVED_OPTIONS</span><br>ExecReload=/bin/kill -HUP <span class="hljs-variable">$MAINPID</span><br><br>[Install]<br>WantedBy=multi-user.target<br><br><br><span class="hljs-comment">#启动keepalived服务并设置为开机自动启动</span><br>[root@ztmonitor01 ~]# systemctl daemon-reload<br>[root@ztmonitor01 ~]# systemctl start keepalived<br>[root@ztmonitor01 ~]# systemctl <span class="hljs-built_in">enable</span> keepalived<br>[root@ztmonitor01 ~]# systemctl status keepalived<br></code></pre></td></tr></table></figure><h4 id="节点2上的keepalived配置">2.3.3.2 节点2上的keepalived配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor02 ~]# vi /etc/keepalived/keepalived.conf<br>[root@ztmonitor02 ~]# <span class="hljs-built_in">cat</span> /etc/keepalived/keepalived.conf<br>! Configuration File <span class="hljs-keyword">for</span> keepalived, 172.20.180.165 - keepalived.conf - master default<br>global_defs &#123;<br>  router_id LVS_DEVEL<br>  vrrp_skip_check_adv_addr<br>  script_user root<br>  enable_script_security<br>&#125;<br><br>vrrp_script check_mysql &#123;<br>  script <span class="hljs-string">&quot;/data/server/mysql/mycheck.sh&quot;</span><br>  interval 10<br>  weight 2<br>&#125;<br><br>vrrp_script chk_state_down &#123;<br>  script <span class="hljs-string">&quot;/etc/keepalived/scripts/chk_state_down.sh&quot;</span><br>  interval 2<br>  weight 3<br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>  state BACKUP         <span class="hljs-comment">#都设置为BACKUP，首先启动的作为Master</span><br>  nopreempt            <span class="hljs-comment"># 非抢占模式</span><br>  interface eth0 <br>  virtual_router_id 123<br>  priority 120<br>  advert_int 1<br><br>  track_interface &#123;<br>    eth0 <br>  &#125;<br><br>  unicast_src_ip 172.20.180.165<br><br>  unicast_peer&#123;<br>    172.20.180.44<br>  &#125;<br><br>  authentication &#123;<br>    auth_type PASS<br>    auth_pass 1111<br>  &#125;<br>  track_script &#123;<br>    check_mysql<br>    chk_state_down<br>  &#125;<br>  notify_master /data/server/mysql/mymaster.sh<br>  notify_backup /data/server/mysql/mybackup.sh<br>  notify_stop /data/server/mysql/mystop.sh<br><br>  virtual_ipaddress &#123;<br>    172.20.180.43/24<br>  &#125;<br>&#125;<br><br>[root@ztmonitor02 ~]# <span class="hljs-built_in">mkdir</span> -p /etc/keepalived/scripts/<br>[root@ztmonitor01 ~]# <span class="hljs-built_in">cat</span> /etc/keepalived/scripts/chk_state_down.sh<br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-keyword">if</span> [ -f /etc/keepalived/down ];<span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">exit</span> 1 <br><span class="hljs-keyword">else</span><br>  <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">fi</span><br>[root@ztmonitor01 ~]# <span class="hljs-built_in">chmod</span> a+x /etc/keepalived/scripts/chk_state_down.sh<br><br><span class="hljs-comment">#在如下文件中如下位置添加“--log-file=/tmp/keepalived.log”</span><br>[root@ztmonitor02 ~]# vi /usr/lib/systemd/system/keepalived.service<br>[Unit]<br>Description=LVS and VRRP High Availability Monitor<br>After= network-online.target syslog.target<br>Wants=network-online.target<br><br>[Service]<br>Type=forking<br>PIDFile=/var/run/keepalived.pid<br>KillMode=process<br>EnvironmentFile=-/etc/sysconfig/keepalived<br>ExecStart=/usr/sbin/keepalived --log-file=/tmp/keepalived.log <span class="hljs-variable">$KEEPALIVED_OPTIONS</span><br>ExecReload=/bin/kill -HUP <span class="hljs-variable">$MAINPID</span><br><br>[Install]<br>WantedBy=multi-user.target<br><br><br><span class="hljs-comment">#启动keepalived服务并设置为开机自动启动</span><br>[root@ztmonitor02 ~]# systemctl daemon-reload<br>[root@ztmonitor02 ~]# systemctl start keepalived<br>[root@ztmonitor02 ~]# systemctl <span class="hljs-built_in">enable</span> keepalived<br>[root@ztmonitor02 ~]# systemctl status keepalived<br></code></pre></td></tr></table></figure><h3 id="验证keepalived配置是否生效">2.3.4验证keepalived配置是否生效</h3><h4 id="查看keepalived集群的master节点">2.3.4.1查看keepalived集群的master节点</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在节点1上，keepalived服务处于正常运行状态、且eth0网口上除了配置了172.20.180.44外还绑定了keepalived的vip</span><br>[root@ztmonitor01 ~]# systemctl status keepalived<br>[root@ztmonitor01 ~]# ip a | more<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/aOj3xUAGiDgdbYB.png"alt="image-20240811155008229" /><figcaption aria-hidden="true">image-20240811155008229</figcaption></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在节点2上，keepalived服务也处于正常运行状态，但eth0网口上只配置了172.20.180.164这个ip</span><br>[root@ztmonitor02 ~]# systemctl status keepalived<br>[root@ztmonitor02 ~]# ip a | more<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/6JCaH2nQF5rEVXO.png"alt="image-20240811155432743" /><figcaption aria-hidden="true">image-20240811155432743</figcaption></figure><h4 id="通过keepalived的vip连接mysql">2.3.4.2通过keepalived的vip连接MySQL</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#通过节点1、节点2外的另外一个服务器（操作系统ip：172.24.0.31）经由keepalived的vip连接MySQL集群</span><br>root@controller01:~# ifconfig bond0.2048<br>root@controller01:~# mysql -h172.20.180.43 -uroot -p123456<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/d1eRjcLsXNpaEtH.png"alt="image-20240811160425430" /><figcaption aria-hidden="true">image-20240811160425430</figcaption></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#然后在节点1上的数据库实例中，查看此数据库实例中现有的所有进程（下图将一些其他跟此验证无关的进程马赛克处理了）。其中发现存在一个来自172.24.0.31的连接进程</span><br>[root@ztmonitor01 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;show processlist;&quot;</span><br><br><span class="hljs-comment">#对比下，节点2上的数据库实例，除了系统自己创建的连接或主从复制创建的连接外，没有来自外部的连接</span><br>[root@ztmonitor02 ~]# mysql -uroot -p123456 -e <span class="hljs-string">&quot;show processlist;&quot;</span><br><br><span class="hljs-comment">#由此也可确定，节点1上数据库实例当前是MySQL数据库集群的主库</span><br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/glbY1Tk5AsKomFf.png"alt="image-20240811160008455" /><figcaption aria-hidden="true">image-20240811160008455</figcaption></figure><figure><img src="https://s2.loli.net/2024/08/11/ne2o8bkjZsKWqtf.png"alt="image-20240811160854661" /><figcaption aria-hidden="true">image-20240811160854661</figcaption></figure><h2 id="最后的验证">2.4 最后的验证</h2><p>按照前面的配置与启动顺序，当前，节点1、节点2分别是keepalived集群的master节点；节点1上的数据库实例才是MySQL集群的真正服役数据库实例。</p><h3 id="模拟主备自动切换">2.4.1 模拟主备自动切换</h3><p>因为前面所述的针对keepalived配置的可执行脚本程序，当节点1上的数据库实例down掉即mysql服务停止后，keepalived会自动检测到（通过不断执行/data/server/mysql/mycheck.sh），然后在mycheck.sh中将节点1上的keepalived服务停止，keepalived服务在完全停止前会先执行”notify_stop/data/server/mysql/mystop.sh“中配置的mystop.sh脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 mysql]# systemctl stop mysqld<br>[root@ztmonitor01 mysql]# systemctl status keepalived<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/bGoh6pgxeTDLVUX.png"alt="image-20240811164432033" /><figcaption aria-hidden="true">image-20240811164432033</figcaption></figure><p>节点2在keepalived集群中的角色由slave变成master，vip漂移到节点2上。同时由于”notify_master/data/server/mysql/mymaster.sh“这个配置，keepalived将会触发mymaster.sh的执行，将节点2上的数据库实例状态保存并传输到节点1上的”/data/server/mysql/syncposfile/backup_master.status“。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor02 ~]# systemctl status keepalived<br>[root@ztmonitor02 ~]# ip a<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/PUs6bBYTSrfM3ZI.png"alt="image-20240811165006678" /><figcaption aria-hidden="true">image-20240811165006678</figcaption></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#节点2上的数据库实例状态已经被保存下来传输到节点1上的/data/server/mysql/syncposfile/backup_master.status</span><br>[root@ztmonitor01 ~]# <span class="hljs-built_in">cd</span> /data/server/mysql/<br>[root@ztmonitor01 mysql]# ll syncposfile/<br>[root@ztmonitor01 mysql]# <span class="hljs-built_in">cat</span> syncposfile/backup_master.status <br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/OykQveuNJpEPURq.png"alt="image-20240811165127852" /><figcaption aria-hidden="true">image-20240811165127852</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#连接到此MySQL集群中，在db01数据库中创建一个张数据表t1<br>[root@ztmonitor02 ~]# mysql -h172.20.180.43 -uroot -p123456<br>mysql: [Warning] Using a password on the command line interface can be insecure.<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 467246<br>Server version: 5.7.36-log MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2021, Oracle and/or its affiliates.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><br>mysql&gt; use db02;<br>Database changed<br>mysql&gt; create table t1(<br>    -&gt;     id int primary key auto_increment,<br>    -&gt;     name varchar(20) not null<br>    -&gt; )charset utf8;<br>Query OK, 0 rows affected (0.08 sec)<br>mysql&gt; exit<br></code></pre></td></tr></table></figure><p>后面如果节点1上的MySQL数据库实例被正常拉起来了，需要手动将节点1上的keepalived拉起（因为在keepalived集群中，节点1与节点2的priority是一样，所以此时节点2仍然是keepalived集群的master节点，即某个节点的keepalived服务down了才会发生keepalived的master/slave转移），此时节点1上的keepalived将会去执行"notify_backup/data/server/mysql/mybackup.sh"中的mybackup.sh，将节点2上数据库实例在”节点1上数据库实例停止到当前时刻“这段时间内所执行的操作同步到节点1上的数据库实例中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ztmonitor01 mysql]# systemctl start mysqld<br>[root@ztmonitor01 mysql]# systemctl status keepalived <br>[root@ztmonitor01 mysql]# systemctl start keepalived<br><br>[root@ztmonitor01 mysql]# systemctl status keepalived <br>[root@ztmonitor01 mysql]# ip a<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/Qou5IsL6WfhVKRi.png"alt="image-20240811170138305" /><figcaption aria-hidden="true">image-20240811170138305</figcaption></figure><figure><img src="https://s2.loli.net/2024/08/11/R4UwLlTpeJ3KOvI.png"alt="image-20240811165823320" /><figcaption aria-hidden="true">image-20240811165823320</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#可以看到在节点1上数据库实例down掉期间，在节点2上数据库实例上执行的操作被成功同步到节点1上<br>[root@ztmonitor01 mysql]# mysql -uroot -p123456<br>mysql: [Warning] Using a password on the command line interface can be insecure.<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 41<br>Server version: 5.7.36-log MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2021, Oracle and/or its affiliates.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.<br><br>mysql&gt; use db02;<br>Reading table information for completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>mysql&gt; show tables;<br>+----------------+<br>| Tables_in_db02 |<br>+----------------+<br>| t1             |<br>+----------------+<br>1 row in set (0.00 sec)<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/08/11/jDPvOp9gf8uot4e.png"alt="image-20240811170554893" /><figcaption aria-hidden="true">image-20240811170554893</figcaption></figure><p>至此，节点1与节点2上的数据库实例中的数据还是同步且相同的。</p>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux MySQL5.7 主备集群 二进制式安装 keepalive 主备自动切换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>夜莺nightingalev6.7.2中监控kubelet与容器</title>
    <link href="/2024/05/26/%E5%A4%9C%E8%8E%BAnightingalev6-7-2%E9%80%9A%E8%BF%87kubelet%E9%87%87%E9%9B%86docker%E5%AE%B9%E5%99%A8%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE/"/>
    <url>/2024/05/26/%E5%A4%9C%E8%8E%BAnightingalev6-7-2%E9%80%9A%E8%BF%87kubelet%E9%87%87%E9%9B%86docker%E5%AE%B9%E5%99%A8%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="一背景">一、背景</h1><p>本人是基于nightingaleV6.7.2与k8s-amd64-v1.23.10进行了此文章中的操作。</p><p>使用categraf-v0.3.45-linux-amd64做数据采集工具，容器监控数据采集使用的cadvisor插件。关于categraf中使用caadvisor插件的文档：https://flashcat.cloud/docs/content/flashcat-monitor/categraf/plugin/cadvisor/。但是我当时看了此文档后，还是有一个配置项bearer_token_string或bearer_token_file不知如何配置（相关的配置文档其实官网已经给出，只是我先前也没有找到），此方法不太方便暂不阐述，直接使用如下更简便的方法做配置达到监控kubelet与容器的目的。</p><h1 id="二配置步骤">二、配置步骤</h1><p>参考flashcat官方文档：https://flashcat.cloud/blog/kubernetes-monitoring-05-kubelet/，转换成自己的描述、内容更加简洁，也是一个对flashcat及夜莺的一个宣传吧。</p><h2 id="创建认证信息">2.1 创建认证信息</h2><p>访问”https://localhost:10250/metrics“时需要鉴权，按照如下方式创建k8s中的相关账号与角色。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#将下述内容保存为auth.yaml并应用到k8s集群中</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Namespace</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flashcat</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">rules:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/metrics</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/stats</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/proxy</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">flashcat</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">flashcat</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用与查看</span><br>kubectl apply -f auth.yaml<br>kubectl get ClusterRole | grep categraf-daemon<br>kubectl get sa -n flashcat<br></code></pre></td></tr></table></figure><figure><img src="https://s2.loli.net/2024/05/26/4KhLuVCSbj5HgF2.png"alt="image-20240526231854765" /><figcaption aria-hidden="true">image-20240526231854765</figcaption></figure><h2 id="测试上述创建的权限">2.2 测试上述创建的权限</h2><p>已经成功创建了ServiceAccount，把ServiceAccount的内容打印出来看一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get sa categraf-daemonset -n flashcat -o yaml<br></code></pre></td></tr></table></figure><p>这个ServiceAccount实际是关联了一个Secret，再看看这个Secret的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get sa categraf-daemonset -n flashcat -o yaml<br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  annotations:<br>    kubectl.kubernetes.io/last-applied-configuration: |<br>      &#123;&quot;apiVersion&quot;:&quot;v1&quot;,&quot;kind&quot;:&quot;ServiceAccount&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;name&quot;:&quot;categraf-daemonset&quot;,&quot;namespace&quot;:&quot;flashcat&quot;&#125;&#125;<br>  creationTimestamp: &quot;2024-05-26T15:17:43Z&quot;<br>  name: categraf-daemonset<br>  namespace: flashcat<br>  resourceVersion: &quot;1265&quot;<br>  uid: 9fdf7004-22f6-410f-9696-40485e38db50<br>secrets:<br>- name: categraf-daemonset-token-h4p94<br></code></pre></td></tr></table></figure><p>把这个token字段拿到，然后base64转码一下，作为BearerToken来请求测试一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">token=`kubectl -n flashcat get secret categraf-daemonset-token-h4p94 -o jsonpath=&#123;.data.token&#125; | base64 -d`<br><br>curl -s -k -H &quot;Authorization: Bearer $token&quot; https://localhost:10250/metrics &gt; aaaa<br>head -n 10 aaaa<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出如下内容表示已经正常访问https://localhost:10250/metrics</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_audit_event_total [ALPHA] Counter of audit events generated and sent to the audit backend.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_audit_event_total counter</span><br>apiserver_audit_event_total 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error <span class="hljs-keyword">in</span> audit logging backend.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_audit_requests_rejected_total counter</span><br>apiserver_audit_requests_rejected_total 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_client_certificate_expiration_seconds [ALPHA] Distribution of the remaining lifetime on the certificate used to authenticate a request.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_client_certificate_expiration_seconds histogram</span><br>apiserver_client_certificate_expiration_seconds_bucket&#123;le=&quot;0&quot;&#125; 0<br>apiserver_client_certificate_expiration_seconds_bucket&#123;le=&quot;1800&quot;&#125; 0<br></code></pre></td></tr></table></figure><p>至此，我们已经成功获取到”https://localhost:10250/metrics“的token，可以将其配置到categraf的conf/input.cadvisor/cadvisor.toml文件中的bearer_token_string配置项。但如果要正常获取k8s集群中所有容器数据，需要为k8s集群每个节点都安装categraf并如此配置。如果后续k8s集群新增节点了，新增加的节点也需要重复此配置，考虑到此，引出下文中的创建daemonset。</p><p>如果使用了如下daemonset，理应将categraf中的cadvisor插件关闭，否则二者重复了。</p><h2 id="创建configmap">2.3 创建ConfigMap</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#将下述内容保存为 categraf-configmap-v2.yaml 文件。</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">config.toml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    [global]</span><br><span class="hljs-string">    hostname = &quot;$HOSTNAME&quot;</span><br><span class="hljs-string">    interval = 15</span><br><span class="hljs-string">    providers = [&quot;local&quot;]</span><br><span class="hljs-string">    [writer_opt]</span><br><span class="hljs-string">    batch = 2000</span><br><span class="hljs-string">    chan_size = 10000</span><br><span class="hljs-string">    [[writers]]</span><br><span class="hljs-string">    url = &quot;http://172.20.180.50:17000/prometheus/v1/write&quot;</span><br><span class="hljs-string">    timeout = 5000</span><br><span class="hljs-string">    dial_timeout = 2500</span><br><span class="hljs-string">    max_idle_conns_per_host = 100</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">prometheus.toml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;http://127.0.0.1:10249/metrics&quot;]</span><br><span class="hljs-string">    labels = &#123; job=&quot;kube-proxy&quot; &#125;</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;https://127.0.0.1:10250/metrics&quot;]</span><br><span class="hljs-string">    bearer_token_file = &quot;/var/run/secrets/kubernetes.io/serviceaccount/token&quot;</span><br><span class="hljs-string">    use_tls = true</span><br><span class="hljs-string">    insecure_skip_verify = true</span><br><span class="hljs-string">    labels = &#123; job=&quot;kubelet&quot; &#125;</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;https://127.0.0.1:10250/metrics/cadvisor&quot;]</span><br><span class="hljs-string">    bearer_token_file = &quot;/var/run/secrets/kubernetes.io/serviceaccount/token&quot;</span><br><span class="hljs-string">    use_tls = true</span><br><span class="hljs-string">    insecure_skip_verify = true</span><br><span class="hljs-string">    labels = &#123; job=&quot;cadvisor&quot; &#125;</span><br></code></pre></td></tr></table></figure><p>如上内容中，”172.20.180.50:17000“是夜莺服务所在的ip与端口，根据实际情况修改。</p><p><code>hostname = "$HOSTNAME"</code> 这个配置用了 <code>$</code>符号，后面创建 Daemonset 的时候会把 HOSTNAME 这个环境变量注入，让Categraf 自动拿到。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>kubectl apply -f categraf-configmap-v2.yaml -n flashcat<br>configmap/categraf-config created<br>configmap/categraf-input-prometheus created<br></code></pre></td></tr></table></figure><h2 id="创建daemonset">2.4 创建daemonset</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">#将下述内容保存为 categraf-daemonset-v2.yaml 文件。</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">env:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">TZ</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">Asia/Shanghai</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HOSTNAME</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">status.hostIP</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HOSTIP</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">status.hostIP</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">flashcatcloud/categraf:v0.2.18</span><br>        <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/categraf/conf</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/categraf/conf/input.prometheus</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">categraf-daemonset</span><br>      <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Always</span><br>      <span class="hljs-attr">tolerations:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>        <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br></code></pre></td></tr></table></figure><p>根据官方文档，创建 Daemonset，会把 HOSTNAME环境变量注入进去。官方文档默认使用的是spec.nodeName，我改成使用status.hostIP，这样后续采集到的指标数据中，ident属性的值就不再是容器宿主机名，而是容器宿主机ip了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>kubectl apply -f categraf-daemonset-v2.yaml -n flashcat<br>daemonset.apps/categraf-daemonset created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">稍等一会儿，等pod正常运行</span><br>kubectl get pods -n flashcat -o wide<br>NAME                       READY   STATUS    RESTARTS   AGE   IP              NODE       NOMINATED NODE   READINESS GATES<br>categraf-daemonset-jpgxs   1/1     Running   0          24s   172.20.180.25   worker02   &lt;none&gt;           &lt;none&gt;<br>categraf-daemonset-rdlbk   1/1     Running   0          25s   172.20.180.21   master01   &lt;none&gt;           &lt;none&gt;<br>categraf-daemonset-xnqdj   1/1     Running   0          24s   172.20.180.24   worker01   &lt;none&gt;           &lt;none&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">daemonset运行正常</span><br>kubectl get daemonset -n flashcat<br>NAME                 DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE<br>categraf-daemonset   3         3         3       3            3           &lt;none&gt;          31s<br></code></pre></td></tr></table></figure><h2 id="确认采集到的数据">2.5 确认采集到的数据</h2><p>查看kubelet本身的指标，它是从 Kubelet 的 <code>/metrics</code>接口采集的（可以看到采集到的指标数据中有一个属性ident属性，它的值是被监控服务器的ip，如下是172.20.180.21）：</p><figure><img src="https://s2.loli.net/2024/05/26/q5BRhDNsGo13nk4.png"alt="image-20240526232912388" /><figcaption aria-hidden="true">image-20240526232912388</figcaption></figure><p>再确认cAdvisor 采集的指标及其数据，它是从<code>/metrics/cadvisor</code> 接口采集的：</p><figure><img src="https://s2.loli.net/2024/05/26/8QzN3Tg2weJx7YP.png"alt="image-20240526233510353" /><figcaption aria-hidden="true">image-20240526233510353</figcaption></figure><h2 id="监控仪表盘">2.6 监控仪表盘</h2><p>使用内置仪表盘 “Kubernetes /Container”，克隆一个自己使用的仪表盘。得到的大体效果如下：</p><figure><img src="https://s2.loli.net/2024/10/19/8Lz1A7dXTrZH9iK.png"alt="image-20241019222209824" /><figcaption aria-hidden="true">image-20241019222209824</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>监控</category>
      
    </categories>
    
    
    <tags>
      
      <tag>k8s 监控 夜莺 nightingale</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
